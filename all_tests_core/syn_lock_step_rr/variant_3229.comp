#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))), false, false))))
    return;
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) << (0 & 14622)))), int(1))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) << (0 & 14622)))), int(1))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), (~ (int(1))) << (0 & 14622)))), int(1)))) << 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-23.30) : injectionSwitch[0]))) * sqrt(exp(0.0))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.4) : injectionSwitch.y))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0), mix(vec4(_GLF_FUZZED(-2527.8311), _GLF_FUZZED(-1.6), _GLF_FUZZED(-2983.1164), (vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0))[3]), vec4((vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0))[0], (vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0))[1], _GLF_IDENTITY((vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0))[2], mix(float(_GLF_IDENTITY((vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0))[2], float(mat3x4((vec4(1.0, sin(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0))[2], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-8.0)), bool(false))), _GLF_FUZZED(-1.2)), bvec4(true, true, true, false)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, sin(0.0), 0.0, 0.0)))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-557.818))), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-557.818))), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(tan(_GLF_ZERO(0.0, injectionSwitch.x)), max(tan(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(tan(_GLF_ZERO(0.0, injectionSwitch.x)), (tan(_GLF_ZERO(0.0, injectionSwitch.x))) / 1.0))), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))) - sin(vec2(0.0, 0.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(93.11) : 0.0)), 0.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(float(true))), bool(false))), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec4(1899.8282, 985.510, 5.3, 7425.0548)[3]))))), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(93.11) : 0.0)), 0.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(float(true))), bool(false))), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec4(1899.8282, 985.510, 5.3, 7425.0548)[3])))))))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true))), true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat3(injectionSwitch.y, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(425.386)), float(1.0), bool(true))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) / 1.0), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))), mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), float(_GLF_FUZZED(523.394)), bool(false))) : _GLF_FUZZED(9.8))), 1.0))).y)) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))))))), (injectionSwitch.x < injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(tan(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)), max(tan(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)), tan(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)), 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(9.8, mix(float(9.8), float(_GLF_FUZZED(-1887.4222)), bool(false)))))), 1.0))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))) && true))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat3(injectionSwitch.y, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), 1.0, determinant(mat4(1.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(425.386)), float(1.0), bool(true))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x), 0.0 + (_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))) / 1.0), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))), mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0)))), float(_GLF_FUZZED(523.394)), bool(false))) : _GLF_FUZZED(9.8))), 1.0))).y)) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))))))), (injectionSwitch.x < injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0), (mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))), float(_GLF_FUZZED(64.27)), bool(false))), determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(tan(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)), max(tan(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)), tan(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-6252.9554))), injectionSwitch.x)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)), 0.0, 0.0, determinant(mat3(1.0, 1.0, abs(0.0), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, exp(0.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0))) : _GLF_FUZZED(_GLF_IDENTITY(9.8, mix(float(9.8), float(_GLF_FUZZED(-1887.4222)), bool(false)))))), 1.0))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))) && true))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), false, true))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) / 1u), 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) | (gl_NumWorkGroups)), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))), _GLF_IDENTITY((max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))) | uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))) | uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(32655u, 168215u, 99097u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) | (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))))))))).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(determinant(mat3(3.9, 29.21, _GLF_IDENTITY(77.86, min(_GLF_IDENTITY(77.86, max(77.86, _GLF_IDENTITY(77.86, (true ? 77.86 : _GLF_FUZZED(-7.3))))), 77.86)), 8.1, -3.3, -93.90, 97.22, 1.3, 25.62))))) < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.8))))) > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) : _GLF_FUZZED(determinant(mat3(3.9, 29.21, 77.86, 8.1, -3.3, -93.90, _GLF_IDENTITY(97.22, (97.22) - 0.0), 1.3, 25.62))))) < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x)))) > injectionSwitch.y))))))), false, true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
            }
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(reflect(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]), vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED(600.997)), bvec2(_GLF_IDENTITY(false, false || (false)), false))))).y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.2)), bool(false)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, true, true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ((_GLF_IDENTITY(false, false || (false))) || false) && true))))), true && ((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, false || (false))) || false)), (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | 0u)))))), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u))) | (0u)))), max(~ (uvec3(0u)), ~ (uvec3(0u)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(uvec3(uvec3(0u)))), uvec3(0u)))).x, max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupSize) << uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * ((gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(_GLF_IDENTITY(0u, min(0u, 0u))))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) / ((uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), (true ? _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(clamp(uvec3(0u), _GLF_IDENTITY(uvec3(0u), clamp(uvec3(0u), uvec3(0u), uvec3(0u))), uvec3(0u)), max(clamp(uvec3(0u), _GLF_IDENTITY(uvec3(0u), clamp(uvec3(0u), uvec3(0u), uvec3(0u))), uvec3(0u)), _GLF_IDENTITY(clamp(uvec3(0u), _GLF_IDENTITY(uvec3(0u), clamp(uvec3(_GLF_IDENTITY(0u, (0u) ^ (1u ^ 1u))), uvec3(0u), uvec3(0u))), uvec3(0u)), uvec3(0u, 0u, 0u) ^ (clamp(uvec3(0u), _GLF_IDENTITY(uvec3(0u), clamp(uvec3(0u), uvec3(0u), uvec3(0u))), uvec3(0u))))))) : _GLF_FUZZED(uvec3(subgroup_id, 7218u, 143540u)))), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false, true, true)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), max(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED((_GLF_IDENTITY(73.55, 0.0 + (73.55)) / -0.3))), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-50.80)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), max(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED((_GLF_IDENTITY(73.55, 0.0 + (73.55)) / -0.3))), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-50.80)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), max(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED((_GLF_IDENTITY(73.55, 0.0 + (73.55)) / -0.3))), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-50.80)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), max(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9081.9836, -239.270)) : injectionSwitch)))).x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED((_GLF_IDENTITY(73.55, 0.0 + (73.55)) / -0.3))), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-50.80)), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))))) + (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1))))) % subgroup_size), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.1)), bool(false))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, abs(1.0), 0.0, 1.0)), (float(mat2(1.0, abs(1.0), 0.0, 1.0))) / 1.0)), 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(mat4x2(-9.4, -459.308, -6.1, -6.6, -36.15, 8.9, -9.4, 2.4))) : mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((transpose(mat2x4(-788.131, -38.81, 508.480, -8581.7306, 0.8, -2.2, -5.9, -85.25)) , injectionSwitch)))).y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(mat4x2(-9.4, -459.308, -6.1, -6.6, -36.15, 8.9, -9.4, 2.4))) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x2(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-917.163)), bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) ^ 0)) | ((1 ^ 1))) ^ (_GLF_IDENTITY(int(7), (int(7)) - 0))), ~ (~ _GLF_IDENTITY((int(7)), 0 + ((int(7)))))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(7, _GLF_IDENTITY(_GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), max(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY(0, (0) | 0) | (7)), 7))), min(_GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), max(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY(0, (0) | 0) | (7)), 7))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), max(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY(0, (0) | 0) | (7)), 7))), min(_GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), max(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY(0, (0) | 0) | (7)), 7))), _GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), max(clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY(0, (0) | 0) | (7)), 7)))))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    continue;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true)))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat4x3(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat2x3(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 0.0, 0.0))))), vec2(injectionSwitch[0], injectionSwitch[1])))).y), true))))))) && true), false, true))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true)))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat4x3(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat2x3(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 0.0, 0.0))))), vec2(injectionSwitch[0], injectionSwitch[1])))).y), true))))))) && true), false, true)))))) && true)))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))), false, true, true))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))))) && true), false || (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))), false || (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))))))))))), false, true, false))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-97.97), _GLF_FUZZED(-833.913)), bvec2(false, false)))).y)))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_IDENTITY(true, false || (true)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0 | 0, 0), (ivec2(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(0 | (0 | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0 | (0 | 0), 1), (ivec2(0 | (0 | 0), 1)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(0 | (0 | 0), 1), (ivec2(0 | (0 | 0), 1)) / ivec2(1, 1)))) / (1 ^ 0)))), 0)) >> _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(-33611, -23758)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), ~ (~ (_GLF_IDENTITY(ivec2(0, 0), (true ? ivec2(0, 0) : _GLF_FUZZED(ivec2(-4516, -99139))))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ (ivec2(0, 0) << _GLF_IDENTITY(ivec2(3), ivec2(3)))) | (_GLF_IDENTITY(ivec2(0, 0), ~ (~ (_GLF_IDENTITY(ivec2(0, 0), (true ? ivec2(0, 0) : _GLF_FUZZED(ivec2(-4516, -99139))))))))))))), (int(_GLF_IDENTITY(ivec2(0 | 0, _GLF_IDENTITY(0, ~ (~ (0)))), (ivec2(0 | 0, 0)) >> ivec2(0, 0)))) ^ 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-708.543) : 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec4(bvec2(bool(true), false), true, false))))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, true))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), false || (_GLF_IDENTITY(false, ! (! (false))) || (false)))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), false || (_GLF_IDENTITY(false, ! (! (false))) || (false)))))), (bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (false), false || (_GLF_IDENTITY(false, ! (! (false))) || (false))))))) && true)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))) && true)))), false, false, false))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(true, (true) || false))))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 return;
                }
              }
             break;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             return;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))), bool(bvec3(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))), true, true)))); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
        }
       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), ~ (~ (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))))))), min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), min(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(virtual_gid))), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) << 0u))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), clamp(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), max(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), ~ (~ (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))))))), min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), min(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(virtual_gid))), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) << 0u))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), clamp(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), max(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u)))))))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), ~ (~ (true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size)))))) | (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), (0u & 64211u) ^ (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), clamp(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), true ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))))))), min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), min(true ? next_virtual_gid : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? next_virtual_gid : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(virtual_gid))), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) << 0u))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), clamp(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), max(_GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((true ? next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ 0u)))))))))))))))) ^ 0u)], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), false))), false), bvec2(bvec3(bvec2(bool(bool(_GLF_DEAD(false))), false), true)))))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 1.0, length(0.0))), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 1.0, length(0.0)))) * mat2(1.0))).y)))))) && _GLF_IDENTITY(true, (true) || false))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              return;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15516))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0)), clamp(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0)), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0)), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0))))).x > injectionSwitch.y))))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> 0)) ^ 0)))) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(6.1, 481.373, -134.883, -1462.9675, -92.33, 42.51)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0))), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(6.1, 481.373, _GLF_IDENTITY(-134.883, (-134.883) - 0.0), -1462.9675, -92.33, 42.51)))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), min((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), min((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), max((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(_GLF_IDENTITY(6.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : 6.1)), 481.373, -134.883, -1462.9675, -92.33, 42.51))))))))))))) + vec2(0.0, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED((vec4(2.2, 4.5, 5.5, 2.3) , mat3(56.96, -6842.2901, 391.898, 0.1, 5.0, 8.1, -1.1, -297.566, -47.33))) : mat3(1.0)))))) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(6.1, 481.373, -134.883, -1462.9675, -92.33, 42.51)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(6.1, 481.373, -134.883, -1462.9675, -92.33, 42.51))))))) + vec2(0.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 1.0, 0.0, 0.0)), (true ? mat3(1.0) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED((- -865.805)), mix(float(_GLF_FUZZED(11.79)), float(_GLF_FUZZED((- -865.805))), bool(true)))), float(1.0), bool(true))), 0.0, 0.0)) : _GLF_FUZZED(mat2x3(6.1, 481.373, -134.883, -1462.9675, -92.33, 42.51)))))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), _GLF_IDENTITY(mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-801.390) : 1.0)))))), 0.0, 0.0)), (true ? mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * (mat2x3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(33.25) : injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 0.0)) : _GLF_FUZZED(mat2x3(6.1, 481.373, -134.883, -1462.9675, -92.33, 42.51)))))))))[1])).x)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x))) && true), false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) && true), false))))), ! (! (false || (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (false ? _GLF_FUZZED(467.596) : _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2087.4236)), bvec2(true, false))))), vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(5190.9987), _GLF_FUZZED(33.03)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], mix(float(_GLF_FUZZED(9.2)), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bool(true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))), bvec2(true, true))))).x)) - 0.0)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) && true), ! (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY((_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), true && ((_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) && true)))), false))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6839.0575) : 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(9395.4112)), bool(false))), _GLF_FUZZED(-67.96)), vec2(_GLF_FUZZED(86.57), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])).x)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0]), float(_GLF_FUZZED(404.113)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x))) && true), false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6792.8066)), bool(false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY((_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) && true, ! (! (_GLF_IDENTITY((_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) && true, ! (! ((_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) && true))))))), false))))), ! (! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x), (false ? _GLF_IDENTITY(_GLF_FUZZED(467.596), mix(float(_GLF_FUZZED(467.596)), float(_GLF_FUZZED(-84.39)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 + (1))))])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2087.4236)), bvec2(true, false))))), vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(5190.9987), _GLF_IDENTITY(_GLF_FUZZED(33.03), max(_GLF_FUZZED(33.03), _GLF_FUZZED(33.03)))), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])))[1], clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], mix(float(_GLF_FUZZED(9.2)), float((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])))[1]), bool(true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))), bvec2(true, true))))).x)) - 0.0)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[1])).x))) && true), ! (! (_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY((_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0], mix(float(_GLF_FUZZED(-3338.0024)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x)), max(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0], mix(float(_GLF_FUZZED(-3338.0024)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0], mix(float(_GLF_FUZZED(-3338.0024)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x)), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0], mix(float(_GLF_FUZZED(-3338.0024)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x)), int(int(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0], mix(float(_GLF_FUZZED(-3338.0024)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))))))[0]), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x)))))))))), true && ((_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) && true)))), false)))))))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0), (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter)))) + 0))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (-89479 ^ 53015))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-85.84) : injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, 7, 7), 0 ^ (clamp(7, 7, 7)))))) | 0))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, true))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       return;
      }
     else
      {
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))))) || false), false, false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (false ? _GLF_FUZZED(-127.259) : injectionSwitch.y))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
    continue;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((false), ((false)) && true)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(acos(-1.7)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1))) && true)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), bool(bvec4(_injected_loop_counter != (1 | 1), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), bool(bvec4(_injected_loop_counter != (1 | 1), false, true, true))), false, true), true))))))), ! (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), bool(bvec4(_injected_loop_counter != (1 | 1), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter != (1 | 1), bool(bvec4(_injected_loop_counter != (1 | 1), false, true, true))), false, true), true)))))))))) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            continue;
           do
            {
             atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) >> 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), (min(64, 64)) * 1)), _GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | 0), 64)), int(_GLF_IDENTITY(int(64), 0 ^ (int(64)))))))) / 1), 4);
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false))))
          continue;
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, false))), false)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))) - 0.0)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
}
