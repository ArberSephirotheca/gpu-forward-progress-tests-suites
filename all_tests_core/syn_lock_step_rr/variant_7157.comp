#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x2 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_3 {
 uint _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 mat2 _f3;
 uint read_2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 mat2 _f3;
 uint subgroup_id;
 ivec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 uvec4 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))), (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), true), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))))))).y)))))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), true, false))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), true, false))))))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), bool(bvec4(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), false, false))), (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false))))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true, false), false))), false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(4.6, 873.026, -7.6)))), true, false)))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x < injectionSwitch.y, true, false)))))))), true, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, tan(0.0), 0.0, 1.0, 0.0))), true, false))))), bool(bool((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, tan(0.0), 0.0, 1.0, 0.0))), true, false)))))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), bool(bvec3(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), true, false)))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))), false)))))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(4.6, 873.026, -7.6)))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))), true, true), false))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false)))))))))))))))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))), true && (! (bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))))))))), false)), true && (bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), false))))), false || (bool(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false))))), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, true, false), false))), false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(4.6, 873.026, -7.6)))), true, false)))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x < injectionSwitch.y, true, false)))))))), true, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, tan(0.0), 0.0, 1.0, 0.0))), true, false))))), bool(bool((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, tan(0.0), 0.0, 1.0, 0.0))), true, false)))))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), bool(bvec3(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), true, false)))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))), false)))))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(4.6, 873.026, -7.6)))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))), true, true), false))))) || false))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false)))))))))))))))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))), ! (_GLF_IDENTITY(! (bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))), true && (! (bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))))))))), false)), true && (bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), false))))), false || (bool(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true))))))))))))))))), (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.9, -489.936)) : injectionSwitch)).y, true && (injectionSwitch.x < injectionSwitch.y)), true, false))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), true, false)))), true)))))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, false), false))), false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(_GLF_IDENTITY(4.6, float(_GLF_IDENTITY(vec3(4.6, 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(4.6, 0.0, 1.0))))), 873.026, -7.6)))), _GLF_IDENTITY(true, false || (true)), false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x < injectionSwitch.y, true, false)))))))), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true, false), false))), false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(_GLF_IDENTITY(4.6, float(_GLF_IDENTITY(vec3(4.6, 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(4.6, 0.0, 1.0))))), 873.026, -7.6)))), _GLF_IDENTITY(true, false || (true)), false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x < injectionSwitch.y, true, false)))))))), true, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, tan(0.0), 0.0, 1.0, 0.0))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), bool(bool((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(vec4(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), abs(1.0), log(1.0), 0.0)))), 0.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), true, false)))))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, true, false)), bool(bvec3(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), true, false)))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), false))), false)))))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(smoothstep(4.6, 873.026, -7.6)))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))), true, true), false))))) || false))), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false))))))))))), bool(bool(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false))))))))))))))))))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))), bool(bvec4(_GLF_IDENTITY((bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))), bool(bvec4(_GLF_IDENTITY((bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))), ! (! ((bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))))))), true, true, true))), false, true, true))), true && (! (bool(bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))))))))))), false)), true && (bool(bvec4(false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(146184u)), _GLF_FUZZED(-8.8)), bvec2(false, false))), max(injectionSwitch, injectionSwitch)).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))).y))))), false))))), false || (bool(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, false), true), true)))))))))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(1, _GLF_struct_1(vec4(1.0), uvec4(1u), _GLF_struct_0(_GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), ivec2(1), ivec2(1))), mat4x2(1.0), mat4x2(1.0), mat2(1.0), gl_SubgroupID, ivec3(1), uvec2(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || (bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), injectionSwitch[1])).x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y))))) || false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) - 0.0) < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))) || false)))) || _GLF_IDENTITY((bool(true)), true && ((bool(true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), false, true), true)))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-88.69), _GLF_FUZZED(-50.90)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.4, -759.148)) : injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), bool(bvec4(true && (! (true)), true, false, false))))))), true)))))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(522.079, 1.0))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(522.079, 1.0)))) * mat2(1.0))))).x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))))) || false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(459.013, 4.1)) : injectionSwitch)).x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0))), 0.0))))))))))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec4((! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3502.4090)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + tan(vec2(0.0, 0.0))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x2(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0))), vec2(0.0, 0.0))) + (injectionSwitch))) / sqrt(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))), false, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) * mat2(1.0))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-343.749, -5.6)) : injectionSwitch)).y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(10.47)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) - 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(7.2) : _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), clamp(float(mat2x4(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0))))))), injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(mat4((injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0, 1.0), mat4(1.0) * (mat4((injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0, 1.0))))) + _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), float(vec3(_GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(5877.3883)), float(tan(0.0)), bool(true))), 0.0, 0.0))), tan(0.0)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), true, false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), true, false))), false, true)))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), true, false))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)) && true)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y)))), (bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))) || false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), true, false))), false, true)))))), true))))))), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), true, true, false)))) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))), false, false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true)))) && true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(-47.31) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.6, 2291.4717)) : injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))), false, false)), false))), bvec2(bvec3(bvec2(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true))), false, true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-487.192))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.3))))), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))), false, false)), false))), false)))))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true), false))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), true))))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false, true)), (bool(bvec3(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false, true))) || false)))), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))), (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - _GLF_ZERO(0.0, injectionSwitch.x))))))))) && true))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))))).x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - tan(0.0))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))).x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-9.6)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(normalize(-8765.7249)) : 1.0)), 0.0, 0.0, log(1.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))).x < injectionSwitch.y))), true && _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), clamp(determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))).x < injectionSwitch.y)))), ! (! ((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), clamp(determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))).x < injectionSwitch.y))))))))))))), true, false))), false, false)), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-8.9))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-8.9))) > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-8.9))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0))) : _GLF_FUZZED(-8.9))) > injectionSwitch.y), false)))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 ^ (0))))], _GLF_FUZZED(vec4(0.5, -9.8, -9035.6727, 2217.6710).a)), vec2(_GLF_FUZZED(-6.0), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((subgroup_local_id / _GLF_IDENTITY(uvec3(140828u, 58126u, 649u), (true ? uvec3(140828u, 58126u, 649u) : _GLF_FUZZED(uvec3(91525u, _GLF_IDENTITY(193390u, min(_GLF_IDENTITY(193390u, (193390u) << 0u), 193390u)), 191857u)))))))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(mat2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))), (false ? _GLF_FUZZED(mat2(3.7, 877.366, -2170.0697, -4.5)) : _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))))))), transpose(transpose(mat2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))), (false ? _GLF_FUZZED(mat2(3.7, 877.366, -2170.0697, -4.5)) : _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))))))))))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1._f2.subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_2._f1._f2.subgroup_id), (~ (_GLF_struct_replacement_2._f1._f2.subgroup_id)) << 0u))) * subgroup_size, clamp(_GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(false, true && (false))))))))))), false), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) || false), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))))), false), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), false), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))), false, false))) && _GLF_IDENTITY(true, (true) || false))))))), false), false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true))))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), true)))))))) && true)))))), false), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))) && true), false), false)))))))))))))), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true)), _GLF_IDENTITY(false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true))), ! (! (false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && true))))))))), _GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false, bool(bvec4((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false, true, false, false))))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true)), _GLF_IDENTITY(false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true))), ! (! (false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && true))))))))), _GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false, bool(bvec4((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false, true, false, false))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true)), false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true)))), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8487.2499), _GLF_FUZZED(87.87)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false, true)), true)), _GLF_IDENTITY(false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true))), bool(bool(false || (bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true))))))))))), _GLF_IDENTITY((bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), false || (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))), false, true))) || false, bool(bvec4((bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false, true, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, false)))))))))))))) || false))), false))), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (false) || false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false))), false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), (false) || false), true, false, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), false, false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size) | 0u), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size, (workgroup_base + _GLF_struct_replacement_2._f1._f2.subgroup_id * subgroup_size) | 0u)))) ^ 0u) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), min(uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))), (true ? (_GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(workgroup_base))) - 0u)))))), uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), min(uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))), (true ? (_GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(workgroup_base))) - 0u)))))), uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))))))), 0u | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), min(uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (true ? uint(4u) : _GLF_FUZZED(workgroup_base))), uint(4u)), min(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))), (true ? (_GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(workgroup_base))) - 0u)))))), uvec2(uvec3(uvec2((subgroup_local_id + 1) % subgroup_size, 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))))))) / 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))) && true, bool(bool((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true))), false || ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true, bool(bool((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) && true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))) && true, ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))) && true) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true, bool(bool((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) && true))), false || ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (false))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))) && true)))) || false))), true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true)), bool(bvec3(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), false, true))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)), false))))))), _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ((true)) && true))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1353.8921)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-5.5) : injectionSwitch.y)), 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))))), true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], float(float((vec2(1.0, 0.0))[0]))), (vec2(1.0, 0.0))[1]), vec2(_GLF_FUZZED(-395.164), _GLF_FUZZED(-9111.7991)), bvec2(false, false))), vec2(1.0, sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), ((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))) / 1.0) / _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))))), true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), mix(float(_GLF_FUZZED(float(-48516))), float(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))), bool(true)))) + 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), mix(float(_GLF_FUZZED(float(-48516))), float(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))), bool(true)))) + 0.0))) : _GLF_FUZZED(5321.2634)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, sin(0.0)), min(vec2(1.0, sin(0.0)), vec2(1.0, sin(0.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / exp(0.0)), sin(0.0)), (vec2(1.0, sin(0.0))) / vec2(1.0, 1.0)))))))), true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))))), true))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), mix(float(_GLF_FUZZED(float(-48516))), float(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))), bool(true)))) + 0.0))), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), mix(float(_GLF_FUZZED(float(-48516))), float(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))), bool(true)))) + 0.0))) : _GLF_FUZZED(5321.2634)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, sin(0.0)), min(vec2(1.0, sin(0.0)), vec2(1.0, sin(0.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) / exp(0.0)), sin(0.0)), (vec2(1.0, sin(0.0))) / vec2(1.0, 1.0)))))))), true)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0)))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))))))), dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, sin(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, sin(_GLF_IDENTITY(0.0, (0.0) / 1.0))))))))), true))))))))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, (_GLF_IDENTITY(_GLF_IDENTITY(((false)) || false, false || (((false)) || false)), (((false)) || false) && true)) && _GLF_IDENTITY(true, false || (true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), ((_GLF_IDENTITY((false), ((false)) || false))) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false)), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((_GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(false, bool(bool(false)))), false, false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, true && (false)), false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1657.9359)), bool(false))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))), true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false)))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), (bool(bvec2(bool(bool(false)), false))) && true)))))), ! (! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bool(false)), true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bool(false)), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bool(bool(false)), true, true), false)), false)))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true)))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))))))), bool(bvec3(bool(bool(false)), true, true)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(bool(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), (bool(bvec2(bool(bool(false)), false))) && true))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), (bool(bvec2(_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), false))) && true)))))) || false)), ! (! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bool(false)), true, true), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bool(false)), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bool(bool(false)), true, true), false)), false)))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(bvec3(bool(bool(false)), true, true)))))) || false)))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, true && (false)) || (false)), false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false)), false, false)))))))))))), false))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || false)), false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED(8519.5493), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)))))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false))))), (((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false)))))) || false))))))) || false)))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))) || false, ! (! (((_GLF_IDENTITY(! (bool(bool(false))), ! _GLF_IDENTITY((! (! (bool(bool(false))))), bool(bvec3((! (! (bool(bool(false))))), true, false)))))) || false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false))))))))))))), true && (bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false)))))))))))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false))))))))))))), true && (bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false))))))))))))))))) && true))), bool(bvec3(bool(bool(false)), true, true)))))) || false)), false))))), false || (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec4(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED(8519.5493), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)))))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))) || false, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false))))), (((_GLF_IDENTITY(! (bool(bool(false))), ! (! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) || false)))))) || false))))))) || false)))), true && (! (_GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))) || false, ! (! (((_GLF_IDENTITY(! (bool(bool(false))), ! _GLF_IDENTITY((! (! (bool(bool(false))))), bool(bvec3((! (! (bool(bool(false))))), true, false)))))) || false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false))))))))))))), true && (bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false)))))))))))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false))))))))))))), true && (bool((_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true), true)))))), bool(bool(false))))))))))))))))) && true))), bool(bvec3(bool(bool(false)), true, true)))))) || false)), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bool(false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))), true))))), false))))), bool(bvec3(bool(bool(false)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), bool(bvec4(! (bool(bool(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(false)))), (! (! (bool(bool(false))))) && true))), ! (! (! (bool(bool(false))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (_GLF_IDENTITY(! (! (bool(bool(false)))), (! (! (bool(bool(false))))) && true))), ! (! (! (bool(bool(false))))))), false, false, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true), true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), true, true)), bvec3(bvec4(bvec3(bvec3(bool(bool(false)), true, true)), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), true, true)), bvec3(bvec4(bvec3(bvec3(bool(bool(false)), true, true)), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), true, true)), bvec3(bvec4(bvec3(bvec3(bool(bool(false)), true, true)), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), true, true)), bvec3(bvec4(bvec3(bvec3(bool(bool(false)), true, true)), true))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bool(bool(false)), true, true)), bvec3(bvec4(bvec3(bvec3(bool(bool(false)), true, true)), true))), true)), true)), false))))), false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), ! _GLF_IDENTITY((! (! (bool(bool(false))))), ((! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)))))) || _GLF_IDENTITY(false, ! (! (false))))), false)))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true)))))) ? 4 : _GLF_FUZZED(-79757))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8217.6821), _GLF_FUZZED(81.65)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (bool(false)))), true)))))) || false)))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true)))))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))) && true, bool(bvec2((false) && true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), (true ? mat4x3(injectionSwitch, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(mat4x3(-5.1, -3.5, 6719.6355, -6563.9742, 291.093, 975.959, -45.23, -2.6, -1373.8823, -7.4, 3.1, 529.946)))))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4x3(1.0), _GLF_struct_3(1u), _GLF_struct_5(vec2(1.0), _GLF_struct_4(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-9.6 + 5.2))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat3x2(1.0))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.0) : 1.0)), float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.0) : 1.0)), 1.0, 0.0, 1.0)))))))))), mat2(1.0) * (mat2(1.0)))), mat2(mat3x4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))))))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), ((mat2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2(-6653.4191, -22.01, 8.6, -471.133)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (true ? _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED(mat2(4.1, -137.253, -88.43, 6.2)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(4.8, 68.63, 101.774, 52.26)))), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED(mat2(4.1, -137.253, -88.43, 6.2))))), mat2(mat2x4(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), (mat2(1.0) * (mat2(1.0))) * mat2(1.0))) : _GLF_FUZZED(mat2(4.1, -137.253, -88.43, 6.2))))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(6.9)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(6.9)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(6.9)), bool(false))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(6.9)), bool(false)))) / 1.0)) - 0.0)) + 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))))), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), _GLF_IDENTITY(4, (4) | (4)), 64, 0));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sin(-169.176)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sin(-169.176)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))), false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))), false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))), true))))), false)), _GLF_IDENTITY(true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), ! (! (_GLF_IDENTITY(true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), (true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))) && true))))))))) || false)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - _GLF_IDENTITY(0u, (0u) + 0u))], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) | (read_1))) | (read_1)) == _GLF_struct_replacement_6.read_2) + 1, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
