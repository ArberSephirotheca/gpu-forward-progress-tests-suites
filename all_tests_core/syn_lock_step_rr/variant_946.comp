#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED((-294.953 - -9.4))), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), false)))))))), ! (! (false)))), false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), false, false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), false)))))))) && true)))))))))))))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), false, false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false)))))))) && true))))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), false, false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), false)))))))) && true)))))))))))))), false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))), false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), false, false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false)))))))) && true))))))))))))))))))))))))), true && ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, true))))), false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))))))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))), false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))))))) && true)), false, false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), false)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), false)))))))) && true))))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, (false) || false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, (false) || false)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, (false) || false)), false))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)), false)))))) && true)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, (false) || false)), false))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)), false)))))) && true)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-2.6)), float(injectionSwitch[1]), bool(true))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, 1))), (0) | (_GLF_IDENTITY(0, (0) - 0)))], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), _GLF_IDENTITY((true ? max(workgroup_size, _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), 0u + (uint(uint(workgroup_size)))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id)), (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(0u, min(0u, 0u)) | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id))) >> (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | 0u))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id)), (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(0u, min(0u, 0u)) | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id))) >> (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id)), (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(0u, min(0u, 0u)) | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id))) >> (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | 0u))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id)), (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), _GLF_IDENTITY(0u, min(0u, 0u)) | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id))) >> (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | 0u)))) >> 0u))) | (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u ^ _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id))))))), _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(((true ? max(workgroup_size, workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id)))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | (_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) ^ 0u)) + 0u)))))))), _GLF_FUZZED(subgroup_id))))) + 0u, uint(uvec4(((true ? max(workgroup_size, workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | ((_GLF_FUZZED(subgroup_id)))))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (0u ^ _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), min(_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), 0u | ((_GLF_FUZZED(subgroup_id)))), (_GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) | (_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((_GLF_FUZZED(subgroup_id)), ((_GLF_FUZZED(subgroup_id))) ^ 0u)) + 0u)))))))), _GLF_FUZZED(subgroup_id))))) + 0u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), workgroup_size), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(80.32, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(80.32, max(80.32, 80.32)), 1.0), max(vec2(_GLF_IDENTITY(80.32, max(80.32, 80.32)), 1.0), vec2(_GLF_IDENTITY(80.32, max(80.32, 80.32)), 1.0)))))), mix(float(_GLF_FUZZED(-7530.2203)), float(_GLF_IDENTITY(_GLF_FUZZED(80.32), clamp(_GLF_FUZZED(80.32), _GLF_FUZZED(80.32), _GLF_FUZZED(80.32)))), _GLF_IDENTITY(bool(true), true && (bool(true))))))))) ^ (min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), (true ? max(workgroup_size, workgroup_size) : _GLF_FUZZED(subgroup_id)))), workgroup_size)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (workgroup_id)), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u), 1u * _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 0u, 0u))), (subgroup_size)))))), ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u), 1u * _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 0u, 0u))), (subgroup_size))))))), ~ (~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) ^ 0u))))), 1u * _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 0u, 0u))), (subgroup_size)))))))))))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) | (uint(uvec3(subgroup_size, 1u, 0u)))), clamp(uint(uvec3(subgroup_size, 1u, 0u)), uint(uvec3(subgroup_size, 1u, 0u)), uint(uvec3(subgroup_size, 1u, 0u))))), min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (subgroup_size), 1u * (subgroup_size))))))), uint(_GLF_IDENTITY(uvec4((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) | (uint(uvec3(subgroup_size, 1u, 0u)))), clamp(uint(uvec3(subgroup_size, 1u, 0u)), uint(uvec3(subgroup_size, 1u, 0u)), uint(uvec3(subgroup_size, 1u, 0u))))), min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (subgroup_size), 1u * (subgroup_size))))))), 0u, 0u, 0u), (uvec4((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 0u)), (uint(uvec3(subgroup_size, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u))) | (uint(uvec3(subgroup_size, 1u, 0u)))), clamp(uint(uvec3(subgroup_size, 1u, 0u)), uint(uvec3(subgroup_size, 1u, 0u)), uint(uvec3(subgroup_size, 1u, 0u))))), min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (subgroup_size), 1u * (subgroup_size))))))), 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), max(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), clamp(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u))), 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(packUnorm2x16(injectionSwitch)) : _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), (1u ^ 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))), 1u, 1u, 0u)))))))) + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))) / 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), false))))))) || false), bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (bool(_GLF_IDENTITY(false, (false) && true))), false)))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) || false)) || false)))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))))) / 1u), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, 4))))) | 0), 4), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (max(4, _GLF_IDENTITY(4, (4) ^ (1 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4), min(min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(4, 4)), 4), min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), max(4, 4)), _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4)))))))) | (min(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) >> 0))))))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false), true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), clamp((read_1), _GLF_IDENTITY((read_1), max((read_1), (read_1))), (read_1))) | _GLF_IDENTITY((0u & 31336u), ((0u & 31336u)) + 0u)) == read_2), false)), bvec2(bvec3(bvec2(bvec2(bool(read_1 == read_2), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))))), false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool(read_1 == read_2), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))), false)))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec3(bvec2(bvec2(bool(read_1 == read_2), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec3(bvec2(bvec2(bool(read_1 == read_2), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec3(bvec2(bvec2(bool(read_1 == read_2), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec3(bvec2(bvec2(bool(read_1 == read_2), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))), true))), false, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(read_1 == read_2), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), true, false, true)))) || false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), false), false, false)))), _GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))) || false)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 ^ 0) | (1))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))), (1) + 0), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true)) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(false, ! (! (false)))), true, false)), (bool(bvec3(true && (_GLF_IDENTITY(false, ! (! (false)))), true, false))) && true)), true)))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), true)))))) && true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), true)))))) && true)), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-992.186)), bool(false)))), true)))))) && true)), false)))), true)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(true, false || (true))), false, false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
