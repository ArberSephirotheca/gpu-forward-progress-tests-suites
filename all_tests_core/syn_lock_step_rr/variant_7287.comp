#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, cos(0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (float(mat2(injectionSwitch.y, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, cos(0.0))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x), 0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), max(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(uint(gl_NumWorkGroups.x), max(uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x)))))))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), min(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), uint(uvec3((gl_NumWorkGroups.x), 1u, 0u)))) - 0u) - 0u)))), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(38.56)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(11.97) : _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), 1.0 * (_GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-686.589))))), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))))), float(_GLF_FUZZED(-6.9)), bool(false))) : _GLF_FUZZED(-574.289))))), 1.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.9)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(75.10), mix(float(_GLF_FUZZED(75.10)), float(_GLF_FUZZED(-4.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), log(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)), 1.0, 1.0, log(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), log(1.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), 1.0, sqrt(0.0), 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5314.5807)), min(float(_GLF_FUZZED(-5314.5807)), float(_GLF_IDENTITY(_GLF_FUZZED(-5314.5807), min(_GLF_FUZZED(-5314.5807), _GLF_FUZZED(-5314.5807)))))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, exp(0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-296.011) : 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(511.301) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-4.6)), float(sqrt(0.0)), bool(true))), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sqrt(0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(float(91040))), bool(false))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, exp(0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-296.011) : 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(511.301) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-4.6)), float(sqrt(0.0)), bool(true))), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sqrt(0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(float(91040))), bool(false))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, exp(0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-296.011) : 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(511.301) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-4.6)), float(sqrt(0.0)), bool(true))), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sqrt(0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(float(91040))), bool(false))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, exp(0.0), sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0))), 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-296.011) : 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-5.4)), bool(false))))), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(511.301) : dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), 1.0, sqrt(0.0), 1.0), (mat3(injectionSwitch.y, 1.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-4.6)), float(sqrt(0.0)), bool(true))), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sqrt(0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(float(91040))), bool(false))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u)) << 0u), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(28512u, 125440u, 177380u)))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (uint(gl_NumWorkGroups.x)), max(_GLF_IDENTITY(0u ^ (uint(gl_NumWorkGroups.x)), (0u ^ (uint(gl_NumWorkGroups.x))) | (_GLF_IDENTITY(0u ^ (uint(gl_NumWorkGroups.x)), min(0u ^ (uint(gl_NumWorkGroups.x)), 0u ^ (uint(gl_NumWorkGroups.x)))))), _GLF_IDENTITY(0u ^ (uint(gl_NumWorkGroups.x)), (0u ^ (uint(gl_NumWorkGroups.x))) ^ 0u))))) << 0u) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), (true ? _GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))) ^ uvec3(0u, 0u, 0u)))).x)))) << 0u) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), (true ? _GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-644.950)), bool(false))))))))) << uvec2(0u, 0u))) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)), 0u ^ (uint(gl_NumWorkGroups.x))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)), 0u ^ (uint(gl_NumWorkGroups.x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)), 0u ^ (uint(gl_NumWorkGroups.x)))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec2(0u, 0u), uvec2(0u, 0u) ^ ((~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec2(0u, 0u))))) | (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, (gl_NumWorkGroups.x) << 0u)), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y)))), (~ (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), 0u ^ ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))) >> (0u | 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))) ^ uvec3(0u, 0u, 0u))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))))) ^ uvec3(0u, 0u, 0u))).x : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(0u ^ (uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u), clamp(uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u), _GLF_IDENTITY(uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u), ~ (~ (uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u)))), uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u), clamp(uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u), _GLF_IDENTITY(uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u), ~ (~ (uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u)))), uvec3(0u ^ (uint(gl_NumWorkGroups.x)), 1u, 1u))))) | 0u)))) << _GLF_IDENTITY(0u, min(0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec2(0u, 0u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(gl_NumWorkGroups.x)), ((uint(gl_NumWorkGroups.x))) >> (152214u & (1u ^ 1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(gl_NumWorkGroups.x))), max((~ (uint(gl_NumWorkGroups.x))), (~ (uint(gl_NumWorkGroups.x))))), (~ (~ (uint(gl_NumWorkGroups.x)))) - 0u)))))), (true ? 0u ^ (uint(gl_NumWorkGroups.x)) : _GLF_FUZZED(180402u))))) << 0u), uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y))))))), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))), _GLF_IDENTITY(clamp(uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x)), (clamp(uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x))) | 0u)), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(4.4) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2355.4878))))))) / 1.0)))), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))), 0u | ((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (uint(gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(~ (~ (uint(gl_NumWorkGroups.x))), (~ (~ (uint(gl_NumWorkGroups.x)))) - 0u)))))), (true ? 0u ^ (uint(gl_NumWorkGroups.x)) : _GLF_FUZZED(180402u))))) << 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), true ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(273.867))) : _GLF_FUZZED(7088.6675), true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)) : _GLF_FUZZED(7088.6675))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))[0], (vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-57.57), _GLF_FUZZED(-2.2)), bvec2(false, false)))).y))), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), clamp(uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x))), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), (false ? _GLF_FUZZED(4.4) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2355.4878))))))) / 1.0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))), 0u | ((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))), 0u | ((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) - uvec2(0u, 0u))), (~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) << 0u), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u)))))) | (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (uint(gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(~ (~ (uint(gl_NumWorkGroups.x))), (~ (~ (uint(gl_NumWorkGroups.x)))) - 0u)))))), (true ? 0u ^ (uint(gl_NumWorkGroups.x)) : _GLF_FUZZED(180402u))))) << 0u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (uint(gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(~ (~ (uint(gl_NumWorkGroups.x))), (~ (~ (uint(gl_NumWorkGroups.x)))) - 0u)))))), (true ? 0u ^ (uint(gl_NumWorkGroups.x)) : _GLF_FUZZED(180402u))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (uint(gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(~ (~ (uint(gl_NumWorkGroups.x))), (~ (~ (uint(gl_NumWorkGroups.x)))) - 0u)))))), (true ? 0u ^ (uint(gl_NumWorkGroups.x)) : _GLF_FUZZED(180402u))))) << 0u), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u))).x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (uint(gl_NumWorkGroups.x)), ~ (_GLF_IDENTITY(~ (~ (uint(gl_NumWorkGroups.x))), (~ (~ (uint(gl_NumWorkGroups.x)))) - 0u)))))), (true ? 0u ^ (uint(gl_NumWorkGroups.x)) : _GLF_FUZZED(180402u))))) << 0u)))))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), (true ? 1.0 : _GLF_FUZZED(7088.6675)) * 1.0)) / 1.0), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y)), (true ? uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), clamp(true ? 1.0 : _GLF_FUZZED(7088.6675), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7088.6675), (true ? 1.0 : _GLF_FUZZED(7088.6675)) * 1.0)) / 1.0), true ? 1.0 : _GLF_FUZZED(7088.6675))))), injectionSwitch.y)) : _GLF_FUZZED(uvec4(25639u, 35100u, 136060u, 198676u).a)))), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), clamp(uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x))), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), clamp(uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x), uint(gl_NumWorkGroups.x))), 0u ^ (uint(gl_NumWorkGroups.x)))) << 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(4.4) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2355.4878))))))) / 1.0)))), (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))), 0u | ((_GLF_IDENTITY(uint(gl_NumWorkGroups.x), 0u ^ (uint(gl_NumWorkGroups.x)))))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (uvec2(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (_GLF_IDENTITY(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (uint(gl_NumWorkGroups.x)))) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u)))))))) | 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), 0u))), 0u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), 0u))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), 0u))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), 0u))), 0u))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, true), false))), true)))), (bool(bvec3(false, false, true))) || false)) && true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))), (_GLF_IDENTITY(! (false), bool(bool(! (false))))) && true))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(23.56)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], min(gl_WorkGroupID[1], gl_WorkGroupID[1])), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(ivec3(ivec3(1, 1, 0))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))), true, false, false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), true)), bool(bvec3(bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false, false, true))) || false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(838.013)), vec2(_GLF_FUZZED(-2.3), (injectionSwitch)[1]), bvec2(false, true))).y))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, min(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(-54540))), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || _GLF_IDENTITY((true), ((true)) && true))))) && (_GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(-54540))), float(injectionSwitch.y), bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false)))))))), true), bvec3(bvec4(bvec3(false, false, true), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
