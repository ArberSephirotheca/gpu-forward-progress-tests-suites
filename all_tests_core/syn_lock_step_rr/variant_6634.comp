#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 vec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 mat2x3 _f1;
 bool _f2;
 mat3 _f3;
 ivec3 _f4;
 int _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 mat4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
 ivec2 _f1;
 uint next_virtual_gid;
 ivec4 _f2;
 float _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat4x2 _f1;
 bvec2 _f2;
 mat4x3 _f3;
 float _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 _GLF_struct_13 _f1;
 mat3 _f2;
 _GLF_struct_14 _f3;
 int _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 mat3 _f1;
 uint _f2;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 _GLF_struct_7 _f1;
 uvec3 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 ivec4 _f1;
 uint read_1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 bvec4 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 bvec4 _f1;
 bool _f2;
 bvec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_2 {
 uint num_workgroup;
 mat4x3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uvec2 _f1;
 uint _f2;
 int _f3;
 bvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_5 {
 uint _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))))))))) || false)));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(4), int(4))))) / 1))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(1u, _GLF_struct_4(_GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(392.888)), min(float(_GLF_FUZZED(392.888)), float(_GLF_FUZZED(_GLF_IDENTITY(392.888, (392.888) / 1.0))))), bool(false))), (false ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(392.888)), min(float(_GLF_FUZZED(392.888)), float(_GLF_FUZZED(_GLF_IDENTITY(392.888, (392.888) / 1.0))))), bool(false)))) - 0.0))))), _GLF_struct_1(ivec2(1), uvec2(1u), _GLF_IDENTITY(1u, min(1u, 1u)), 1, bvec2(true), mat3(1.0)), _GLF_struct_2(gl_NumWorkGroups.x, mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-37.02))), 1.0)), 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, cos(0.0), 1.0, determinant(mat3(1.0, 1.0, 1.0, log(1.0), 1.0, 1.0, log(1.0), 0.0, 1.0)), log(1.0), 1.0, 0.0, 1.0))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / exp(0.0))), mix(float(_GLF_FUZZED(3.5)), float(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), bool(true)))), 1.0))), mat2x4(1.0)), _GLF_struct_3(mat2(1.0), bvec4(true), true, bvec4(true), uvec2(1u))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)) && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)) && (false)), true))) && true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))) || false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))))), bool(bvec4(_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))))), false, true, true)))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.0))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false))) || false)) && true)) && (false))))))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false))))))))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))) && true))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), true, false), false)))))))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false))))))))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))) && true))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), true, false), false)))))))))))), (! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && (false))))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))) && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), false, false))) && (false)) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED((8.7)), _GLF_FUZZED(-6187.9188)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y)), true, false, false)), (bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED((8.7)), _GLF_FUZZED(-6187.9188)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y)), true, false, false))) && true)) && (false)) || false))))))))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))) && true))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))) && true))))), false || (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), false, false))) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false), true, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)) || false), true, true, false))))) || false)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), (mat2(1.0) * ((injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))) && true))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), false || (bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), false, true, true)))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true))) && true)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true)))) && (false)))))), false || (bool(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), true, false, true)))))))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))) && (false)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false))))))))))))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), false, true)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), false, true))))) && true)))))))), true && ((_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))))), false || (bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), false, true)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && (false)))), false, true))))) && true)))))))))), true && (! (_GLF_IDENTITY(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false))) && _GLF_IDENTITY((false), ((false)) && true)))))), false || (bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false, false)))))))) && (false))))))))))))), true, false), false))))))))))))) && true)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-77.31))))) && (false))))))), false, true, true))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 24.83))), vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec2(int(0), 0))))), (_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec2(int(_GLF_IDENTITY(0, (0) - 0)), 0)))))) && true)); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_size * workgroup_id))) ^ 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              barrier();
             barrier();
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 1u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))), min(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))))), ((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u))))))) | (_GLF_IDENTITY((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY(uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u)), min(uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u)), uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u))))))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 1u)), _GLF_IDENTITY((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), ((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u))))))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))), clamp(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))), uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))), max(uvec2(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), max(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) / 1u))), ~ (~ (1u)))), uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u), (uvec2((_GLF_IDENTITY(uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u))))), (uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))) | 0u)), 1u)) >> uvec2(0u, 0u))), _GLF_IDENTITY(min(uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - 0u)))))), 1u)), uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u))), clamp(min(uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - 0u)))))), 1u)), uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u))), min(uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - 0u)))))), 1u)), uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u))), min(uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - 0u)))))), 1u)), uint(uvec2((uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u))))))))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) : _GLF_FUZZED(workgroup_id))) + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_FUZZED(-8905.9804)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.8, -3.0)) : injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && true)))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && true)))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && true)))), false))))) && true)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))), _GLF_struct_13(bvec2(true), _GLF_struct_12(1u, mat4x2(1.0), bvec2(true), mat4x3(1.0), 1.0, mat3x4(1.0))), mat3(1.0), _GLF_struct_14(mat3x2(1.0), ivec2(1), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size))), uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), clamp((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), min(uint(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size))), clamp((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size)) | 0u)))), uint(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)))) % subgroup_size)))))))), ivec4(1), 1.0, bvec3(true)), 1, _GLF_struct_16(mat4(1.0), _GLF_struct_15(mat4(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false))), 1.0)), 1.0, 1.0)), 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))) + _GLF_IDENTITY(0.0, float(mat4x2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(-1.5)), float(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(vec2(1.0, 1.0)))), float(_GLF_FUZZED(869.080)), bool(false))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))), ivec4(1), uvec2(1u), mat4x3(1.0), mat4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), mat3(1.0))), _GLF_struct_19(vec4(1.0), _GLF_struct_17(mat2x4(1.0), mat2x3(1.0), true, mat3(1.0), ivec3(1), 1, _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58296)))) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58296)))) * 1, ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58296)))) * 1) | 0)) << 0))), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58296)))) * 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58296)))) * 1, ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58296)))) * 1) | 0)) << 0)))) >> ivec2(0, 0))), _GLF_struct_18(vec4(1.0), mat2x3(1.0), uvec3(_GLF_IDENTITY(1u, 0u ^ (1u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)), mix(float(mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), float(_GLF_FUZZED(-5200.6980)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), injectionSwitch.x)) > injectionSwitch.y)))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(190974u))), 0u))), max(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_struct_replacement_20._f3.next_virtual_gid))), min((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u), 1u))), _GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u))), _GLF_IDENTITY(max(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_struct_replacement_20._f3.next_virtual_gid), (true ? _GLF_IDENTITY(max(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_struct_replacement_20._f3.next_virtual_gid), ~ (~ (max(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_struct_replacement_20._f3.next_virtual_gid)))) : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), true, true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), true, true)))), false), _GLF_IDENTITY(true, false || (true)), false))))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u), max(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_struct_replacement_20._f3.next_virtual_gid))), 0u | ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.next_virtual_gid, (_GLF_struct_replacement_20._f3.next_virtual_gid) << 0u), max(_GLF_struct_replacement_20._f3.next_virtual_gid, _GLF_struct_replacement_20._f3.next_virtual_gid))))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false)))))))
    {
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_6(mat2(1.0), ivec4(1), atomicLoad(buf[virtual_gid], 4, 64, 0)), mat4x2(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))).x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-9.5)))), bvec4(true), _GLF_struct_10(uvec2(1u), _GLF_struct_7(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), min((uvec4(1u)), (uvec4(1u)))) >> uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))), uvec3(1u), _GLF_struct_8(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8217.8481 * -4.2))), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true)))), mat3(1.0), 1u), _GLF_struct_9(vec2(1.0), vec4(1.0))));
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base)))], 4, 64, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << (0 >> _GLF_IDENTITY(int(2), int(2))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << (0 >> _GLF_IDENTITY(int(2), int(2)))))), clamp(~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << (0 >> _GLF_IDENTITY(int(2), int(2)))))), ~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << (0 >> _GLF_IDENTITY(int(2), int(2)))))), ~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << (0 >> _GLF_IDENTITY(int(2), int(2)))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   atomicStore(buf[_GLF_struct_replacement_20._f3.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), false || (! (_GLF_struct_replacement_11._f0.read_1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), uint(uint(read_2))), read_2)))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packHalf2x16(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))) : _GLF_struct_replacement_11._f0.read_1)) == read_2))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), true && (bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)))), false, false))))))), false || ((_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), true && (bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)))), false, false)))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_11._f0.read_1), 0u ^ (~ (_GLF_struct_replacement_11._f0.read_1))))) == read_2)), false, false, true))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), true && (! (_GLF_struct_replacement_11._f0.read_1 == read_2))))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), bool(bvec4((_GLF_struct_replacement_11._f0.read_1 == read_2), true, true, true)))), bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, bool(bvec4(_GLF_struct_replacement_11._f0.read_1 == read_2, false, false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, bool(bvec4(_GLF_struct_replacement_11._f0.read_1 == read_2, false, false, false))), true), true, false))))), ! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u))), bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)))))))))))))))) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), ((_GLF_struct_replacement_11._f0.read_1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), ((_GLF_struct_replacement_11._f0.read_1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_struct_replacement_11._f0.read_1) << (0u & 126056u)) == read_2), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_struct_replacement_11._f0.read_1) << (0u & 126056u)) == read_2), false || (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_struct_replacement_11._f0.read_1) << (0u & 126056u)) == read_2))))))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))))))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), false || (! (_GLF_struct_replacement_11._f0.read_1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), uint(uint(read_2))), read_2)))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packHalf2x16(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))) : _GLF_struct_replacement_11._f0.read_1)) == read_2))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), true && (bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)))), false, false))))))), false || ((_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)), true && (bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)))), false, false)))))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_11._f0.read_1), 0u ^ (~ (_GLF_struct_replacement_11._f0.read_1))))) == read_2)), false, false, true))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), true && (! (_GLF_struct_replacement_11._f0.read_1 == read_2))))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), bool(bvec4((_GLF_struct_replacement_11._f0.read_1 == read_2), true, true, true)))), bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, bool(bvec4(_GLF_struct_replacement_11._f0.read_1 == read_2, false, false, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, bool(bvec4(_GLF_struct_replacement_11._f0.read_1 == read_2, false, false, false))), true), true, false))))), ! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (! (_GLF_struct_replacement_11._f0.read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u))), bool(bvec4(! (! (_GLF_struct_replacement_11._f0.read_1 == read_2)), false, false, true)))))))))))))))) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, false || _GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), ((_GLF_struct_replacement_11._f0.read_1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((_GLF_struct_replacement_11._f0.read_1 == read_2), ((_GLF_struct_replacement_11._f0.read_1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_struct_replacement_11._f0.read_1) << (0u & 126056u)) == read_2), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_struct_replacement_11._f0.read_1) << (0u & 126056u)) == read_2), false || (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1, (_GLF_struct_replacement_11._f0.read_1) << (0u & 126056u)) == read_2))))))), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_struct_replacement_11._f0.read_1 == read_2), ! (! (! (_GLF_struct_replacement_11._f0.read_1 == read_2))))))))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true) && true)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), false)), (bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || (false)))), false))) || false), (_GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), false)), (bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || (false)))), false))) || false)) || false)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec2((bool(bvec2(false, false))), true))) && true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), _GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec2((bool(bvec2(false, false))), true))) && true)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY((bool(bvec2(false, false))), false || ((bool(bvec2(false, false))))), true))) && true)))))) && true)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) | (0)) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, 0 ^ (4))))), int(4)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | 1)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), clamp((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), max((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) - 0)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), clamp((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), max((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) - 0))))))), 1 * (~ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), clamp((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), max((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) - 0))))))))))) | 1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
