#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(335.151)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, sqrt(1.0)), (vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, sqrt(1.0))) - log(vec3(1.0, 1.0, 1.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY((! (! ((false)))), (_GLF_IDENTITY((! _GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), _GLF_IDENTITY(bool(bool((! (! ((false)))))), ! (! (_GLF_IDENTITY(bool(bool((! (! ((false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool((! (! ((false)))))), false || (bool(bool((! (! ((false)))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(bool(bool((! (! ((false)))))), false || (bool(bool((! (! ((false)))))))), true)), false, false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7234.2342, 4.7)))).y)), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), bool(bool((! (! ((false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), bool(bool((! (! ((false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), bool(bool((! (! ((false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false), false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), _GLF_IDENTITY(bool(bool((! (! ((false)))))), bool(bvec2(bool(bool((! (! ((false)))))), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), (bool(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), bool(bool((! (! ((false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), bool(bool((! (! ((false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), (bool(bvec2(bool(bvec4(_GLF_IDENTITY((! (! ((false)))), bool(bool((! (! ((false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))) && true), false), true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, false, true))) || false), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false)) || false)))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((133.672 + 6586.8239))), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3(float(injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(float(injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (0.0) * 1.0))) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(38.80)), float(0.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-748.201))), mix(float(_GLF_FUZZED(38.80)), float(0.0), bool(true)))) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID.x), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID.x), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupID.x)))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(0u, 1u, 1u))))), ~ (~ (0u))), 0u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))))))).x) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(0u, 1u, 1u))))), ~ (~ (0u))), 0u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))))))).x) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(0u, 1u, 1u))))), ~ (~ (0u))), 0u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))))))).x) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(0u, 1u, 1u))))), ~ (~ (0u))), 0u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))))))).x) + uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(0u, 1u, 1u))))), ~ (~ (0u))), 0u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))))))).x) + uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(0u, 1u, 1u))))), ~ (~ (0u))), 0u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))), 1u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))))), 0u))), uvec3(uvec4(uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))))))).x) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(49.84, mix(float(49.84), float(_GLF_FUZZED(((1576.5659 - 8000.1632) / (747.012 - -1.0)))), bool(false))))), bool(false))), injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp((injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true))), true && (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), tan(0.0))), max(float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), tan(0.0))), float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), tan(0.0)))))) > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, false || (true)))))))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)), false))), (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false)))) || false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec2(4, 0))), 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(342.161) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(342.161) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y)) ? _GLF_FUZZED(-297.665) : injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), bool(bvec2(_GLF_DEAD(false), true)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 0.0, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)), injectionSwitch)).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), min(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), float(mat3x4(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(0.0, tan(abs(0.0)) + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3468.7288)), float(injectionSwitch.x), bool(true)))))), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), float(mat4x2(injectionSwitch.x, 0.0, 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) + sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -9.0)) : injectionSwitch)).y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, -9.0)) : injectionSwitch)).y))) || false), true && (((injectionSwitch.x > injectionSwitch.y)))) && true)))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ vec4(-8153.6334, -183.963, 2.7, 3640.3413).g))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), (true ? (read_1) : _GLF_FUZZED(read_2))) ^ 0u))) == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bvec3(! (read_1 == read_2), true, false)))))) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, min(4, 4))) << 0), _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))), 0 ^ (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))))) << 0)) + 0, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), (true ? 0 << _GLF_IDENTITY(int(0), int(0)) : _GLF_FUZZED(abs(23463))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(94525)))) >> 0))))) << 0)), 0 ^ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(94525)))) >> 0))))) << 0)))) + 0, ((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))) << 0, max(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))) << 0, ((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, ~ (~ (4)))) >> 0)))) << 0) * 1), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))) << 0)), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))) << 0)))) + 0) | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4)))))) << 0)) + 0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0]), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0]), (min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0, tan(0.0)), (mat4x3(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0]), (min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 1.0, tan(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(false, ! (! (false))), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
