#version 460
struct _GLF_struct_4 {
 uvec4 _f0;
 ivec2 _f1;
 ivec4 _f2;
 mat2x3 _f3;
 uint workgroup_size;
 ivec4 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
 ivec3 _f1;
 mat3x2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 uvec4 _f1;
 mat2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 vec2 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 mat4x2 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 uint virtual_gid;
 uvec4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_struct_1(mat3x2(1.0), vec2(1.0), ivec2(1), bvec3(true)), _GLF_struct_2(mat3x2(1.0), uvec4(1u), mat2(1.0), mat4x3(1.0)), _GLF_struct_3(1.0, ivec3(1), mat3x2(1.0), ivec4(1)), mat4x2(1.0), _GLF_struct_4(uvec4(1u), ivec2(1), ivec4(1), mat2x3(1.0), gl_WorkGroupSize.x, ivec4(1))), mat4x2(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_6._f0._f4.workgroup_size * GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y;
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = workgroup_base;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat3(1.0), GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + subgroup_id * subgroup_size + subgroup_local_id, uvec4(1u));
 atomicStore(write_val, uint(_GLF_struct_replacement_0.virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[_GLF_struct_replacement_0.virtual_gid] = uint(subgroupAllEqual(read_val));
}
