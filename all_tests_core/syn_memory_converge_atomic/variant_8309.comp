#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, true))))))))))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(1.0))), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(13.56)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.4)))), bool(true))), 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, round(length(normalize(1.0))), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(13.56)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.4)))), bool(true))), 1.0), transpose(transpose(mat3(injectionSwitch, 1.0, round(length(normalize(1.0))), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(13.56), max(_GLF_FUZZED(13.56), _GLF_FUZZED(13.56)))), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.4)))), bool(true))), 1.0))))))))) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch))))), abs(cos(0.0)), 1.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 0.0, 1.0), (true ? mat4x3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), clamp(round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))), round(length(normalize(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-72989))), bool(false)))))))), 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch))))), abs(cos(0.0)), 1.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(-1303.1713, 4.3, 333.827, -6419.6179, -7.1, -789.167, 3000.8853, 9.8, -5800.0114, 9550.6923, -6.3, 8.8)))))))).x), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, round(length(normalize(1.0))), 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 0.0)), 0.0 + (float(vec3(1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x)) + 0.0) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), mix(float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))), float(_GLF_FUZZED((true ? 1584.6836 : 89.30))), bool(false))), float(_GLF_FUZZED(7.3)), bool(false))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(8170.1782, 2042.3323, -215.782).g)), float(1.0), bool(true))), 1.0)), 0.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, tan(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, log(1.0), tan(0.0), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), sqrt(0.0) + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-82.69)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))))), bool(true))))), clamp((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))))), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))))), bool(true))))), mix(float(_GLF_FUZZED(-4205.9231)), float((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))))), bool(true)))))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) + _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))))), bool(true))))))) * 1.0, max((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) + 0.0)), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), bool(true))))) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), clamp(_GLF_IDENTITY((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), clamp((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), (_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), (_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568))), _GLF_IDENTITY((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), min((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), (_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568))), _GLF_IDENTITY((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), min((_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568), (_GLF_IDENTITY(-3942.9390, (true ? -3942.9390 : _GLF_FUZZED(72.55))) * -999.568))))))), float(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, log(1.0), sin(0.0)), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, log(1.0), sin(0.0)) : _GLF_FUZZED(mat4x2(-217.518, 3.8, -574.651, 3156.7562, 3.6, 67.95, 8725.1057, 3255.9245)))))))), bool(true))))) * 1.0, float(vec3((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), mix(float(_GLF_FUZZED((-3942.9390 * -999.568))), float(min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(4.1) : (injectionSwitch.y))) + 0.0))), bool(true))))) * 1.0, 0.0, 1.0)))))))), false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], mix(float(_GLF_FUZZED(-189.957)), float(_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(91.64))), 0.0, 0.0))[_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 0)))], (false ? _GLF_FUZZED(5.2) : (vec3(1.0, 0.0, 0.0))[0]))), bool(true))), _GLF_FUZZED(-3.6), _GLF_FUZZED(0.1)), vec3(_GLF_FUZZED(-278.850), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))), false, true)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))), false, true))) && true))))))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-3.2)), bool(false)), float(mat2x4(mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-3.2)), bool(false)), 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0)))), 1.0, 1.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))) * 1.0)), 0.0, 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), 0.0, 0.0, 1.0, 1.0))))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))))), ! (! ((bool(bvec2(_GLF_DEAD(false), false))))))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (false ? _GLF_FUZZED(95.74) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.6, 206.945)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(95.74) : injectionSwitch.y, mix(float(_GLF_FUZZED(-6972.6496)), float(false ? _GLF_FUZZED(95.74) : injectionSwitch.y), bool(true))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(4.5) : _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(95.74) : injectionSwitch.y, mix(float(_GLF_FUZZED(-6972.6496)), float(false ? _GLF_FUZZED(95.74) : injectionSwitch.y), bool(true))), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(95.74) : injectionSwitch.y, mix(float(_GLF_FUZZED(-6972.6496)), float(false ? _GLF_FUZZED(95.74) : injectionSwitch.y), bool(true))) : _GLF_FUZZED(725.201)))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)) && ((false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(workgroup_size, workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8036.9956)))) * 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 1.0)))))).x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6628.9768), _GLF_FUZZED((true ? 3.9 : -7146.9927))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))) | 0), _GLF_IDENTITY(1, (1) - 0)))], 0.0, 1.0)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && true), false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, ~ (~ (_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) | (write_val))) + 0u)))), 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0)), 1.0))) - _GLF_IDENTITY(abs(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(-60.14)))), 0.0)), (false ? _GLF_FUZZED(vec2(819.912, -7.0)) : abs(vec2(0.0, 0.0))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0)), 1.0))) - _GLF_IDENTITY(abs(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(round(-60.14)))), 0.0)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(819.912, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 819.912 : _GLF_FUZZED(-417.465))), -7.0)) : abs(vec2(0.0, 0.0))))).y))) && true) || (true && (false))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) - abs(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(mat2x4(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))) : (injectionSwitch))), (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) - abs(vec2(0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) - abs(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-7.3, -911.581)) : (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-7.3, -911.581)) : (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))[0], clamp((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-7.3, -911.581)) : (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-7.3, -911.581)) : (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-7.3, -911.581)) : (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))[0])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-7.3, -911.581)) : (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), vec2(mat2x4((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))[1]), vec2(_GLF_FUZZED(-241.541), _GLF_FUZZED(vec3(-5.4, -49.98, 6468.6512).p)), bvec2(false, false)))) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)), vec2(0.0, 0.0), vec2(0.0, 0.0))))).y)))))) || (_GLF_IDENTITY(true, true && (true)) && (false)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(1.7)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) - abs(vec2(0.0, 0.0))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))), mix(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(987.735)), bvec2(false, false))) - abs(vec2(0.0, 0.0))).y)))) || (true && (false))), (_GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + (1.0)))), 1.0))) - abs(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (1.0) / 1.0))))).y)) || (_GLF_IDENTITY(true, true && (true)) && (false)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
