#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))), log(vec2(1.0, 1.0)) + (injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) ? _GLF_FUZZED(step(abs(9.0), 625.203)) : injectionSwitch.y, (false ? _GLF_FUZZED(step(abs(9.0), 625.203)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(1711.9420)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(0.2) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(1711.9420)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), 0.0)), mix(float(false ? _GLF_FUZZED(0.2) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(1711.9420)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), 0.0))), float(_GLF_FUZZED(6.4)), bool(false))))))) + 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(bool(false), true, false, true)), _GLF_IDENTITY(true && (bool(bvec4(bool(false), true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true)))))))))), false || (_GLF_IDENTITY(true && (bool(bvec4(bool(false), true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true)))))))))), (true && (bool(bvec4(bool(false), true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true))))))))))) && true))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(bool(false), true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), true)), true && (bool(bvec4(bool(false), true, false, true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true, true)), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(true, true)), false, true)), true)))), true, false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true, true)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(true, true)), true, false))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true, true)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(true, true)), true, false))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true, true)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(true, true)), true, false))))), true))), true)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) || false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec4(bvec2(bvec2(true, true)), true, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec4(bvec2(bvec2(true, true)), true, false))))))))))))), false, true))))), ! (! ((bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), true && ((! (_GLF_IDENTITY(false, true && (false))))))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true)), false))), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, true && (false))))), true))))))))), false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (true)), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), false)), false)), false)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, true && (false)), true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), true)))), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec3(bvec3(true, false, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))), bvec3(bvec3(bvec3(true, false, true)))))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), true))))))))))), false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, true))), true)))), bvec3(bvec3(bvec3(true, false, true)))))))))), false))))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))))))))) && true)))))))))), bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec4(bvec2(bvec2(true, true)), true, false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))), false)))))))))), true, false)))))))))), false, true))))), ! (! ((bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec3(bvec3(bvec3(true, false, true))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))))))))), false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false))))))))) && true))))))))))))) && true)), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), true, false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(111.095)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + _GLF_IDENTITY(0.0, max(0.0, 0.0)), ((injectionSwitch.x) + 0.0) - 0.0))) + 0.0)) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true, true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), true && (_GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-601.849), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-567.693)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x) - 0.0) < injectionSwitch.y)) && (bool(bool(false))))), bool(bvec2(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && (bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false), false, false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- float(163216u)))), vec2(_GLF_FUZZED(365.608), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-28.61)), bvec2(true, false))))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false, false))))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((false ? injectionSwitch : vec2(-8378.6821, -2.6))) : injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))), bool(bool(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))))))))) && (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false), (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))) && true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))), bool(bool(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))))))))) && (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((bool(false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), true, true)))), false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (false) || false))) || false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))), bool(bool(bool(bool(! (_GLF_IDENTITY(true, (true) || false))))))), false || (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))), bool(bool(bool(bool(! (_GLF_IDENTITY(true, (true) || false)))))))))))) && (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(degrees(injectionSwitch)))).y))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / 1.0))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-746.222) : injectionSwitch.y)), bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(-790.632, -2883.6247, 382.425, -32.29, 3175.5566, 4.3, 5.4, 0.2, 3.4))))) < injectionSwitch.y)), true)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(-790.632, -2883.6247, 382.425, -32.29, 3175.5566, 4.3, 5.4, 0.2, 3.4))))) < injectionSwitch.y)), true)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(-790.632, -2883.6247, 382.425, -32.29, 3175.5566, 4.3, 5.4, 0.2, 3.4))))) < injectionSwitch.y)), true)), true)), bvec2(bvec4(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat3(-790.632, -2883.6247, 382.425, -32.29, 3175.5566, 4.3, 5.4, 0.2, 3.4))))) < injectionSwitch.y)), true)), true)), true, true))), false))))), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false)))), true))))), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0))) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))))) || false), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))), true)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), ! (! (bool(bvec4(true, true, true, true)))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))), false, false, false))), true)), _GLF_IDENTITY(true, bool(bool(true)))), true, true)), false)))), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)), true))), bvec2(bvec2(bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true)), true))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.4, 841.505)) : injectionSwitch)).x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.4, 841.505)) : injectionSwitch)).x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true), bvec2(bvec2(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true))))))))))))) || false)) || false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))))))))))), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2969.2769), _GLF_FUZZED(4.6)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), (false) && true))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), (false) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), (false) && true))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, true))), (false) && true)))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[_GLF_IDENTITY(1, clamp(1, 1, 1))]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(97900))), 1))])) + _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-5.0, 3515.7723), max(vec2(-5.0, 3515.7723), vec2(-5.0, 3515.7723)))) : _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0))), vec2(0.0, 0.0))))))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(_GLF_FUZZED(-160.554), (injectionSwitch)[1]), bvec2(false, true))).y, injectionSwitch.y, injectionSwitch.y))))) / 1.0))), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) / 1.0)))), false || ((((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-7.6)), bool(false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) / 1.0)))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, abs(1.0)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), false)))))), false))))))))))))))), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false))))))))), ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false), false, true))))), ! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), ! (! (false)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), false || (bool(bool(! (false)))))))), ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false), false, true)))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))))), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, true))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(9.5, -6638.2048, 2.9)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)) && true), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(29.72) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x < injectionSwitch.y)) && true)))), false, true, true)))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, cos(0.0), exp(0.0), determinant(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(553.414), _GLF_FUZZED(-7.4)), bvec2(false, false))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(832.830), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.1)), bvec2(true, false))).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(832.830), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.1)), bvec2(true, false))).y))))))) && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))), false || (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))))))) && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (injectionSwitch.x < injectionSwitch.y)))), false, true, true)))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))), false, true, true)))))), true && _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0), max(injectionSwitch.y, injectionSwitch.y)))))) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (injectionSwitch.x < injectionSwitch.y))) || false))))) && true))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-2166.2273)), bvec2(true, false))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false, true, true))))))), false || (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0), max(injectionSwitch.y, injectionSwitch.y)))))) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (injectionSwitch.x < injectionSwitch.y))) || false))))) && true))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-2166.2273)), bvec2(true, false))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false, true, true))))))), false || (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0), max(injectionSwitch.y, injectionSwitch.y)))))) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (injectionSwitch.x < injectionSwitch.y))) || false))))) && true))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-2166.2273)), bvec2(true, false))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false, true, true))))))), false || (((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0), max(injectionSwitch.y, injectionSwitch.y)))))) && (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (injectionSwitch.x < injectionSwitch.y))) || false))))) && true))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-2166.2273)), bvec2(true, false))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false, true, true)))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).y)))))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))) || false), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u)) | (workgroup_base)), (workgroup_base) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))))) * 1u)), 1u * ((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))))) * 1u)))), ((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, 52819u)) : (~ (subgroup_local_id)) * 1u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, 52819u)) : (~ (subgroup_local_id)) * 1u))) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, 52819u)) : (~ (subgroup_local_id)) * 1u))) / 1u), (false ? _GLF_FUZZED(146586u) : _GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, 52819u)) : (~ (subgroup_local_id)) * 1u))) / 1u)))))))))) | ((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ (subgroup_local_id)) * 1u, _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, ~ (~ ((~ (subgroup_local_id)) * 1u)))) >> (1u ^ 1u), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY((~ (subgroup_local_id)) * 1u, ~ (~ ((~ (subgroup_local_id)) * 1u)))) >> (1u ^ 1u)))))))) - _GLF_IDENTITY(0u, ~ (~ (0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))), (! (! (_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && _GLF_IDENTITY(true, true && (true)))))) && true))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(78.35), (_GLF_FUZZED(78.35)) - abs(0.0))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), float(float(min(1.0, 1.0)))), min(1.0, 1.0)))) - 0.0)), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(78.35), float(vec3(_GLF_FUZZED(78.35), length(vec3(0.0, 0.0, 0.0)), 0.0)))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(351.883)), float(injectionSwitch.y), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(189.013) : injectionSwitch.y)), injectionSwitch.y)), 0.0 + (injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(78.35)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 0.0, sin(0.0), 0.0)))), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (true ? mat2(1.0) * (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(_GLF_IDENTITY(vec3(vec2(mat4x2(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), exp(0.0)), vec3(mat2(vec3(vec2(mat4x2(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), exp(0.0)), 0.0)))))), (false ? _GLF_FUZZED(atan(vec2(1.3, -18.21))) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0)))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (false ? _GLF_FUZZED(atan(vec2(1.3, -18.21))) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0)))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch)))), (false ? _GLF_FUZZED(atan(vec2(1.3, -18.21))) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-957.377)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)))), true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0)))))))[1]), vec2(_GLF_FUZZED(-18.94), _GLF_FUZZED(78.19)), bvec2(false, false))).x > injectionSwitch.y) && true)) && true)) && true)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(78.35), (_GLF_IDENTITY(_GLF_FUZZED(78.35), (true ? _GLF_IDENTITY(_GLF_FUZZED(78.35), (_GLF_FUZZED(78.35)) - 0.0) : _GLF_FUZZED(7169.3454)))) - abs(0.0))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(78.35)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(78.35)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(float(float((injectionSwitch.y) / 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY((-592.188), mix(float(_GLF_FUZZED((-1.2))), float((-592.188)), bool(true)))) : _GLF_IDENTITY(float(float((injectionSwitch.y) / 1.0)), max(float(float((injectionSwitch.y) / 1.0)), float(float((injectionSwitch.y) / 1.0)))))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 0.0, sin(0.0), 0.0)))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec2(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (false ? _GLF_FUZZED(atan(vec2(1.3, -18.21))) : _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) - vec2(0.0, 0.0)))), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))) && true)))), false, true, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true)) && true), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(5562.6434))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(round(-43.39)) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-63.06)), min(float(_GLF_FUZZED(-63.06)), _GLF_IDENTITY(float(_GLF_FUZZED(-63.06)), float(mat4(float(_GLF_FUZZED(-63.06)), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-79.98))), 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2098.9129)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, abs(1.0) * (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, abs(1.0) * (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, abs(1.0) * (1.0)), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), abs(0.0), 1.0, 0.0))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((_GLF_IDENTITY(2.2, float(_GLF_IDENTITY(mat3(2.2, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) + (mat3(2.2, 1.0, 0.0, 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))) - -1.0)), _GLF_FUZZED(50.95)), bvec2(false, false))).y : _GLF_FUZZED(5576.5692)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(503.637)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-797.513) : 0.0)), float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-0.2))), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0), min(vec2(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), (0.0), _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(-737.794)), float((0.0)), bool(true))))))) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(464.997)), bool(false)))) / 1.0), 0.0, 1.0))), 0.0), vec2(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), 1.0))), 0.0)))) + vec2(0.0, 0.0))).y))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(503.637)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(322.020)), float(0.0), bool(true))), (0.0) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(75.27)), bool(false))))), 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)).y))))) > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))))), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(503.637)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.92) : 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(99.31) : 0.0)), 0.0, 0.0, 0.0, 0.0)))), 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.92) : 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(99.31) : 0.0)), 0.0, 0.0, 0.0, 0.0)))), 0.0)).y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.92) : 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(99.31) : 0.0)), 0.0, 0.0, 0.0, 0.0)))), 0.0)).y)), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.92) : 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(99.31) : 0.0)), 0.0, 0.0, 0.0, 0.0)))), 0.0)).y)))))))))))))) > injectionSwitch.y))))), ((! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(_GLF_FUZZED(-2.2)), bool(false))), mix(float(_GLF_FUZZED(503.637)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.92) : 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(99.31) : 0.0)), 0.0, 0.0, 0.0, 0.0)))), 0.0)).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(68.92) : 0.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(99.31) : 0.0)), 0.0, 0.0, 0.0, 0.0)))), 0.0)).y)))))))) > injectionSwitch.y)))))) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), true && (false || (false))), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), bool(bool(! (false)))))) || (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true)))) || false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-6958.7339), (_GLF_FUZZED(-6958.7339)) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4769.4570))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6958.7339))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4769.4570))))) > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6958.7339))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4769.4570))))) > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6958.7339))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4769.4570))))) > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(900.399)), bool(false)))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6958.7339))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4769.4570))))) > injectionSwitch.y)))))))) || false))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), false, false), bvec3(bvec4(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), false, false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.6)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.y), bool(true)))))))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_DEAD(false)))))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3((! (_GLF_DEAD(false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool((_GLF_DEAD(false)) || false))), ((_GLF_DEAD(false)) || false) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, true)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, true)))))))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (false)), false || ((! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(1508.4424)))) - 0.0)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec4(6.9, 303.784, 934.375, -7.4), vec4(-3.7, -8.3, -6.4, -5.0))) : injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (true ? _GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, _GLF_IDENTITY(uint(uvec2(read_val, 0u)), 0u + (uint(uvec2(read_val, 0u)))))) ^ 0u) : _GLF_FUZZED(packHalf2x16(vec2(-695.572, -2.5))))))))) : _GLF_FUZZED(subgroup_id))), (uint(subgroupAllEqual(read_val))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))));
}
