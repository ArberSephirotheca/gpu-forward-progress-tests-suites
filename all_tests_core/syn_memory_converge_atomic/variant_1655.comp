#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.5) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))) && true)) && true)))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), min(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), max(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))) * vec2(1.0, 1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))), true))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))), true)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))), min(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))) * vec2(1.0, 1.0))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))), min(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))) * vec2(1.0, 1.0))).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)))), min(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))) * vec2(1.0, 1.0))).y), false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(true ? exp(0.0) : _GLF_FUZZED(-1291.4877), (true ? exp(0.0) : _GLF_FUZZED(-1291.4877)) + sin(0.0)))), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-89.79) : 0.0))), 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.2)), float(0.0), bool(true))), 0.0, tan(0.0), 1.0, 1.0), (_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0)) * mat3(1.0))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))) * vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_IDENTITY(_GLF_FUZZED(-1291.4877), max(_GLF_FUZZED(-1291.4877), _GLF_FUZZED(-1291.4877))))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(vec3(-58.01, 6.3, -4.7).g)), float(exp(0.0)), bool(true))), mix(float(_GLF_FUZZED(-76.78)), float(exp(0.0)), bool(true))))), 0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)))) && true), bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(746.373, -0.0)) : injectionSwitch)) : _GLF_FUZZED(sqrt(vec2(-7.8, -8.7))))).y), float(_GLF_FUZZED(5346.4538)), bool(false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(429.465)), bool(false))) : _GLF_FUZZED(61.84)))) * abs(1.0)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(429.465)), bool(false))) : _GLF_FUZZED(61.84)))) * abs(1.0)) > injectionSwitch.y)) || false))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED((71.31 / -31.74))), float(abs(1.0)), bool(true)), clamp(mix(float(_GLF_FUZZED((71.31 / -31.74))), float(abs(1.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED((_GLF_IDENTITY(71.31 / -31.74, clamp(71.31 / -31.74, _GLF_IDENTITY(71.31 / -31.74, (false ? _GLF_FUZZED(257.303) : 71.31 / -31.74)), _GLF_IDENTITY(71.31 / -31.74, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(71.31, mix(float(_GLF_FUZZED(-6702.8527)), float(_GLF_IDENTITY(_GLF_IDENTITY(71.31, (71.31) / 1.0), min(_GLF_IDENTITY(71.31, (71.31) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(71.31, (71.31) / 1.0), float(mat4x3(_GLF_IDENTITY(71.31, (71.31) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true))) / -31.74))))))), float(abs(1.0)), bool(true)), mix(float(_GLF_FUZZED(3.1)), float(mix(float(_GLF_FUZZED((_GLF_IDENTITY(71.31 / -31.74, (71.31 / -31.74) * determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))))), float(abs(1.0)), bool(true))), bool(true))), mix(float(_GLF_FUZZED((71.31 / -31.74))), float(abs(1.0)), bool(true)))))) > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))), false), true, true)))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || false)), (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false, false))), false || (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), false, false))), false || (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, sqrt(0.0))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, sqrt(0.0))))) > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7242.8440)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-410.996)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(21.64) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, abs(1.0), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), injectionSwitch)).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))))) || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(51.77)))))), (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(51.77)))))), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8891.6736), _GLF_FUZZED(-3.8)), bvec2(false, false))))).x)) > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8891.6736), _GLF_FUZZED(-3.8)), bvec2(false, false))))).x)) > injectionSwitch.y)), true)), true))), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(vec3(53.85, -38.15, 3886.7604).s), _GLF_FUZZED(-51.84)), vec2(((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true)), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.83), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), bvec2(true, false))).y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true)), true)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) + 0.0))) > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)), true)))))), true, false, true)))) || false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))), bool(bvec3(true, false, true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch)).x)) > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)), true)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))) && (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0), transpose(transpose((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0)))))), (float(_GLF_IDENTITY(mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0), transpose(transpose((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0))))))) / 1.0))))), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))), true)), true)))))), true, false, true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))), bool(bvec3(true, false, true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch)).x)) > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)), true)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))) && (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0), transpose(transpose((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0)))))), (float(_GLF_IDENTITY(mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0), transpose(transpose((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0))))))) / 1.0))))), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))))), true)), true)))))), true, false, true)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true))), bool(bvec3(true, false, true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))), injectionSwitch)).x)) > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)), true)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))) && (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0), transpose(transpose((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0)))))), (float(_GLF_IDENTITY(mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0), transpose(transpose((mat4x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * mat4(1.0))))))) / 1.0))))), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(74.46), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, false))).y, true && (injectionSwitch.x > injectionSwitch.y)), true))))), true)), true)))))), true, false, true)))) || false)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-436.785)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))))))) ? _GLF_FUZZED(length(injectionSwitch)) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false, true, false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) - sqrt(0.0))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true)))), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, _GLF_IDENTITY(uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), clamp(uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), _GLF_IDENTITY(uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), (uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3], uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])))) * uvec4(1u, 1u, 1u, 1u))))).w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), min((1u << _GLF_IDENTITY(uint(2u), uint(2u))), (1u << _GLF_IDENTITY(uint(2u), uint(2u))))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(write_val) : uint(2u))))), 0u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), max(uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))))), (1u) << _GLF_IDENTITY(0u, (0u) >> 0u)), (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), ((1u)) - 0u))) >> 0u) : _GLF_FUZZED(subgroup_local_id))))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(43022))), 0))], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w) << 0u), 0u, 1u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, _GLF_IDENTITY(uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[_GLF_IDENTITY(2, (0 | 0) | (2))], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], max(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0]) / 1u))), GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0)))], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), min(uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]))[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[_GLF_IDENTITY(3, 0 | (3))]), uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])))))).w, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, min(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], max(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0])), GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], _GLF_IDENTITY(max(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0]) / 1u)), (max(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0]) / 1u))) * 1u)), GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3]), min(uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[_GLF_IDENTITY(3, 0 | (3))]), uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])))))).w, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))))))) << 0u), 0u, 1u)), _GLF_IDENTITY(max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, max(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))))) << 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2]) - 0u), GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))), 0u ^ ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))))) << 0u), 0u, 1u))), uint(uvec2(_GLF_IDENTITY(max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u))) + 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, clamp(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size)).w, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w) | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))))) << _GLF_IDENTITY(0u, (0u) * 1u), min((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u))), 0u, 1u))), _GLF_IDENTITY(min(max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u))[_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) | (3))))])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size)))[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)))), 0u ^ (min(max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) + 0u)))))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[0], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[1], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[2], GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size[3])).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w))) << 0u), 0u, 1u))))))), 1u)))))), 0u | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w) ^ 0u)) << 0u), 0u, 1u)), 0u ^ (uint(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w) ^ 0u)) << 0u), 0u, 1u))))))), 0u | (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.w)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-739.076)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), min(mix(vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-739.076)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-739.076)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size))) >> uvec4(0u, 0u, 0u, 0u))))))) | uvec4(0u, 0u, 0u, 0u)).z * subgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u ^ (subgroup_size))) ^ 0u)) << 0u) / _GLF_IDENTITY(53119u, ~ (~ (_GLF_IDENTITY(53119u, (53119u) | (53119u))))))), (false ? _GLF_FUZZED((true ? uvec3(145247u, 9677u, 46700u).t : workgroup_base)) : true ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u ^ (subgroup_size))) ^ 0u)) << 0u) / 53119u)))), _GLF_IDENTITY(min(true ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED(num_workgroup)))), uint(uint(uint(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u ^ (subgroup_size))) ^ 0u)) << 0u) / 53119u)), true ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u ^ (subgroup_size))) ^ 0u)) << 0u) / 53119u))), uint(uvec4(min(true ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED(num_workgroup)))), uint(uint(uint(_GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u ^ (subgroup_size))) ^ 0u)) << 0u) / 53119u)), true ? subgroup_size : _GLF_FUZZED((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u ^ (subgroup_size))) ^ 0u)) << 0u) / 53119u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z, (GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z) / 1u) * subgroup_size, GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z * subgroup_size))) / 1u), GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.z * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false))))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true, false))))), true))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 1.0, 1.0))).y)), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, (true) || false), true))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, true))))))))))) || false)), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, (true) || false), true))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) || false)), true, true))))))))))) || false)), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y))))))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))), ((_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))))) / 1.0) + 0.0)), clamp((false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)))), float(_GLF_FUZZED(float(43535u))), bool(false))))))), (false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4407.3403, 0.3)) : injectionSwitch)))).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))), min(false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0))), false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 1.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0)), float(vec2(float(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0)))))), (false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(82.61) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2245.9441) : 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(2245.9441) : 0.0, clamp(false ? _GLF_FUZZED(2245.9441) : 0.0, false ? _GLF_FUZZED(2245.9441) : 0.0, false ? _GLF_FUZZED(2245.9441) : 0.0)))), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2245.9441) : 0.0))) - 0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2245.9441) : 0.0)))), 1.0, tan(0.0), 0.0, sqrt(1.0), 0.0, 1.0, 1.0))), 1.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))))))) - 0.0))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_DEAD(false), true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_DEAD(false), true)))), (bool(bool(bool(bvec2(_GLF_DEAD(false), true))))) && true)), _GLF_IDENTITY(true, bool(bool(true)))), false, false))))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)) || false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))))))))))))))))) && true)) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false, true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true)))))), true, true)))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1], (true ? injectionSwitch[1] : _GLF_FUZZED(_GLF_IDENTITY(4647.4239, float(mat4x2(4647.4239, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0], (_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0]) - 0.0), _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6572.8453), _GLF_FUZZED(-460.268)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false))).y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0], (_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0]) - 0.0), _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6572.8453), _GLF_FUZZED(-460.268)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false))).y), false, true)), false || (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0], (_GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0]) - 0.0), _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), cos(0.0))))[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6572.8453), _GLF_FUZZED(-460.268)), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))), false))).y), false, true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y)), (injectionSwitch.y) / 1.0))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat2(sqrt(1.0), 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0))).y)))), (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))))), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && true), true)))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), false || (! (true))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5262.1532) : injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0)), max(float(mat4x3(injectionSwitch.x, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0)), float(mat4x3(injectionSwitch.x, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, sqrt(1.0), 0.0))))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-58.55)), float(injectionSwitch.y), bool(true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               return;
              }
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(acosh(injectionSwitch)) : false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)) || false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), false || (! _GLF_IDENTITY((! (false)), true && ((! (false)))))), false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))), true, true))))), true))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, false || (true)), true))), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, cos(0.0), exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, exp(abs(0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, cos(0.0), 1.0)), max(float(mat2x4(0.0, 0.0, exp(abs(0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, cos(0.0), 1.0)), float(mat2x4(0.0, 0.0, exp(abs(0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, cos(0.0), 1.0)))))), 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, cos(0.0), exp(0.0), 1.0)))), mix(float(_GLF_FUZZED(-4142.2967)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, cos(0.0), exp(0.0), 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, cos(0.0), exp(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), (float(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, cos(0.0), exp(0.0), 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, cos(0.0), exp(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))) - 0.0), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(67.33), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(67.33), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(67.33), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, sqrt(1.0), abs(1.0), 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(21.10) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true))
  barrier();
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size.y = read_val;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false), true))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))), bool(bvec3(! (false), false, true))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))), bool(bvec3(! (false), false, true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))), bool(bvec3(! (false), false, true))))), false), false))), false))), false, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) && true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bool(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))), false, true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), false, true)), true, false)))))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, true)))), false)))), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, true)))), false)))), false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, true))))), false), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), true, _GLF_IDENTITY(false, (false) && true))), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false)))))), false, true)))), true, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7896.2865), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(66.23)), bvec2(true, false))).y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), bool(bool(! (! (false)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((9.0 + -86.75))), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, true))).y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-16.72), _GLF_FUZZED(32.71)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) && true), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 6.1)))), injectionSwitch)).y, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (true && (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) && true)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), bool(bvec2(! ((_GLF_DEAD(false)) && true), false)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(70580u, 127938u, 138016u), uvec3(uvec4(uvec3(70580u, 127938u, 138016u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))).sttt) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size)).y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(70580u, 127938u, 138016u), uvec3(uvec4(uvec3(70580u, 127938u, 138016u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))).sttt) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) ? _GLF_FUZZED(uvec4(43200u, 25942u, 31267u, 121272u)) : GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_14num_workgroupread_valsubgroup_idworkgroup_size)))).y) - 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((false), ((false)) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
