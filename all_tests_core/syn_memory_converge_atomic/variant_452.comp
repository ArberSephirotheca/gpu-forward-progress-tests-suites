#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))), 0.0 + (injectionSwitch.x)) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0))), 0.0 + (injectionSwitch.x)) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y))))))))))), false || (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))))))))))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) && true)))))) && true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   do
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   return;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) && true))
                    continue;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false)) && true))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) || false))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) || false)))))) || false)))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                      return;
                     continue;
                    }
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                    continue;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
        return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))), true)), false, true)))))))));
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))))))))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, (0) ^ 0)), max(min(0, _GLF_IDENTITY(0, (0) ^ 0)), min(0, _GLF_IDENTITY(0, (0) ^ 0)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), ~ (~ (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
    {
     _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.x = num_workgroup, (GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.x = num_workgroup) | 0u);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false, true, false))), false))))))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), 1u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), 1u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), 1u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(11025u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize)))))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(119643u, 64942u, 52722u)))))).x))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))))), (true ? uvec2(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))))) : _GLF_FUZZED(uvec2(15310u, 198954u)))))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(subgroup_local_id)))), ~ (~ ((false ? _GLF_FUZZED(11025u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize)))))).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(119643u, 64942u, 52722u)))))).x))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))))), (true ? uvec2(gl_WorkGroupSize.x, (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))))) : _GLF_FUZZED(uvec2(15310u, 198954u)))))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(subgroup_local_id))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(11025u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), min(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), min(uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u), uvec4(gl_WorkGroupSize.x, 0u, 0u, 0u))))) ^ 0u))))))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) ^ 0u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(152643u, 17319u, 68205u)))).x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u) * 1u))))))))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) : _GLF_FUZZED(subgroup_local_id)))), clamp((false ? _GLF_FUZZED(11025u) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)), (true ? (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)) : _GLF_FUZZED(num_workgroup)))) ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) ? _GLF_FUZZED(11025u) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(subgroup_local_id)))) | (1u ^ 1u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(11025u, max(11025u, 11025u))) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) * 1u), 0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (_GLF_IDENTITY(0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(uvec2(0u + ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 1u)))) ^ ((0u | 0u) | 0u))))))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(write_val) : gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u))))))), 1u * (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(write_val) : gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(write_val) : gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, gl_WorkGroupSize.x))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) * 1u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(subgroup_local_id))))))) / (1u ^ 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), max((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(91955u, 55641u, 192954u)) : gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)), (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)), _GLF_IDENTITY((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))) | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))), ((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))) | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)))) | ((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))) | (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u))))))) >> 0u)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)))), (_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.8))), injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.8))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.8))), injectionSwitch.y, injectionSwitch.y))) + 0.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.8))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.8))), injectionSwitch.y, injectionSwitch.y))) + 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true, true)))) || (true)) ? _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, min((subgroup_id) / 1u, (subgroup_id) / 1u)))) * 1u)) >> 0u) : _GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))) | (~ (subgroup_local_id)))))) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)) : _GLF_FUZZED(_GLF_IDENTITY(write_val, ~ (~ _GLF_IDENTITY((write_val), clamp(_GLF_IDENTITY((write_val), ((write_val)) >> 0u), (write_val), _GLF_IDENTITY((write_val), ((write_val)) >> 0u))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size)) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) + (0u & 9414u)))) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec3(~ (subgroup_local_id), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) : _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), gl_WorkGroupSize.x)))) : _GLF_FUZZED(_GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), min(~ (write_val), ~ (write_val))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) ? _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(write_val)))) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) : _GLF_FUZZED((subgroup_local_id ^ subgroup_id)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))))) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)) : _GLF_FUZZED(_GLF_IDENTITY(write_val, _GLF_IDENTITY(~ (~ (write_val)), max(~ (~ (write_val)), ~ (~ (write_val))))))), 0u | ((_GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y)) || (true)) ? _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(write_val)))) | (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(4u, (4u) << 0u)))))))))) : gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))))) : false ? _GLF_FUZZED(subgroup_id) : gl_WorkGroupSize.x)) : _GLF_FUZZED(_GLF_IDENTITY(write_val, _GLF_IDENTITY(~ (~ (write_val)), max(~ (~ (write_val)), ~ (~ (_GLF_IDENTITY(write_val, min(_GLF_IDENTITY(write_val, ~ (_GLF_IDENTITY(~ (write_val), (~ (write_val)) ^ 0u))), write_val))))))))))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (bool(_GLF_IDENTITY(false, bool(bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))))))
      return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), _GLF_IDENTITY(float(mat2(1.0 * (injectionSwitch.x), 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(mat2(1.0 * (injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))), min(float(mat4(float(mat2(1.0 * (injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0))), float(mat4(float(mat2(1.0 * (injectionSwitch.x), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0)))))))) < injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) && true)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) && true)))))), false, true, true)), (bool(bvec4((_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) && true)))))), false, true, true))) || false)))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(min(0, 0), 1), (ivec2(min(0, 0), 1)) | (ivec2(min(0, 0), 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(min(0, 0), 1), (ivec2(min(0, 0), 1)) | (ivec2(min(0, 0), 1))))) - 0, max((int(_GLF_IDENTITY(ivec2(min(0, 0), 1), (ivec2(min(0, 0), 1)) | (ivec2(min(0, 0), 1))))) - 0, _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(min(0, 0), 1), (ivec2(min(0, 0), 1)) | (ivec2(min(0, 0), 1))))) - 0, ((int(_GLF_IDENTITY(ivec2(min(0, 0), 1), (ivec2(min(0, 0), 1)) | (ivec2(min(0, 0), 1))))) - 0) | ((int(_GLF_IDENTITY(ivec2(min(0, 0), 1), (ivec2(min(0, 0), 1)) | (ivec2(min(0, 0), 1))))) - 0))))))), ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ (_GLF_IDENTITY((1) >> 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(33345, 80716, 42491)) : (1) >> 0))))))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0)))), clamp(int(0), int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
        {
         do
          {
           GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.z = workgroup_id;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-46.21)), bool(false)))))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.z;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(max(0u, 0u), _GLF_IDENTITY(max(0u, 0u), uint(uint(_GLF_IDENTITY(max(0u, 0u), uint(uvec2(max(0u, 0u), 0u)))))))))))) / 1u)))) : _GLF_FUZZED(subgroup_id)));
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), 0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) >> _GLF_IDENTITY(0u, 0u | (0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))))), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(_GLF_IDENTITY(8u, clamp(8u, 8u, 8u))), uint(8u))))) - 0u))))))))) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(11991u, 197727u)[0]) : 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)))) / 1u) : _GLF_FUZZED((-- workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u)))))), uint(8u)))))) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u ^ (_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (((0u << _GLF_IDENTITY(uint(8u), uint(8u))))) | (((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (~ (8u)))))) - 0u)), max(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, min(8u, 8u)))), _GLF_IDENTITY(8u, min(8u, 8u)), 8u))), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)))) + ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)))) / 1u) : _GLF_FUZZED((-- workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u) << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(uvec3(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (1u ^ 1u))) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (uint(8u))))))))))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(91995u) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))), (true ? uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))) : _GLF_FUZZED(148755u)))) >> 0u), uint(8u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) << 0u, min((uint(8u)) << 0u, (uint(8u)) << 0u))), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)) + (0u & 97182u))))) / 1u) : _GLF_FUZZED((-- workgroup_size))))))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 1u, 0u, 0u)))))), uint(8u)))))) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u ^ (_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (((0u << _GLF_IDENTITY(uint(8u), uint(8u))))) | (((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)) << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (~ (8u)))))) - 0u)), max(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(_GLF_IDENTITY(8u, (8u) | (_GLF_IDENTITY(8u, min(8u, 8u)))), _GLF_IDENTITY(8u, min(8u, 8u)), 8u))), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)))) + ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)))) / 1u) : _GLF_FUZZED((-- workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u) << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(uvec3(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) << (1u ^ 1u))) << ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))))) | (uint(8u))))))))))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(91995u) : 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))), (true ? uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_size) : 8u))) : _GLF_FUZZED(148755u)))) >> 0u), uint(8u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) << 0u, min((uint(8u)) << 0u, (uint(8u)) << 0u))), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)) + (0u & 97182u))))) / 1u) : _GLF_FUZZED((-- workgroup_size))))))) : _GLF_FUZZED(workgroup_size)) / 1u)))) | (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), 0u | (_GLF_IDENTITY(uint(8u), (uint(8u)) | 0u)))) >> 0u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), clamp(0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, uint(uvec2(8u, 0u)))) - 0u)))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(_GLF_IDENTITY(8u, (8u) / 1u), 8u, 8u))), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), max(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)))) / 1u) : _GLF_FUZZED(_GLF_IDENTITY((-- workgroup_size), 0u ^ ((-- workgroup_size)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) * 1u)))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec3(_GLF_IDENTITY(uint(8u), 1u * (uint(8u))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 1u))))), 0u))), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uint(uint(8u))), min(uint(uint(uint(8u))), uint(uint(uint(8u)))))), uint(8u), uint(8u))))))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(atomicAnd(workgroup_id, workgroup_base)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), max(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_id)))))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u, min((_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u))) ^ 0u))))) / 1u) : _GLF_FUZZED((-- workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), clamp(0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u << _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) | _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (((0u << _GLF_IDENTITY(uint(8u), uint(8u))))) | 0u))))) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) | (uint(8u))))))), uint(uvec2(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) | (uint(8u))))))), 0u))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | ((false ? _GLF_FUZZED(workgroup_id) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) | (uint(8u))))))), uint(uvec2(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (_GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))) | (uint(8u))))))), 0u))))))))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u))))))) >> _GLF_IDENTITY(0u, 0u | (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, min(8u, 8u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), max(uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) - 0u)), uint(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec4(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), 0u, 0u, 1u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))) - 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)) + (0u & 97182u))))) / 1u) : _GLF_FUZZED((-- workgroup_size))))))) : _GLF_FUZZED(workgroup_size)))) | (subgroup_size))) | 0u) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 ^ 1) ^ 1), bool(bvec4(_injected_loop_counter != ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), 1)) ^ 1) ^ 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter ++)
    {
     atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((4), ((4)) | ((4))), ~ (~ (~ _GLF_IDENTITY((4), ((4)) | ((4))))))), int(_GLF_IDENTITY(int((~ _GLF_IDENTITY((4), ((4)) | ((4))))), (int((~ _GLF_IDENTITY((4), ((4)) | ((4)))))) ^ 0)))), 64, 0);
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4419.1611) : injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-91970, (-91970) - _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))), ((0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))) * 1))) : 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(vec4(606.503, -827.962, -584.812, -8786.3943), vec4(-7245.8310, -4.7, 6.7, 0.4))))), sin(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))), 0.0))), transpose(transpose(mat4x2(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))))))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
  }
}
