#version 460
struct _GLF_struct_5 {
 uint workgroup_id;
 ivec4 _f0;
} ;

struct _GLF_struct_6 {
 bool _f0;
 ivec3 _f1;
 uvec2 _f2;
 mat3 _f3;
 _GLF_struct_5 _f4;
 ivec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 vec3 _f1;
 ivec3 _f2;
 mat3 _f3;
 _GLF_struct_6 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 uint virtual_gid;
 mat3x4 _f1;
 uvec2 _f2;
 float _f3;
 vec3 _f4;
 vec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 float _f1;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat3 _f1;
 _GLF_struct_3 _f2;
 ivec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_1 {
 int _f0;
 _GLF_struct_0 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat4x2(1.0), vec3(1.0), ivec3(1), mat3(1.0), _GLF_struct_6(true, ivec3(1), uvec2(1u), mat3(1.0), _GLF_struct_5(gl_WorkGroupID.x, ivec4(1)), ivec4(1), mat2(1.0)), bvec4(true));
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(1, _GLF_struct_0(bvec2(true), workgroup_size * _GLF_struct_replacement_7._f4._f4.workgroup_id));
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1, mat3(1.0), _GLF_struct_3(_GLF_struct_2(ivec4(1), _GLF_struct_replacement_1._f1.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat3x4(1.0), uvec2(1u), 1.0, vec3(1.0), vec4(1.0), bvec3(true)), 1.0), ivec3(1), mat4x3(1.0));
 atomicStore(write_val, uint(_GLF_struct_replacement_4._f2._f0.virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[_GLF_struct_replacement_4._f2._f0.virtual_gid] = uint(subgroupAllEqual(read_val));
}
