#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_8_1_1_13read_valsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid;
 uvec4 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id;
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizevirtual_gid.xyz = GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true, false, false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))
  barrier();
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz = GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizevirtual_gid.xyz;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz = GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))) && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(8696.0679) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch))))) * abs(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, false || (false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))), _GLF_IDENTITY(bool(bvec4(bool(false), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, false, false))) && true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), false))), bvec3(bvec4(bvec3(false, true, false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), false))), bvec3(bvec4(bvec3(false, true, false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))) || false))) || _GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), false))), bvec3(bvec4(bvec3(false, true, false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), false))), bvec3(bvec4(bvec3(false, true, false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))) || false))) || _GLF_IDENTITY(false, bool(bool(false))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), false))), bvec3(bvec4(bvec3(false, true, false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), false))), bvec3(bvec4(bvec3(false, true, false), true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))) || false))) || _GLF_IDENTITY(false, bool(bool(false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true)))), ((! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((bool(_GLF_DEAD(false))), true), bvec2(bvec3(bvec2((bool(_GLF_DEAD(false))), true), false))), true))))))))))) || false))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) || false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true)))), ((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))))) || false))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true)))), ((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true)))), ((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))))) || false), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true)))), _GLF_IDENTITY(((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))))), bool(bvec3(((! _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec2((bool(_GLF_DEAD(false))), true))))), false, false))) || false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false), false)))) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))) || false), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), true && (bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (bool(_GLF_DEAD(false))))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (bool(_GLF_DEAD(false)))))))))))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false), _GLF_IDENTITY(true, (true) || false) && (bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (bool(_GLF_DEAD(false)))))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (bool(_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (bool(_GLF_DEAD(false))))))))), false || (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), bool(bvec3(! (! (bool(_GLF_DEAD(false)))), false, true))))))))))))) && true)))) || false))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_DEAD(false))))), bool(bool(! ((! (bool(_GLF_DEAD(false)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true)))))))))))))))))) || false), true && _GLF_IDENTITY((bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false)), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && ((bool(_GLF_DEAD(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_DEAD(false))))), bool(bool(! ((! (bool(_GLF_DEAD(false)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true)))))))))))))))))) || false), true && _GLF_IDENTITY((bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false)), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && ((bool(_GLF_DEAD(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_DEAD(false))))), bool(bool(! ((! (bool(_GLF_DEAD(false)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true)))))))))))))))))) || false), true && _GLF_IDENTITY((bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false)), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && ((bool(_GLF_DEAD(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false))) && true)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_DEAD(false))))), bool(bool(! ((! (bool(_GLF_DEAD(false)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), true)))))))))))))))))) || false), true && _GLF_IDENTITY((bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false)), ((bool((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), true && ((bool(_GLF_DEAD(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))) || false))) && true))) && true)) && true), true, false, true)))), false, false, true))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), false, false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))), true), false, false)), false, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w = GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w, uint(uint(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.w)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz.z = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, uvec3(uvec3(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)))) << uvec3(0u, 0u, 0u))), max(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, uvec3(uvec3(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)))) << uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, uvec3(uvec3(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)))) << uvec3(0u, 0u, 0u)))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))).x, (_GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x : _GLF_FUZZED(65864u)))) | (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.x)), _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, max(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz)).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bool(true && (! (_GLF_IDENTITY(false, false || (false)))))), true && (bool(bool(true && (! (_GLF_IDENTITY(false, false || (false))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(vec4(vec2(vec2(injectionSwitch)), 0.0, 0.0)))))).x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(84.97)), bool(false))))), mix(float(_GLF_FUZZED(8529.5293)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(84.97)), bool(false)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y))) && true), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), vec4(mat3x4(vec4(injectionSwitch, 0.0, 0.0), sin(0.0), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0))))).x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-354.254, -53.56)))).x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) || false))))))), true), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec2(! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))))))), true), true, true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9093.2250) : injectionSwitch.y)), injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, true && (true))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.6, -179.745)))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, 0.0), (vec4(injectionSwitch.y, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), 0.0), mat4(1.0) * (vec4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))).y))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(92130), min(float(92130), _GLF_IDENTITY(float(92130), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0), mix(vec2(_GLF_FUZZED(-3716.6098), (vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[1]), vec2((vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[0], _GLF_FUZZED(-5916.4342)), bvec2(true, false))))))))), bvec2(true, false))).y))))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(92130), min(float(92130), _GLF_IDENTITY(float(92130), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0), mix(vec2(_GLF_FUZZED(-3716.6098), (vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[1]), vec2((vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[0], _GLF_FUZZED(-5916.4342)), bvec2(true, false))))))))), bvec2(true, false))).y))))), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(92130), min(float(92130), _GLF_IDENTITY(float(92130), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0), mix(vec2(_GLF_FUZZED(-3716.6098), (vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[1]), vec2((vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[0], _GLF_FUZZED(-5916.4342)), bvec2(true, false))))))))), bvec2(true, false))).y))))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(92130), min(float(92130), _GLF_IDENTITY(float(92130), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0), mix(vec2(_GLF_FUZZED(-3716.6098), (vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[1]), vec2((vec2(_GLF_IDENTITY(float(92130), max(float(92130), float(92130))), 0.0))[0], _GLF_FUZZED(-5916.4342)), bvec2(true, false))))))))), bvec2(true, false))).y))))), false)))))), false, false, true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), true && (true && (_GLF_IDENTITY(false, (false) || false)))), true && (true && (false))))) && true), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_8_1_1_13read_valsubgroup_size.y = _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z = GLF_merged2_0_1_8_1_1_13read_valsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))))), bool(bvec2(false, false))) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec2(bvec2(false, false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), true))))))), _GLF_IDENTITY(true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(60.26) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false, true))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))) || false))) && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec3(true && (_GLF_DEAD(false)), false, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(tan(1.7)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.34) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)), cos(0.0), 1.0, 1.0, abs(0.0), 1.0))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)), cos(0.0), 1.0, 1.0, abs(0.0), 1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))))), false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y)), false)), ! (! (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))))), true, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))) && true), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bool(bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(! (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false)), mix(float(_GLF_FUZZED(float(false))), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec2(! (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), false), true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-687.848)), float(injectionSwitch.y), bool(true)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), false))), true)))) || false)))), true, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y)), false)), ! (! (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))))), true, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))))), 1.0 * (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 0.0), mat2(mat2(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))) && true), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bool(bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(! (bool(bvec3(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false)), mix(float(_GLF_FUZZED(float(false))), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec2(! (bool(bvec3(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(298.267)), bool(false))) > injectionSwitch.y)))))), false), true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-687.848)), float(injectionSwitch.y), bool(true)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), false))), true)))) || false)))), true, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z = workgroup_size;
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.z = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ -3.2))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.1) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, _GLF_IDENTITY(max(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz) / uvec3(1u, 1u, 1u))), min(max(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz) / uvec3(1u, 1u, 1u))), max(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz, (GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz) / uvec3(1u, 1u, 1u)))))).z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED((workgroup_size << num_workgroup)) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_id), ~ (~ (uint(workgroup_id)))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (_GLF_IDENTITY(uint(workgroup_id), ~ (~ (uint(workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), uint(uvec4(uint(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), uint(uvec3(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), uint(uvec4(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id))))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), clamp(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), uint(uvec4(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id))))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), uint(uvec4(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id))))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), uint(uvec4(uint(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id), clamp(workgroup_id, workgroup_id, workgroup_id))))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))), 0u, 1u))), _GLF_IDENTITY((uint(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))) | (uint(uint(uint(workgroup_id)))), ((uint(uint(uint(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))) | (uint(uint(uint(workgroup_id))))) << 0u))), 0u | (_GLF_IDENTITY(uint(workgroup_id), _GLF_IDENTITY(uint(uint(uint(workgroup_id))), (uint(uint(uint(workgroup_id)))) | (uint(uint(uint(workgroup_id))))))))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.w = workgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(304.111)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false))), bool(bool(false || (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, log(abs(vec2(1.0, 1.0))) + (injectionSwitch)).x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(905.665), _GLF_FUZZED(0.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 1.0))) > injectionSwitch.y))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz.z, 0u ^ (GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz.z)) * _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, (true ? _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, ((_GLF_IDENTITY((1u & 1u), uint(_GLF_IDENTITY(uint((1u & 1u)), (uint((1u & 1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uint(6u)))), uint(_GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uvec2(6u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(6u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) - uvec2(0u, 0u)))))))), min(uvec2(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, (((1u & _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) >> 0u))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, (((1u & 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), 1u * (uint(_GLF_IDENTITY(uvec2(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, (((1u & 1u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | (_GLF_IDENTITY(6u, (6u) ^ 0u)))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), min(uvec2(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, (((_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u | (6u))), (uint(6u)) >> 0u)) - 0u)))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z, (((1u & 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) : _GLF_FUZZED(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.z))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x) / 1u), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x) << 0u), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x)))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size, ~ (~ (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size))).x))))) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizevirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size.y = GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizevirtual_gid.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size)), clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size)).y;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), bool(bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y = _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id) : GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid)).w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), false || (! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(! (false), (! (false)) || false))) || false))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), true, true, true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, false)))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))) && true, bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))) && true)))))))) || false), true, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true))))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (true) && true))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(false, (false) && true), false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))), true, true, _GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))), true, true, _GLF_IDENTITY(true, (true) && true)))), false || (! (bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) || false)))), true, true, _GLF_IDENTITY(true, (true) && true)))))))))), _GLF_IDENTITY(false, (false) && true), false, true))))))))) || false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(sin(0.0))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))), true, true))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, true))))))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, bool(bool((! (false)) || false)))))))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), false, true, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) << 0, (((4)) << 0) / 1)) | 0), 64, 0);
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_8_1_1_13read_valsubgroup_size.x = read_val;
 GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.x = GLF_merged2_0_1_8_1_1_13read_valsubgroup_size.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz.y = GLF_merged4_0_1_8_1_1_11_2_1_13_3_1_11read_valsubgroup_idsubgroup_sizevirtual_gid.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) || false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))), false, true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, cos(0.0), exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(617.679)), bool(false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || false), ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-427.750) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[GLF_merged2_0_3_68_3_1_11GLF_merged3_0_1_11_1_1_11_2_1_14subgroup_idvirtual_gidworkgroup_sizesubgroup_id.xyz.y] = uint(subgroupAllEqual(GLF_merged2_0_3_63_3_1_14GLF_merged3_0_1_13_1_1_8_2_1_11num_workgroupread_valsubgroup_idworkgroup_base.xyz.y));
}
