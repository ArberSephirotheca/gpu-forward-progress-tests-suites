#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), bool(bvec4((! (_GLF_IDENTITY(false, false || (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), true))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1730.9892) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat4(-59.23, -312.594, -737.801, 6023.8098, -8.6, -1.8, 42.54, 308.133, 773.178, -3.1, -0.6, 47.16, 9653.6035, 51.33, 9.2, 365.037)))))), 1.0 * (cos(0.0))), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), 0.0 + (dot(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : 1.0)))), vec2(0.0, 0.0))))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(8.4, -6.0)) : _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), abs(1.0)), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), max(dot(vec2(cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.5)), float(0.0), bool(true)))) * cos(0.0))), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, exp(0.0) * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), vec2(0.0, 0.0)), _GLF_IDENTITY(0.0 + (dot(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : 1.0)))), vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sin(0.0))), (true ? _GLF_IDENTITY(float(vec2(0.0, sin(0.0))), float(vec4(float(vec2(0.0, sin(0.0))), 1.0, 0.0, 1.0))) : _GLF_FUZZED(620.162))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-8.8, -9.7, 16.65, -8744.2177)[3]) : 0.0 + (dot(vec2(cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : 1.0)))), vec2(0.0, 0.0))))))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), cos(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(cos(0.0), abs(1.0)), _GLF_IDENTITY(vec2(vec2(vec2(cos(0.0), abs(1.0)))), min(_GLF_IDENTITY(vec2(vec2(vec2(cos(0.0), abs(1.0)))), max(vec2(vec2(vec2(cos(0.0), abs(1.0)))), vec2(vec2(vec2(cos(0.0), abs(1.0)))))), _GLF_IDENTITY(vec2(vec2(vec2(cos(0.0), abs(1.0)))), mix(vec2((vec2(vec2(vec2(cos(0.0), abs(1.0)))))[0], (vec2(vec2(vec2(cos(0.0), abs(1.0)))))[1]), vec2(_GLF_FUZZED(3646.7899), _GLF_FUZZED(3337.4438)), bvec2(false, false)))))), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), abs(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), length(sin(vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec2(mat2(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), abs(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0, 1.0)), float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), length(sin(vec3(0.0, 0.0, 0.0))))), log(1.0), 1.0)), mix(vec2((vec2(mat2(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), abs(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), length(sin(vec3(0.0, 0.0, 0.0))))), log(1.0), 1.0)))[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED(840.182), (vec2(mat2(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), abs(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), length(sin(vec3(0.0, 0.0, 0.0))))), log(1.0), 1.0)))[1]), bvec2(false, true)))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(true ? cos(0.0) : _GLF_FUZZED(-14.21), (true ? cos(0.0) : _GLF_FUZZED(-14.21)) - log(1.0)))), abs(1.0)), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(true ? cos(0.0) : _GLF_FUZZED(-14.21), (true ? cos(0.0) : _GLF_FUZZED(-14.21)) - log(1.0)))), abs(1.0)), vec2(0.0, 0.0))), (false ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(true ? cos(0.0) : _GLF_FUZZED(-14.21), (true ? cos(0.0) : _GLF_FUZZED(-14.21)) - log(1.0)))), abs(1.0)), vec2(0.0, 0.0))))), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(true ? cos(0.0) : _GLF_FUZZED(-14.21), (true ? cos(0.0) : _GLF_FUZZED(-14.21)) - log(1.0)))), abs(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(true ? cos(0.0) : _GLF_FUZZED(-14.21), (true ? cos(0.0) : _GLF_FUZZED(-14.21)) - log(1.0)))), abs(1.0)), vec2(0.0, 0.0))))), 1.0, length(sin(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-655.117))), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-655.117))), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.0)), bool(false)))), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-8767.6873, clamp(-8767.6873, -8767.6873, -8767.6873)))), bool(false))), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(-356.877)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(986.913)), float(abs(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(abs(0.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(735.580)), float(0.0), bool(true)))) * 1.0), 1.0, abs(0.0), 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), vec4(round(length(_GLF_IDENTITY(normalize(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(sqrt(_GLF_IDENTITY(-99.71, (false ? _GLF_FUZZED(-5.5) : -99.71)))), (_GLF_FUZZED(sqrt(_GLF_IDENTITY(-99.71, (false ? _GLF_FUZZED(-5.5) : -99.71))))) - 0.0) : normalize(1.0))))), 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), vec4(round(length(normalize(1.0))), 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))), abs(1.0)), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, abs(1.0))), (vec2(mat2(injectionSwitch, 0.0, abs(1.0)))) - vec2(0.0, 0.0))), cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))), (abs(1.0)) + 0.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(cos(0.0), 0.0 + (cos(0.0))), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(cos(0.0), abs(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(cos(0.0), abs(1.0)))), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), transpose(transpose(transpose(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))), max(float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), transpose(transpose(transpose(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))), float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), transpose(transpose(transpose(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, determinant(mat2(1.0, abs(0.0), 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))))), (false ? _GLF_FUZZED(sign(9927.8295)) : 0.0)), 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-754.028)), bool(false)))), abs(1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), min(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))))), 1.0, length(sin(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(867.410)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))))))))))))).x)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1730.9892) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat4x2(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), cos(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + abs(vec2(0.0, 0.0))), cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(1.1)), vec2(_GLF_FUZZED(1352.4366), _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) + 0.0)), bvec2(false, true)))), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(cos(0.0), 1.0 * (cos(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0, 0.0, 0.0)))))), abs(1.0)), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(cos(0.0), abs(1.0)), clamp(vec2(cos(0.0), abs(1.0)), _GLF_IDENTITY(vec2(cos(0.0), abs(1.0)), max(vec2(cos(0.0), abs(1.0)), vec2(cos(0.0), abs(1.0)))), vec2(cos(0.0), abs(1.0)))), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(cos(0.0), float(mat4(cos(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(70.75, -8.7, -9664.0806).s)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1435.2407)), bool(false))), 1.0)), 1.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), 0.0 + (dot(_GLF_IDENTITY(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(min(99.62, -189.797)))))))), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(min(99.62, -189.797)), (true ? _GLF_IDENTITY(_GLF_FUZZED(min(99.62, -189.797)), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)) : _GLF_FUZZED((736.727 - 8.2)))), float(mat4x2(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(min(99.62, -189.797), max(min(99.62, -189.797), _GLF_IDENTITY(min(99.62, -189.797), (min(99.62, -189.797)) * 1.0)))), (true ? _GLF_IDENTITY(_GLF_FUZZED(min(99.62, -189.797)), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)) : _GLF_FUZZED((736.727 - 8.2)))), 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0))))))))), (vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(min(99.62, -189.797))))))))) / vec2(1.0, 1.0)), length(vec2(0.0, 0.0)), length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, abs(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, abs(0.0)))), 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, round(length(normalize(1.0))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x3(_GLF_IDENTITY(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(min(99.62, -189.797)), (true ? _GLF_IDENTITY(_GLF_FUZZED(min(99.62, -189.797)), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)) : _GLF_FUZZED((736.727 - 8.2)))), float(mat4x2(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(min(99.62, -189.797), max(min(99.62, -189.797), _GLF_IDENTITY(min(99.62, -189.797), (min(99.62, -189.797)) * 1.0)))), (true ? _GLF_IDENTITY(_GLF_FUZZED(min(99.62, -189.797)), _GLF_IDENTITY(float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (float(mat3(_GLF_FUZZED(min(99.62, -189.797)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * 1.0)) : _GLF_FUZZED((736.727 - 8.2)))), 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0))))))))), (vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(pow(9.7, -72.12)) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(min(99.62, -189.797))))))))) / vec2(1.0, 1.0)), length(vec2(0.0, 0.0)), length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, abs(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, abs(0.0)))), 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, round(length(normalize(1.0)))))))), vec2(0.0, 0.0))))), 1.0, length(sin(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))))))), clamp(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))) + vec2(0.0, 0.0))), dot(vec2(cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))), abs(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(cos(0.0), _GLF_IDENTITY((cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(7450.6329) : float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0))) / 1.0, max((cos(0.0)) / 1.0, _GLF_IDENTITY((cos(0.0)) / 1.0, clamp((cos(0.0)) / 1.0, (cos(0.0)) / 1.0, _GLF_IDENTITY((cos(0.0)) / 1.0, ((cos(0.0)) / 1.0) / cos(0.0))))))), abs(1.0)), vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(-849.032)), float(dot(vec2(_GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), abs(1.0)), vec2(0.0, 0.0))), bool(true))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), abs(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), abs(1.0)) : _GLF_FUZZED(vec2(-1117.8377, -2720.6035)))), vec2(0.0, 0.0))), 1.0, length(sin(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-303.527) : 0.0)), 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), (mat2x3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat2x4(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), (mat2x3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(32.15)), bool(false))))) * (abs(1.0)))), vec2(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), log(1.0), 1.0))))), 0.0))), 1.0, length(_GLF_IDENTITY(_GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(7.4, -312.736, -902.232)) : _GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), vec3(1.0, 1.0, 1.0) * (sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0)), 0.0, 0.0)))))), max(_GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(7.4, -312.736, -902.232)) : _GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), vec3(1.0, 1.0, 1.0) * (sin(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0)), mix(float(_GLF_FUZZED(-5206.8990)), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0))), bool(true))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0)))), 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(7.4, -312.736, -902.232)) : _GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), vec3(1.0, 1.0, 1.0) * (sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0)), 0.0, 0.0)))))), min(_GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(7.4, -312.736, -902.232)) : _GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), vec3(1.0, 1.0, 1.0) * (sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(1.0, 0.0))), 0.0), (mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(1.0, 0.0))), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0)), 0.0, 0.0)))))), _GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(7.4, -312.736, -902.232)) : _GLF_IDENTITY(sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0, 0.0)), vec3(1.0, 1.0, 1.0) * (sin(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - determinant(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 0.0)), 0.0, 0.0))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), _GLF_IDENTITY(abs(1.0), float(mat4x2(abs(1.0), 1.0, log(1.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), exp(tan(0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)))), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(_GLF_IDENTITY(sin(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * (sin(vec3(0.0, 0.0, 0.0))), (mat3(1.0) * (sin(vec3(0.0, 0.0, 0.0)))) - vec3(0.0, 0.0, 0.0)))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), min(float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-81.02)), bool(false))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-8.1, -83.92)))), cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(cos(0.0), mix(_GLF_IDENTITY(float(cos(0.0)), min(float(cos(0.0)), float(cos(0.0)))), float(_GLF_FUZZED(-8767.6873)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(78.96)), bool(false))), 0.0, 0.0)), 1.0, 1.0), vec4(round(length(normalize(1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), vec4(round(length(normalize(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0)))), abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), vec2(0.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(78.96)), bool(false))), 0.0, 0.0)), 1.0, 1.0), vec4(round(length(normalize(1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), vec4(round(length(normalize(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0)))), abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), vec2(0.0, 0.0)))), float(_GLF_FUZZED(124.291)), bool(false))), 1.0, _GLF_IDENTITY(length(sin(vec3(0.0, 0.0, 0.0))), min(_GLF_IDENTITY(length(sin(vec3(0.0, 0.0, 0.0))), (true ? length(sin(vec3(0.0, 0.0, 0.0))) : _GLF_FUZZED(929.920))), length(_GLF_IDENTITY(sin(vec3(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec3(-721.359, 3.4, 2.8)) : sin(vec3(0.0, 0.0, 0.0))))))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, sqrt(1.0)))))), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), _GLF_IDENTITY(abs(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? abs(1.0) : _GLF_FUZZED(47.04)))), vec2(0.0, 0.0)), dot(vec2(cos(0.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) + 0.0)), vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(788.716) : 0.0))) - sin(0.0))))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))), vec2(0.0, 0.0))), 1.0, length(sin(vec3(0.0, 0.0, 0.0))))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-842.245)), float(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), clamp(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.5)), float(0.0), bool(true))))))), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), mix(float(dot(vec2(cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), abs(1.0)), vec2(0.0, 0.0))), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, (false) || false))))))), 1.0, length(sin(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), min(vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(cos(0.0), abs(1.0)), clamp(_GLF_IDENTITY(vec2(cos(0.0), abs(1.0)), mix(vec2((vec2(cos(0.0), abs(1.0)))[0], _GLF_FUZZED(-0.9)), vec2(_GLF_FUZZED((_GLF_IDENTITY(-51.59 - 7.8, _GLF_IDENTITY(mix(float(_GLF_FUZZED(552.480)), float(_GLF_IDENTITY(-51.59 - 7.8, (_GLF_IDENTITY(-51.59 - 7.8, (-51.59 - 7.8) - 0.0)) / 1.0)), bool(true)), (true ? mix(float(_GLF_FUZZED(552.480)), float(_GLF_IDENTITY(-51.59 - 7.8, (_GLF_IDENTITY(-51.59 - 7.8, (-51.59 - 7.8) - 0.0)) / 1.0)), bool(true)) : _GLF_FUZZED(-4374.6803)))))), (vec2(cos(0.0), _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(float(abs(1.0)), clamp(float(abs(1.0)), float(abs(1.0)), float(abs(1.0))))), min(float(_GLF_IDENTITY(float(abs(1.0)), clamp(float(abs(1.0)), float(abs(1.0)), float(abs(1.0))))), float(_GLF_IDENTITY(float(abs(1.0)), clamp(float(abs(1.0)), float(abs(1.0)), float(abs(1.0))))))))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), vec2(cos(0.0), abs(1.0)), vec2(cos(0.0), abs(1.0)))), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) + length(abs(vec3(0.0, 0.0, 0.0)))), length(sin(vec3(0.0, 0.0, 0.0))))), vec2(mat2x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(dot(vec2(cos(0.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(cos(0.0), abs(1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(0.0, 0.0))))), 1.0, length(sin(vec3(0.0, 0.0, 0.0)))))))))).x)))) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant(mat2(694.334, -6.6, -8.6, -55.07))) : injectionSwitch.x)), float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) || false)), true && (! (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (false || _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), bool(bvec2(! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), true)))))))) || false))))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true))))))))))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), true, false, false))) && true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false), false))))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), true, false, false)), (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), true, false, false))) && true)), true, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))))), true && (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-75.10)), _GLF_IDENTITY(float(injectionSwitch.y), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), (float(injectionSwitch.y)) / 1.0) : _GLF_FUZZED(-742.094))), bool(true))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-75.10)), _GLF_IDENTITY(float(injectionSwitch.y), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), (float(injectionSwitch.y)) / 1.0) : _GLF_FUZZED(-742.094))), bool(true))), false))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))))))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))))))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((false), bool(bvec4((false), false, false, true)))) && true))), ! (! ((false)))))), false || (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec4((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, log(1.0)))) * (injectionSwitch.y)))) || (false))), false, false, true)))))))))))))), false || ((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || (false))), false, false, true)))))))))))))))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-75.10)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), (float(injectionSwitch.y)) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(-742.094), _GLF_IDENTITY(clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094)), clamp(_GLF_IDENTITY(clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094)), (clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094))) - 0.0), clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094)), clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094)))))), float(mat4x2(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), (float(injectionSwitch.y)) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(-742.094), clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094)))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), (float(injectionSwitch.y)) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(-742.094), clamp(_GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094), _GLF_FUZZED(-742.094))))) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(abs(0.0)), sqrt(0.0), 0.0, 1.0, 1.0)))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-4065.7364, 3.8, -0.6).b)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1635.9844)), vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]), bvec2(false, true))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true && (injectionSwitch.x > injectionSwitch.y)), true, false)), false)))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false, false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (0u & 93835u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id, (false ? _GLF_FUZZED((187867u ^ write_val)) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), 0u | (workgroup_size)) * workgroup_id))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base))) - 0u) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), min(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u)))), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), min(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), min(min(subgroup_id * subgroup_size, subgroup_id * subgroup_size), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, min(0u, 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), (false ? _GLF_FUZZED((-690.459 + -7978.6605)) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), min(mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)), (true ? mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)) : _GLF_FUZZED(-742.275)))))))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.59)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))) - 0.0)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.59)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))) - 0.0)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.59)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))) - 0.0)))), true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.59)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))) - 0.0)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(12.59)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(true)))))) - 0.0)))), true, true, false))), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mat2(1.0) * (vec2(0.0, 0.0) + (injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(5), int(5)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) - 0)), int(5))) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), (0 >> _GLF_IDENTITY(int(2), int(2))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5))))))) + (4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(subgroupAllEqual(read_val))), (true ? ~ (uint(subgroupAllEqual(read_val))) : _GLF_FUZZED(num_workgroup))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(subgroupAllEqual(read_val))), 0u ^ (~ (uint(subgroupAllEqual(read_val))))), (true ? ~ (uint(subgroupAllEqual(read_val))) : _GLF_FUZZED(num_workgroup)))))))) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
