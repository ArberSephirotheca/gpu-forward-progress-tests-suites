#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat4x3 _f0;
 uint num_workgroup;
 ivec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_14 {
 bool _f0;
 uint _f1;
 uint virtual_gid;
 mat2x3 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_11 {
 mat2x4 _f0;
 mat4x2 _f1;
 mat4 _f2;
 uvec4 _f3;
 bvec2 _f4;
 mat3x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 bool _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 ivec4 _f1;
 bvec2 _f2;
 _GLF_struct_10 _f3;
 bvec4 _f4;
 _GLF_struct_11 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 ivec2 _f1;
 int _f2;
 bvec2 _f3;
 ivec2 _f4;
 vec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_4 {
 uint _f0;
 vec4 _f1;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_3 {
 uint workgroup_base;
 mat2x3 _f0;
} ;

struct _GLF_struct_13 {
 vec4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_12 _f3;
 uvec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat2x3 _f1;
 mat2 _f2;
 ivec4 _f3;
 bvec3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat2x3 _f1;
 bool _f2;
 bool _f3;
 _GLF_struct_0 _f4;
 mat2x3 _f5;
 uint workgroup_size;
} ;

struct _GLF_struct_2 {
 int _f0;
 float _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false))) && true)))), true))))))))) && _GLF_IDENTITY(true, (true) || false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), false, false, true)), bool(bvec4(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), false, false, true)), true, true, false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), false, false, true)), bool(bvec4(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), bool(bool(false)))))), false))) && true)))), true))))))), false, false, true)), true, true, false)))), false))))))) && _GLF_IDENTITY(true, (true) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), ! (! (! (! (false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), ((_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), bool(bvec4(! (! (! (! (false)))), true, false, true)))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))), ! (! (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || ((false))))))) || false), ! (! (! (! (false)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3((! (_GLF_IDENTITY(false, true && (false)))), false, true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), bool(bvec4(! (! (! (! (false)))), true, false, true))))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0), mix(vec2((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(1.7)), bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (true ? (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), (vec4(0.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))) * mat4(1.0))))) : _GLF_FUZZED(vec2(4.5, -584.411))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))), (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-93.34)), vec2(_GLF_FUZZED(-9.1), (vec2(0.0, 0.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))) && true), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y, injectionSwitch.y))))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y, injectionSwitch.y))))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), max(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))) / 1.0), 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), ! (! (! (! (bool(bool(false))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))), bool(bvec4(! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))))), _GLF_IDENTITY(min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0))), float(mat4x2(min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))))), _GLF_IDENTITY(min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0))), float(mat4x2(min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sign(895.761))))))) / 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))))), _GLF_IDENTITY(min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0))), float(mat4x2(min(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sqrt(dot(injectionSwitch, vec2(88.44, 3.5)))) : 1.0)) * (1.0)), 1.0, 1.0)), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.3, float(mat3x2(-1.3, 0.0, 1.0, 1.0, 0.0, 1.0))))), bool(false))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ((! (_GLF_IDENTITY(false, true && (false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(8.9))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), _GLF_FUZZED(float(37853u))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(884.124)), bool(false)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(34.30, -54.57)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))) || false))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat4x3(1.0), gl_NumWorkGroups.x, ivec2(1), mat4x2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (true ? vec2(injectionSwitch.x, 0.0) : _GLF_FUZZED(vec2(-6.2, -4.4)))))), injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec4(! (bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true, true, false))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))), false, true), true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(1, 1.0, _GLF_struct_1(mat4x2(1.0), mat2x3(1.0), true, true, _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(1u, (1u) | 0u))), (uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(1u, (1u) | 0u)))) | (uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) + (uvec3(_GLF_IDENTITY(1u, (1u) | 0u)))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u)))), (uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), uint(3u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), uint(3u)))) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))) | 0u, (_GLF_IDENTITY((1u) | 0u, ((1u) | 0u) | 0u)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))))))), 1u), (uvec4(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) | 0u, (0u ^ 0u) ^ (_GLF_IDENTITY((1u) | 0u, min(_GLF_IDENTITY((1u), ((1u)) ^ 0u) | 0u, (1u) | 0u)))), (_GLF_IDENTITY((1u) | 0u, ((1u) | 0u) | 0u)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))))), 1u)) / uvec4(1u, 1u, 1u, 1u)))), mat2x3(1.0), mat2(1.0), ivec4(1), bvec3(true), bvec2(true)), mat2x3(1.0), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(vec4(1.0), _GLF_struct_3(_GLF_struct_replacement_2._f2.workgroup_size * workgroup_id, mat2x3(1.0)), _GLF_struct_8(uvec2(1u), _GLF_struct_4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(max(1u, 1u), 0u + (max(1u, 1u))), min(_GLF_IDENTITY(max(1u, 1u), 0u + (max(1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(max(1u, 1u), 0u + (max(1u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(max(1u, 1u), 0u + (max(1u, 1u))), (_GLF_IDENTITY(max(1u, 1u), 0u + (max(1u, 1u)))) - 0u), _GLF_IDENTITY(max(1u, 1u), 0u + (max(1u, 1u))))))))))) | (_GLF_IDENTITY(1u, (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), max(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u)))))) >> 0u)) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(subgroup_size)), uint(_GLF_IDENTITY(uint((true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u & 1u) * (_GLF_IDENTITY(1u, min(1u, 1u)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (~ (_GLF_FUZZED(subgroup_size)))))), 0u ^ (uint((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(subgroup_size)))))))))))), _GLF_IDENTITY(vec4(1.0), vec4(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_struct_5(mat2(1.0), _GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? 0 : _GLF_FUZZED(min(-8941, 79041))))) | (0)), _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) - 0), bvec2(true), ivec2(1), vec4(1.0), mat3(1.0)), _GLF_struct_6(uvec3(1u), mat3x4(1.0), _GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), ivec4(1), ivec4(1))), mat3x4(1.0)), _GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), min(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))), (_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), min(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))) - vec2(0.0, 0.0)), mat2(1.0) * (vec2(1.0))), mat3x4(1.0))), _GLF_struct_12(_GLF_struct_9(mat4x2(1.0), true), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(~ (~ (ivec4(1))), (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(20420, 90730, 76510, -52079), min(ivec4(20420, 90730, 76510, -52079), ivec4(20420, 90730, 76510, -52079))) % bitCount(ivec4(-17413, -3769, 50133, 80332))), ((_GLF_IDENTITY(ivec4(20420, 90730, 76510, -52079), min(ivec4(20420, 90730, 76510, -52079), ivec4(20420, 90730, 76510, -52079))) % bitCount(ivec4(-17413, -3769, 50133, 80332)))) ^ ivec4(0, 0, 0, 0))) : ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0))), ivec4(0, 0, 0, 0) ^ (~ (ivec4(1)))))))), (_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), (_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, false))) || (true))))), ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, bool(_GLF_IDENTITY(bvec2((! (true)) && true, false), bvec2(bvec4(bvec2((! (true)) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false, true))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((! (true)) && true, bool(bvec4((! (true)) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), (! (true)) && true))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))), (((_GLF_IDENTITY(! (true), (! (true)) && true)))) || false) || false), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false)))) && true), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) || false))))) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false), true, false)))), true))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (! (true)) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) || false))))) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ! (! ((! (true)) && true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))), (((_GLF_IDENTITY(! (true), (! (true)) && true)))) && true)) || false) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (! (true)) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (! (true)) && true), false, true, false))) && true))) || false)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))) && true))) || false), true, false)))), true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), bool(bvec3(bool(bvec2((true), false)), false, false)))), (! _GLF_IDENTITY((true), bool(bool((true))))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (true)) && true))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, false || (true))))) || false), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, false || (true))))) || false), true, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, false || (true))))) || false), true, false)), true)))))))), true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false)))), false))))), false, false)))), (! _GLF_IDENTITY((true), bool(bool((true))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ((true)) || false)) && true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), bool(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (true)) && true))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false)))) && true))) || false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, false))) && true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (true))))) || false), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))))) && true), (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) && true)) && true)), ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, false || (true))))) || false), true, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false))))))))) && true), (! (true)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false))))))))) && true), (! (true)) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false))))))))) && true), (! (true)) && true)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))))) || false), true, false)), true)))))))), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ((true)) || false)) && true), (_GLF_IDENTITY(! (true), (! (true)) && true)) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), bool(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (true)) && true))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false)))) && true))) || false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, false))) && true), (! (true)) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (true))))) || false), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))))) && true), (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) && true)) && true)), ((_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_IDENTITY(true, false || (true))))) || false), true, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false))))))))) && true), (! (true)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false))))))))) && true), (! (true)) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), false, false))))))))) && true), (! (true)) && true)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ((_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true))))) || false), true, false)), true)))))))), true)))), true, true, false))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(! (! (_GLF_IDENTITY((true), ! (! ((true)))))), true && (! (! (_GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), (_GLF_IDENTITY((! ((true))), true && ((! ((true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (! (true)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! (! (_GLF_IDENTITY(! (true), (! (true)) && true))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), _GLF_IDENTITY(false, true && (false)), false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), _GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ! (! ((bool(bvec4(! (true), false, false, true))))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true)))), (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))))) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, (((_GLF_IDENTITY(! (true), (! (true)) && true))) || false) || false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(! (true), (! (true)) && true))) || _GLF_IDENTITY(false, ! (! (false)))), true, false)))), true))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(! (! (_GLF_IDENTITY((true), ! (! ((true)))))), true && (! (! (_GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(true, ! (! (true)))))), true && ((! ((true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (true)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), (! (true)) && true))), ! (! ((! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), _GLF_IDENTITY(false, true && (false)), false, true)), (bool(bvec4(! (true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ((bool(bvec4(! (true), false, false, true)))) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ((bool(bvec4(! (true), false, false, true)))) || false)))), bool(bvec4(bool(bool(! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ((bool(bvec4(! (true), false, false, true)))) || false)))), true, true, true)))))), (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ! (! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec4(! (true), false, false, true)))))) && true))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true), true))))))))), (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))))) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, bool(bvec3(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, false, false))), true, _GLF_IDENTITY(true, ! (! (true))))))) || false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || false))))))) || false)))))), ((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true))) || _GLF_IDENTITY(false, ! (! (false)))), true, false)))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), (! (true)) && true))), ! (! ((! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), _GLF_IDENTITY(false, true && (false)), false, true)), (bool(bvec4(! (true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ((bool(bvec4(! (true), false, false, true)))) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ((bool(bvec4(! (true), false, false, true)))) || false)))), bool(bvec4(bool(bool(! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ((bool(bvec4(! (true), false, false, true)))) || false)))), true, true, true)))))), (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), ! (! (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), (_GLF_IDENTITY((bool(bvec4(! (true), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec4(! (true), false, false, true)))))) && true))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true), true))))))))), (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), false, false, true)), (bool(bvec4(! (true), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true)) && true))))) && true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false))) || false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, bool(bvec3(((_GLF_IDENTITY(! (true), (! (true)) && true))) || false, false, false))), true, _GLF_IDENTITY(true, ! (! (true))))))) || false)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || false))))))) || false)))))), ((_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (! ((! (true))))) && true))) || _GLF_IDENTITY(false, ! (! (false)))), true, false)))), true))))) || false))))))))))) && true, _GLF_IDENTITY(false || ((_GLF_IDENTITY(! (true), (! (true)) && true)) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), ! (! (false || ((_GLF_IDENTITY(! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ((true)) || false), false)))) || false), _GLF_IDENTITY((! (true)) && true, ((! (true)) && true) || false))) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))))))))), _GLF_struct_10(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), (0u ^ 0u))))), uvec3(0u, 0u, 0u) | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), (0u ^ 0u)))), (false ? _GLF_FUZZED(uvec3(73087u, 175046u, 197438u)) : _GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), (0u ^ 0u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), (0u ^ 0u)))), (false ? _GLF_FUZZED(uvec3(73087u, 175046u, 197438u)) : _GLF_IDENTITY(uvec3(1u), uvec3(uvec4(uvec3(1u), (0u ^ 0u)))))))) | uvec3(0u, 0u, 0u))))))), bvec4(true), _GLF_struct_11(mat2x4(1.0), mat4x2(1.0), mat4(1.0), uvec4(1u), bvec2(true), mat3x2(1.0), mat2(1.0)), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(0u ^ 0u, (_GLF_IDENTITY(0u ^ 0u, (false ? _GLF_FUZZED(max(71655u, subgroup_size)) : _GLF_IDENTITY(0u ^ 0u, clamp(0u ^ 0u, 0u ^ 0u, 0u ^ 0u))))) - 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) | (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))))), (1u) / 1u))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u))))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u)))))) | 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), (1u) / 1u))))))))), 1u), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u))))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u)))))) | 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), (1u) / 1u))))))))), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u))))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u)))))) | 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), (1u) / 1u))))))))), 1u))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u))))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u)))))) | 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), (1u) / 1u))))))))), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u))))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u)))))) | 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), (1u) / 1u))))))))), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (1u))), min((_GLF_IDENTITY(1u, 0u | (1u))), (_GLF_IDENTITY(1u, 0u | (1u))))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u)))))) | 0u), (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 1u)), 1u)), (1u) / 1u))))))))), 1u)) - uvec4(0u, 0u, 0u, 0u))))), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u))))))), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u)))))))) | (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(_GLF_IDENTITY(1u, (0u ^ 0u) ^ (_GLF_IDENTITY(1u, (1u) / 1u))))))))), 1u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u))))), vec2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED((float(80082) + -10.07)), clamp(_GLF_FUZZED((float(80082) + -10.07)), _GLF_FUZZED((float(80082) + -10.07)), _GLF_IDENTITY(_GLF_FUZZED((float(80082) + -10.07)), clamp(_GLF_IDENTITY(_GLF_FUZZED((float(80082) + -10.07)), min(_GLF_FUZZED((float(80082) + -10.07)), _GLF_FUZZED((float(80082) + -10.07)))), _GLF_FUZZED((float(80082) + -10.07)), _GLF_FUZZED((float(80082) + -10.07)))))) : injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), true))))), 1u, _GLF_struct_replacement_13._f1.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat2x3(1.0), 1u, mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)))), (float(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))) / 1.0)))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(20.50))), 1.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)))), (float(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))) / 1.0))))) / 1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (0 & -19379)) : _GLF_FUZZED(84547)))])))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 atomicStore(write_val, uint(_GLF_struct_replacement_14.virtual_gid), 4, 64, _GLF_IDENTITY(0, 1 * (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3285.2102)), float(injectionSwitch.y), bool(true))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3285.2102)), float(injectionSwitch.y), bool(true))))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.3))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.2)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-18.58)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, sqrt(0.0)), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, sqrt(0.0)))))), vec2(_GLF_IDENTITY(mat4x2(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, sqrt(0.0)), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, sqrt(0.0)))))), 0.0, cos(0.0), 1.0, 0.0, 1.0, sqrt(0.0)), mat4x2(mat4x2(mat4x2(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, sqrt(0.0)), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, sqrt(0.0)))))), 0.0, cos(0.0), 1.0, 0.0, 1.0, sqrt(0.0)))))))).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, bool(bool(true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))), true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(894.966), _GLF_FUZZED(9.9)), bvec2(false, false))).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) - vec2(0.0, 0.0)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, cos(0.0), 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? -3.0 : (+ -34.70)))), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(true ? -3.0 : (+ -34.70), clamp(_GLF_IDENTITY(true ? -3.0 : (+ -34.70), sqrt(1.0) * (true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), (false ? _GLF_FUZZED(-7.9) : true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), mix(float(true ? -3.0 : (+ -34.70)), float(_GLF_FUZZED(5.4)), bool(false)))))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(true ? -3.0 : (+ -34.70), clamp(_GLF_IDENTITY(true ? -3.0 : (+ -34.70), sqrt(1.0) * (true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), (false ? _GLF_FUZZED(-7.9) : true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), mix(float(true ? -3.0 : (+ -34.70)), float(_GLF_FUZZED(5.4)), bool(false)))))))), (false ? _GLF_FUZZED(-7.2) : float(_GLF_FUZZED((_GLF_IDENTITY(true ? -3.0 : (+ -34.70), clamp(_GLF_IDENTITY(true ? -3.0 : (+ -34.70), sqrt(1.0) * (true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), (false ? _GLF_FUZZED(-7.9) : true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), mix(float(true ? -3.0 : (+ -34.70)), float(_GLF_FUZZED(5.4)), bool(false)))))))))), float(_GLF_FUZZED((_GLF_IDENTITY(true ? -3.0 : (+ -34.70), clamp(_GLF_IDENTITY(true ? -3.0 : (+ -34.70), sqrt(1.0) * (true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), (false ? _GLF_FUZZED(-7.9) : true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), mix(float(true ? -3.0 : (+ -34.70)), float(_GLF_FUZZED(5.4)), bool(false)))))))), float(_GLF_FUZZED((_GLF_IDENTITY(true ? -3.0 : (+ -34.70), clamp(_GLF_IDENTITY(true ? -3.0 : (+ -34.70), sqrt(1.0) * (true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), (false ? _GLF_FUZZED(-7.9) : true ? -3.0 : (+ -34.70))), _GLF_IDENTITY(true ? -3.0 : (+ -34.70), mix(float(true ? -3.0 : (+ -34.70)), float(_GLF_FUZZED(5.4)), bool(false)))))))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) * mat3(1.0)))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), max(vec4(injectionSwitch, 1.0, 1.0), vec4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 buf[_GLF_struct_replacement_14.virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
