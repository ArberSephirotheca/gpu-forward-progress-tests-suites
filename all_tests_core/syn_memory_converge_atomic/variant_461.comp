#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-5303.2818, 873.067)) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))), true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec2(true && (injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false)), false)))))) && true))))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-35.07)))))))))) || false), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-5.3, -9.1)))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ((_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) || false)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) * 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-869.360))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? gl_WorkGroupSize[1] : _GLF_FUZZED(subgroup_id))), gl_WorkGroupSize[2])).x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bvec2(bvec3(bvec2(false, false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), true))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(tan(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.0) : 0.0)))) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.5, -6.2))))), (_GLF_IDENTITY(tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.5, -6.2))))), mat2(1.0) * (tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.5, -6.2)))))))) * vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.2), (injectionSwitch)[_GLF_IDENTITY(1, (1) / 1)]), (vec2(_GLF_FUZZED(2.2), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-1.2)), float((injectionSwitch)[1]), bool(true))))) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), max(injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(2.2), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(2.2), (true ? _GLF_FUZZED(2.2) : _GLF_FUZZED(-8892.2516))))), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(2.2), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(4657.9273)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(57.36, max(57.36, 57.36))))), injectionSwitch.x)) : _GLF_FUZZED(35.96))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(500.548)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), false))), false)))), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, abs(0.0) + (_GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-6.3, -4.1)))).y)))))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, tan(0.0), 0.0, 1.0, 1.0, 1.0), (mat3x2(injectionSwitch.x, tan(0.0), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), true, false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_FUZZED(vec2(745.178, -874.799)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(1.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_FUZZED(vec2(745.178, -874.799)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(1.0)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true, true, true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), (0u) - (109519u & 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(write_val, 0u | (write_val)) - subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(write_val, 0u | (write_val)) - subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY(write_val, 0u | (write_val)) - subgroup_size))) | (_GLF_IDENTITY(write_val, 0u | (write_val)) - subgroup_size)))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))))), uint(uvec2(virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec4(uint(3u), 1u, 1u, 0u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | 0u, ((0u) | 0u) | ((0u) | 0u))))))))), (false ? _GLF_FUZZED(uint(false)) : uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), _GLF_IDENTITY((0u) - (109519u & 0u), (_GLF_IDENTITY((0u) - (109519u & 0u), max((0u) - (109519u & 0u), (0u) - (109519u & 0u)))) | (_GLF_IDENTITY((0u) - (109519u & 0u), (true ? (0u) - (109519u & 0u) : _GLF_FUZZED(workgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(write_val, 0u | _GLF_IDENTITY((write_val), 0u ^ (_GLF_IDENTITY((write_val), ((write_val)) - 0u)))) - subgroup_size, (_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) | (_GLF_IDENTITY(0u | (write_val), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup ++)) : 0u)), 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) ^ 0u), write_val))))), ((_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) ^ 0u), write_val)))))) / 1u)) ^ 0u)))) - subgroup_size) | (_GLF_IDENTITY(write_val, 0u | (write_val)) - subgroup_size)))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))), ~ (~ (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(write_val, 0u | _GLF_IDENTITY((write_val), 0u ^ (_GLF_IDENTITY((write_val), ((write_val)) - 0u)))) - subgroup_size, (_GLF_IDENTITY(write_val, _GLF_IDENTITY(0u | (write_val), (0u | (write_val)) | (_GLF_IDENTITY(0u | (write_val), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED((num_workgroup ++)) : 0u)), 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) ^ 0u), write_val))))), ((_GLF_IDENTITY(write_val, max(write_val, _GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, (write_val) ^ 0u), write_val)))))) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))))), 1u)))) ^ 0u)))) - subgroup_size) | (_GLF_IDENTITY(write_val, 0u | (write_val)) - subgroup_size)))) : _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))))))), uint(uvec2(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | ((0u))) | 0u, ((0u) | _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) | ((0u) | 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | _GLF_IDENTITY(_GLF_IDENTITY(((0u) | 0u), clamp(((0u) | 0u), _GLF_IDENTITY(((0u) | 0u), (false ? _GLF_FUZZED(subgroup_size) : ((0u) | 0u))), _GLF_IDENTITY(((0u) | 0u), clamp(((0u) | 0u), _GLF_IDENTITY(((0u) | 0u), 0u ^ (((0u) | 0u))), _GLF_IDENTITY(((0u) | 0u), uint(uint(((0u) | 0u)))))))), (_GLF_IDENTITY(((0u) | 0u), (_GLF_IDENTITY(((0u) | 0u), (((0u) | 0u)) ^ 0u)) ^ 0u)) | (_GLF_IDENTITY(((0u) | 0u), (_GLF_IDENTITY(((0u) | 0u), (((0u) | 0u)) << 0u)) - (53980u & 0u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | (_GLF_IDENTITY((0u), uint(uvec2((0u), 0u))) | 0u))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u))), 1u), _GLF_IDENTITY(min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) | 0u, _GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), ((_GLF_IDENTITY((0u) | 0u, uint(uvec4((0u) | 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u, _GLF_IDENTITY(1u, (1u) << 0u))))) | ((0u) | 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | (_GLF_IDENTITY((0u) | 0u, ~ (~ ((0u) | 0u)))))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u)) | 0u, (_GLF_IDENTITY((0u), 1u * (_GLF_IDENTITY((0u), ((0u)) ^ 0u))) | 0u) | (_GLF_IDENTITY((0u) | 0u, clamp((0u) | 0u, (0u) | 0u, (0u) | 0u))))), 1u, 1u))), 1u)), (min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) | 0u, ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), 0u + (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), ~ (~ (((0u) | 0u) | ((0u) | 0u)))))))), 1u, 1u))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | (_GLF_IDENTITY((0u) | 0u, ~ (~ ((0u) | 0u)))))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (_GLF_IDENTITY((0u), _GLF_IDENTITY(1u, (1u) + 0u) * (_GLF_IDENTITY((0u), ((0u)) ^ 0u))) | 0u) | ((0u) | 0u))), 1u, 1u))), 1u))) - uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | (_GLF_IDENTITY((0u) | 0u, min((0u) | 0u, (0u) | 0u))))))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u))), 1u), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((_GLF_IDENTITY(0u, max(0u, 0u))) | 0u) | ((0u) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))) : _GLF_FUZZED(workgroup_id))), 1u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))) : _GLF_FUZZED(workgroup_id))), 1u, 1u)))))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), _GLF_IDENTITY(1u, (1u) << 0u) * (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(((0u) | _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))) | ((0u) | _GLF_IDENTITY(0u, (0u) / 1u)), max(((0u) | 0u) | ((0u) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), _GLF_IDENTITY((((0u) | 0u) | ((0u) | 0u)), (_GLF_IDENTITY((((0u) | 0u) | ((0u) | 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (((0u) | 0u) | ((0u) | 0u)) : _GLF_FUZZED(num_workgroup)))) * 1u) | (_GLF_IDENTITY(((0u) | 0u), max(_GLF_IDENTITY(((0u) | 0u), (((0u) | 0u)) | (((0u) | 0u))), ((0u) | 0u))) | ((0u) | 0u))))))), 1u, 1u))), 1u))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), (((0u) | 0u) | ((0u) | 0u)) | ((_GLF_IDENTITY((0u), ((0u)) * 1u) | 0u) | ((0u) | 0u))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u))) ^ 0u)), 1u), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u))) - _GLF_IDENTITY(0u, (0u) / 1u))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | 0u), (_GLF_IDENTITY((0u) | 0u, 0u ^ ((0u) | 0u))) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), 1u, 1u))), 1u))), uvec2(uvec4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(22248u, 85774u, 96478u, 119614u)) : uvec4(0u, 1u, 1u, 1u))))), ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (_GLF_IDENTITY((0u) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u) | 0u, clamp((0u) | 0u, (0u) | 0u, (0u) | 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u) | 0u, clamp((0u) | 0u, (0u) | 0u, (0u) | 0u))), 0u | (~ (_GLF_IDENTITY((0u) | 0u, clamp((0u) | 0u, (0u) | 0u, (0u) | 0u)))))) | (~ (_GLF_IDENTITY((0u) | 0u, clamp((0u) | 0u, (0u) | 0u, (0u) | 0u)))))))) | ((0u) | 0u))), 1u, 1u))), 1u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) | 0u, ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) << 0u)) + (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), 1u, 1u))), 1u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) | 0u, ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) << 0u)) + (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), 1u, 1u))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) | 0u, ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) << 0u)) + (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), 1u, 1u))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) | 0u, ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) << 0u)) + (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), 1u, 1u))), 1u), (false ? _GLF_FUZZED(uvec2(76333u, 127223u)) : uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), 1u * ((0u))) | 0u, ((0u) | 0u) | ((0u) | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u)))) << 0u)) + (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), 1u, 1u))), 1u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, (_GLF_IDENTITY((0u) | 0u, ((0u) | 0u) + 0u)) | ((0u) | 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(((0u) | _GLF_IDENTITY(0u, max(0u, 0u))) | ((0u) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), clamp(((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u)))) << 0u), (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), max(((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u)))) << 0u) : _GLF_FUZZED(36277u))))), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(((0u) | _GLF_IDENTITY(0u, max(0u, 0u))) | ((0u) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), clamp(((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u)))) << 0u), (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), max(((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u)))) << 0u) : _GLF_FUZZED(36277u))))), 1u, 1u), (uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, _GLF_IDENTITY(((0u) | _GLF_IDENTITY(0u, max(0u, 0u))) | ((0u) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), clamp(((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u)))) << 0u), (_GLF_IDENTITY(((0u) | 0u) | ((0u) | 0u), max(((0u) | 0u) | ((0u) | 0u), ((0u) | 0u) | ((0u) | 0u)))) << 0u) : _GLF_FUZZED(36277u))))), 1u, 1u)) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), 1u))), 1u, 0u))))))))))))))), 4, 64, _GLF_IDENTITY(0, (0) ^ 0));
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (write_val) / 1u), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(-61205))), _GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), ~ (~ (_GLF_IDENTITY(0 + (64), (0 + (64)) << 0))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
