#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 uvec3 _f0;
 mat3x2 _f1;
 vec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_4 {
 uint num_workgroup;
 _GLF_struct_3 _f0;
 uvec2 _f1;
 float _f2;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint virtual_gid;
 uint _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 bvec4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_NumWorkGroups.x, _GLF_struct_3(uvec3(1u), mat3x2(1.0), vec3(1.0), bvec3(true)), uvec2(1u), 1.0);
 GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.x = _GLF_struct_replacement_4.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(uvec4(1u), mat2x4(1.0), uvec2(1u)), workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.y * GLF_merged3_0_1_13_1_1_11_2_1_13num_workgroupsubgroup_idsubgroup_size.z + subgroup_local_id, 1u), bvec4(true));
 atomicStore(write_val, _GLF_IDENTITY(uint(_GLF_struct_replacement_2._f0.virtual_gid), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(_GLF_struct_replacement_2._f0.virtual_gid))), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 buf[_GLF_struct_replacement_2._f0.virtual_gid] = uint(subgroupAllEqual(read_val));
}
