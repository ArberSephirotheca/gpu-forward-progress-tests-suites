#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.3)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(false, false || (false))))))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true))))), (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), false, true))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(797.303) : -0.0))) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(797.303) : -0.0))) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), float(mat3x4(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(797.303) : -0.0))) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(558.579)), float(false ? _GLF_FUZZED(_GLF_IDENTITY(-0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(797.303) : -0.0))) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0)))), bool(true))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))), false ? _GLF_FUZZED(_GLF_IDENTITY(-0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(797.303) : -0.0))) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0))))))))))), true, true)))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), true)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), bool(bool((! (false))))))), ! (! (bool(bool(_GLF_IDENTITY((! (false)), bool(bool((! (false)))))))))))), ! (! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), bool(bool((! (false))))))), ! (! (bool(bool(_GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true))), true, true, true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_DEAD(false))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), false || ((! _GLF_IDENTITY((false), ((false)) || false))))), true, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-2167.1724, -0.7), injectionSwitch, vec2(-8.7, 965.918))))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y))), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (bool(bool(_GLF_DEAD(false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.57))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), ((_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, 1.0), mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(-1286.9870, 8.9, 242.998, -1.2))))), mat2(1.0) * (mat3x2(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, 1.0)))))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(false)) : 1.0)), injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), true, true, true))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bvec4((! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), false, true, false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(false || (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false))))))), ! (! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec3(false || (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), bool(bool(! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false)))))))))))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), float(_GLF_FUZZED(517.133)), bool(false))))).x)), 0.0, 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 0.0, 1.0), mat3(1.0) * (vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 0.0, 1.0))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x)), 0.0, 1.0), min(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0)))))), (true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))), _GLF_IDENTITY(min(float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))), float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), max(min(float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))), float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), min(float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))), float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))))), (injectionSwitch.x) / sqrt(1.0)))), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(158279u)), _GLF_FUZZED(7.8)), bvec2(false, false))).x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (0.0) / 1.0), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(float(-57283))), bool(false))), 0.0, 1.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)))), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0), 1.0))), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.1) : 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), min(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-18.89, mix(float(_GLF_FUZZED(-395.171)), float(-18.89), bool(true)))) : injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0))), mix(vec3(_GLF_FUZZED(vec4(5277.6196, 9621.5999, 556.886, 357.511).q), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.1) : 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), min(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-18.89, mix(float(_GLF_FUZZED(-395.171)), float(-18.89), bool(true)))) : injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0))))[1], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.1) : 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), min(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-18.89, mix(float(_GLF_FUZZED(-395.171)), float(-18.89), bool(true)))) : injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0))))[2]), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.1) : 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))), min(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-18.89, mix(float(_GLF_FUZZED(-395.171)), float(-18.89), bool(true)))) : injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0))))[0], _GLF_FUZZED((- float(false))), _GLF_FUZZED(5.2)), bvec3(true, false, false)))))), (_GLF_IDENTITY(true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), abs(0.0), sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0))), 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))))) / sqrt(1.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0))))))) * 1.0), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(mix(2891.4834, -9.1, -2521.8651)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5), clamp(true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))), _GLF_IDENTITY(transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))), (_GLF_IDENTITY(transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))), (transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))))))) - mat2(0.0, 0.0, 0.0, 0.0))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), (injectionSwitch.x) / sqrt(1.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-3.5, -889.795).y), _GLF_FUZZED(-1.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), clamp(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)))), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(_GLF_IDENTITY(mat3x2((0.0) / 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2((0.0) / 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 0.0, 1.0), (mat3x2((0.0) / 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0, 0.0, 1.0)) * mat3(1.0)))))))), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5), _GLF_IDENTITY(true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), 0.0, tan(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), (injectionSwitch.x) / sqrt(1.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), log(1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4304.9177), _GLF_FUZZED(-0.8)), bvec2(false, false))).x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, log(1.0), 1.0, 1.0, 0.0))))), injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5), min(true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED((829.913 * -9.6))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.0) : 0.0)), 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-1.5 * 9.6))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-719.534)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5), _GLF_IDENTITY(true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-343.573)), float(0.0), bool(true))), tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0))))), float(_GLF_FUZZED(-7.7)), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch))) / vec2(1.0, 1.0)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, log(1.0), 0.0, 1.0, 1.0))), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(vec3(-6032.5149, vec2(-4661.4708, -622.351)).t)), float(max(injectionSwitch.x, injectionSwitch.x)), bool(true)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), 0.0 + (min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 1.0)))) : _GLF_FUZZED(-4.5), mix(float(true ? float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(15420))), vec2(_GLF_FUZZED(3.7), (injectionSwitch)[1]), bvec2(false, true))).x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 1.0))), (0.0) / 1.0), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5)), float(_GLF_FUZZED(-7.4)), bool(false))))), true ? float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-49.29)), float(0.0), bool(true))))))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(75.03) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), transpose(transpose(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))))) : _GLF_FUZZED(mat2(-3693.8337, 774.104, -210.279, 695.973)))))))))))), (injectionSwitch.x) / sqrt(1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), clamp(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-49.29)), float(0.0), bool(true))))))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(75.03) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), transpose(transpose(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))))) : _GLF_FUZZED(mat2(-3693.8337, 774.104, -210.279, 695.973)))))))))))), (injectionSwitch.x) / sqrt(1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-49.29)), float(0.0), bool(true))))))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(75.03) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), transpose(transpose(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))))) : _GLF_FUZZED(mat2(-3693.8337, 774.104, -210.279, 695.973)))))))))))), (injectionSwitch.x) / sqrt(1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-49.29)), float(0.0), bool(true))))))), (injectionSwitch.x) / sqrt(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(75.03) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))))))))), (injectionSwitch.x) / sqrt(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))))), transpose(transpose(mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0))))), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))), transpose(transpose(mat2(mat4x3(mat2(injectionSwitch.x, 0.0, 0.0, tan(0.0)))))))) : _GLF_FUZZED(mat2(-3693.8337, 774.104, -210.279, 695.973)))))))))))), (injectionSwitch.x) / sqrt(1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, 0.0, 0.0, tan(0.0)))), (injectionSwitch.x) / sqrt(1.0)))))), 0.0, 1.0))), min(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), 0.0, 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0)))) : _GLF_FUZZED(-4.5)))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(false, false), true, false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))) && true)) || false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), true, true)))) || false))), true)))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true)))))), true, true))), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) && true)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) && true)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(bool(_GLF_IDENTITY(false, (false) && true)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)))), 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), tan(0.0), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(66.11)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)) > injectionSwitch.y)), true && (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false))))) ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false))))) ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), ((~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) * 1u)), clamp(virtual_gid, virtual_gid, virtual_gid))), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-39.29)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) << (0u | 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
