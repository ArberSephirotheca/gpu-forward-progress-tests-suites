#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), bool(bool((false) && _GLF_IDENTITY(true, true && (true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u)), max(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u)), _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u))))), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(write_val), (_GLF_FUZZED(write_val)) << 0u) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u))), 1u * (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) / 1u))))), false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), min((~ (0u)), (~ (0u)))), ((~ (0u))) / 1u))))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, ! (! (false))))), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(true, false, false, true))), ! (! (! (bool(bvec4(true, false, false, true))))))))), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(828.021), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-90.83)), bvec2(true, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) || false), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)))), bool(bool((! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true))))))))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), true && (bool(injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)))))), true)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) < _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), false || (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))))))))), true)))))), true)))))))))), true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.5)), bool(false))) : _GLF_FUZZED(7.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6731.9179)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(49.64) : injectionSwitch.x)) > injectionSwitch.y), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y)) || false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sin(0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))) | (workgroup_id));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, clamp(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id)).z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true)))))))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))) || false))))))) || _GLF_IDENTITY(false, ! (! (false))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, ~ (~ (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id))).x * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), 0u | (~ ((subgroup_local_id))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, 0 + (0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))))))), _GLF_IDENTITY(0, ~ (~ (0)))))))) - 0));
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) ? _GLF_FUZZED(-8599) : _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (4) : _GLF_FUZZED(-25908))))))))), 64, 0);
 buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val)))), (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val)))), (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val))))) ^ 0u)) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
