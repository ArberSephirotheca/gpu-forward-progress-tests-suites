#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 mat4 _f0;
} ;

struct _GLF_struct_18 {
 bool _f0;
 uint _f1;
 uvec2 _f2;
 uvec4 _f3;
 ivec2 _f4;
 bool _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 mat2x4 _f1;
 mat2 _f2;
 mat3x2 _f3;
 mat4x3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 _GLF_struct_17 _f1;
 vec3 _f2;
 mat4 _f3;
 mat2x3 _f4;
 uvec2 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 uvec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_14 {
 float _f0;
 mat4x3 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 vec2 _f1;
 uvec4 _f2;
 mat3x4 _f3;
 bvec4 _f4;
 uint subgroup_local_id;
 ivec2 _f5;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 ivec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 bvec4 _f3;
 uint _f4;
 ivec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_13 {
 uint _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 ivec2 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_13 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_19 _f2;
 mat3x4 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 float _f1;
 mat2 _f2;
 bool _f3;
 mat3 _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
} ;

struct _GLF_struct_4 {
 uint _f0;
 uvec2 _f1;
 uvec3 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_3 {
 bool _f0;
 mat2x4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 mat3x4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 vec4 _f1;
 mat3x2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 int _f1;
 _GLF_struct_0 _f2;
 float _f3;
 _GLF_struct_1 _f4;
 bvec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 uint workgroup_size;
 ivec4 _f1;
 mat4x3 _f2;
 _GLF_struct_2 _f3;
 float _f4;
 int _f5;
 _GLF_struct_7 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_13(1u, _GLF_struct_9(bvec4(true), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(7.4), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED((-8428.0436 - -8458.8921))), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true))))))))), max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), 1.0))), uvec2(1u), bvec4(_GLF_IDENTITY(true, true && (true))), 1u, ivec4(1), vec2(1.0)), _GLF_struct_10(bvec3(true), ivec3(1), mat4x3(1.0)), ivec2(1), _GLF_struct_11(uvec3(1u), uvec3(1u)), _GLF_struct_12(mat2x3(1.0), _GLF_IDENTITY(vec2(1.0), vec2(1.0, 1.0) * (vec2(1.0))), uvec4(1u), mat3x4(1.0), bvec4(true), gl_SubgroupInvocationID, ivec2(1))), _GLF_struct_16(_GLF_struct_14(1.0, mat4x3(1.0), ivec2(1)), _GLF_struct_15(uvec2(1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (true ? _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), max((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), clamp((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))), (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))))))))) : _GLF_FUZZED(43047u)))))) - 0u)), ivec4(1)), mat4x3(1.0)), _GLF_struct_19(ivec2(1), _GLF_struct_17(mat3x4(1.0), mat2x4(1.0), mat2(1.0), mat3x2(1.0), mat4x3(1.0), ivec4(1)), _GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY((vec3(1.0))[2], ((vec3(1.0))[2]) * 1.0)), vec3(_GLF_FUZZED(696.395), _GLF_FUZZED(-2.3), _GLF_FUZZED(26.22)), bvec3(false, false, false))))), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))), vec3(1.0))), mat4(1.0), mat2x3(1.0), uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_struct_18(true, 1u, uvec2(1u), uvec4(1u), ivec2(1), true, mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), mat3x4(1.0), _GLF_struct_20(mat4(1.0)));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec3(1), gl_WorkGroupSize.x, ivec4(1), mat4x3(1.0), _GLF_struct_2(mat3x2(1.0), 1, _GLF_struct_0(mat2x4(1.0), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(-3.9)), float(float(vec3(1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))), bool(true))))), mat3x2(1.0), ivec4(_GLF_IDENTITY(1, 0 ^ (1)))), 1.0, _GLF_struct_1(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(1)), max((ivec2(1)), (ivec2(1)))), ivec2(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))) * (_GLF_IDENTITY((ivec2(1)), ivec2(0, 0) | ((ivec2(1)))))) | (ivec2(1))), uvec2(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), true)), (bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-208.315) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0))))) < injectionSwitch.y)) || false)), false, true))) || false))), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec4(bvec3(bvec2(true), true), true)))), false, true))))))), uvec4(1u)), 1.0, 1, _GLF_struct_7(_GLF_struct_3(true, mat2x4(1.0), mat2x3(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))))), mat3x4(1.0), _GLF_struct_4(1u, uvec2(1u), uvec3(1u), uvec4(1u), mat2x3(1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8336.4454)), float(1.0), bool(true))))), _GLF_struct_5(bvec4(true)), _GLF_struct_6(ivec2(1), 1.0, _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0)))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0), _GLF_IDENTITY((mat3(_GLF_IDENTITY(9050.2938, clamp(9050.2938, 9050.2938, _GLF_IDENTITY(9050.2938, (_GLF_IDENTITY(9050.2938, max(9050.2938, 9050.2938))) / 1.0))), -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)), ((mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(8013.1437)), float(0.0), bool(true)))))))), mat3(1.0) * ((_GLF_IDENTITY(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0), _GLF_IDENTITY((mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)), ((mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(300.472, -9.0, 71.83, 1.3, 17.59, -447.375)) : _GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), mat2x3(mat2x3(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0))))))), clamp(float(_GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(300.472, -9.0, 71.83, 1.3, 17.59, -447.375)) : _GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), mat2x3(mat2x3(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0))))))), float(_GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(300.472, -9.0, 71.83, 1.3, 17.59, -447.375)) : _GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), mat2x3(mat2x3(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0))))))), float(_GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(300.472, -9.0, 71.83, 1.3, 17.59, -447.375)) : _GLF_IDENTITY(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0), mat2x3(mat2x3(mat2x3(0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sin(abs(0.0)), 1.0)))))))))), max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8013.1437)), float(0.0), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, true)))))))))))))) * mat3(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0), mat3(_GLF_IDENTITY(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, _GLF_IDENTITY(850.690, (false ? _GLF_FUZZED(-201.861) : 850.690)), 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)), mat4x3(mat4(_GLF_IDENTITY(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)), mat4x3(mat4(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)))))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))) ? _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0)), mat4x3(mat4(mat4x3(mat3(1.0))))))) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0), mat3(_GLF_IDENTITY(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0))), (false ? _GLF_FUZZED(mat3(261.498, -5.3, 1.4, -521.024, -5.1, -78.87, -418.239, 1.6, -8106.4274)) : (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))))) * mat3(1.0)), mat4x3(mat4(_GLF_IDENTITY(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)), mat4x3(mat4(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, _GLF_IDENTITY(-0.0, (-0.0) + 0.0), -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)), (false ? _GLF_FUZZED(mat3(5.8, 5527.1244, -688.629, -7.2, -77.13, -3.8, -294.752, -6133.5398, 80.31)) : true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, _GLF_IDENTITY(-0.0, (-0.0) + 0.0), -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))))) * mat3(1.0))))))))))), (transpose(_GLF_IDENTITY((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0), mat3(_GLF_IDENTITY(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, _GLF_IDENTITY(-0.0, (-0.0) - 0.0), -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)), mat4x3(mat4(_GLF_IDENTITY(mat4x3((transpose(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true, ! (! (true))) ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)), mat4x3(mat4(mat4x3(_GLF_IDENTITY((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0), _GLF_IDENTITY(mat3(mat4((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0))), transpose(transpose(mat3(mat4((transpose(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(9050.2938, -0.0, -6.5, 850.690, 6821.5266, -8.3, 9.6, -23.68, 5.0)))))) * mat3(1.0)))))))))))))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-97.25))), 0.0, 0.0, 0.0, cos(0.0), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat3(-4865.6183, -8030.3873, -9.0, 8.2, -35.79, -83.00, 92.69, 4551.2880, 8.7)) : _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), min((gl_WorkGroupID) - uvec3(0u, 0u, 0u), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))).x, gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))) / 1.0))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))) / 1.0))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))) / 1.0))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))) / 1.0))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))) / 1.0))), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(num_workgroup)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), min(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), ~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id))))), (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), min(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), ~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id))))), (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), min(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), ~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id))))), (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))), (uint(uint(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), min(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), ~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id))))), (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), min(~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id), ~ (_GLF_struct_replacement_8.workgroup_size * workgroup_id))))), (_GLF_struct_replacement_8.workgroup_size * workgroup_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(19.84) : 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(1.0, 1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) << 0u)))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-115.365))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), bool(bvec3(false, true, true)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_21._f0._f5.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3135.9609)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)))), false, true, false)))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.1)), float(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)), bool(true))), injectionSwitch[1])).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, exp(0.0), 0.0, 1.0))).y))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3135.9609)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)))), false, true, false))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, 1.0 * (0.0))))) + (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 7387.2412))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 0.0))).y)))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3135.9609)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)))), false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))) + (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / sqrt(vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, _GLF_IDENTITY(true, true && (true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)))))) && true))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))))), true && (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))))))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3135.9609)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))), bool(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3135.9609)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))), false || ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.8), _GLF_FUZZED(-3135.9609)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))], _GLF_IDENTITY((injectionSwitch)[1], float(mat2((injectionSwitch)[1], 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), bvec2(true, true))), injectionSwitch)).y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, false))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(2.9), clamp(_GLF_FUZZED(2.9), _GLF_FUZZED(2.9), _GLF_FUZZED(2.9)))), vec2(_GLF_FUZZED(-190.736), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), 1)), 1))]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), min((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) >> 0u))), max(virtual_gid, virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), min(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), uint(uvec2((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))), 1u))), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))))))))), _GLF_IDENTITY(4, ~ (~ (4))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1035.9633, 9.1)))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), ! (! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), false, true)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
