#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3((injectionSwitch.x), 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(9.5, 2.1, 90.57, -6.8, -5239.4214, 0.5, -5637.8979, -3.5, 73.57, -8351.4567, -3.4, -96.00))))), (float(_GLF_IDENTITY(mat4x3((injectionSwitch.x), 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3((injectionSwitch.x), 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(9.5, 2.1, 90.57, -6.8, -5239.4214, 0.5, -5637.8979, _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(sign(6713.3657)) : _GLF_IDENTITY(-3.5, (-3.5) * 1.0))), 73.57, -8351.4567, -3.4, -96.00)))))) - 0.0)), (injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6798.6724), _GLF_FUZZED(-28.60)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))) && ((injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))) << uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u)) * 1u), 0u, 0u)).x, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((gl_WorkGroupID)), (_GLF_IDENTITY(((gl_WorkGroupID)), clamp(((gl_WorkGroupID)), ((gl_WorkGroupID)), ((gl_WorkGroupID))))) << (uvec3(0u, 0u, 0u) & uvec3(94308u, 194530u, 55516u)))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, 0u) : _GLF_FUZZED(uvec3(32576u, 34454u, 192882u)))), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, 0u)))) | (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u), min(_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, 0u)))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, 1u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 1u), min(uvec2(0u, _GLF_IDENTITY(1u, (1u) ^ 0u)), uvec2(0u, 1u))), uvec2(0u, 1u))))))))) ^ 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))))))).x)), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(26.78)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), true && ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-271.481)), clamp(float(_GLF_FUZZED(-271.481)), float(_GLF_FUZZED(-271.481)), float(_GLF_FUZZED(-271.481)))), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), 1.0, 1.0), transpose(transpose(mat4x2(1.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-271.481)), bool(false))), 1.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-271.481)), clamp(float(_GLF_FUZZED(-271.481)), float(_GLF_FUZZED(-271.481)), float(_GLF_FUZZED(-271.481)))), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), 1.0, 1.0), transpose(transpose(mat4x2(1.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-271.481)), bool(false))), 1.0, 1.0)))))) + 0.0))), mat3(1.0) * (vec3(injectionSwitch, 1.0)))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-10.30)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) || false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(true, true))), ! (! (! (bool(bvec2(true, true)))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), true, true))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec4(bvec2(bool(bvec2(true, true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec2(true, true)), true), bvec2(bvec4(bvec2(bool(bvec2(true, true)), true), false, false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec2(true, true))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (bool(bvec2(true, true))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (bool(bvec2(true, true))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), false)), false)), true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (bool(bvec2(true, true))), false)), bvec2(bvec2(bvec2(bvec2(! (bool(bvec2(true, true))), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(! _GLF_IDENTITY((bool(bvec2(true, true))), (_GLF_IDENTITY((bool(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec2(true, true)))))) || false), false)), false)), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (bool(bvec2(true, true))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (bool(bvec2(true, true))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(! (bool(bvec2(true, true))), false)), false)), true)))), false, false))))))), true, true))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(true, true))), ! (! (! (bool(bvec2(true, true)))))), _GLF_IDENTITY(bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))))), false)))), ! (! (bool(bool(bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))))), false)))))))))))))))), (! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, true))), false)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false))))), (! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, true))), false)))))) && true))), true && (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, _GLF_IDENTITY(true, (true) && true)))), false))))), (! ((_GLF_IDENTITY(! (bool(bvec2(true, true))), bool(bvec2(! (bool(bvec2(true, true))), false)))))) && true)))))))))) || _GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))), ! _GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec3((! (bool(bvec2(true, true)))), false, false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0)))))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0))))))), float(_GLF_FUZZED(65.50)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(9.4)) : 0.0)))), 1.0), _GLF_IDENTITY((true ? mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED((- mat2(5.6, -95.46, 2094.8759, 850.061)))), (false ? _GLF_FUZZED(mat2(-16.88, -1.6, -6.9, -2.8)) : (true ? mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED((- mat2(5.6, -95.46, 2094.8759, 850.061))))))))))))), ((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0)))))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-3802.6012)), bool(false))), 1.0, 1.0, sqrt(1.0))))))), float(_GLF_FUZZED(65.50)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(9.4)) : 0.0)))), 1.0), _GLF_IDENTITY((true ? mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED((- mat2(5.6, -95.46, 2094.8759, 850.061)))), (false ? _GLF_FUZZED(mat2(-16.88, -1.6, -6.9, -2.8)) : (true ? mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED((- mat2(5.6, -95.46, 2094.8759, 850.061)))))))))))))) || false))), true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), false || (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true)), ! (! (bool(bvec2(true, _GLF_IDENTITY(true, false || (true)))))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))), ! _GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false)), ! (! ((_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false)))))), false, false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2(true, true)))))) ? mat2(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0) : _GLF_FUZZED(_GLF_IDENTITY((- mat2(5.6, -95.46, 2094.8759, 850.061)), (true ? (- mat2(5.6, -95.46, 2094.8759, 850.061)) : _GLF_FUZZED(mat2(3439.4798, -2.0, -47.71, 596.706))))))))))))))), true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, false || (false)))))), false || (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), true)), ! (! (bool(bvec2(true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false))))))))))) || false))))))))), false), true, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false))) || false))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), true))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), true, true)))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, true), true, true))))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))))))))))))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) || false))))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false))) || false))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), true))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), true, true)))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, true), true, true))))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))))))))))))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) || false))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false))) || false))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))) || false)), bvec2(bvec4(bvec2(true, true), true, true))))), true))))), false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), true, true)))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), bvec2(bvec4(bvec2(true, true), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(true, true), true, true))))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), ! (! (bool(bvec4(true, false, false, false)))))), true))))))))))))))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) || false))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (false)) && true), ! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (false)) && true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! _GLF_IDENTITY((bool(bvec2(true, true))), ((bool(bvec2(true, true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) && true)) && true), (_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), ! (! (bool(bvec2(true, true)))))) || false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! _GLF_IDENTITY((bool(bvec2(true, true))), bool(bool((bool(bvec2(true, true)))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || _GLF_IDENTITY(false, ! (! (false)))))))) && true)) && true), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) || false))))), bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, true)), ! (! _GLF_IDENTITY((bool(bvec2(true, true))), bool(bool((bool(bvec2(true, true)))))))), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || _GLF_IDENTITY(false, ! (! (false)))))))) && true)) && true), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))) || false))))), false, true, true))))))), false), true, false))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.5)), bool(false)))) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, exp(0.0), 0.0, 1.0, 1.0, 1.0), mat2x3(mat2x4(mat2x3(injectionSwitch.x, exp(0.0), 0.0, 1.0, 1.0, 1.0))))))) / 1.0) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 0.0))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 0.0))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 0.0))).y, false, true))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))))), vec2(injectionSwitch), vec2(injectionSwitch)))), clamp(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)), mat2(1.0) * (clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(723.612), _GLF_FUZZED(vec3(-887.484, 4.4, 9.0).g)), bvec2(false, false))), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-842.153, 2.7, -9.9, -73.82)) : vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), mix(vec4(_GLF_FUZZED(-4.2), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[1], _GLF_FUZZED(-7323.5728), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[3]), vec4((vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[0], _GLF_FUZZED(-7.8), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[2], _GLF_FUZZED(-3.9)), bvec4(true, false, true, false))))))), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(284.235)), bool(false))))), 1.0, abs(1.0), 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), (true ? _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0))))))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(723.612), _GLF_FUZZED(vec3(-887.484, 4.4, 9.0).g)), bvec2(false, false))), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-842.153, 2.7, -9.9, -73.82)) : vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), mix(vec4(_GLF_FUZZED(-4.2), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[1], _GLF_FUZZED(-7323.5728), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[3]), vec4((vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[0], _GLF_FUZZED(-7.8), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[2], _GLF_FUZZED(-3.9)), bvec4(true, false, true, false))))))), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(284.235)), bool(false))))), 1.0, abs(1.0), 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), (true ? _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)))))))))), vec2(mat4x2(mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(723.612), _GLF_FUZZED(vec3(-887.484, 4.4, 9.0).g)), bvec2(false, false))), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-842.153, 2.7, -9.9, -73.82)) : vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), mix(vec4(_GLF_FUZZED(-4.2), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[1], _GLF_FUZZED(-7323.5728), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[3]), vec4((vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[0], _GLF_FUZZED(-7.8), (vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))[2], _GLF_FUZZED(-3.9)), bvec4(true, false, true, false))))))), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(284.235)), bool(false))))), 1.0, abs(1.0), 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), clamp(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), (true ? _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)), vec2(mat4(injectionSwitch, 1.0, sin(0.0), 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0))), 0.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), 1.0, abs(1.0), 0.0, 1.0)))))))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(76.02)), bvec2(true, false))), cos(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(mat3(vec2(1.0, 0.0), determinant(mat4(1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), 1.0, 1.0, 0.0, tan(0.0), 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), (vec2(mat3(vec2(1.0, 0.0), determinant(mat4(1.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0)), 1.0, 1.0, 0.0, tan(0.0), 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) * mat2(1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(109.570) : injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(2), int(2)))) : _GLF_FUZZED(99625)))]))) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
