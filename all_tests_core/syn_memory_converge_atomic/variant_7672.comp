#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec3 GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_8num_workgroupread_val;
 GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id.xy = GLF_merged2_0_1_13_1_1_8num_workgroupread_val;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id.z = subgroup_id;
 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.x = GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id.z;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id.xy.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.w = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.w;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x;
  }
 uint virtual_gid = GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.x * subgroup_size + subgroup_local_id;
 GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y = virtual_gid;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   atomicStore(write_val, uint(GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y), 4, 64, 0);
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id.xy.y = read_val;
 buf[GLF_merged4_0_1_11_1_1_11_2_1_14_3_1_12subgroup_idvirtual_gidworkgroup_baseworkgroup_id.y] = uint(subgroupAllEqual(GLF_merged2_0_2_45_2_1_11GLF_merged2_0_1_13_1_1_8num_workgroupread_valsubgroup_id.xy.y));
}
