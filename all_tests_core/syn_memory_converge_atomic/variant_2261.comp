#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (! (false))), ! (_GLF_IDENTITY(! (true && (! (! (false)))), true && (! (true && (! (! (false))))))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), abs(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9729.8161) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), abs(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9729.8161) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), abs(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9729.8161) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, injectionSwitch.y)))))) || false)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.9))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) * (injectionSwitch)))).y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0))))))), 1.0, 1.0, 0.0, 1.0, 1.0), mat2x3(_GLF_IDENTITY(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED((-5.4 / 91.12))), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)), injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(mat4x3(-573.859, 9.4, 2.4, -1377.8161, -42.54, 2.4, 5.0, -7.2, -0.6, 5.2, -98.66, -3.5)) : mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true));
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, min(1, 1)) | 0) ^ 1)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), true)), true))))));
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size), ((GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size)) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u)))) << 0u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), ~ (~ (uint(uint(subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), ~ (~ (uint(uint(subgroup_size))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ~ (~ (uint(uint(subgroup_size)))))) + 0u)) | (_GLF_IDENTITY(uint(uint(subgroup_size)), ~ (~ (uint(uint(subgroup_size)))))))))))))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))), 0 ^ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))))) >> 0) != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ _GLF_IDENTITY((~ (~ (gl_WorkGroupSize))), ~ (~ ((~ (~ (gl_WorkGroupSize))))))), _GLF_IDENTITY((~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize)))))), (~ (gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))) * uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) * uvec3(1u, 1u, 1u)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(_GLF_IDENTITY(write_val, clamp(write_val, _GLF_IDENTITY(write_val, uint(uvec2(write_val, 0u))), _GLF_IDENTITY(write_val, clamp(write_val, write_val, write_val)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, true)), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, true))) || false)); _injected_loop_counter --)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (1)))))) ^ 0))), 0, 1, 0))), min(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, 1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0, (0) >> 0), 1, 0))), int(int(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, (1) * 1), 0))))))))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? _GLF_IDENTITY(int(1), (int(1)) | (int(1))) : _GLF_FUZZED(_injected_loop_counter))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), ! (! (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), max(_GLF_IDENTITY(int(5), min(int(5), int(5))), _GLF_IDENTITY(int(5), min(int(5), int(5)))))) >> ((0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, _GLF_IDENTITY(0 | (8), (_GLF_IDENTITY(0 | (8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 | (8) : _GLF_FUZZED(-18244)))) ^ 0))))) >> _GLF_IDENTITY(int(2), int(2)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x) / abs(1.0))))) * abs(1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 0.0, 0.0))) + 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) - 0.0))), max(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, length(tan(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, cos(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), min(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7075.3851))), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.9)), float(0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.5) : 1.0)), 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(9064.3940)), float(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), bool(true))), _GLF_IDENTITY(min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), min(min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(-18.69) : min(float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), mix(float(_GLF_FUZZED(vec3(-9.7, 7.1, -64.88).y)), float(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-17.19))), 1.0, 0.0, 1.0)), min(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-32.19) : 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), bool(true))))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true)))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(0.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(mat3(mat4(mat3(injectionSwitch, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), transpose(transpose(mat3(mat4(mat3(injectionSwitch, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), sin(0.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(mat3(mat4(mat3(injectionSwitch, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : 1.0)), 1.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), transpose(transpose(mat3(mat4(mat3(injectionSwitch, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))).y : _GLF_FUZZED(35.06)))))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), false, false, true)))))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))), (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))) && true)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, true)))))))))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 90603u)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(1u, 1u) * (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))))) / uvec2(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u))), uvec2(uvec4((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u))), 1u, 1u))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[_GLF_IDENTITY(1, (1) | (1))])), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, max(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)))) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u))))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1], min(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1], (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1]) | 0u))))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u))))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u))))))) / uvec2(1u, 1u))) ^ uvec2(0u, 0u))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec2(uvec4((_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | 0u), 1u))))), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u))))))) / uvec2(1u, 1u)))).x, 1u)), clamp(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)))))), uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))))) / uvec2(1u, 1u)).x, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (_GLF_IDENTITY(~ (1u), min(~ (1u), _GLF_IDENTITY(~ (1u), (~ (1u)) + 0u)))))))))))), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, min(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(190641u, (190641u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(190641u, 93865u), min(uvec2(190641u, 93865u), uvec2(190641u, 93865u)))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u)))))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u))))).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u))))))))))))))), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), uvec2(uvec4((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), 0u, _GLF_IDENTITY((1u | 0u), ((1u | 0u)) | ((1u | 0u))))))) >> (uvec2(0u, 0u) | uvec2(0u, 0u))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(190641u, 93865u)), (_GLF_FUZZED(uvec2(190641u, 93865u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(190641u, (190641u) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (true ? false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))), (false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, 0u | (93865u)))) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)))) ^ uvec2(0u, 0u))))))) / uvec2(1u, 1u)).x, 1u)), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))), uint(uvec4((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))), 1u, 0u, 0u))))), max(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))), uint(uvec4((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))), 1u, 0u, 0u))))), uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))), uint(uvec4((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))), 1u, 0u, 0u)))))))), uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(190641u, 93865u), ~ (_GLF_IDENTITY(~ (uvec2(190641u, 93865u)), (false ? _GLF_FUZZED(uvec2(158023u, 100963u)) : _GLF_IDENTITY(~ (uvec2(190641u, 93865u)), (~ (uvec2(190641u, 93865u))) << uvec2(0u, 0u))))))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))))) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)))), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec2(190641u, 93865u)), (_GLF_FUZZED(uvec2(190641u, 93865u))) | uvec2(0u, 0u)) : _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) - uvec2(0u, 0u))))) - uvec2(0u, 0u)), 1u, 1u)))) / uvec2(1u, _GLF_IDENTITY(1u, 0u | (1u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u))))), (true ? _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))) : _GLF_FUZZED(workgroup_base))))))))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(190641u, 93865u), ~ (~ (uvec2(190641u, 93865u))))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u))) / uvec2(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((packUnorm4x8(vec4(48.58, 43.95, 5.1, 5.3)))) : 1u)), 1u)).x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) << uvec2(0u, 0u)))) | uvec2(0u, 0u))) | uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(0u, (0u) | (0u | 0u))))))), 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(190641u, uint(uvec2(190641u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u), min((false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(190641u, (190641u) - 0u), 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, uint(_GLF_IDENTITY(uvec4(93865u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u), (uvec4(93865u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u)) | (uvec4(93865u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 0u))))))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) ^ uvec2(0u, 0u)))) << uvec2(0u, 0u)))))))) / uvec2(1u, 1u)).x, 1u)), clamp(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : 1u), uint(uint((false ? _GLF_FUZZED(workgroup_base) : 1u))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (_GLF_IDENTITY(_GLF_IDENTITY(93865u, (93865u) - 0u), clamp(_GLF_IDENTITY(93865u, (93865u) - 0u), _GLF_IDENTITY(93865u, (93865u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(93865u, (93865u) - 0u), (_GLF_IDENTITY(93865u, (93865u) - 0u)) / 1u)))) | 0u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (_GLF_IDENTITY(_GLF_IDENTITY(93865u, (93865u) - 0u), clamp(_GLF_IDENTITY(93865u, (93865u) - 0u), _GLF_IDENTITY(93865u, (93865u) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(93865u, (93865u) - 0u), (_GLF_IDENTITY(93865u, (93865u) - 0u)) / 1u)))) | 0u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x)), 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) / uvec2(1u, 1u)).x, 1u)), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (93865u) / 1u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u)))))), (uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (93865u) / 1u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u))))))) << uvec2(0u, 0u))))), max(uint(uint(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (93865u) / 1u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (93865u) / 1u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, _GLF_IDENTITY(93865u, (93865u) / 1u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) | uvec2(0u, 0u))))))), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (~ (1u))))))))), uint(uint(uint(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(190641u, uint(uint(190641u))), _GLF_IDENTITY(93865u, (93865u) / 1u))) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (false ? _GLF_FUZZED(uvec2(190641u, 93865u)) : GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), 1u, 1u)))) / uvec2(1u, 1u)).x, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 1u * (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))))))))))))))))), (workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) / 1u), GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(913.643) : injectionSwitch.y)), 1.0, 1.0, 1.0)))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(913.643) : injectionSwitch.y)), 1.0, 1.0, 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(913.643) : injectionSwitch.y)), 1.0, 1.0, 1.0)))) / 1.0)))))))))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(write_val, uint(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, (64) - 0), 0);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), clamp((1 & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (1 & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (1 & ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) > injectionSwitch.y))));
 buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = uint(subgroupAllEqual(read_val));
}
