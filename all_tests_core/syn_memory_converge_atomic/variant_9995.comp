#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.1) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false))), false))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, true, true))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, true, true))))), true, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, true, true))))), true, true), true)))))))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y))), true))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 906.420))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- 906.420))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), bool(bvec3((bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(13.01) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false, true))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x), (injectionSwitch.x)))) / 1.0) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), bool(bvec3((bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.8))) > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(13.01) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false, true))))) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true))), true, false, false))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7229.5738)), bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), (! (_GLF_IDENTITY(true, bool(bool(true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true))), (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))), false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true))))), false || (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(4036.8633)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) || false))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7229.5738)), bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), (! (_GLF_IDENTITY(true, bool(bool(true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true))), (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))), false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) && true))))), false || (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(4036.8633)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (true)) || false)))))))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((false ? 3660.3283 : -6.2))), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.5), _GLF_FUZZED(-0.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4.9 * -8890.7730)), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-3951.3579) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-114.622)), bvec2(true, false))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u)))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u)))))), 1u)))))))) ^ 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)) + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u, uint(uvec3((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 0u)))) ^ 0u))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))))))) - 0u, ((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))))), subgroup_size))) - 0u) + 0u)))) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)))), (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))))) | (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))))))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))) - 0u))) ^ 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | 0u))) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), min(uvec3(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)))))))) >> 0u), subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u))) ^ 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u))) >> 0u), min((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) | 0u))))), 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), min(uvec3(clamp(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) + 0u) : _GLF_FUZZED(subgroup_size))), subgroup_size, subgroup_size), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(0u, (0u) / 1u))))), 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 0u), min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u + (0u)))))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), 0u, 0u), min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size, subgroup_size))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size), 0u + (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))))) - 0u)), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size), 0u + (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))))) - 0u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size), 0u + (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))))) - 0u))))) ^ 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), uint(uint((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 1u))) : _GLF_FUZZED(workgroup_base))), clamp(subgroup_size, subgroup_size, subgroup_size))))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) / 1u) | 0u)))))))) - 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), _GLF_IDENTITY(min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)), (_GLF_IDENTITY(min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)), (min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u))) / uvec3(1u, 1u, 1u))) | (min(uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u), uvec3(clamp(subgroup_size, subgroup_size, subgroup_size), 0u, 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) | 0u)) | 0u), subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size))) - 0u))) ^ 0u))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, clamp((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u ^ 0u)), clamp(subgroup_size, subgroup_size, subgroup_size))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), ~ (~ (0u))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u, min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u)))) | 0u, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))))) | 0u))))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true)))), bool(bool(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true)))))))) || false))) || false, ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))) || false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(8.8, 415.765, -342.082, -2442.5958).z) : injectionSwitch.y)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, tan(0.0), abs(1.0), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), exp(0.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), abs(0.0))))), (_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(cos(-46.54)))), 0.0))), abs(1.0), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0))))), (mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, tan(0.0), abs(1.0), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)), abs(0.0)))))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(1682.2400))))), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat3(1.0)))), 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), false || (bool(bvec3(true, true, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) / 1u);
}
