#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))), false, true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601)), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-1678.4623, 9260.2601), (false ? _GLF_FUZZED((mix(vec2(6.9, -159.059), vec2(-95.67, 1.8), vec2(4.2, 0.3)) * -53.80)) : vec2(-1678.4623, 9260.2601)))), mix(vec2(_GLF_FUZZED(363.381), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601)))[1]), vec2((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601)))[0], _GLF_FUZZED(-232.582)), bvec2(true, false))), 0.0, 0.0), (false ? _GLF_FUZZED(transpose(mat2(-21.89, 4.6, 228.113, 59.81))) : mat2(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601)), mix(vec2(_GLF_FUZZED(363.381), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601)))[1]), vec2((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601)))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(-232.582)), bvec2(true, false))), 0.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-1678.4623, 9260.2601))) + vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), false)))))))) || _GLF_IDENTITY(false, (false) || false)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false)))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), false)))))))) || _GLF_IDENTITY(false, (false) || false)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), false, false, true)))))), (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec2(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), false)))))))) || _GLF_IDENTITY(false, (false) || false)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(7.8)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true))), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))))).y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))) || false)))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (bool(bvec4(false, false, false, true))))), (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) && true), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), false)))))))) || _GLF_IDENTITY(false, (false) || false)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4271.5738)), bvec2(true, false))))).x)) > injectionSwitch.y) && true))), false, false, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(false, false || (false))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))))), _GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (false || (! (! (_GLF_IDENTITY(false, false || (false))))))))))))) && true))), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) - _GLF_IDENTITY(0u, ~ (~ (0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec3(bool(bvec3((false), false, true)), false, true)))))))), true, true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(0.0, 0.0) + (vec2(vec2(injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-82.84, -7092.8488)) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(0.0, 0.0) + (vec2(vec2(injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(0.0, 0.0) + (vec2(vec2(injectionSwitch))))))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, abs(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.5)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-215.495), _GLF_FUZZED(2.8)), bvec2(false, false))).y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false, true))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * (1u & 1u)), (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(subgroup_id) : subgroup_base)), 0u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), 0u, 1u)), ((uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_base, 1u * (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)))), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u))) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(num_workgroup))), 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base) ^ 0u))), 0u, 1u)), uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u) * ((uvec3(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_base), ((false ? _GLF_FUZZED(subgroup_id) : subgroup_base)) << 0u)), 0u, 1u)))) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(30787u, 86109u, 24764u)) : _GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : subgroup_base)), 0u, 1u)), uvec3(1u, 1u, 1u) * ((uvec3(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base) + 0u))), 0u, 1u)))) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), 0u, 1u)), uvec3(1u, 1u, 1u) * ((uvec3(_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base)), 0u, 1u)))) / uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)))) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(subgroup_base, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), 0u | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)))) >> 0u), subgroup_base)), subgroup_base))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) - 0u)))) ^ 1u) + ((_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)) >> 0u), subgroup_base)), subgroup_base)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))), (true ? ~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) : _GLF_FUZZED(subgroup_base))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true && (bool(_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
  }
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, false))))) ? 1 : _GLF_FUZZED(192)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))), true)))))), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))), true)))))), true && ((injectionSwitch.x > injectionSwitch.y))))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, (false) || false), false)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false)))))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), true))), true, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), true)))))), false))))), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false))))), false, false)), false), bvec3(bvec3(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), false))))), false, false)), false)))))), true, false))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(read) : subgroup_local_id)) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(read) : subgroup_local_id)) % 2, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(read) : subgroup_local_id)) % 2, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)))) << 0u))))))) == 0)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))), _GLF_IDENTITY(false, true && (false)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))), _GLF_IDENTITY(false, true && (false)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))), _GLF_IDENTITY(false, true && (false)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-7923) : 4)), 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) | (atomicLoad(buf[virtual_gid], 4, 64, 2))), (read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2))))) | (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, 2)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(968.364)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false) && (bool(bvec4(false, false, true, false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, true, true))), ! (! (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bool(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, true, true)))))))))), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(read, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(read, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (true ? (injectionSwitch.x) / 1.0 : _GLF_FUZZED(floor(injectionSwitch)[1])))) : _GLF_FUZZED(-4731.1488))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_IDENTITY(_GLF_FUZZED(7.9), max(_GLF_FUZZED(7.9), _GLF_FUZZED(7.9)))), bool(false))))))) | (read)), (_GLF_IDENTITY(read, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, uint(_GLF_IDENTITY(uint(read), min(uint(read), uint(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, max(read, read)), _GLF_IDENTITY(read, uint(uvec2(read, 1u))), read)))))))) >> 0u), read))))) >> uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-93.81, (-93.81) / 1.0))), min(float(_GLF_FUZZED(-93.81)), float(_GLF_FUZZED(-93.81)))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-93.81, (-93.81) / 1.0))), min(float(_GLF_FUZZED(_GLF_IDENTITY(-93.81, max(-93.81, -93.81)))), float(_GLF_FUZZED(_GLF_IDENTITY(-93.81, (true ? -93.81 : _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)))))))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), mix(float(_GLF_FUZZED(-4.7)), float(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(831.514)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-93.81, (-93.81) / 1.0))), min(float(_GLF_FUZZED(-93.81)), float(_GLF_FUZZED(-93.81)))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-8.8))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, int(ivec4((64) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) ^ 0)))) | (0)), 0, 1, (1 & 1))))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, 1)) / ivec4(1, 1, 1, 1))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, min(_GLF_IDENTITY((64) >> 0, (_GLF_IDENTITY((64) >> 0, ((64) >> 0) ^ 0)) * 1), _GLF_IDENTITY((64) >> 0, min((64) >> 0, (_GLF_IDENTITY(64, min(64, 64))) >> 0)))), max((64) >> 0, (64) >> 0))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), int(ivec3((_GLF_IDENTITY(64, min(64, 64))), 0, 0))) >> 0), 1, 1, 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))) >> (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0, ((_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0) | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0, ~ (~ ((_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0)))))) | 0)) ^ _GLF_IDENTITY(1, max(1, 1)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, int(ivec4((64) >> 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0))))), 1, (1 & 1))))), 1, 1, 1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) << 0), 1, 1, 1)) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), min(ivec4(1, 1, 1, 1), ivec4(1, 1, 1, 1))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) >> 0), 1, _GLF_IDENTITY(1, int(ivec4(1, (1 ^ 0), 0, 1))), 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))) >> (1 ^ 1), ((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0)), min(_GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0)), int(ivec4(_GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0)), 0, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 0)))))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) >> 0), 1, 1, 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))) >> (1 ^ 1)) | 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (~ (_GLF_IDENTITY((64) >> 0, ((64) >> 0) << 0)))), int(ivec4((64) >> 0, 0, 1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))), 1)))) & 1))))), 1, 1, 1), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0)), (int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0))) | 0)))) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (true ? ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-25987, 70955, -96940, -73296)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0)), (int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0))) | 0)))) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (true ? ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-25987, 70955, -96940, -73296)))), min((ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0)), (int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0))) | 0)))) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (true ? ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-25987, 70955, -96940, -73296)))), (ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0)), (int(ivec2(_GLF_IDENTITY(1, (1) - 0), 0))) | 0)))) / _GLF_IDENTITY(ivec4(1, 1, 1, 1), (true ? ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-25987, 70955, -96940, -73296))))))) | (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(6), ivec4(6)))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (_GLF_IDENTITY(~ ((64) >> 0), (~ ((64) >> 0)) << 0))), _GLF_IDENTITY(max((64) >> 0, (64) >> 0), int(int(max((64) >> 0, (64) >> 0)))))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) - 0)))) << 0), 64))) >> 0), 1, 1, 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))) >> (1 ^ 1))) - 0), (false ? _GLF_FUZZED(-7545) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | ((64))) | (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, clamp(64, 64, 64)), 64)))), _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, min((64) >> 0, (64) >> 0)), int(ivec4((64) >> 0, 0, 1, (1 & 1))))), 1, 1, 1), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, 1)), clamp((ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, 1)), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-83873, 56280, 82284, 81761)) : (ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) >> 0), 1, 1, 1)))), (ivec4(_GLF_IDENTITY(64, (64) >> 0), 1, 1, 1)))) / ivec4(1, 1, 1, 1))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, max(_GLF_IDENTITY((64) >> 0, ((_GLF_IDENTITY(64, (64) << 0)) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-26494) : 0))) | (1 ^ 1)), (64) >> _GLF_IDENTITY(0, (0) | (0)))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> _GLF_IDENTITY(0, min(0, 0))))))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) >> 0), 1, 1, 1)) / ivec4(1, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | _GLF_IDENTITY((1), ((1)) >> 0)), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, (1) << 0))))))) * 1))))) >> (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-79677) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) * 1))) ^ 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, int(ivec4((64) >> 0, 0, 1, (1 & 1))))), _GLF_IDENTITY(1, min(1, 1)), 1, 1), (ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0)), (_GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0))) ^ (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))))), 1, 1, 1)) / ivec4(1, 1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, max((64) >> 0, (64) >> 0))), 1, 1, 1), (ivec4(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), clamp((_GLF_IDENTITY(64, min(64, 64))), _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), 0 | ((_GLF_IDENTITY(64, min(64, 64))))), (_GLF_IDENTITY(64, min(64, 64))))) >> 0), 1, 1, 1)) / _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))), ivec4(0, 0, 0, 0) | (ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))), ivec4(0, 0, 0, 0) | (ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))))), (_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))), ivec4(0, 0, 0, 0) | (ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))) - ivec4(0, 0, 0, 0))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))), ivec4(0, 0, 0, 0) | (ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))))), (_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))), ivec4(0, 0, 0, 0) | (ivec4(1, 1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))) - ivec4(0, 0, 0, 0)))) << ivec4(0, 0, 0, 0))))))) >> _GLF_IDENTITY(_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)), ((1 ^ 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))))))), (_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)), ((1 ^ 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))))))))) | (_GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)), ((1 ^ 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) ^ 0), int(int(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))))))))))) - 0))), 1, 0, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, 64))) | _GLF_IDENTITY((64), min(_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)))))), ((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))) - 0)), max(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), max(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))), _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), int(_GLF_ONE(1.0, injectionSwitch.y)), (0 | 0), 1))), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))))), clamp((_GLF_IDENTITY(64, max(64, 64))) | _GLF_IDENTITY((64), min(_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)))))), ((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))) - 0)), max(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), max(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))), _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), int(_GLF_ONE(1.0, injectionSwitch.y)), (0 | 0), 1))), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))))), (_GLF_IDENTITY(64, max(64, 64))) | _GLF_IDENTITY((64), min(_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)))))), ((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))) - 0)), max(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), max(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))), _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), int(_GLF_ONE(1.0, injectionSwitch.y)), (0 | 0), 1))), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))))), (_GLF_IDENTITY(64, max(64, 64))) | _GLF_IDENTITY((64), min(_GLF_IDENTITY((64), _GLF_IDENTITY(0 ^ ((64)), (0 ^ ((64))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)))))), ((false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), _GLF_IDENTITY(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), min(clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))) - 0)), max(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), max(_GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))), _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64))))))), _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), int(_GLF_ONE(1.0, injectionSwitch.y)), (0 | 0), 1))), (false ? _GLF_FUZZED(-71295) : _GLF_IDENTITY((64), clamp((64), (_GLF_IDENTITY(64, (64) - 0)), (64)))))))))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
