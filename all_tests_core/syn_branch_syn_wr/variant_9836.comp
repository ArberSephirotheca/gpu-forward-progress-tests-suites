#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)), false, false, true)), false || (bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true && (bool(false))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false, false), true)))), false, false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), (! ((_GLF_IDENTITY(false, false || (false))))) && true))) && true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (false))) && true))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (false))) && true))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (false))) && true))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (false))) && true))) || false))))) || false)) && true)), ((! (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(23.85) : dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)))), max(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(0.1)), float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), bool(true))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0)))))), (dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(_GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0))), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 0.0))) / 1.0)), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(sqrt(1.0), (true ? _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))) : _GLF_FUZZED(86.12)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (false), true, false))))))) && true)))) || _GLF_IDENTITY(false, ! (! (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true && (true && (_GLF_DEAD(false))))), _GLF_IDENTITY(! _GLF_IDENTITY((! ((true && (_GLF_DEAD(false))))), ((! ((true && (_GLF_DEAD(false)))))) && true), _GLF_IDENTITY((! (! ((_GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))) || false, ((! (! ((_GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool((! (true && (_GLF_DEAD(false)))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), (! (true && (_GLF_DEAD(false)))) && true)) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), (_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false)))))) || false), true && ((true && (_GLF_DEAD(false)))))) && true)), true && (_GLF_IDENTITY(bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), (_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false)))))) || false), true && ((true && (_GLF_DEAD(false)))))) && true)), (bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), (_GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))) || false)))))) || false), true && ((true && (_GLF_DEAD(false)))))) && true))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (bool(bool((! (true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), false, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), false, true))) || false)))) && true))))), true && (bool(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))) && true, ((! (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))) && true) || false))))), true && ((! (bool(bool(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, true && (_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, bool(bvec4(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, bool(bvec4((! (true && (_GLF_DEAD(false)))) && true, false, true, false))), true, false, true))))), ((! (true && (_GLF_DEAD(false)))) && true) || false)) || false))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(! (! (bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! _GLF_IDENTITY((! (bool((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))) && (_GLF_DEAD(false)))) && true))), ((! (bool((! (true && (_GLF_DEAD(false)))) && true)))) || false)))))), true && (bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, false || (true)))) && true)), ! (! (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), false, true)))) && (_GLF_DEAD(false)))) && true, ((! (true && (_GLF_DEAD(false)))) && true) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))), false || (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))), bool(bvec3(true, false, false)))) && true))) && (bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), ! (! (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), false, true)))) && (_GLF_DEAD(false)))) && true, ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), bool(bvec3((! (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true)))), false, true)))) && (_GLF_DEAD(false)))) && true) && true), ((! (true && (_GLF_DEAD(false)))) && true) || false)))))))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (! (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(true && (_GLF_DEAD(false)))), (bool(bool(true && (_GLF_DEAD(false))))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false))))), bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && (_GLF_DEAD(false)))))))), bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true && (! (true && (_GLF_DEAD(false))))), bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false))))))), (bool(bool(_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), true && (! (true && (_GLF_DEAD(false)))))))) || false)) || false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false))))) && _GLF_IDENTITY(true, true && (true))))))), true && (bool(! (! _GLF_IDENTITY((bool(bool((! (_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), ! (! ((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))))), ((bool(_GLF_IDENTITY(bool(! (! (bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), false || ((_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)))))) || false), true, false, true))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, true))) || false) && (_GLF_DEAD(false)))))) && true))))), true && _GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) && ((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))), ! (! (((bool(bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ! (! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))) && true)), true, true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))) && true)), true, true, false)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))) && true)), bool(bvec4(! (_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true))))))))))), ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool((! (true && (_GLF_DEAD(false)))) && true), ! (! (bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))) && true)), true, true, false)))), false, true, false))))))))))), bool(bool(bool(_GLF_IDENTITY((bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((true && (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2((true && (_GLF_DEAD(false))), false), true, false)))))) && true)), true && (bool(bool((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((true && (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2((true && (_GLF_DEAD(false))), false), true, false)))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), false || (! (true && (_GLF_DEAD(false)))))) && true)))))))), ! (! ((bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && ((bool(bool((! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), true)), (bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), true))) || false))), false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))) && true))))))))))))))))))))) || false)) || false))))), false, false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((true && (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool(bool((true && (_GLF_DEAD(false))))), false || (bool(bool((true && (_GLF_DEAD(false)))))))))))))) && true)), _GLF_IDENTITY(! (! (bool(bool((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && ((true && (_GLF_DEAD(false)))))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (bool(bool((! (true && (_GLF_DEAD(false)))) && true)))), true && (! (! (bool(bool((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), ! (! ((true && (_GLF_DEAD(false))))))) && true))))))), true && (bool(! (! (bool(bool((! (true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) && true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(! (! (bool(bool((! (true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(true, false || (true)) && ((_GLF_DEAD(false)))))) && true))))), true && (bool(! (! (bool(bool(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, ((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false)))))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (bool(bool((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && (_GLF_DEAD(false))))))))) && true))), ! (! (! (bool(bool((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))), ! (! (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))))) && true)))))))), true && (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))))), bool(bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))))))))))))), ((bool(_GLF_IDENTITY(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! (true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (true && (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(642.984), _GLF_FUZZED(-5526.0898)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) && _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true)), false || (bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true))))))))))), (((_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true)), false || (bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true)))))))))))) || false)) && true), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! (true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (true && (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (true && (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(642.984), _GLF_FUZZED(-5526.0898)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) && _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true)), false || (bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true))))))))))), (((_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))), _GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true)), false || (bool(bvec4(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), false, true, true)))))))))))) || false)) && true))))))), _GLF_IDENTITY(true && (bool(! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))))), bool(_GLF_IDENTITY(bool((! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(false)))) && true))))))), (bool((! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))))))) || false)))))))), ! (! (true && (bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && _GLF_IDENTITY(((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))), ! (! (((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))))))))))))))))) || false)) || false))))), false, false, false))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (true && (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool((! (true && (_GLF_DEAD(false)))))), ! (! (bool(bool((! (true && (_GLF_DEAD(false))))))))))))) && true)), _GLF_IDENTITY(! (! (bool(bool((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && ((true && (_GLF_DEAD(false)))))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (bool(bool((! (true && (_GLF_DEAD(false)))) && true))), (! (bool(bool((! (true && (_GLF_DEAD(false)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(! (! (bool(bool((! (true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) && true)))), bool(bool(! (! (bool(bool((! (true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) && true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (bool(bool((! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))))))))), true && (bool(! (! (bool(bool((! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))))))))))), true && (bool(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, _GLF_IDENTITY(((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false, (((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, _GLF_IDENTITY(((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false, (((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY((! (true && (_GLF_DEAD(false)))) && true, _GLF_IDENTITY(((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false, (((! _GLF_IDENTITY((true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY((true && (_GLF_DEAD(false))), false || ((true && (_GLF_DEAD(false)))))))) && true) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))))))))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && (_GLF_DEAD(false))))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && (_GLF_DEAD(false))))))))) && true, ! (! ((_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), ! (! (! (true && (_GLF_DEAD(false))))))))) && true)))) && true)))))), true && (bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))) && true))))))))))), ((bool(_GLF_IDENTITY(bool(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec2(true && (_GLF_DEAD(false)), false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec2(true && (_GLF_DEAD(false)), false))), true, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (! (true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_DEAD(false))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! _GLF_IDENTITY((true && (_GLF_DEAD(false))), ((true && (_GLF_DEAD(false)))) || false), _GLF_IDENTITY(true && (! (true && (_GLF_DEAD(false)))), false || (true && (! (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))))) && true))))), _GLF_IDENTITY(true && (bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool((! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true))) && true)))))))), ! (! (true && (bool(! (! _GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, bool(bvec3((injectionSwitch.x < injectionSwitch.y) || false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (_GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bool((! (true && (_GLF_DEAD(false)))) && true))), ((bool(bool((! (true && (_GLF_DEAD(false)))) && true)))) && true))))))))))))))) || false)) || false))))), false, false, false)))))))))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-8919.8700, 507.895, -515.271, 3.2).a)), bool(false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), true && ((injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))) || false))), _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.7) : injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.7) : injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false)))) && _GLF_IDENTITY(true, ! (! (true)))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (0u ^ 0u) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9766.7060), _GLF_FUZZED((95.31 * 6.5))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x)) + (gl_WorkGroupSize.x))) + (0u | 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))), min((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) >> 0u, ((uint(2u)) >> 0u) | ((uint(2u)) >> 0u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))) | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, false)), (bool(bvec3((_GLF_DEAD(false)), false, false))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(injectionSwitch, 33.12, -217.223)) : injectionSwitch)).x > injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | _GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) << 0u)), ~ (~ ((subgroup_base) | _GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base))))))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-86272) : _GLF_IDENTITY(0, (0) | (0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(99578) : 0))) + 0))), min(0, 0))))), (67811 & 0)), (ivec2(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))), (67811 & 0))) | ivec2(0, 0))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, _GLF_IDENTITY(((1) / 1) ^ 0, int(ivec2(((1) / 1) ^ 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((520.446 / 1.0))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), 1 * (int(1)))) << 0), int(1)))) : _GLF_FUZZED(61779)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, _GLF_IDENTITY(((1) / 1) ^ 0, int(ivec2(((1) / 1) ^ 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((520.446 / 1.0))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), 1 * (int(1)))) << 0), int(1)))) : _GLF_FUZZED(61779))) * 1), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) / 1)), int(int(~ (_GLF_IDENTITY(1, (1) / 1))))))), _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), min(((1)), ((1)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1)))))) : _GLF_FUZZED(61779)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, max(1, 1)))) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) : _GLF_FUZZED(61779), 0 | (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, max(1, 1)))) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) : _GLF_FUZZED(61779)))))))), 4, 64, _GLF_IDENTITY(4, int(ivec3(4, 0, 1))));
 if((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(35128) : 2, 1 * (false ? _GLF_FUZZED(35128) : 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(35128) : 2, 1 * (false ? _GLF_FUZZED(35128) : 2))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(35128) : _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2)), 1 * (false ? _GLF_FUZZED(35128) : 2))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(35128), clamp(_GLF_IDENTITY(_GLF_FUZZED(35128), (_GLF_FUZZED(35128)) ^ 0), _GLF_FUZZED(35128), _GLF_FUZZED(35128))) : 2, _GLF_IDENTITY(1 * (false ? _GLF_FUZZED(35128) : 2), (1 * (false ? _GLF_FUZZED(35128) : 2)) * 1))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(35128) : 2, 1 * (false ? _GLF_FUZZED(35128) : 2))), (_GLF_IDENTITY(false ? _GLF_FUZZED(35128) : 2, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0) * (false ? _GLF_FUZZED(35128) : 2)))))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) % 2 : _GLF_FUZZED(uvec2(61695u, 29638u)[1])))) == 0)
  {
   _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), uint(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, (0u & 193119u))))), ~ (~ (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) | (2))), (read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) ^ (0u & 170914u))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), _GLF_IDENTITY((uint(8u)), clamp((uint(8u)), (uint(8u)), (uint(8u)))) << 0u))))) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) << 0u), ~ (~ (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) ^ (0u & 170914u))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(_GLF_IDENTITY(8u, max(8u, 8u)))) << 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(8u, max(8u, 8u)))) << 0u, ((uint(_GLF_IDENTITY(8u, max(8u, 8u)))) << 0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) | 0u)))))) << 0u))))) << 0u);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))))), 0u | ((read = atomicLoad(buf[virtual_gid], 4, 64, 2)))), _GLF_IDENTITY((0u ^ _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), ((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(97218), (_GLF_FUZZED(97218)) | 0) : 4)), 64, 2))) - 0u)) << 0u, (_GLF_IDENTITY((0u ^ _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), ((read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(97218) : 4)), 64, 2), min(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(97218) : 4)), 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(97218) : 4)), 64, 2))))) - 0u)) << 0u, 1u * ((0u ^ _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, 64, 2)), ((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(97218) : 4)), 64, 2))) - 0u)) << 0u))) | 0u))), (read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, 0)), (0 << _GLF_IDENTITY(int(8), int(8))) | (int(ivec3(2, 1, 0)))))), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (64))), 2)) / 1u), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (140317u & 0u) ^ (buf[virtual_gid]))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (140317u & 0u) ^ (buf[virtual_gid]))) >> 0u), 0u | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (140317u & 0u) ^ (buf[virtual_gid]))) >> 0u)))) | (0u | 0u)), 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) + 0u), atomicLoad(buf[virtual_gid], 4, 64, 2))), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) / 1)), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, 2)) / 1u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2), 1u * (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ _GLF_IDENTITY((~ (buf[virtual_gid])), ((~ (buf[virtual_gid]))) | ((~ (buf[virtual_gid]))))), 4, 64, 2))), (atomicLoad(buf[virtual_gid], 4, 64, 2)) - 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 2) : _GLF_FUZZED(workgroup_id))), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / _GLF_IDENTITY(1u, (1u) | (1u))), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, 64, 2)) - 0u)))))), uint(uvec4((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (_GLF_IDENTITY(64, max(64, 64))) >> (1 ^ 1)), _GLF_IDENTITY((_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-31122) : 64))) + 0)) - 0)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-31122) : 64))) + 0)) - 0)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0)), 2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), 4, 64, 2), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), false || (bool(false))))), (! (bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) || false)))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) - 0u)))), min(clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED((ivec3(83192, -1741, 75049)[1])) : 64)), 2)) - 0u)))), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)), uint(uvec3((atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))], 4, _GLF_IDENTITY(64, (64) | 0), 2)), _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 1u))), 0u)))) - 0u) / _GLF_IDENTITY(1u, (1u) | 0u)), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, 64, 2), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 4, 64, 2), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6)))), 64, 2)) - 0u)))))))), 1u, 1u, 0u)))) | ((_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : virtual_gid, _GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(workgroup_size) : virtual_gid)), (uint(uint(false ? _GLF_FUZZED(workgroup_size) : virtual_gid))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))], _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(64, max(64, 64)), 2), clamp(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_size)))), 0u ^ (uint(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_size))))))), 0u, 0u), max(uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_size)))), 0u ^ (uint(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_size))))))), 0u, 0u), uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_size)))), 0u ^ (uint(_GLF_IDENTITY(uint(virtual_gid), (true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_size))))))), 0u, 0u)))))], 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1))))), 64)), 2))))) / 1u, (_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, uint(uvec3(_GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, max((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u, (false ? _GLF_FUZZED(subgroup_base) : (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)))), 0u, 0u)))) ^ 0u)), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 | (2))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec4(buf[virtual_gid], (117716u & 0u), 1u, 0u)), (true ? uint(uvec4(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (117716u & 0u), 1u, 0u)) : _GLF_FUZZED(subgroup_id))))))), 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) - 0u)))))))) - 0u)) - 0u);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (true ? _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), mix(float(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), float(_GLF_FUZZED(844.220)), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(-3.0), clamp(_GLF_FUZZED(-3.0), _GLF_IDENTITY(_GLF_FUZZED(-3.0), (_GLF_FUZZED(-3.0)) * 1.0), _GLF_FUZZED(-3.0)))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-3.7)) : injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY((4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0, 1, 0)), (true ? int(ivec4(_GLF_IDENTITY((4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (4) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0, 1, 0)) : _GLF_FUZZED(64448))))), 64, 4);
}
