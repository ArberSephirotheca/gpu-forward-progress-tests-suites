#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(19.72), clamp(_GLF_IDENTITY(_GLF_FUZZED(19.72), max(_GLF_IDENTITY(_GLF_FUZZED(19.72), min(_GLF_FUZZED(19.72), _GLF_FUZZED(19.72))), _GLF_FUZZED(19.72))), _GLF_IDENTITY(_GLF_FUZZED(19.72), (_GLF_FUZZED(19.72)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(19.72), (_GLF_FUZZED(19.72)) - 0.0)))), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(false || (! (_GLF_IDENTITY(false, (false) && true))), false, true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | 0) : _GLF_FUZZED(-33241)))], (false ? _GLF_FUZZED(-9.3) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0])), injectionSwitch[1])).x > injectionSwitch.y)))), false), false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(-9.3) : injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0]) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4339.9305)), float(1.0), bool(true)))))))), _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 1.0, sin(0.0)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), false))))) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 0.0))))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0))).x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), false)))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-88.43), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-9.3, 0.0 + (_GLF_IDENTITY(-9.3, (-9.3) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) : injectionSwitch[0]), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(477.564) : _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-9.3, 0.0 + (_GLF_IDENTITY(-9.3, (-9.3) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) : injectionSwitch[0]), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), true))), true))))) ? _GLF_FUZZED(_GLF_IDENTITY(-9.3, 0.0 + (_GLF_IDENTITY(-9.3, (-9.3) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) : injectionSwitch[0])) - 0.0), 0.0 + (_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(477.564) : _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-9.3, 0.0 + (_GLF_IDENTITY(-9.3, (-9.3) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) : injectionSwitch[0]), ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))), true))), true))))) ? _GLF_FUZZED(_GLF_IDENTITY(-9.3, 0.0 + (_GLF_IDENTITY(-9.3, (-9.3) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) : injectionSwitch[0])) - 0.0)))))), injectionSwitch[1])).x > injectionSwitch.y)))), false), false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-9.3) : injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : injectionSwitch[0]) / 1.0), mix(float(_GLF_FUZZED(3.3)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(-9.3) : injectionSwitch[0], (false ? _GLF_FUZZED(-9.3) : injectionSwitch[0]) / 1.0)), bool(true))))), _GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 1.0, sin(0.0)))))).x > injectionSwitch.y)))), false))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-480.686))), injectionSwitch.y)) : _GLF_FUZZED(-2.0))))))) && (bool(true))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((true), bool(bvec3((true), true, false)))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((true), true, false))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((true), true, false))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), true, true, true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))))), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-15.34)), float(0.0), bool(true))), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(3.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))) | _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))))), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-15.34)), float(0.0), bool(true))), injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(3.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))) | _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))) ^ 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))), ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))))) ^ 0u), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), ~ (~ (min(workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)))))))) ^ 0u)))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u))), ((0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), 0u | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u))))))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), 0u | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), clamp(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), 0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))))))))), ~ (~ (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), uint(uvec4(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u))), 0u, 0u)))))))), clamp(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 1u))) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(_GLF_IDENTITY(5u, 0u + (5u)))) ^ 0u)))), (subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u))))), ((subgroup_id)) ^ (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))), uint(uvec2((subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)))), 0u)))))) / ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1)), (true ? ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1)) : _GLF_FUZZED(24443u))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id))), (_GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id)))) | (_GLF_IDENTITY((subgroup_id), 0u ^ (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))))))) | (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / 1), subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) << 0u)))) % subgroup_size), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))) | (subgroup_id)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).y)), false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, abs(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), min(vec2(mat3x4(injectionSwitch, 0.0, abs(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, abs(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), min(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))))).y)), true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-57.16), _GLF_IDENTITY((vec4(determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, 0.0, 1.0))[1], ((vec4(determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, 0.0, 1.0))[1]) - 0.0), (vec4(determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, 0.0, 1.0))[2], _GLF_FUZZED(-9.2)), vec4((vec4(determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, 0.0, 1.0))[0], _GLF_FUZZED(-8053.3201), _GLF_FUZZED(-859.900), (vec4(determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, 0.0, 1.0))[3]), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))))))))), 1.0)))), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + length(vec4(0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))), float(mat4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(sqrt(vec2(1.0, 1.0))))))), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0)))))))), vec4(_GLF_IDENTITY(sin(0.0), (sin(0.0)) + 0.0), 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tan(faceforward(-2.1, -5848.6410, -21.40))))) > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y))) || false) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)))), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false) && true))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)))), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false) && true))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)))), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false) && true))))))), false, true))))), false || (((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(determinant(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(dot(vec4(determinant(mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8707.0907)), float(0.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0)), dot(vec4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(sin(0.0), 0.0, 0.0, 1.0))))))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0)))).y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))))))))))), (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))))))))))), ! (! (true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))))))))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(bool(bvec4(false, false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))), _GLF_IDENTITY(false || (bool(bvec4(false, false, false, true))), ! (! (false || (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))) + (1u ^ 1u), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(uint(3u), uint(3u))) + (1u ^ 1u))))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (true ? uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u) : _GLF_FUZZED((_GLF_IDENTITY(uvec4(5971u, 16850u, 33773u, 51002u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(179251u, 98926u, 172642u, 51034u)) : uvec4(5971u, 16850u, 33773u, 51002u))) % atomicExchange(subgroup_local_id, subgroup_local_id))))), (uvec4(virtual_gid, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u | (0u))) | (0u)) | 0u))) ^ 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (true ? uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u) : _GLF_FUZZED((_GLF_IDENTITY(uvec4(5971u, 16850u, 33773u, 51002u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(179251u, 98926u, 172642u, 51034u)) : uvec4(5971u, 16850u, 33773u, 51002u))) % atomicExchange(subgroup_local_id, subgroup_local_id))))), (uvec4(virtual_gid, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (0u), ((_GLF_IDENTITY(0u, 0u | (0u))) | (0u)) | 0u))) ^ 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) - (uvec4(96467u, 42992u, 34255u, 69448u) & uvec4(0u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (uvec4(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u ^ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u ^ ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (1u & 1u) * ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) / 1u)), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)))), (uint(_GLF_IDENTITY(3u, (3u) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))))), 0u, 1u), min(uvec4(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ _GLF_IDENTITY((~ ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), min((~ ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), (~ ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u, 1u), _GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, uint(uvec4(3u, 0u, 1u, 1u))), 3u)))))))), 0u, 1u), (uvec4(virtual_gid, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ ((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), 0u, 1u)) / uvec4(1u, 1u, 1u, 1u)))), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) | (0u)))), 1u)) ^ uvec4(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY((1u) << 0u, min((1u) << 0u, _GLF_IDENTITY((1u) << 0u, 1u * ((1u) << 0u))))), 1u))), 0u, 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), uint(3u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u)), 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))) - (0u | 0u)), 0u, 0u)))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(3u, 3u))), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), uint(3u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u)), 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))) - (0u | 0u)), 0u, 0u))))) | uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, 1u)) ^ uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), 0u | (uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), 0u, 0u)), (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> 0u)), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, 1u * (3u)), 3u, 3u))), uint(3u))), 0u, 1u)) ^ uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), 0u | (uint(uvec3(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) / 1.0)), 0u))))), 0u, 0u))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u, 1u), (uvec4(virtual_gid, (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u)), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u)), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))))), ((~ (~ (_GLF_IDENTITY(uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u)), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u))) | ((~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(virtual_gid, (1u | 0u)), (uvec2(virtual_gid, (1u | 0u))) | (uvec2(virtual_gid, (1u | 0u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(virtual_gid, (1u | 0u)), (uvec2(virtual_gid, (1u | 0u))) | (uvec2(virtual_gid, (1u | 0u)))))) << 0u, uint(uint((uint(_GLF_IDENTITY(uvec2(virtual_gid, (1u | 0u)), (uvec2(virtual_gid, (1u | 0u))) | (uvec2(virtual_gid, (1u | 0u)))))) << 0u))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (~ (3u)))) << (0u | 0u))), uint(3u))))))))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), uint(3u))) / 1u, uint(uvec3((_GLF_IDENTITY(uint(3u), uint(3u))) / 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))))))), (_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u))), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u))), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), clamp(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << 0u)))))) : _GLF_FUZZED(workgroup_size))), 0u, 1u), (uvec4(virtual_gid, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u, _GLF_IDENTITY(1u, (1u) | (1u)))) << uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u))))))], _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ ((subgroup_local_id))) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((subgroup_local_id)) | 0u)) | 0u)) + 1 : _GLF_FUZZED(next_virtual_gid)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((subgroup_local_id)) | 0u)) | 0u)) + 1 : _GLF_FUZZED(next_virtual_gid))))) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((subgroup_local_id)) | 0u)) | 0u)) + 1 : _GLF_FUZZED(next_virtual_gid))))) / 1u, (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((subgroup_local_id)) | 0u)) | 0u)) + 1 : _GLF_FUZZED(next_virtual_gid))))) / 1u) / 1u)), 0u | (~ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((subgroup_local_id)) | 0u)) | 0u)) + 1 : _GLF_FUZZED(next_virtual_gid))))) / 1u, (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((subgroup_local_id)) | 0u)) | 0u)) + 1 : _GLF_FUZZED(next_virtual_gid))))) / 1u) / 1u))))))) - 0u) < subgroup_size, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))), (false ? _GLF_FUZZED(virtual_gid) : ~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))))))) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))))))) - 0u) < subgroup_size)), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))), (false ? _GLF_FUZZED(virtual_gid) : ~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))))))) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))))))) - 0u) < subgroup_size)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))), (false ? _GLF_FUZZED(virtual_gid) : ~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))))))) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))))))) - 0u) < subgroup_size)), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id)))) << (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)) + 1, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))), (false ? _GLF_FUZZED(virtual_gid) : ~ ((_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id))))) | 0u))))))) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)) | 0u)) + 1) ^ 0u) : _GLF_FUZZED(next_virtual_gid)) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | 0u))))))) - 0u) < subgroup_size))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u ^ (virtual_gid), 0u ^ (_GLF_IDENTITY(0u ^ (virtual_gid), max(0u ^ (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(read) : virtual_gid)), virtual_gid))), _GLF_IDENTITY(0u ^ (virtual_gid), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u ^ (virtual_gid)), ~ (~ (~ (0u ^ (virtual_gid)))))), 0u | (~ (_GLF_IDENTITY(~ (0u ^ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), ~ (~ (~ (0u ^ (virtual_gid))))))))))))))], read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), true, false))), (_GLF_IDENTITY((false), ((false)) || false)) || false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-28.24))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-28.24))) > injectionSwitch.y, true, false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, tan(0.0))))), float(_GLF_FUZZED(-2.8)), bool(false))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * exp(0.0)), (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(572.716)), float(injectionSwitch.y), bool(true)))) / 1.0), min(injectionSwitch.y, injectionSwitch.y))) * _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(-81.70)), bool(false)))) : _GLF_FUZZED(length((mat4(-3.2, 3124.0145, -4.0, -58.62, -3.6, -5.7, 7.4, 414.603, -831.262, 76.47, 5.4, _GLF_IDENTITY(8.8, (_GLF_IDENTITY(false ? _GLF_FUZZED(-9.2) : 8.8, (true ? false ? _GLF_FUZZED(-9.2) : 8.8 : _GLF_FUZZED(normalize(1332.7155)))))), -3.5, 2.2, 349.289, 9.0) * vec4(-0.2, 7.8, -8.2, -492.009))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (false)))), (bool((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))) && true))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true))))))))))))))) && true)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true))))))))))))))) && true)))))))), ! (! (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true))))))))))))))) && true)))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec3((false), false, true)))), true && ((_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true))))))))))))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(false, ! (! (false))), true))))), ! (! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3((false), false, true))))))))), (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true))))))))))))))) && true)))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true)))))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (_GLF_IDENTITY(bool(bvec3((false), false, true)), bool(bvec4(bool(bvec3((false), false, true)), false, false, false)))))))) || false)))))))))) && true)))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))))))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))))))), (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, true))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (bool(bvec3((false), false, true)))))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), false || (_GLF_IDENTITY(bool(bvec3((false), false, true)), bool(bvec4(bool(bvec3((false), false, true)), false, false, false)))))))) || false)))))))))) && true)))))))))))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + tan(0.0)), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4.2) : (1.0))) * 1.0), 1.0, 1.0, exp(0.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
