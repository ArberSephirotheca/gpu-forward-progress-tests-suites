#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat4 _f0;
 vec3 _f1;
 mat2x3 _f2;
 float _f3;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 bool _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 ivec4 _f4;
 bvec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 mat4x2 _f1;
 float _f2;
 bool _f3;
 ivec4 _f4;
 mat4x2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 uvec3 _f1;
 uint virtual_gid;
 uvec2 _f2;
 int _f3;
 ivec2 _f4;
 uint _f5;
 vec4 _f6;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 _GLF_struct_7 _f1;
 int _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_6 _f0;
 mat4x2 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 uint _f1;
 uint num_workgroup;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 mat2x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 _GLF_struct_1 _f1;
 mat3 _f2;
 vec3 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 int i;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 bvec3 _f2;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(2003.9935))), injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))) > injectionSwitch.y))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(_GLF_IDENTITY(roundEven(vec2(-5.7, -7.1)), clamp(roundEven(vec2(-5.7, -7.1)), roundEven(vec2(-5.7, -7.1)), roundEven(_GLF_IDENTITY(vec2(-5.7, -7.1), max(_GLF_IDENTITY(vec2(-5.7, -7.1), max(vec2(-5.7, -7.1), vec2(-5.7, -7.1))), vec2(-5.7, -7.1))))))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, cos(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x3(injectionSwitch.x, cos(0.0), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(439.798)), bool(false))), 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.9))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.9))), (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.9))) : _GLF_FUZZED(atanh(766.325)))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(-5.8)))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))))))[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)))), vec2(_GLF_FUZZED(-3847.3724), _GLF_FUZZED(0.5)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8876.0764, -8.6)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.3) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(-7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(ivec3(1), 1u, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u)))), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY(0u, 0u | (0u))))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u | (0u))) << 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), ~ (~ (uint(uvec3(0u, 0u, 0u)))))))), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))))) ^ (gl_NumWorkGroups)), 0u), max(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u), uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u)))) - uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(17051u) : 1u))) * (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_local_id)))))), 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u))) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u))))))))) >> uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u)))), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY(0u, 0u | (0u))))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u | (0u))) << 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), ~ (~ (uint(uvec3(0u, 0u, 0u)))))))), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))))) ^ (gl_NumWorkGroups)), 0u), max(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u), uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u)))) - uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(17051u) : 1u))) * (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_local_id)))))), 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u))) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u))))))))) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u)))), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(0u, 0u | (0u))))), (_GLF_IDENTITY(0u, 0u | (0u))))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u | (0u))) << 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), ~ (~ (uint(uvec3(0u, 0u, 0u)))))))), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))))) ^ (gl_NumWorkGroups)), 0u), max(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u), uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(42743u, 89947u, 183243u))))) << uvec3(0u, 0u, 0u)))) ^ (gl_NumWorkGroups)), 0u)))) - uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(17051u) : 1u))) * (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(29451u, 4065u, 72738u)) : (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) >> (0u | 0u)), 0u) ^ (gl_NumWorkGroups))) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_local_id)))))), 0u))))) >> uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) << 0u), 0u)), 0u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u))) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(54048u, 31584u, 15386u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))) ^ (gl_NumWorkGroups)), 0u))))))))) >> uvec3(0u, 0u, 0u)))))) >> _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), uint(uint((~ (0u)))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))))) * 1u)))), clamp(uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY((0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (~ ((0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))), _GLF_IDENTITY(0u, (0u) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)))), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)))), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))), min(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))), _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), clamp(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)), ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))) * 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (160960u & 0u))), (uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (160960u & 0u)))) + 0u))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)), ((_GLF_IDENTITY(0u, (0u) * 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(103248u) : (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (160960u & 0u))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)), ((_GLF_IDENTITY(0u, (0u) * 1u))) >> 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (160960u & 0u)))) + 0u))) ^ 0u) - 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) * 1u)), max(clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) * 1u)), clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) * 1u)))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, min(1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, min(1u, 1u))), (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u)) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (0u) * 1u)))))), clamp(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), 0u | (_GLF_IDENTITY(0u, (0u) * 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) >> 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), 1u))))))), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (_GLF_IDENTITY((0u) * 1u, uint(uvec4((0u) * 1u, 1u, 1u, 0u)))) | (0u ^ 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) << 0u)))), min(uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u))))))))))).x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ~ (_GLF_IDENTITY(~ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), _GLF_IDENTITY(uint(uvec2(~ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), min(max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))))))), 1u)), min(uint(uvec2(~ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), 1u)), uint(uvec2(~ (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), 1u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_6(mat2x3(1.0)), mat4x2(1.0), _GLF_struct_10(vec3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(mix(-632.295, -2.3, (mat3(-6.2, _GLF_IDENTITY(-3271.7673, float(mat4x2(-3271.7673, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0)))), -9.7, 4.4, _GLF_IDENTITY(0.5, min(_GLF_IDENTITY(0.5, (0.5) / 1.0), 0.5)), -7177.0986, 2274.4344, _GLF_IDENTITY(-5.6, float(mat3(_GLF_IDENTITY(-5.6, float(_GLF_IDENTITY(float(-5.6), clamp(float(-5.6), float(-5.6), float(-5.6))))), 1.0, determinant(mat3(1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, sin(0.0), 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), -1.4) != _GLF_IDENTITY(mat3(1.6, -4.8, 2.8, _GLF_IDENTITY(-1.6, 0.0 + _GLF_IDENTITY((-1.6), max((-1.6), _GLF_IDENTITY((-1.6), clamp((-1.6), (-1.6), (-1.6)))))), _GLF_IDENTITY(-8160.2560, mix(float(-8160.2560), float(_GLF_FUZZED(vec3(-93.72, -4.2, 8.7).s)), bool(false))), -926.355, 93.63, 5.3, _GLF_IDENTITY(-3758.7698, _GLF_IDENTITY((false ? _GLF_FUZZED(length(vec3(-94.49, -4233.8935, -2.0))) : -3758.7698), max(_GLF_IDENTITY((false ? _GLF_FUZZED(length(vec3(-94.49, _GLF_IDENTITY(-4233.8935, mix(float(-4233.8935), float(_GLF_FUZZED(8035.2879)), bool(false))), -2.0))) : -3758.7698), mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY((false ? _GLF_FUZZED(length(vec3(-94.49, -4233.8935, -2.0))) : -3758.7698), max(_GLF_IDENTITY((false ? _GLF_FUZZED(length(vec3(-94.49, -4233.8935, -2.0))) : -3758.7698), (false ? _GLF_FUZZED(-0.4) : (false ? _GLF_FUZZED(length(vec3(-94.49, -4233.8935, -2.0))) : -3758.7698))), (false ? _GLF_FUZZED(length(vec3(-94.49, -4233.8935, -2.0))) : -3758.7698)))), bool(true))), (false ? _GLF_FUZZED(length(vec3(-94.49, -4233.8935, -2.0))) : -3758.7698))))), (mat3(1.6, -4.8, 2.8, -1.6, -8160.2560, -926.355, 93.63, 5.3, -3758.7698)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_struct_7(vec2(1.0), bvec2(true), bvec2(true)), 1, _GLF_struct_8(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), vec3(mat4x3(vec3(1.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0))), vec3(1.0))), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) ^ 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, ((workgroup_base) - 0u) * 1u))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_size))) - 0u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) - 0u)))) ^ 0u) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, min(0u, 0u)))) ^ _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ 0u, ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (_GLF_IDENTITY(0u, 0u ^ (0u)))))))))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) ^ 0u))) - _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), min((0u << _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u << _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(subgroup_local_id))))), (true ? _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), min((0u << _GLF_IDENTITY(uint(0u), uint(0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) : _GLF_FUZZED(workgroup_size))))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uvec2(1u), 1, ivec2(1), 1u, vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_9(uvec3(1u), mat4x2(1.0), 1.0, _GLF_IDENTITY(true, (true) || false), ivec4(1), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.8) : 1.0)))), 1.0)), max(1.0, 1.0)), min(1.0, 1.0))), uvec4(1u))), _GLF_struct_14(bvec4(true), _GLF_struct_11(vec2(1.0), bvec3(true), mat2x4(1.0), mat4x3(1.0)), _GLF_struct_12(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, ivec2(1)), _GLF_struct_13(mat4(_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))), vec3(1.0), mat2x3(1.0), 1.0), ivec4(1), bvec4(true), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, true)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, true))), true, true, true)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(24.63) : injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.6, -18.45)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, false, false)))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-122.527, 83.67, 4490.9883, 66.95, 5.9, 1.6)) : mat2x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (true))), false)), true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false || _GLF_IDENTITY((false), ((false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0)))[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-14.81)))) - sqrt(0.0))), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false))))), false, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)))), (! (! (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false))))) && true))))))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(75480)))], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5682.1372) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))), (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false)))) / cos(0.0)), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))), (_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false)))) / cos(0.0)), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(65.07)), bool(false))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, true, true, false))))))), false, true), false)), true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(789.793), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), bvec2(true, false))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(789.793), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), bvec2(true, false))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(789.793), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), bvec2(true, false))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true, false)))))) && true))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(789.793), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.2)), bvec2(true, false))).x > injectionSwitch.y)) && true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, _GLF_IDENTITY(false, (false) && true), false))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, _GLF_IDENTITY(false, (false) && true), false))))))))))))), bool(bvec2((! (_GLF_IDENTITY(false, (false) || false))), false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_15._f2._f3.virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), min(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(4, 4)))), 0))), clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(max(4, 4), (_GLF_IDENTITY(max(4, 4), (max(4, 4)) ^ 0)) >> 0)) | (_GLF_IDENTITY(max(4, 4), (max(4, 4)) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(1, (1) >> 0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-59384) : 4)), (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-59384) : 4)) : _GLF_FUZZED(57574))), _GLF_IDENTITY(4, min(4, 4)))), max(4, 4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) / 1), max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) ^ 0))), max(4, 4))) ^ 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(4, max(4, 4))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(4, max(4, 4))), max(false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(4, max(4, 4))), false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(4, max(4, 4))), int(ivec2(false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(4, max(4, 4))), 0))), false ? _GLF_FUZZED(bitCount(37168)) : (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), int(ivec2(_GLF_IDENTITY(4, max(4, 4)), 0))))))))))) : _GLF_FUZZED(14114)))))))) - 0))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6667.1193)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(8.5)), bool(false)))))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6667.1193)), float(injectionSwitch.y), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(8.5), (_GLF_FUZZED(8.5)) / 1.0)), bool(false)))))))), true))), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-6.2), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))), clamp(uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))), uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))), uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), (0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))) << 0u), 0u), (uvec2(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), 0u)) >> uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))), 0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))), 0u ^ (min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), uint(_GLF_IDENTITY(uvec2(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), 0u), (uvec2(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), 0u ^ (0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))), 0u)) >> uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))), 0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))))), false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))), clamp(uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))) >> 0u), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))), uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bool(true))) ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))))))), uint(uint(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), (0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))) << 0u), 0u), (uvec2(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), 0u)) >> uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))), 0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))), 0u ^ (min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), uint(_GLF_IDENTITY(uvec2(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), 0u), (uvec2(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id)))), 0u ^ (0u + (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? subgroup_size : _GLF_FUZZED(subgroup_id)))))), 0u)) >> uvec2(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))), 0u)))), 0u + (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), bool(_GLF_IDENTITY(bvec2(true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), false), bvec2(bvec2(bvec2(true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), false)))))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true), false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), min(_GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), mix(float(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), float(_GLF_FUZZED(5.9)), bool(false))), _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) + _GLF_IDENTITY(0.0, (0.0) * 1.0))), (max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) / abs(1.0))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0))))), mix(float(_GLF_FUZZED(-91.37)), float(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0))))), float(mat3(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0))))), clamp(1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) + 0.0))))))), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), log(1.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)))), bool(true))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (injectionSwitch.x) + 0.0))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.1)), bool(false))) > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), false))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-104.488)), vec2(_GLF_FUZZED(911.005), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, (true) || false)))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false))))))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, (true) || false)))), true, false))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, sqrt(0.0), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, sqrt(0.0), 1.0, 1.0))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43.33) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(6245.2101) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_0(mat3x4(1.0), 0), mat4(1.0), bvec3(true), _GLF_struct_3(vec3(1.0), _GLF_struct_1(vec4(1.0), mat4x3(1.0), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(true, (true) || false)))), mat2x3(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), mat3(1.0), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_2(mat3(1.0), vec2(1.0))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-137.294)), bool(false)))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), max(clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-137.294)), bool(false)))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-137.294)), bool(false)))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[_GLF_IDENTITY(1, (1) / 1)]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), max(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false)))))) / vec2(1.0, 1.0)), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), max(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), float(_GLF_IDENTITY(mat3x4(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat3x4(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))))), vec2(0.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-35.03))), 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) / 1.0)), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) * 1.0), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(74890u))), float(1.0), bool(true)))) / 1.0), 1.0))[0], (vec2(1.0, 1.0))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-340.894), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-340.894, (-340.894) - sqrt(0.0)))), float(_GLF_FUZZED(2858.7939)), bool(false))), _GLF_FUZZED((+ 0.5))), clamp(vec2(_GLF_IDENTITY(_GLF_FUZZED(-340.894), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-340.894, (-340.894) - sqrt(0.0)))), float(_GLF_FUZZED(2858.7939)), bool(false))), _GLF_FUZZED((+ 0.5))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-340.894), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-340.894, (-340.894) - sqrt(0.0)))), float(_GLF_FUZZED(2858.7939)), bool(false))), _GLF_FUZZED((+ 0.5))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-340.894), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-340.894, (-340.894) - sqrt(0.0)))), float(_GLF_FUZZED(2858.7939)), bool(false))), _GLF_FUZZED((+ 0.5))), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-340.894), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-340.894, (-340.894) - sqrt(0.0)))), float(_GLF_FUZZED(2858.7939)), bool(false))), _GLF_FUZZED((+ 0.5))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-340.894), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-340.894, (-340.894) - sqrt(0.0)))), float(_GLF_FUZZED(2858.7939)), bool(false))), _GLF_FUZZED((+ 0.5))))))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 1.0, sqrt(0.0), log(1.0), 1.0, 0.0, 1.0, 1.0, cos(0.0), 1.0))), 0.0) + (injectionSwitch)).y)))))), clamp(float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), 1.0 * (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-298.555, mix(float(_GLF_IDENTITY(-298.555, min(-298.555, -298.555))), float(_GLF_FUZZED(-3.8)), bool(false))))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(9.0)), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))), 1.0))))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED((+ 0.5))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(_GLF_FUZZED(-224.501)), bool(false))), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0))))))), vec2(0.0, 0.0)), (false ? _GLF_FUZZED(2.5) : dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-224.501, 0.0 + (-224.501)))), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-224.501)), bool(false))), 1.0), vec2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(_GLF_FUZZED(-224.501)), bool(false))), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0))))))), vec2(0.0, 0.0)))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED(_GLF_IDENTITY((+ 0.5), (true ? (+ 0.5) : _GLF_FUZZED(-0.4))))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) * 1.0)), transpose(transpose(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-340.894), _GLF_FUZZED(_GLF_IDENTITY((+ 0.5), mix(float(_GLF_IDENTITY((+ 0.5), min((+ 0.5), (+ 0.5)))), float(_GLF_FUZZED(-16.63)), bool(false))))), bvec2(false, false))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, tan(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(9013.4535) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(6.1, clamp(6.1, _GLF_IDENTITY(6.1, clamp(6.1, 6.1, 6.1)), 6.1))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2(false, true), true, true)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec2(-2.1, 7.6).t), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(-2.1, 7.6).t), (_GLF_FUZZED(vec2(-2.1, 7.6).t)) / 1.0), _GLF_FUZZED(vec2(-2.1, 7.6).t)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 0.0, sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 0.0))) + (injectionSwitch)), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), mat2(1.0) * (injectionSwitch)), sqrt(abs(vec2(0.0, 0.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0)), 0.0) + (injectionSwitch)), mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 0.0, 0.0)), (vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (injectionSwitch)), mat2(1.0) * (injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 0.0))) - vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ((_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) && true))))))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ((_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) && true))))))))), true)))), (! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ((_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))) && true))))))))), true))))) && true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(39.61) : injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(_GLF_FUZZED(float(true)), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_FUZZED(-4.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_struct_replacement_15._f2._f3.virtual_gid], read, _GLF_IDENTITY(4, (4) / (1 & 1)), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) - 0) + (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.7)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.2, 2.6)))))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), false, false)))), true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), true)), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true)), false)))), false, false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) && true))) || _GLF_IDENTITY(false, false || (false)))))))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(! (false), false)), bool(bvec3(bool(bvec2(! (false), false)), false, false))))))))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))))), false, false)))), true))))), false, true)), true))))))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4653.2646) : 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-400.063, -4106.1504, 9.3, 2359.8010, 0.5, -126.265, -7.4, 7.1, 751.900, 7.7, -9.8, -8413.3512, 9201.6094, -28.74, -4.6, -9.0)) : mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4653.2646) : 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-400.063, -4106.1504, 9.3, 2359.8010, 0.5, -126.265, -7.4, 7.1, 751.900, 7.7, -9.8, -8413.3512, 9201.6094, -28.74, -4.6, -9.0)) : mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y))))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4653.2646) : 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-400.063, -4106.1504, 9.3, 2359.8010, 0.5, -126.265, -7.4, 7.1, 751.900, 7.7, -9.8, -8413.3512, 9201.6094, -28.74, -4.6, -9.0)) : mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)))))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), ! (! (! (bool(bvec4(false, false, true, false))))))))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bvec2(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8819.6059)), vec2(_GLF_FUZZED(-306.067), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8819.6059)), vec2(_GLF_FUZZED(-306.067), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)))), (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8819.6059)), vec2(_GLF_FUZZED(-306.067), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8819.6059)), vec2(_GLF_FUZZED(-306.067), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))), ! (! (bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8819.6059)), vec2(_GLF_FUZZED(-306.067), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))))))))) && true))), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-21.42))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-21.42))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(478.263, -5388.3822, 426.968, 7709.3463, -6.7, -1133.9941)) : mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-21.42))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-687.279) : float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-33.92)), vec2(_GLF_FUZZED(6789.9177), (vec2(0.0, 0.0))[1]), bvec2(false, true))) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-21.42))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), (false ? _GLF_FUZZED(mat2x3(478.263, -5388.3822, 426.968, 7709.3463, -6.7, -1133.9941)) : mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-21.42))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0))))))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)), bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, true)), false || _GLF_IDENTITY((bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool((bool(bvec3(false, true, true)))), _GLF_IDENTITY(bool(bool(bool((bool(bvec3(false, true, true)))))), bool(bool(bool(bool(bool((bool(bvec3(false, true, true))))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true))))), bool(bvec4(_GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), ! (! ((_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((true), ((true)) && true) && true))), ((bool(_GLF_IDENTITY(true, (true) && true)))) && true) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, (true) && true))), ((bool(_GLF_IDENTITY(true, (true) && true)))) && true) || false))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, (true) && true))), ((bool(_GLF_IDENTITY(true, (true) && true)))) && true) || false)))) || false), bool(bvec4(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, (true) && true))), ((bool(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true) || false))), false, false, true)))))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((injectionSwitch.x < injectionSwitch.y))))))) && true))))))), ! (! ((false)))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), min(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_15._f2._f3.virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_15._f2._f3.virtual_gid)), ((~ (_GLF_struct_replacement_15._f2._f3.virtual_gid))) / 1u))], read, 4, 64, _GLF_IDENTITY(4, 0 + (4)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
