#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), (_GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), true, false, false)))) && true) && true)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false || (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(vec2(6.4, 59.47)) : vec2(vec2(injectionSwitch))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(vec2(6.4, _GLF_IDENTITY(59.47, min(59.47, 59.47)))) : vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(vec2(6.4, 59.47)) : vec2(vec2(injectionSwitch))))))).y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(5.1, -383.256)), min(_GLF_FUZZED(vec2(5.1, -383.256)), _GLF_FUZZED(vec2(5.1, -383.256)))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, true)), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, true)), false, true, false)), true && (bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, true)), false, true, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool((! (false))))), false || (! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true && (bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-21.53), _GLF_FUZZED(-37.43)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-52.99)))), bvec2(true, true))))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2(1.0), workgroup_size * workgroup_id);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), false, true, false))), false, false)))))))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, false || (false))))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))) || false))), ! (! ((false)))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))) || false))), ! (! ((false))))), (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))) || false))), ! (! ((false))))), (! (false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), true))) || false))), ! (! (_GLF_IDENTITY((false), true && ((false)))))))) && true)) || false))))), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))).x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! ((_GLF_DEAD(false))))), false, _GLF_IDENTITY(false, true && (false)), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, _GLF_IDENTITY(true, false || (true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_DEAD(false))))), false, false, true))), _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))))))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_DEAD(false))))), false, false, true))), _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))))))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! ((_GLF_DEAD(false))))), false, false, true))), _GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))))))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(99.25)), bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, (true ? _GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) ^ 0u))))), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, (true ? _GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) ^ 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, (false ? _GLF_FUZZED(145009u) : _GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, clamp(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base)), _GLF_struct_replacement_0.workgroup_base + subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))))) ^ 0u)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))))) ^ 0u))))), subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u), uint(uint((subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u))))), subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, 0u))), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), subgroup_local_id)) << 0u), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), subgroup_local_id)) << 0u)))) * 1u)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << 0u))) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) * 1u, uint(uint((0u) * 1u))), 0u ^ (_GLF_IDENTITY((0u) * 1u, (true ? (0u) * 1u : _GLF_FUZZED(workgroup_size)))))), 0u)))), (false ? _GLF_FUZZED(subgroup_base) : clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_0.workgroup_base)) + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_0.workgroup_base)) + subgroup_base + subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_0.workgroup_base)) + subgroup_base + subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, (_GLF_struct_replacement_0.workgroup_base + subgroup_base) | (_GLF_struct_replacement_0.workgroup_base + subgroup_base)) + subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id) << 0u, max((subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) + 0u)))) + 0u)))), _GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), 0u ^ (_GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), (min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) | 0u))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), max(uint(uvec3(_GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), 0u ^ (_GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), _GLF_IDENTITY((min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), (true ? _GLF_IDENTITY((min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))), ((min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_base))) | 0u))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(uvec3(_GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), 0u ^ (_GLF_IDENTITY(min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), (min((_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) | 0u))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) ^ 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(145009u) : _GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id, (false ? _GLF_FUZZED(145009u) : _GLF_struct_replacement_0.workgroup_base + subgroup_base + subgroup_local_id) ^ 0u))), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (1u ^ 1u) + (subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, (1u ^ 1u) + (subgroup_base)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, clamp(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_IDENTITY(min(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base), (min(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base)) / 1u)), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (false ? _GLF_FUZZED(uvec3(170597u, 5666u, 46011u).p) : _GLF_struct_replacement_0.workgroup_base)) + subgroup_base)), _GLF_struct_replacement_0.workgroup_base + subgroup_base), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, clamp(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_IDENTITY(min(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base), (min(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base)) / 1u)), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (false ? _GLF_FUZZED(uvec3(170597u, 5666u, 46011u).p) : _GLF_struct_replacement_0.workgroup_base)) + subgroup_base)), _GLF_struct_replacement_0.workgroup_base + subgroup_base)), uint(uvec4(~ (min(_GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, clamp(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_IDENTITY(min(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base), (min(_GLF_struct_replacement_0.workgroup_base + subgroup_base, _GLF_struct_replacement_0.workgroup_base + subgroup_base)) / 1u)), _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base, (false ? _GLF_FUZZED(uvec3(170597u, 5666u, 46011u).p) : _GLF_struct_replacement_0.workgroup_base)) + subgroup_base)), _GLF_struct_replacement_0.workgroup_base + subgroup_base)), 0u, 0u, 1u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id)), (_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id)), ((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id))) | ((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id)), (_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id)), ((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id))) | ((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id))))) / 1u), (_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id)), (_GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id)), ((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id))) | ((min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, 7u))), uint(7u))) ^ 0u)), subgroup_local_id))))) / 1u)) << 0u)) << 0u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, ~ (~ (7u)))) >> 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(7u), uint(7u)))))) << 0u)))))) ^ 0u)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << 0u), ~ (~ (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) << 0u)))), (min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_id)))))) << ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), subgroup_local_id)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) / 1u), min(subgroup_local_id, subgroup_local_id))), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)), subgroup_local_id)) << 0u)))) * _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(num_workgroup))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), (_GLF_IDENTITY(uint(subgroup_local_id), 0u + (uint(subgroup_local_id)))) * 1u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), (_GLF_IDENTITY(uint(subgroup_local_id), 0u + (uint(subgroup_local_id)))) * 1u))))), ((~ (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), (_GLF_IDENTITY(uint(subgroup_local_id), 0u + (uint(subgroup_local_id)))) * 1u)))))) - 0u)) ^ 0u)), subgroup_local_id)), subgroup_local_id)) << 0u))) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5389.3656)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))), false || (bool(false))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), true && ((! (_GLF_IDENTITY(false, (false) || false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), ((! (_GLF_IDENTITY(true, true && (true))))) || false)), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((! (! (_GLF_IDENTITY(false, (false) || false))))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))) * _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))), false || ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))) * cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))) * cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size), max(_GLF_struct_replacement_0.workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((min(subgroup_local_id, subgroup_local_id)), min((min(subgroup_local_id, subgroup_local_id)), (min(subgroup_local_id, subgroup_local_id)))), ~ (~ (~ (min(subgroup_local_id, subgroup_local_id)))))))))) + 1) % subgroup_size), _GLF_struct_replacement_0.workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) : _GLF_FUZZED(num_workgroup))), min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1))))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), sin(0.0), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(_GLF_IDENTITY(78.48, clamp(78.48, 78.48, 78.48))))), _GLF_FUZZED(_GLF_IDENTITY(-1.7, clamp(_GLF_IDENTITY(-1.7, clamp(-1.7, -1.7, -1.7)), -1.7, -1.7)))), (vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(_GLF_IDENTITY(78.48, clamp(78.48, 78.48, 78.48))))), _GLF_FUZZED(_GLF_IDENTITY(-1.7, clamp(_GLF_IDENTITY(-1.7, clamp(-1.7, -1.7, -1.7)), -1.7, -1.7))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x3(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(_GLF_IDENTITY(78.48, max(_GLF_IDENTITY(78.48, min(78.48, _GLF_IDENTITY(78.48, min(78.48, _GLF_IDENTITY(78.48, float(mat4x2(78.48, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), 78.48))))), _GLF_FUZZED(-1.7)), 0.0, 0.0, 1.0, 1.0))), vec2(mat4x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), vec2(mat2x3(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(78.48, max(_GLF_IDENTITY(78.48, min(78.48, 78.48)), 78.48))), clamp(_GLF_FUZZED(_GLF_IDENTITY(78.48, max(_GLF_IDENTITY(78.48, min(78.48, 78.48)), 78.48))), _GLF_FUZZED(_GLF_IDENTITY(78.48, max(_GLF_IDENTITY(78.48, min(78.48, 78.48)), 78.48))), _GLF_FUZZED(_GLF_IDENTITY(78.48, max(_GLF_IDENTITY(78.48, min(78.48, 78.48)), 78.48))))))), _GLF_FUZZED(-1.7)), 0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 1.0, log(1.0), 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-98.68), min(_GLF_FUZZED(-98.68), _GLF_IDENTITY(_GLF_FUZZED(-98.68), (_GLF_FUZZED(-98.68)) + determinant(mat2(0.0, 1.0, 0.0, 0.0))))), (vec2(0.0, 0.0))[1]), bvec2(false, true))), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), vec2(mat2x3(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), 0.0, 0.0, 1.0, 1.0))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-98.68, float(mat2(-98.68, round(length(normalize(1.0))), 1.0, sin(0.0))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-745.509) : 0.0)), 0.0), max(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-745.509) : 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-745.509) : 0.0)), 0.0))))[1]), bvec2(false, true))), (injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(7.0)), vec2((vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[0], (vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))[1]), bvec2(true, true))), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)))[_GLF_IDENTITY(0, (0) >> 0)] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? _GLF_IDENTITY((vec2(0.0, 0.0))[0], _GLF_IDENTITY(float(mat3((vec2(0.0, 0.0))[0], _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0)), (float(mat3((vec2(0.0, 0.0))[0], _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0))) + 0.0)) : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-63431)))], (true ? _GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], _GLF_FUZZED(-95.81)), vec2(_GLF_FUZZED(146.847), ((vec2(0.0, 0.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), vec2(vec4(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), 0.0, 1.0))), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(0.0, 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)), vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], (true ? (vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))[0] : _GLF_FUZZED(78.48))), _GLF_FUZZED(-1.7)))))), 0.0, 0.0, 1.0, 1.0))), vec2(_GLF_FUZZED(-98.68), (vec2(0.0, 0.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), true, true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))))))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.4) : 1.0)))), bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u | _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u | _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u | _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u | _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u | _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u))), _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u | _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | ((clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))))))) | 0u))))) % _GLF_IDENTITY(2, (2) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, sqrt(0.0), 1.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? max(1.0, 1.0) : _GLF_FUZZED(sinh(-9.9))))), 0.0, 1.0, 1.0, 0.0, 1.0))))))) == 0)
  {
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))))), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))]) >> 0u), buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), ~ (~ (~ (virtual_gid)))))), _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))))]) >> 0u), buf[virtual_gid], buf[virtual_gid]))) << 0u), (_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))], (buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))]) >> 0u), buf[virtual_gid], buf[virtual_gid]))) << 0u), ~ (~ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]), _GLF_IDENTITY(uint(uvec4((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]), 1u, 1u, 1u)), (uint(uvec4((buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]), 1u, 1u, 1u))) - 0u))))) | (buf[virtual_gid])), 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(72.96) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.0)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(7), int(7)))) ^ (int(int(4))))), (4) << _GLF_IDENTITY(0, (0) - 0)), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (true ? vec2(injectionSwitch.x, 1.0) : _GLF_FUZZED(injectionSwitch))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || false), true, true))) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), true, false, false))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true))))))), false || (false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(true)))))))))))) && true)))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || (false)), (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-8.9, 950.089, 9392.2146).x)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-8.9, 950.089, 9392.2146).x)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-8.9, 950.089, 9392.2146).x)), bool(false))))), 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), true, false))), true))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), true, false))), true))), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), true, false))), true))), false), true)), false))))))))), true))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) || false, bool(bool((_GLF_IDENTITY(false, bool(bool(false)))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
