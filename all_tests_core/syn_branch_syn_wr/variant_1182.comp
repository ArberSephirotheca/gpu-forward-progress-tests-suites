#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))[2])), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))))).x, _GLF_IDENTITY((false ? _GLF_FUZZED(2813u) : gl_WorkGroupSize.x), (false ? _GLF_FUZZED(43236u) : (false ? _GLF_FUZZED(2813u) : gl_WorkGroupSize.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))), max(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(true, false || (true)) ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))))))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2813u, clamp(2813u, 2813u, 2813u))) : gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), (max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), (_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), (_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), (max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))) | (_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), clamp(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), uint(uvec2(uint(uvec3(0u, 0u, 0u)), 1u))))))))) << uvec3(0u, 0u, 0u)))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2813u, (false ? _GLF_FUZZED(subgroup_size) : 2813u))) : gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), (max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))) << uvec3(0u, 0u, 0u))))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2813u, (false ? _GLF_FUZZED(subgroup_size) : 2813u))) : gl_WorkGroupSize.x))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])) | uvec3(0u, 0u, 0u)))))))), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), (max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, min(33142u, _GLF_IDENTITY(33142u, ~ (~ (_GLF_IDENTITY(33142u, min(33142u, 33142u))))))), 94308u, 181320u)))))) << uvec3(0u, 0u, 0u))))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(2813u, (false ? _GLF_FUZZED(subgroup_size) : 2813u))) : gl_WorkGroupSize.x))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) << uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(113085u, 167229u, _GLF_IDENTITY(38245u, ~ (~ (_GLF_IDENTITY(38245u, (_GLF_IDENTITY(38245u, min(38245u, 38245u))) | (38245u))))))) : (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) << uvec3(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, _GLF_IDENTITY(_GLF_IDENTITY(94308u, ~ _GLF_IDENTITY((~ (94308u)), uint(uint(_GLF_IDENTITY((~ (94308u)), min((~ (94308u)), (~ (94308u)))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(94308u, ~ (~ _GLF_IDENTITY((94308u), (false ? _GLF_FUZZED(subgroup_local_id) : (94308u))))), 0u, 1u), (uvec3(_GLF_IDENTITY(94308u, ~ (~ (94308u))), 0u, 1u)) | (uvec3(_GLF_IDENTITY(94308u, ~ (~ (94308u))), 0u, 1u))))), 181320u))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))), max(_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (33142u) >> 0u), 94308u, 181320u))), clamp(_GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (33142u) >> 0u), 94308u, 181320u))), max((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (33142u) >> 0u), 94308u, 181320u))), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (33142u) >> 0u), 94308u, 181320u))), ((true ? uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), 0u))) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(33142u, max(33142u, 33142u)), _GLF_IDENTITY((33142u), min((33142u), _GLF_IDENTITY((33142u), ~ (_GLF_IDENTITY(~ ((33142u)), (~ ((33142u))) / 1u))))) >> 0u), 94308u, 181320u)))) | uvec3(0u, 0u, 0u)))), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (33142u) >> 0u), 94308u, 181320u))), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (33142u) >> 0u), 94308u, 181320u))), (false ? _GLF_FUZZED(uvec3(187598u, 35305u, 65012u)) : (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(33142u, (_GLF_IDENTITY(33142u, (33142u) << 0u)) >> 0u), 94308u, 181320u))))))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(33142u, 94308u, 181320u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(64616u, 51349u, 90838u)) : uvec3(33142u, 94308u, 181320u))))))))))), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))), uvec3(uvec4((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))), 0u))))), uvec3(uvec4(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), 0u))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))), uvec3(0u, 0u, 0u) ^ ((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), uvec3(uvec4(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), clamp(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), 1u))))))))), uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), ~ (~ (uvec3(gl_WorkGroupSize)))), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (false ? _GLF_FUZZED(uvec3(114577u, 175197u, 51051u)) : true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) ^ uvec3(0u, 0u, 0u))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (false ? _GLF_FUZZED(uvec3(114577u, 175197u, 51051u)) : true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) ^ uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (false ? _GLF_FUZZED(uvec3(114577u, 175197u, 51051u)) : true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) ^ uvec3(0u, 0u, 0u))))), 1u), (false ? _GLF_FUZZED(uvec4(65217u, 82862u, 28677u, 160994u)) : uvec4((_GLF_IDENTITY(_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (false ? _GLF_FUZZED(uvec3(114577u, 175197u, 51051u)) : true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) ^ uvec3(0u, 0u, 0u))))), 1u))))) : _GLF_FUZZED(uvec3(49670u, 42187u, 190692u)))))), min(_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), uvec3(_GLF_IDENTITY(uvec4(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), 0u), (uvec4(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), 0u)) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) / uvec3(1u, 1u, 1u)))))))))), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, _GLF_IDENTITY(181320u, 0u | (181320u))))), ((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, _GLF_IDENTITY(181320u, 0u | (181320u)))))) | ((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, _GLF_IDENTITY(_GLF_IDENTITY(181320u, 0u | (181320u)), (_GLF_IDENTITY(181320u, 0u | (181320u))) | (_GLF_IDENTITY(181320u, 0u | (181320u))))))))))), min(max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))))), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))))))))))), 0u)))) | uvec3(0u, 0u, 0u))).x, (false ? _GLF_FUZZED(2813u) : gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))), ~ (~ (_GLF_IDENTITY((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))), ((true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))) * (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)), (_GLF_IDENTITY((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))))))))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))))))))))).x, (false ? _GLF_FUZZED(2813u) : gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)), (_GLF_IDENTITY(true, (true) || false) ? uvec3(gl_WorkGroupSize) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u))) | uvec3(0u, 0u, 0u)))))))).x, (false ? _GLF_FUZZED(2813u) : gl_WorkGroupSize.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (true ? _GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 0u))) : _GLF_FUZZED(uvec3(33142u, 94308u, 181320u)))))))).x, (false ? _GLF_FUZZED(2813u) : gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))), (true ? vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec2(-3.2, 1.6)))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && true)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), false), _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), true, true))), false), _GLF_IDENTITY(false, ! (! (false)))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), true, true))), false), _GLF_IDENTITY(false, ! (! (false))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), true, true))), false), _GLF_IDENTITY(false, ! (! (false))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), true, true))), false), _GLF_IDENTITY(false, ! (! (false))))))), true))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, exp(0.0), cos(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), false), _GLF_IDENTITY(false, ! (! (false))))))), true)))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))) || false))) && true))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), bool(bvec3(false, false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), false, true, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, (-1.6) - 0.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, _GLF_IDENTITY(true, true && (true)))))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(false, false))), injectionSwitch))) - abs(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, float(mat3x2(-1.6, log(1.0), 0.0, 1.0, 1.0, 1.0))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, _GLF_IDENTITY(true, true && (true)))))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(false, false))), injectionSwitch))) - abs(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(-1.6, float(mat3x2(-1.6, log(1.0), 0.0, 1.0, 1.0, 1.0))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false)))))), false, true))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))), ! (! (! _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))))), true && (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -9.1))))) / exp(sin(vec2(0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(504.471)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, false)), false, true)))))) || false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(_GLF_IDENTITY(false, false || (false)), false))), injectionSwitch))) - abs(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(22.45, -550.579)) : injectionSwitch)), injectionSwitch)).y))))))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false, true))), ! (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))), true && (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -9.1))))) / exp(sin(vec2(0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, float(_GLF_IDENTITY(mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(504.471)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, false)), false, true)))))) || false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(_GLF_IDENTITY(false, false || (false)), false))), injectionSwitch))) - abs(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(22.45, -550.579)) : injectionSwitch)), injectionSwitch)).y))))))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false, true))), ! (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))), true && (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -9.1))))) / exp(sin(vec2(0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, float(_GLF_IDENTITY(mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(504.471)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, false)), false, true)))))) || false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(_GLF_IDENTITY(false, false || (false)), false))), injectionSwitch))) - abs(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(22.45, -550.579)) : injectionSwitch)), injectionSwitch)).y))))))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false, true))), ! (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))), true && (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -9.1))))) / exp(sin(vec2(0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, float(_GLF_IDENTITY(mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(504.471)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, false)), false, true)))))) || false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(_GLF_IDENTITY(false, false || (false)), false))), injectionSwitch))) - abs(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(22.45, -550.579)) : injectionSwitch)), injectionSwitch)).y))))))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false, true))), ! (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))), true && (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -9.1))))) / exp(sin(vec2(0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, float(_GLF_IDENTITY(mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(504.471)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false, false)), false, true)))))) || false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(69.49)), bvec2(_GLF_IDENTITY(false, false || (false)), false))), injectionSwitch))) - abs(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED((+ _GLF_IDENTITY(-4.0, min(-4.0, -4.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(22.45, -550.579)) : injectionSwitch)), injectionSwitch)).y))))))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) / _GLF_ONE(1.0, injectionSwitch.y)), true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y)), true, false))), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(_GLF_IDENTITY(mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat2x3(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, sin(0.0), 0.0, 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), false, true))), ! (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))), true && (! (! (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), round(length(normalize(1.0))))), 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false, true))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9.6, -9.1))))) / exp(sin(vec2(0.0, 0.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(+ -4.0, float(_GLF_IDENTITY(mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat4(+ -4.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false, true)), false || (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -4.0))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-1.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true))))) || false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))), true, true)))))))), false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))), false, false, true))))), true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), 0u, 1u))) >> 0u))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))), true))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, cos(0.0), 0.0, 0.0, abs(1.0), abs(abs(0.0)), 1.0))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
