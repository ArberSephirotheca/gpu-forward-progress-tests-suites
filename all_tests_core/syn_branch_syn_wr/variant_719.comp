#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(_GLF_IDENTITY(1.0, 1.0 * (1.0))))) * (injectionSwitch.x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
    {
     return;
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.7) : injectionSwitch.y))) - 0.0)))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      break;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))), ((! (false))) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false), false), true))), false))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true) || _GLF_IDENTITY(false, bool(bool(false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
            }
          }
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(false)))) || false)))
              {
              }
             else
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, max(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x) >> 0u)));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (false ? _GLF_FUZZED(usubBorrow(_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup))), workgroup_base, num_workgroup)) : _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))))) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) - 0)), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 1 * (4)), 4)), (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) | 0), (0 << _GLF_IDENTITY(int(0), int(0)))), ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) | 0), (0 << _GLF_IDENTITY(int(0), int(0)))), (false ? _GLF_FUZZED(ivec2(19146, 16920)) : ivec2(_GLF_IDENTITY(4, (4) | 0), (0 << _GLF_IDENTITY(int(0), int(0))))))))))))), 64, 0);
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)), max((~ (subgroup_local_id + 1)), (~ (subgroup_local_id + 1)))) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), transpose(transpose(mat2(injectionSwitch, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x))))) < subgroup_size, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.4, (_GLF_IDENTITY(-8.4, float(mat4(-8.4, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0)), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))), false || (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)))))) < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)), injectionSwitch)))), injectionSwitch)).x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(_GLF_IDENTITY(false, (false) || false), false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), false || (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))), false || (bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))))))))), false || (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), false)))))))))))), true))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch))) : _GLF_FUZZED(vec2(-4.1, _GLF_IDENTITY(53.15, max(53.15, 53.15))))))).x < injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch))) : _GLF_FUZZED(vec2(-4.1, 53.15))))).x < injectionSwitch.y)) && true)))))))), false || (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), 0.0, 0.0, length(0.0), cos(0.0), 1.0, 0.0))))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))))), false || (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))), bool(bvec3(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))), false, true)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-5.1)), bvec2(false, false))), injectionSwitch)), injectionSwitch)).x < injectionSwitch.y))), true)), true)))))))))))), true))), true, true)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size, true, true), false))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), _GLF_IDENTITY(false, false || (false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), _GLF_IDENTITY(false, false || (false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), _GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1 < subgroup_size), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), false, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + 1 < subgroup_size)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) + 0u))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))) * 1u) < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (! (true))), false || ((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) << 0u)), false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | 0))))) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + 1 < subgroup_size)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))) * 1u, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), ~ (subgroup_local_id + 1)))))) * 1u) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, true, true))))))))))))), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (! (true))), false || ((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), ((! (_GLF_IDENTITY(true, false || (true))))) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), ((! (_GLF_IDENTITY(true, false || (true))))) || false), true, true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), false || (! (! (true)))))), false, _GLF_IDENTITY(true, (true) && true)))))))), true), _GLF_IDENTITY(false, (false) && true))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + 1 < subgroup_size)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))) * 1u) < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, ! (! (true))), false || ((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true))))))), true), _GLF_IDENTITY(false, (false) && true))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), bvec3(bvec4(bvec3(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + 1 < subgroup_size)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) * 1u) < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, ! (! (true))), false || ((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))), false, true)), true))))))))))))))))), true), _GLF_IDENTITY(false, (false) && true))))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)), true))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), true && (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid))) < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), (uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u, 0u, 0u)) >> (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(49918u, 102362u, 188623u, 121248u)))))))), bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), _GLF_IDENTITY(false, (false) || false)))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), true, true)))))))))), false)))))))) || false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(-24289) : 1)) < subgroup_size), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false)))))), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))), false)), false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y, false))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), bool(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 1u))))))) < subgroup_size))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-44.34)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 1u))))))) < subgroup_size))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-44.34)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))), false, false), false))), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u))))) ^ 0u))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), true && ((subgroup_local_id + 1 < subgroup_size))), false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size), false, false)))))), bool(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))), false, true))))), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))))), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false)))))), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))) * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))))), false || (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false))))))))))))) || false))))) && true)), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u))))) + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), true && (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), true && (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u) * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))))))))))), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), false || (true && (_GLF_IDENTITY(true, true && (true)))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), false || (true && (_GLF_IDENTITY(true, true && (true))))))))), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)) < subgroup_size, true, true), false)))))))) && true)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))) && true)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) / 1u)))))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, ! (! (true))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, ! (! (true))), true), false))))))))))) && true))))))))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(subgroup_local_id + 1 < subgroup_size, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), false)))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (((_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(-24289) : 1)) < subgroup_size), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, true)))))), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false)))))), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))), false)), false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y, false))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec4(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), bool(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 1u))))))) < subgroup_size))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-44.34)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, 0u, 1u))))))) < subgroup_size))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-44.34)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))), false, false), false))), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (1u & 1u), 0u, 1u))))) ^ 0u))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), true && ((subgroup_local_id + 1 < subgroup_size))), false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size), false, false)))))), bool(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false)))))), false, true))))), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))))), bool(_GLF_IDENTITY(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))), bvec3(bvec3(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, false)))))), bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))) * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))))), false || (! (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false))))))))))))) || false))))) && true)), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 0u))))) + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), true && (_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))), true && (bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u) * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) && true))))))))))), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))), ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), false || (true && (_GLF_IDENTITY(true, true && (true)))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), false || (true && (_GLF_IDENTITY(true, true && (true))))))))), true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)) < subgroup_size, true, true), false)))))))) && true)))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))))))) && true)), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) / 1u)))))))))), true, true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), true), false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, ! (! (true))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, false || (true)), true), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, ! (! (true))), true), false))))))))))) && true))))))))))))), ((! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(subgroup_local_id + 1 < subgroup_size, false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), false)))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))))))
    {
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(true, false || (true))))), false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(vec2(225.934, 4.2)) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))) - vec2(0.0, 0.0))).y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3((injectionSwitch), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat3((injectionSwitch), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))[0], _GLF_FUZZED(-7.0)), vec2(_GLF_FUZZED(-1408.0882), (vec2(mat3((injectionSwitch), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))[1]), bvec2(false, true)))) + abs(vec2(0.0, 0.0))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))) && true)), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), true, true))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(93147)), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), bvec2(true, false)), cos(vec2(0.0, 0.0)) * (mix(vec2(_GLF_FUZZED(float(93147)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-3.5)), bvec2(true, false))))).x > injectionSwitch.y))) || false)) || false)))) && true)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   break;
                  }
                 continue;
                }
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_DEAD(false))
              continue;
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))) || false))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))) || false))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, true), true)))))) || false), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))) || false))))), true), false, false))))))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), max(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, 0 | (4)))), 1 * (4)), max(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), max(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, 0 | (4)))), 1 * (4)), max(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), max(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))))) >> 0)));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, sin(0.0), 0.0, exp(sin(0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, sin(0.0), 0.0, exp(sin(0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0)), max(_GLF_IDENTITY(vec2(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, sin(0.0), 0.0, exp(sin(0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0)), mat2(1.0) * (vec2(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, sin(0.0), 0.0, exp(sin(0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0)))), vec2(mat2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, sin(0.0), 0.0, exp(sin(0.0)), sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0)))))).x > injectionSwitch.y)) && true), false || ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED((2.2 / 833.166)), _GLF_FUZZED(17.82)), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0)))))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0)))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x > injectionSwitch.y))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, false || (false)))), (false || (! (_GLF_IDENTITY(false, false || (false))))) || false)))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, false || (false)))), (false || (! (_GLF_IDENTITY(false, false || (false))))) || false)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, false || (false)))), (false || (! (_GLF_IDENTITY(false, false || (false))))) || false)))), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false), true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true))))), true, true))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), false))), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec2(-43.02, 39.44))) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), false)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))), true, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))), true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))), true, true))))))), true))))))))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), false))), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_IDENTITY(false, true && (false)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), true, true)), false))), false))))), false))), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)))), true)))), false)), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))) && true))) && true)))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))) || false))))
                    continue;
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(asin(-3521.1727)) : max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                   break;
                  }
                }
               else
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY((0 | 0), ((0 | 0)) * 1) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
                    {
                     return;
                    }
                  }
                }
              }
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
        {
        }
       else
        {
         return;
        }
      }
     for(int _injected_loop_counter = (0 & ((96597) % -9769)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), (! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
}
