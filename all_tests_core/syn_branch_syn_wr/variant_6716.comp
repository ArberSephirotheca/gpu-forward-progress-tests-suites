#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sin(0.0), 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), 1.0, abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))), (true ? (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(vec3(-16.04, -1510.2136, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))), clamp((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0)))), mat3(1.0) * ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0))))))))))), vec3(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(6.1, max(_GLF_IDENTITY(_GLF_IDENTITY(6.1, mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(6.1, (true ? 6.1 : _GLF_FUZZED(6.0)))), bool(true))), float(mat4(_GLF_IDENTITY(6.1, mix(float(_GLF_FUZZED(-6.3)), float(6.1), bool(true))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0))), 6.1))) : dot(vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2841.2982) : 0.0)))), 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(6.1) : dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0)), (mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0)), (mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0)), (mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(5.1)))), abs(0.0)))), min((false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))) + 0.0)), float(mat3x4((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(6.1, max(_GLF_IDENTITY(_GLF_IDENTITY(6.1, mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(6.1, (true ? 6.1 : _GLF_FUZZED(6.0)))), bool(true))), float(mat4(_GLF_IDENTITY(6.1, mix(float(_GLF_FUZZED(-6.3)), float(6.1), bool(true))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0))), 6.1))) : dot(vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2841.2982) : 0.0)))), 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(6.1) : dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0)), (mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0)), (mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0)), (mat4x2(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sin(0.0), sqrt(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, tan(0.0), exp(0.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(5.1)))), abs(0.0)))), min((false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))) + 0.0)), 1.0, sqrt(log(1.0)), 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, determinant(mat3(abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))), 0.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-150.956)), float(0.0), bool(true))), 0.0, 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-24.35)), float(1.0), bool(true))))), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), min(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) / vec3(1.0, 1.0, 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, float(_GLF_IDENTITY(mat4x3(37.99, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0), mat4x3(mat4x3(mat4x3(37.99, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))))), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))) * _GLF_IDENTITY((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(_GLF_IDENTITY(mat4(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0), (mat4(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(-309.349))))), max(vec3(mat2((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0))), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))), mix(vec3(_GLF_FUZZED(vec3(8.4, 8084.6531, 98.83).t), _GLF_FUZZED(-5.6), _GLF_FUZZED(-6399.2096)), vec3((_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))[0], (_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))[1], (_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY((mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(0.5, -51.34, -51.68).p)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true)))), mat3(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), clamp(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (false ? _GLF_FUZZED(vec3(88.40, 988.060, -98.65)) : _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (_GLF_IDENTITY((mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(0.5, -51.34, -51.68).p)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true)))), mat3(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), clamp(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (false ? _GLF_FUZZED(vec3(88.40, 988.060, -98.65)) : _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)), mat3(mat4x3((mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(0.5, -51.34, -51.68).p)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(true)))), mat3(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), clamp(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (false ? _GLF_FUZZED(vec3(88.40, 988.060, -98.65)) : _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0)))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)), mat3(mat3(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)), mat3(mat3(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))))))))), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), clamp(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), min(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(abs(0.0), (true ? _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))) - 0.0) : _GLF_FUZZED(6.4))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0, clamp(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(float(19571u))), bool(false))))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), (true ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, float(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))))) : _GLF_FUZZED(vec3(-7664.7001, -3492.6087, -79.56)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.3)), bool(false))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(float(19571u))), bool(false))))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), (true ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, float(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))))) : _GLF_FUZZED(vec3(-7664.7001, -3492.6087, -79.56)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.3)), bool(false))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(float(19571u))), bool(false))))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), (true ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, float(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))))) : _GLF_FUZZED(vec3(-7664.7001, -3492.6087, -79.56)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.3)), bool(false))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(float(19571u))), bool(false))))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), (true ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, float(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))))) : _GLF_FUZZED(vec3(-7664.7001, -3492.6087, -79.56)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.3)), bool(false))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))) * 1.0), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(float(19571u))), bool(false))))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), (true ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, float(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))))) : _GLF_FUZZED(vec3(-7664.7001, -3492.6087, -79.56)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.3)), bool(false))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(float(19571u))), bool(false))))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), (true ? _GLF_FUZZED(vec3(1.4, 37.99, _GLF_IDENTITY(2.7, float(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))), mat2(1.0) * (transpose(_GLF_IDENTITY(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0), transpose(transpose(mat2x3(2.7, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))))))))))))) : _GLF_FUZZED(vec3(-7664.7001, -3492.6087, -79.56)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0), (mat3x2(1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.3)), bool(false))))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))))) * 1.0)), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), min(_GLF_IDENTITY(_GLF_FUZZED(vec3(1.4, 37.99, 2.7)), vec3(1.0, 1.0, 1.0) * (_GLF_FUZZED(vec3(1.4, 37.99, 2.7)))), _GLF_FUZZED(vec3(1.4, 37.99, 2.7)))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), vec3(mat2x4((vec3(0.0, 1.0, 0.0)), 1.0, abs(1.0), 1.0, 0.0, abs(1.0)))), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(58.08), (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(3.2)), vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(0.1), (vec3(0.0, 1.0, 0.0))[2]), bvec3(true, false, true)))), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))) * mat3(1.0)), max(vec3(mat2((vec3(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8.8))), 1.0, 0.0)), 1.0)), vec3(mat2((vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-65.79), float(mat3x4(_GLF_FUZZED(-65.79), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(abs(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), length(vec3(0.0, 0.0, 0.0)), tan(0.0), 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(1.4, 37.99, 2.7), (vec3(1.4, 37.99, 2.7)) / vec3(1.0, 1.0, 1.0))) : _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5159.2647) : _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED((mat3(4.8, 1.3, -8.9, 2.4, -6998.6458, -5.0, 8.7, 148.968, -3411.2074) * mat3(-6770.9101, -7.8, -5399.9332, -46.56, 5930.9104, -350.513, 9102.1391, 5902.1126, -87.71))))) * _GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), float(mat4(dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-19.05)))))) / 1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0)))), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) * 1.0), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))))), 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))), min((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-84.26), _GLF_FUZZED(7.1), _GLF_FUZZED(548.715)), vec3((mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[0], (mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[1], (mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), 1.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-84.26), _GLF_FUZZED(7.1), _GLF_FUZZED(548.715)), vec3((mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[0], (mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[1], (mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), 1.0), transpose(transpose(mat2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(0.0, 1.0, 0.0))), mix(vec3(_GLF_FUZZED(-84.26), _GLF_FUZZED(7.1), _GLF_FUZZED(548.715)), vec3((mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[0], (mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[1], (mat3(1.0) * ((vec3(0.0, 1.0, 0.0))))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), 1.0)))) : _GLF_FUZZED(mat2(-3093.6742, 0.0, 8.0, 136.137))))), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, min(37.99, _GLF_IDENTITY(37.99, (true ? 37.99 : _GLF_FUZZED(9371.5671))))), 2.7)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), (false ? _GLF_FUZZED((bvec4(true, true, true, true) , vec3(-22.84, 6.2, -123.813))) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), (_GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), clamp(mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))) + sin(vec3(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, max(_GLF_IDENTITY((1.0) * 1.0, ((1.0) * 1.0) - 0.0), (1.0) * 1.0))), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, max(37.99, _GLF_IDENTITY(37.99, (37.99) / 1.0))), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-73.49), _GLF_FUZZED(vec4(767.835, -23.27, -244.194, 78.32).t), _GLF_FUZZED(-746.470)), vec3(((vec3(0.0, 1.0, 0.0)))[0], ((vec3(0.0, 1.0, 0.0)))[1], ((vec3(0.0, 1.0, 0.0)))[2]), bvec3(true, true, true))), _GLF_IDENTITY(vec3(mat2((vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (mat4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), max((vec3(0.0, 1.0, 0.0)), (vec3(0.0, 1.0, 0.0)))), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), max((vec3(0.0, 1.0, 0.0)), (vec3(0.0, 1.0, 0.0)))), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), (transpose(mat4x2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), max((vec3(0.0, 1.0, 0.0)), (vec3(0.0, 1.0, 0.0)))), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), min(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(31.86), _GLF_FUZZED(9.5), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], _GLF_FUZZED(-7.2)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7034.6385)), float(0.0), bool(true))), 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))), mix(vec3(((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))))[0], ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))))[1], ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))))[2]), vec3(_GLF_FUZZED(-1228.3351), _GLF_FUZZED(-4.1), _GLF_FUZZED(36.02)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, (false ? _GLF_FUZZED(-8.2) : 37.99)), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, min(37.99, 37.99)), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))), min((false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0)), float(vec4(float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(600.328)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, max(_GLF_IDENTITY((1.0) * 1.0, ((1.0) * 1.0) - 0.0), (1.0) * 1.0))), abs(0.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, max(37.99, _GLF_IDENTITY(37.99, (37.99) / 1.0))), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-73.49), _GLF_FUZZED(vec4(767.835, -23.27, -244.194, 78.32).t), _GLF_FUZZED(-746.470)), vec3(((vec3(0.0, 1.0, 0.0)))[0], ((vec3(0.0, 1.0, 0.0)))[1], ((vec3(0.0, 1.0, 0.0)))[2]), bvec3(true, true, true))), _GLF_IDENTITY(vec3(mat2((vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))), (mat4(0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), max((vec3(0.0, 1.0, 0.0)), (vec3(0.0, 1.0, 0.0)))), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), max((vec3(0.0, 1.0, 0.0)), (vec3(0.0, 1.0, 0.0)))), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), (transpose(mat4x2(_GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), max((vec3(0.0, 1.0, 0.0)), (vec3(0.0, 1.0, 0.0)))), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), min(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(31.86), _GLF_FUZZED(9.5), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], _GLF_FUZZED(-7.2)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7034.6385)), float(0.0), bool(true))), 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), mix(vec3(_GLF_FUZZED(-6.6), _GLF_FUZZED(-65.79), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))), mix(vec3(((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))))[0], ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))))[1], ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(_GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), mix(vec3(_GLF_FUZZED(-8690.6137), (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[1], (vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[2]), vec3((vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))[0], _GLF_FUZZED(0.5), _GLF_FUZZED(4.5)), bvec3(true, false, false))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0))))))))[2]), vec3(_GLF_FUZZED(-1228.3351), _GLF_FUZZED(-4.1), _GLF_FUZZED(36.02)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[2]), vec3((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, (false ? _GLF_FUZZED(-8.2) : 37.99)), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))[1], _GLF_FUZZED(1.2)), bvec3(true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)))))), vec3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(vec3(1.4, _GLF_IDENTITY(37.99, min(37.99, 37.99)), 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)))), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0)) * mat3(1.0)))), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec3(1.4, 37.99, 2.7)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), max(vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)), vec3(mat2((vec3(0.0, 1.0, 0.0)), 1.0)))))))))), vec3(0.0, 1.0, abs(0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0), vec3(0.0, 1.0, abs(0.0))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))) + 0.0)))), 0.0, 0.0, 0.0), (mat2x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-59.44) : 0.0))) + length(0.0))), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))), min((false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))), (false ? _GLF_FUZZED(6.1) : dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, abs(0.0)))))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true))))), 0.0)), 0.0, 0.0)) - mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0)), float(vec4(float(mat4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, cos(0.0))), exp(0.0), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(51.86)), bool(false))))))), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) * 1))) << _GLF_IDENTITY(int(4), int(4)))) | 0), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) * 1))) << _GLF_IDENTITY(int(4), int(4)))) | 0)) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (~ (~ (_injected_loop_counter ++))))), ~ (~ (~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (~ (~ (_injected_loop_counter ++)))))))))) | 0))
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9378.8888)), vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1455.3614)))))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u))), 1u))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0)), float(_GLF_FUZZED(1.5)), bool(false))))), ~ (~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))) && true)) && true)))
      return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u), 1u, (1u ^ 0u), 1u))) - 0u)) - 0u), gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), 0u + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) << 0u)), uint(uint(~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_IDENTITY(_GLF_FUZZED(uvec3(128114u, 133786u, 15326u)), (_GLF_FUZZED(uvec3(_GLF_IDENTITY(128114u, 0u | (128114u)), 133786u, 15326u))) - uvec3(0u, 0u, 0u))), uvec3(uvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_IDENTITY(_GLF_FUZZED(uvec3(128114u, 133786u, 15326u)), (_GLF_FUZZED(uvec3(_GLF_IDENTITY(128114u, 0u | (128114u)), 133786u, 15326u))) - uvec3(0u, 0u, 0u))), 0u)))).x)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | 0u), 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x) / 1u))), gl_WorkGroupSize.x), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) << 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)) - (35153u & 0u)), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), (min(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | 0u), gl_WorkGroupSize.x)) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (true ? ~ (~ (gl_WorkGroupSize)) : _GLF_FUZZED((uvec3(133814u, 84305u, 114588u) * uvec3(106201u, 92858u, 124596u))))))) * uvec3(1u, 1u, 1u)), gl_WorkGroupSize)).x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.3)), bool(false))), 0.0, 1.0, cos(0.0), 1.0))).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
    }
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(-61046) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) | (_GLF_IDENTITY(1, (1) >> 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
                {
                }
               else
                {
                 return;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), true && ((bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0)))) || false)))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                  }
                }
              }
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(9120.8338)))) - 0.0), _GLF_FUZZED(867.067)), vec2(_GLF_FUZZED(-47.61), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))) || false)));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.47) : injectionSwitch.y))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false)))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(abs(1.0))) > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), true))))) && true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) && true)) || false), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false)))))))) || false)), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(1.0))), min(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(1.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, abs(1.0)))))), injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false))))), _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) || false))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(mat3x4(vec2(1.0, 1.0) * (injectionSwitch), length(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0)))).y))) || false)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)))), (injectionSwitch.x) * 1.0) > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(83.72)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(45.62), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(45.62), (_GLF_FUZZED(45.62)) * 1.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(45.62)), bool(_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), true, false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true), true, false)))))))) || false)) || (_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(45.62)), bool(false))))))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(45.62), (_GLF_FUZZED(45.62)) - 0.0)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(45.62), (_GLF_FUZZED(45.62)) - 0.0)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(45.62), (_GLF_FUZZED(45.62)) - 0.0)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(45.62), (_GLF_FUZZED(45.62)) - 0.0)), bool(false)) : _GLF_FUZZED(-36.49))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch.y), bool(true))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), ((~ (4))) << 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (int(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), clamp((4), (4), (4)))) | (_GLF_IDENTITY((4), max((4), (4))))))))))), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), int(4))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (41755 & 0)); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(int(0)))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), true, false, false))))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-945.733), _GLF_FUZZED(279.729)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-945.733), _GLF_FUZZED(279.729)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), bool(bvec3(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-945.733), _GLF_IDENTITY(_GLF_FUZZED(279.729), (true ? _GLF_FUZZED(279.729) : _GLF_FUZZED(-0.9)))), bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), false))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), false || (! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(371.910), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-98.66)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(702.841)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-37.49, -233.159) * 949.599)))).y)), true)))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-37.49, -233.159) * 949.599)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-37.49, -233.159) * 949.599)))).y)))), true))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y : _GLF_FUZZED(50.12))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(length(0.1)), min(_GLF_FUZZED(length(0.1)), _GLF_FUZZED(length(0.1)))))), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(509.173) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mix(vec4((vec4(0.0, 0.0, 0.0, 1.0))[0], (vec4(0.0, 0.0, 0.0, 1.0))[1], (vec4(0.0, 0.0, 0.0, 1.0))[2], _GLF_FUZZED(716.892)), vec4(_GLF_FUZZED(-7.2), _GLF_FUZZED(-2372.9315), _GLF_FUZZED(91.65), (vec4(0.0, 0.0, 0.0, 1.0))[3]), bvec4(false, false, false, true))), vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(length(0.1)), min(_GLF_FUZZED(length(0.1)), _GLF_FUZZED(length(0.1)))))), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(25155u))), vec2(_GLF_FUZZED(5.1), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[1], float(mat2x3((min(injectionSwitch, injectionSwitch))[1], 1.0, 1.0, 0.0, 1.0, 1.0)))), bvec2(false, true))), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(length(0.1)), min(_GLF_FUZZED(length(0.1)), _GLF_FUZZED(length(0.1)))))), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y : _GLF_FUZZED(50.12))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0)), (vec2(mat4x3(injectionSwitch, 1.0, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, abs(0.0), 0.0))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(length(0.1)), min(_GLF_FUZZED(length(0.1)), _GLF_FUZZED(length(0.1)))))), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(509.173) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), min(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mix(vec4((vec4(0.0, 0.0, 0.0, 1.0))[0], (vec4(0.0, 0.0, 0.0, 1.0))[1], (vec4(0.0, 0.0, 0.0, 1.0))[2], _GLF_FUZZED(716.892)), vec4(_GLF_FUZZED(-7.2), _GLF_FUZZED(-2372.9315), _GLF_FUZZED(91.65), (vec4(0.0, 0.0, 0.0, 1.0))[3]), bvec4(false, false, false, true))), vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(length(0.1)), min(_GLF_FUZZED(length(0.1)), _GLF_FUZZED(length(0.1)))))), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(25155u))), vec2(_GLF_FUZZED(5.1), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[1], float(mat2x3((min(injectionSwitch, injectionSwitch))[1], 1.0, 1.0, 0.0, 1.0, 1.0)))), bvec2(false, true))), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (true ? dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(length(0.1)), min(_GLF_FUZZED(length(0.1)), _GLF_FUZZED(length(0.1)))))), dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)))))))))), false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> 0u, ((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))))), 0u | (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u, _GLF_IDENTITY(((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u, (((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u) | (((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> 0u) | 0u))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))))), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))));
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    break;
  }
 for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false))), (false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          return;
        }
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))).y))));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), max((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(ivec4((1 << _GLF_IDENTITY(int(2), int(2))), 0, 0, 0))))) >> _GLF_IDENTITY(int(2), int(2))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), (_GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), max(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0))))) >> 0)))) >> _GLF_IDENTITY(int(2), int(2)))), true && (_GLF_IDENTITY((_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), (_GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), max(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0))))) >> 0)))) >> _GLF_IDENTITY(int(2), int(2)))), ! (! ((_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), (_GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), max(int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0)), int(ivec2((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), 0))))) >> 0)))) >> _GLF_IDENTITY(int(2), int(2))))))))), true && (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / int(_GLF_ONE(1.0, injectionSwitch.y))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), min(0, 0))), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(ivec3(94180, -96239, 89264)[1]))) < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          return;
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(8)), (0 >> _GLF_IDENTITY(int(8), int(8))) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), true && ((((injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))) && true))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        break;
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u))))) % 2) == 0)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_WRAPPED_IF_FALSE(false)), false, false, true)), ! (! (bool(bvec4(bool(_GLF_WRAPPED_IF_FALSE(false)), false, false, true))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_WRAPPED_IF_FALSE(false)), false, false, true)), ! (! (bool(bvec4(bool(_GLF_WRAPPED_IF_FALSE(false)), false, false, true)))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) | 0)); _injected_loop_counter ++)
          {
           read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, 64, _GLF_IDENTITY(2, int(ivec3(2, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> 0)))));
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(35771) : int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, abs(0.0), 1.0, 1.0))) > injectionSwitch.y))))
          continue;
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(85.10) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cosh(43.22)))))) > injectionSwitch.y)))) && true))
          break;
        }
       else
        {
         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (! ((_GLF_IDENTITY(true, (true) && true)))))) || false), ! (! ((true)))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true))))), ! (! ((_GLF_IDENTITY(true, (true) && true)))))) || false), ! (! ((true))))))))))))))) || false)), true && (true)), false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), true && (bool(bvec4(true, false, true, false))))), true, false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))), true && (false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))))))), false))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), ! (! ((true))))))))))))))), true && (_GLF_IDENTITY(true, (true) || false))), false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))), true && (false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))))))), false))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), ! (! ((true))))))))))))))), true && (_GLF_IDENTITY(true, (true) || false))), false)), (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))))), true && (false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))))))), false))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), ! (! ((true))))))))))))))), true && (_GLF_IDENTITY(true, (true) || false))), false))) && true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, true, false)), true && (bool(bvec4(true, false, true, false))))), true, false)))), true, true))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          break;
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_injected_loop_counter > 0) || false))))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              continue;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6493.6019))))) > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(min(_injected_loop_counter, -79333))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), tan(0.0), abs(0.0), 0.0, sqrt(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), sqrt(1.0)))))) + _GLF_IDENTITY((int(4)), min((int(4)), (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0)))))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_IDENTITY(true, (true) && true))))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           subgroupBarrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(vec2(-4211.1883, 9.3).y)), vec2(_GLF_FUZZED(-6.4), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), int(ivec3(int(0), 0, 1)))) + 0)), (false ? _GLF_FUZZED(69893) : int(_GLF_IDENTITY(int(0), min(_GLF_IDENTITY(int(0), (int(0)) | (int(0))), int(0)))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (false ? _GLF_FUZZED(69893) : int(int(0)))))), true, false))); _injected_loop_counter --)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    continue;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false, false)))))))
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (injectionSwitch)).y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         else
          {
          }
        }
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
}
