#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(num_workgroup)))) | 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)), 0u ^ (uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) | 0u), _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (subgroup_base)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), max(_GLF_IDENTITY(~ (subgroup_base), min(~ (subgroup_base), ~ (subgroup_base))), ~ (subgroup_base))), 0u | (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))))) | (~ (_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (subgroup_base)))))))), ~ (~ (min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (subgroup_base)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (subgroup_base)))), 0u | ((_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))))))), (_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (subgroup_base)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, (1u ^ 1u) ^ (subgroup_base))), _GLF_IDENTITY(0u, 0u | (0u)) | (~ (subgroup_base))))) | (~ (_GLF_IDENTITY(~ (subgroup_base), 0u | (~ (subgroup_base)))))))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - 0u)) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ ((workgroup_base))) | (~ ((workgroup_base)))))) | (workgroup_base)) + subgroup_base) - 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u))))))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - 0u))), ~ (~ (~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) - 0u))))))))))), (0u ^ ((_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base)))))))) - 0u)))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size, ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size))), (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))))) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), (true ? (_GLF_IDENTITY(1, 0 ^ (1))) : _GLF_FUZZED(bitfieldExtract(-99866, -91615, 54181))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) | ((-47089 & 0) >> _GLF_IDENTITY(int(8), int(8))))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? (~ (0u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))))))))), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), 1 * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), 0 ^ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 + (1)), 1), ~ (~ (min(_GLF_IDENTITY(1, 0 + (1)), 1)))))), min((1), (1)))))), 0u, 0u, 0u)))), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) ^ _GLF_IDENTITY((1), max((1), (1)))))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, _GLF_IDENTITY(_GLF_IDENTITY(158124u, min(158124u, 158124u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(158124u, (_GLF_IDENTITY(158124u, 1u * (158124u))) ^ 0u), min(158124u, 158124u)) : _GLF_FUZZED(subgroup_local_id))))) : uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))))), 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), clamp(0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(int(4), min(int(4), int(4))))) * (1), 0 | (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1)))) | (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1)))), 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 0, 1)), (int(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 0, 1))) | (int(ivec4(_GLF_IDENTITY(1, max(1, 1)), 0, 0, 1))))))))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | ((subgroup_local_id)))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1)))), (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1))))) >> 0u), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, uint(uvec3(139595u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u)))), (true ? uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), 0 ^ (1)))), 0u, 0u, 0u)))) : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, uint(uvec3(139595u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) / 1)) << 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 0u)))), (true ? uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)))) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, uint(uvec3(139595u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 0u)))), (true ? uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, uint(uvec3(139595u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 0u)))), (true ? uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)))) : _GLF_FUZZED(workgroup_base)))) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, uint(uvec3(139595u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u, 0u)))), (true ? uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)))) : _GLF_FUZZED(workgroup_base)))))), 0u | _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), (true ? _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))))) : _GLF_FUZZED(subgroup_local_id))), 0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)), (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec4(139595u, 88037u, 134246u, 158124u), (uvec4(139595u, 88037u, 134246u, 158124u)) / uvec4(1u, 1u, 1u, 1u))), (_GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u))) / uvec4(1u, 1u, 1u, 1u)) : _GLF_FUZZED(uvec4(19028u, 98992u, 108047u, 59957u)))) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), ((0u)) | 0u), (0u))) / 1u), 0u))))))))))), (true ? (0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, 0u ^ (139595u)), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (_GLF_IDENTITY(0 ^ (1), (false ? _GLF_FUZZED(-95347) : 0 ^ (1)))) / 1)))), 0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))) : _GLF_FUZZED(subgroup_base)))), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(mix(subgroup_id, subgroup_local_id, true)) : 0u)) ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))))), 1)), max(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 ^ (int(ivec4(0, 1, 0, 1)))), int(ivec4(0, 1, 0, 1))))) ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, _GLF_IDENTITY(158124u, ~ (~ (158124u))))) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(((0)) - 0, (((0)) - 0) - 0)) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)))))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (1))) << 0))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((-47089 & 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (false ? _GLF_FUZZED(82904) : _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(8), int(int(int(8)))), 1), (ivec2(_GLF_IDENTITY(int(8), int(int(int(8)))), 1)) ^ ivec2(0, 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(8), int(int(int(8)))), 1), (ivec2(_GLF_IDENTITY(int(8), int(int(int(8)))), 1)) ^ ivec2(0, 0)))) >> 0)))), int(8)), min(_GLF_IDENTITY((-47089 & 0) >> _GLF_IDENTITY(int(8), int(8)), ((-47089 & 0) >> _GLF_IDENTITY(int(8), int(8))) + 0), (-47089 & 0) >> _GLF_IDENTITY(int(8), int(8))))))))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), (~ ((0u))) + 0u)))) | 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))), (false ? _GLF_FUZZED(uvec3(99579u, 196328u, 163688u).s) : _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))))), uint(uvec4(_GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))), 1u, 1u, 0u))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))), (false ? _GLF_FUZZED(uvec3(99579u, 196328u, 163688u).s) : _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))))), uint(uvec4(_GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))), 1u, 1u, 0u))))), (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))), (false ? _GLF_FUZZED(uvec3(99579u, 196328u, 163688u).s) : _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))))), uint(uvec4(_GLF_IDENTITY((~ (0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (0u)) : _GLF_FUZZED(num_workgroup))), 1u, 1u, 0u)))))) | 0u))))))), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) / 1), (1)))))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 + (1)), 1), ~ (~ _GLF_IDENTITY((min(_GLF_IDENTITY(1, 0 + (1)), 1)), (false ? _GLF_FUZZED(7626) : (min(_GLF_IDENTITY(1, 0 + (1)), 1)))))))), min((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(-43464)))), (1)))))), 0u, 0u, 0u)))), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0)))), ~ (~ (0))) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(int(int(clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1))), max(int(int(clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1))), _GLF_IDENTITY(int(int(clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1))), (int(int(clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1)))) | (int(int(clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1)))))))))), max((1), (1)))))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, _GLF_IDENTITY(158124u, min(158124u, 158124u)))) : uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)))), _GLF_IDENTITY(0, min(0, 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))))), 0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), clamp(0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1), 0 | _GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1)), ~ (_GLF_IDENTITY(~ ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1))), min(~ ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1))), ~ ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1))))))))) | (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (1)))), 0 ^ (1)))), 0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(139595u, 88037u, _GLF_IDENTITY(134246u, max(134246u, 134246u)), 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | ((subgroup_local_id)))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | ((subgroup_local_id)))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | ((subgroup_local_id)))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)), ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | ((subgroup_local_id)))) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1)))), ~ (~ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0))))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch.x)) | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (1))))))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(139595u, uint(uvec3(139595u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0u, 0u, 0u)))), (true ? uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(139595u, 88037u, 134246u, 158124u), clamp(uvec4(139595u, 88037u, 134246u, 158124u), uvec4(139595u, 88037u, 134246u, 158124u), uvec4(139595u, 88037u, 134246u, 158124u)))) : uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u)))) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (0u) * 1u))) | _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, 0 ^ (1))), ~ (~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, 0 ^ (1))), (0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))) >> 0))))), 0u, 0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)), (true ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)), _GLF_IDENTITY((_GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u))) / uvec4(1u, 1u, 1u, 1u), ((_GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u))) / uvec4(1u, 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(19028u, 98992u, 108047u, 59957u)))) : uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), max(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, 0 ^ (1))), max(0 ^ (_GLF_IDENTITY(1, 0 ^ (1))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, 0 ^ (1))), (0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))) + 0)))), (true ? subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), 0 | ((1)))))) : _GLF_FUZZED(workgroup_id))))), 0u, 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) / 1u), 0u))))))))))), (true ? _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), uvec4(1u, 1u, 1u, 1u) * (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (~ (clamp(0u, 0u, 0u)))))))))))))))), (true ? _GLF_IDENTITY((0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), uvec4(1u, 1u, 1u, 1u) * (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (~ (clamp(0u, 0u, 0u)))))))))))))))), 0u + ((0u ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, 0u, 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), uvec4(1u, 1u, 1u, 1u) * (false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, 0 ^ (1)))), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (~ (clamp(0u, 0u, 0u)))))))))))))))))) : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(subgroup_base)))), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mix(subgroup_id, subgroup_local_id, true)) : 0u)) ^ (uint(_GLF_IDENTITY(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))))), 1)), max(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 ^ (int(ivec4(0, 1, 0, 1)))), int(ivec4(0, 1, 0, 1))))) ^ (1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))))), 1)), max(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 ^ (int(ivec4(0, 1, 0, 1)))), int(ivec4(0, 1, 0, 1))))) ^ (1)))), min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))))), 1)), max(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 ^ (int(ivec4(0, 1, 0, 1)))), int(ivec4(0, 1, 0, 1))))) ^ (1)))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))))), 1)), max(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 ^ (int(ivec4(0, 1, 0, 1)))), int(ivec4(0, 1, 0, 1))))) ^ (1)))))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), _GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0)))))))), 1)), max(_GLF_IDENTITY(int(ivec4(0, 1, 0, 1)), 0 ^ (int(ivec4(0, 1, 0, 1)))), int(ivec4(0, 1, 0, 1))))) ^ (1)))))), 0u, 0u, 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1))))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))))), 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1))))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))))), 0u, 0u, 0u)), ((false ? _GLF_FUZZED(uvec4(139595u, 88037u, 134246u, 158124u)) : uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1))))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) - 0) - 0) ^ (_GLF_IDENTITY(1, 0 ^ (1)))))), 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))))))))))))) + 0u) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))))));
 uint read = 0;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2818.2805)), vec2(_GLF_FUZZED(vec3(3.1, -62.95, 400.311).s), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))).x, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(5.2) : sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-301.857, max(-301.857, -301.857)))), float(0.0), bool(true))), 0.0)))))) + 0.0)), (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, sin(0.0)), mat2(mat2(mat2(injectionSwitch.x, 0.0, 0.0, sin(0.0)))))) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.0))))), 0.0)))) < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), (ivec3(int(1), 1, (0 ^ 1))) | (_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), ~ (~ (ivec3(int(1), 1, (0 ^ 1)))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), (ivec3(int(1), 1, (0 ^ 1))) | (_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), ~ (~ (ivec3(int(1), 1, (0 ^ 1)))))))), (int(_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), (ivec3(int(1), 1, (0 ^ 1))) | (_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), ~ (~ (ivec3(int(1), 1, (0 ^ 1))))))))) >> 0)) | (int(_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), (ivec3(int(1), 1, (0 ^ 1))) | (_GLF_IDENTITY(ivec3(int(1), 1, (0 ^ 1)), ~ (~ (ivec3(int(1), 1, (0 ^ 1))))))))))), int(1))) | 0) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 ^ 0) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(_GLF_IDENTITY(1, max(1, 1))), int(1)))))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) || false); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
                                {
                                 do
                                  {
                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       do
                                        {
                                         do
                                          {
                                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1], _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-9.4) : injectionSwitch[1])) : _GLF_FUZZED(-3876.1756)), min((true ? _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-9.4) : injectionSwitch[1])) : _GLF_FUZZED(-3876.1756)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_FUZZED(-9.4), _GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), (true ? _GLF_FUZZED(-9.4) : _GLF_FUZZED(acosh(-18.57)))))) : injectionSwitch[1])) : _GLF_FUZZED(-3876.1756)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(7.0)), bool(false))))), min(float(float(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(7.0, float(mat3(_GLF_IDENTITY(7.0, max(7.0, _GLF_IDENTITY(7.0, (true ? 7.0 : _GLF_FUZZED(-5847.9818))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), bool(false))))), float(float(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(7.0)), bool(false)))))))), (false ? _GLF_FUZZED(-9.4) : injectionSwitch[1])) : _GLF_FUZZED(-3876.1756))) / abs(1.0))))))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), float(_GLF_FUZZED(9.9)), bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))).y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)), float(_GLF_FUZZED(-2.6)), bool(false)))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), float(_GLF_FUZZED(9.9)), bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))).y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)), float(_GLF_FUZZED(-2.6)), bool(false)))) / 1.0))), mix(float(_GLF_FUZZED(-430.796)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), float(_GLF_FUZZED(9.9)), bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))).y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)), float(_GLF_FUZZED(-2.6)), bool(false)))) / 1.0)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), float(_GLF_FUZZED(9.9)), bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))).y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)), float(_GLF_FUZZED(-2.6)), bool(false)))) / 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), float(_GLF_FUZZED(9.9)), bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))).y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)), float(_GLF_FUZZED(-2.6)), bool(false)))) / 1.0))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), float(_GLF_FUZZED(9.9)), bool(false)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0))), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))), injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0))).y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) / 1.0)), float(_GLF_FUZZED(-2.6)), bool(false)))) / 1.0))), 0.0, 0.0, 0.0))))))))) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(0), 0, 1, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))))
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   do
                                                    {
                                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                        {
                                                         if((subgroup_local_id % 2) == 0)
                                                          {
                                                           read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(64, _GLF_IDENTITY(1 * (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(1 * (64), 1 * (64))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(1, (1) | (1)) * (64))))), 0 | ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(1, (1) | (1)) * (64)))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, (_GLF_IDENTITY((0) * 1, ~ (~ (_GLF_IDENTITY((0) * 1, int(ivec2(_GLF_IDENTITY((0) * 1, min((0) * 1, (0) * 1)), 0))))))) / 1))))), 2), (true ? atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u + (buf[virtual_gid])), 4, 64, 2) : _GLF_FUZZED(read)));
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             do
                                                              {
                                                               read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(64, clamp(64, 64, 64)), 2);
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(false));
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))), false)))));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (((injectionSwitch.x > injectionSwitch.y)))) && true)))))));
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), float(_GLF_FUZZED((5140.0499))), bool(false))))); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, 1.0)), 1.0, 1.0)), injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, 1.0)), 1.0, 1.0)), injectionSwitch.y)) + _GLF_ZERO(0.0, injectionSwitch.x))), int(int(int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(mat4x2(1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sign(-850.158))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(0, 0, 1, _GLF_IDENTITY(0, 0 | _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(69994), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(69994)), ~ (~ (~ (_GLF_FUZZED(69994))))))) : (0), (false ? _GLF_FUZZED(69994) : (0)) ^ 0))) << 0, max(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(69994) : _GLF_IDENTITY((0), ((0)) ^ (0 & -84285)))) << 0, _GLF_IDENTITY(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(69994) : (0))) << _GLF_IDENTITY(0, min(0, 0)), 0 ^ (_GLF_IDENTITY((0), (false ? _GLF_IDENTITY(_GLF_FUZZED(69994), (_GLF_FUZZED(69994)) ^ 0) : (0))) << 0)))))), int(ivec2((_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), (_GLF_IDENTITY(false ? _GLF_FUZZED(69994) : (0), (false ? _GLF_FUZZED(69994) : (0)) ^ 0))) << 0, max(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(69994) : _GLF_IDENTITY((0), ((0)) ^ (0 & -84285)))) << 0, _GLF_IDENTITY(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(69994) : (0))) << 0, 0 ^ (_GLF_IDENTITY((0), (false ? _GLF_IDENTITY(_GLF_FUZZED(69994), (_GLF_FUZZED(69994)) ^ 0) : (0))) << 0)))))), (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) ^ (0 ^ 0))))))))))))); _injected_loop_counter --)
                            {
                             subgroupBarrier();
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)), (vec2(mat2x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3(1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3(1.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), float(_GLF_FUZZED(1.4)), bool(false))), 1.0)))))) / 1.0), 0.0))) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, log(1.0)), max(vec2(injectionSwitch.y, log(1.0)), vec2(injectionSwitch.y, log(1.0)))))) : _GLF_FUZZED(7.9))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) - log(1.0))) - 0.0)), injectionSwitch.y))))));
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(min(vec2(46.60, -35.42), injectionSwitch), min(min(vec2(46.60, -35.42), injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(min(vec2(46.60, -35.42), injectionSwitch), (min(vec2(46.60, -35.42), injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(min(vec2(46.60, -35.42), injectionSwitch), (min(vec2(46.60, -35.42), injectionSwitch)) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(min(vec2(46.60, -35.42), injectionSwitch), (min(vec2(46.60, -35.42), injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(vec2(46.60, -35.42), injectionSwitch), (min(vec2(46.60, -35.42), injectionSwitch)) - vec2(0.0, 0.0))))) * exp(vec2(0.0, 0.0)))))) : min(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
                {
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
                    {
                     atomicStore(checker[virtual_gid], read, 4, 64, 4);
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               else
                {
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), true && (! (_GLF_WRAPPED_LOOP(false)))))), false, false, true)), false, false, false))), (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, true)), bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(false), false, false, true)), false, false, false)))) && true)));
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
}
