#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0)))).y, (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) * vec2(1.0, 1.0)).y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || _GLF_IDENTITY((false || (false)), ! (! ((false || (false)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || _GLF_IDENTITY((false || (false)), ! (! ((false || (false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || _GLF_IDENTITY((false || (false)), ! (! ((false || (false))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), false, true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false, true))) && true)), true && (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0)), mix(float(_GLF_FUZZED(-6.5)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0))), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true, true))))))) || false))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1)), (subgroup_local_id + 1) * 1u)) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) * 1.0, (_GLF_IDENTITY((injectionSwitch[0]) * 1.0, _GLF_IDENTITY(float(mat4x3((injectionSwitch[0]) * 1.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), max(float(mat4x3((injectionSwitch[0]) * 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.3))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(mat4x3((injectionSwitch[0]) * 1.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))))))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))) - 0.0), injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> 0))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), false))), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true)))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), true)))))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))) == 0), bool(bvec3(bool((subgroup_local_id % 2) == 0), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) | (ivec2(4, 0)))), max(int(ivec2(4, 0)), int(ivec2(4, 0))))), 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), max(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2))), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-74810) : 64)), _GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64), ((64)) / 1) + 0) >> 0)), 2), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), 1 * ((0))))), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), max(~ ((0)), _GLF_IDENTITY(~ ((0)), (~ ((0))) * 1))))))), 2)) >> 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(uint(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, (0) ^ (0 | 0))), 2), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(-744.379, (7946.1794 * -161.686), 73.45)) : injectionSwitch.x))))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))) | 0u), buf[virtual_gid])), 4, _GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(2, clamp(2, 2, 2))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(sin(0.0)), 1.0))))))), (_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), 0u + (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) - 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << uvec2(0u, 0u))))))), uint(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2), min(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2), (atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2)) - 0u), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(64, (64) + 0), 2))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) - 0)) ^ 0)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) - 0)) ^ 0)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false)))))), (_GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false)))))), max(_GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false)))))), ~ (~ (min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false))))))))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false))))))))) | (min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false)))))))), (_GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false)))))), (_GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) << 0) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false)))))), max(_GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(5.6)), float(mat3(float(_GLF_FUZZED(5.6)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(false)))))), ~ (~ (min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))), uvec2(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, min((64) + 0, _GLF_IDENTITY((64) + 0, (false ? _GLF_FUZZED(4897) : _GLF_IDENTITY((64) + 0, ((64) + 0) / 1)))))), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false))))))))), min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x)), float(_GLF_FUZZED(_GLF_IDENTITY(3595.6632, (true ? _GLF_IDENTITY(3595.6632, min(3595.6632, _GLF_IDENTITY(3595.6632, float(vec2(3595.6632, 0.0))))) : _GLF_FUZZED(4.1))))), bool(false))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(5.6)), bool(false))))))))) | (min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) + 0), 2), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false)))), max(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3595.6632)), bool(false))))))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(58418)))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(5.6)), max(float(_GLF_FUZZED(5.6)), _GLF_IDENTITY(float(_GLF_FUZZED(5.6)), max(float(_GLF_FUZZED(5.6)), float(_GLF_FUZZED(5.6)))))), bool(false))))))))) * uvec2(1u, 1u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + _GLF_IDENTITY(0, (0) / 1)) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) + 0, _GLF_IDENTITY(int(ivec4((64) + 0, 1, 0, 0)), int(ivec3(int(ivec4((64) + 0, 1, 0, 0)), 1, 0)))), ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), _GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 1 * (0))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(174925u, 145226u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + _GLF_IDENTITY(0, (0) / 1)) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) + 0, _GLF_IDENTITY(int(ivec4((64) + 0, 1, 0, 0)), int(ivec3(int(ivec4((64) + 0, 1, 0, 0)), 1, 0)))), ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), _GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 1 * (0))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(174925u, 145226u)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + _GLF_IDENTITY(0, (0) / 1)) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) + 0, _GLF_IDENTITY(int(ivec4((64) + 0, 1, 0, 0)), int(ivec3(int(ivec4((64) + 0, 1, 0, 0)), 1, 0)))), ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), _GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 1 * (0))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(174925u, 145226u)))))), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + _GLF_IDENTITY(0, (0) / 1)) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) + 0, _GLF_IDENTITY(int(ivec4((64) + 0, 1, 0, 0)), int(ivec3(int(ivec4((64) + 0, 1, 0, 0)), 1, 0)))), ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), _GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 1 * (0))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(174925u, 145226u)))))), 0u, 1u, 1u))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + _GLF_IDENTITY(0, (0) / 1)) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) + 0, _GLF_IDENTITY(int(ivec4((64) + 0, 1, 0, 0)), int(ivec3(int(ivec4((64) + 0, 1, 0, 0)), 1, 0)))), ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), _GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 1 * (0))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(174925u, 145226u)))))), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(_GLF_IDENTITY(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + 0) - 0)))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) | ((64) + 0))) | ((64) + 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-76329)))) << (0 | 0))) + 0, ((64) + 0) - 0)))))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64) + 0, ((64) + 0) | (_GLF_IDENTITY((64) + 0, ((64) + _GLF_IDENTITY(0, (0) / 1)) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))))))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), max((64), (64))) + 0, ((64) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) + 0, _GLF_IDENTITY(int(ivec4((64) + 0, 1, 0, 0)), int(ivec3(int(ivec4((64) + 0, 1, 0, 0)), 1, 0)))), ((64) + 0) - 0))))))))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u))), _GLF_IDENTITY(min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) >> 0) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? min(uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 1 * (0))), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(uvec2(174925u, 145226u)))))), 0u, 1u, 1u))), 0u, 0u))) / 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), 1u * _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2)), clamp((atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2)), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2)), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), min(uvec2(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), min(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2)) ^ 0u), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) + 0), 2))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), uvec2(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), 4, _GLF_IDENTITY(64, (64) + 0), 2), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))))))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, tan(0.0))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), false || (bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) >> 0u), 4, 64, 4);
}
