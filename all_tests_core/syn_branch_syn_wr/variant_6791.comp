#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(determinant(mat3(893.410, 45.27, 9.4, 447.551, -665.708, 359.499, -9079.1122, 1.5, -4266.7078))) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), ! (! (! (false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), bool(bool(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false)))), bool(bool(bool(bool(bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false)))))))), (bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[0])), injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(! (! (! (! (false)))), bool(bool(! (! (! (! (false))))))))))))), _GLF_IDENTITY(bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false)), (bool(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true)))))), bool(bool((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true))))))))), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), ! (! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), ((! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))) || false)))))))), false)), false || (bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), ! (! _GLF_IDENTITY((! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), ((! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))) || false)))))))), false)))), (bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])).y))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))))), ! _GLF_IDENTITY((! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (false))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (false)))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), true && ((false)))))) || false)), ! _GLF_IDENTITY((! (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))), true && ((! (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false)))))))))))))))), false)), (bool(bvec2((! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), ! (! (! (! (false)))))))))), false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))) && true)), false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))) && true)), false, true)))))))), _GLF_IDENTITY(true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), ((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true))))))) || false), true, true))), true, true))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), ((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true))))))) || false), true, true))), true, true))), ! (! (true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))))), bool(bvec3(_GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(bvec3(false, false, false))) && true)), false, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true))))) && true)))))))), ((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true))))))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true))))) && true)))))))), ((! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true)), false, true))))))) || false), true, true)))))), true, true)))))))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false))))), false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true), true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-6339.4015)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(-2861.9710, -57.30, -1.9, 78.15, 928.803, -3.5)) : mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(((mat2(1.0) * (injectionSwitch))) * mat2(1.0), min(((mat2(1.0) * (injectionSwitch))) * mat2(1.0), ((mat2(1.0) * (injectionSwitch))) * mat2(1.0))))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(-2861.9710, -57.30, -1.9, 78.15, 928.803, -3.5)) : mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))))))) - log(vec2(1.0, 1.0))), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.7, -256.038)) : injectionSwitch)))).x > injectionSwitch.y, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(260.639, -3802.1238)) : injectionSwitch)), injectionSwitch)).y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).y, false, false, false))))))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7117.3693) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1662.5316)), float(injectionSwitch.y), bool(true))))), false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), min(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0))))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), min(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0))))), 0.0)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false, false, false)))))), false || (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false, false, false))))))))), false, true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, determinant(mat4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, determinant(mat4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0)))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, true, false, false)))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (false))) || false)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.6)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(step(51.02, -303.537)) : _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(9.9)))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(abs(0.0)), sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3707.1716)), bool(false)))))))).y, false, false, false))))))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(float(mat2(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-7306.9728)), bool(false)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-959.361)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), float(_GLF_FUZZED(38.23)), bool(false))), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-391.282)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-391.282)), bool(false))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-391.282), mix(float(_GLF_FUZZED(-391.282)), float(_GLF_FUZZED(652.484)), bool(false)))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-391.282), mix(float(_GLF_FUZZED(-391.282)), float(_GLF_FUZZED(652.484)), bool(false)))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-6339.4015)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(-2861.9710, -57.30, -1.9, 78.15, 928.803, -3.5)) : mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(((mat2(1.0) * (injectionSwitch))) * mat2(1.0), min(((mat2(1.0) * (injectionSwitch))) * mat2(1.0), ((mat2(1.0) * (injectionSwitch))) * mat2(1.0))))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), mat2x3(mat2x4(_GLF_IDENTITY(mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat2x3(-2861.9710, -57.30, -1.9, 78.15, 928.803, -3.5)) : mat2x3(vec2(_GLF_FUZZED(-8651.8305), (mat2(1.0) * (injectionSwitch))[1]), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))))))) - log(vec2(1.0, 1.0))), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.7, -256.038)) : injectionSwitch)))).x > injectionSwitch.y, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(260.639, -3802.1238)) : injectionSwitch)), injectionSwitch)).y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).y, false, false, false))))))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7117.3693) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1662.5316)), float(injectionSwitch.y), bool(true))))), false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, ! (! (false))), false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), min(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0))))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), min(dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0)), dot(vec2(1.0, log(1.0)), vec2(0.0, 1.0))))), 0.0)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false, false, false)))))), false || (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false, false, false))))))))), false, true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, determinant(mat4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, determinant(mat4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, tan(0.0)))))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, true, false, false)))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false, ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (false))) || false)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.6)))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(step(51.02, -303.537)) : _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(9.9)))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), false)))) || false), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(abs(0.0)), sqrt(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3707.1716)), bool(false)))))))).y, false, false, false))))))), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(float(mat2(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-7306.9728)), bool(false)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-959.361)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), float(_GLF_FUZZED(38.23)), bool(false))), false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-391.282)), bool(false)), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-391.282)), bool(false))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-391.282), mix(float(_GLF_FUZZED(-391.282)), float(_GLF_FUZZED(652.484)), bool(false)))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-391.282), mix(float(_GLF_FUZZED(-391.282)), float(_GLF_FUZZED(652.484)), bool(false)))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))))), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)))), (~ (~ (gl_WorkGroupID))) | uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, (8u) | 0u), clamp(_GLF_IDENTITY(8u, (8u) | 0u), _GLF_IDENTITY(8u, (8u) | 0u), _GLF_IDENTITY(8u, (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) * 1u), 0u)), 0u)), 1u, 1u, 1u)))))), (uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 1u, 1u, 1u))))))) ^ (0u | 0u))))))) | _GLF_IDENTITY(((workgroup_id) << 0u), (((workgroup_id) << 0u)) - 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(workgroup_id))), 0u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), min(_GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> uvec4(0u, 0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) : _GLF_FUZZED(subgroup_size)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(uvec3(3u, 0u, 1u))))))), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | 0u, ((8u) | 0u) | (_GLF_IDENTITY((8u) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) * (_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY(min((8u) | 0u, (8u) | 0u), clamp(min((8u) | 0u, (8u) | 0u), min((8u) | 0u, (8u) | 0u), min((8u) | 0u, (8u) | 0u)))))), max((8u) | 0u, (8u) | 0u)), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))) | (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 1u, 1u, 1u))))), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u), _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 1u, 1u, 1u))))))))))))) | ((workgroup_id) << 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(_GLF_IDENTITY(uint(3u), (uint(3u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u))), min(min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u))), min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))), max((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))))))) | (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 1u, 1u, 1u))))))))))) | ((workgroup_id) << 0u)))), 0u + ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(_GLF_IDENTITY(uint(3u), (uint(3u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u))), min(min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u))), min(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))))), _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))), max((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, (8u) | 0u))), max(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((8u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), ((8u) | 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | (_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(workgroup_size)))))) | 0u, ((8u) | 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(8u, 0u | (8u))) | 0u, clamp((8u) | 0u, (8u) | 0u, (8u) | 0u))))) / 1u), min((8u) | 0u, (8u) | 0u)))), max((_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, (8u) / 1u), 8u))) | 0u, (8u) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u))), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))))))) | (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 1u, 1u, 1u))))))))))) | ((workgroup_id) << 0u)))))), ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id) << 0u, 0u | ((workgroup_id) << 0u)), ((0u & 89604u) ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id) << 0u, 0u | ((workgroup_id) << 0u)), (_GLF_IDENTITY((workgroup_id) << 0u, 0u | ((workgroup_id) << 0u))) + 0u))), ((workgroup_id) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) + 0u)) + 0u)), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) >> uvec4(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u, 0u, 0u)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec3(8u, 0u, 0u)), (uint(uvec3(8u, 0u, 0u))) - 0u)), (8u) | 0u))), max(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u) | 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(8u, (8u) * 1u)) | 0u, ((8u) | 0u) | (_GLF_IDENTITY((8u) | 0u, ((8u) | 0u) >> _GLF_IDENTITY(0u, (0u) | (0u))))), _GLF_IDENTITY(_GLF_IDENTITY((8u) | 0u, 1u * (_GLF_IDENTITY((8u) | 0u, min((8u) | 0u, (8u) | 0u)))), max((8u) | 0u, (8u) | 0u)), (8u) | 0u))))), 0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | 0u)))))) | (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) + _GLF_IDENTITY(0u, (0u) ^ 0u))) << 0u) ^ 0u))), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u), 1u, 1u, 1u))))))))))) | (_GLF_IDENTITY((workgroup_id) << 0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (uint(uvec2(_GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))) / 1u))))))) / 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id))), uint(_GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (uint(uint(subgroup_local_id))))))) << uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6532.4451, min(6532.4451, 6532.4451))) : 0.0)), injectionSwitch.x), _GLF_IDENTITY(float(mat4x3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6532.4451, min(6532.4451, 6532.4451))) : 0.0)), injectionSwitch.x), 1.0, 1.0, log(1.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat4x3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6532.4451, min(6532.4451, 6532.4451))) : 0.0)), injectionSwitch.x), 1.0, 1.0, log(1.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6532.4451, min(6532.4451, 6532.4451))) : 0.0)), injectionSwitch.x), 1.0, 1.0, log(1.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), max(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), uint(uvec3(uint(subgroup_local_id), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY((uint(subgroup_local_id)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-956.412) : injectionSwitch.x)))), max((uint(subgroup_local_id)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-956.412) : injectionSwitch.x)))), (uint(subgroup_local_id)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-956.412) : injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), min(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), (_GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), max(_GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), ((uint(subgroup_local_id)) | (uint(subgroup_local_id))) | _GLF_IDENTITY(((uint(subgroup_local_id)) | (uint(subgroup_local_id))), min(_GLF_IDENTITY(((uint(subgroup_local_id)) | (uint(subgroup_local_id))), _GLF_IDENTITY((((uint(subgroup_local_id)) | (uint(subgroup_local_id)))) - 0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((((uint(subgroup_local_id)) | (uint(subgroup_local_id)))) - 0u, clamp((((uint(subgroup_local_id)) | (uint(subgroup_local_id)))) - 0u, (((uint(subgroup_local_id)) | (uint(subgroup_local_id)))) - 0u, (((uint(subgroup_local_id)) | (uint(subgroup_local_id)))) - 0u))))), ((uint(subgroup_local_id)) | (uint(subgroup_local_id)))))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))))) | ((uint(subgroup_local_id)) | (uint(subgroup_local_id))))), uint(subgroup_local_id))), (uint(subgroup_local_id)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(subgroup_local_id)), ((uint(subgroup_local_id))) << 0u) | (uint(subgroup_local_id)), max(_GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), ((uint(subgroup_local_id)) | (uint(subgroup_local_id))) | ((uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(subgroup_local_id)), clamp((uint(subgroup_local_id)), (uint(subgroup_local_id)), (uint(subgroup_local_id)))) | (uint(subgroup_local_id)), max(_GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), ((uint(subgroup_local_id)) | (uint(subgroup_local_id))) | ((uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))))) << 0u)) | ((uint(subgroup_local_id)) | (uint(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))))))), (_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), (_GLF_IDENTITY((uint(subgroup_local_id)) | (uint(subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(subgroup_local_id)), 0u + (_GLF_IDENTITY((uint(subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_base) : (uint(subgroup_local_id)))))) | (uint(subgroup_local_id)), (_GLF_IDENTITY((uint(subgroup_local_id)), uint(uvec3((uint(subgroup_local_id)), 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))) | (uint(subgroup_local_id))) | ((uint(subgroup_local_id)) | (uint(subgroup_local_id)))), (uint(subgroup_local_id)) | (uint(subgroup_local_id))))) | ((uint(subgroup_local_id)) | (uint(subgroup_local_id)))))) >> 0u), uint(subgroup_local_id))), (uint(subgroup_local_id)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.9) : injectionSwitch.x))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)), clamp((uint(subgroup_local_id)), (uint(subgroup_local_id)), (uint(subgroup_local_id)))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9756.8410) : 0.0)), injectionSwitch.x)))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY((uint(subgroup_local_id)), clamp((uint(subgroup_local_id)), (uint(subgroup_local_id)), (uint(subgroup_local_id)))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9756.8410) : 0.0)), injectionSwitch.x)))))))) | (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(80.66)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_base) : subgroup_base)), (workgroup_base + subgroup_base) | 0u), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u)))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) | 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 0u, 0u, 0u))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))) << 0u) | 0u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(8732.9551, 14.58, -15.45)))))) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true)), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true)), false, true)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u)) / 1u) : subgroup_local_id % 2))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), (! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), (! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))) || false), true, true), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), _GLF_IDENTITY(int(ivec4(int(64), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | 0) >> 0)), max(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)))), ~ (~ (1)))) * (1 & 1), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))) ^ (0 << _GLF_IDENTITY(int(5), int(5)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0), ~ (~ (1)))) * (1 & 1)) ^ 0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), max(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & _GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(22170) : (~ (1)))))) * (1 & 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max((1), (1)))))))) * (1 & _GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(91107) : 1 & 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(91107) : 1 & 1))), (true ? (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(91107) : 1 & 1))) : _GLF_FUZZED(36608)))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(91107) : 1 & 1))), (true ? (_GLF_IDENTITY(1 & 1, (false ? _GLF_FUZZED(91107) : 1 & 1))) : _GLF_FUZZED(36608))))))))), (false ? _GLF_FUZZED(-65128) : (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))))) ^ _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), max(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), ((0 << _GLF_IDENTITY(int(5), int(5)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 << _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1), ((_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) << 0))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (false ? _GLF_FUZZED(67218) : int(ivec2(0, 0)))))) | (0)))))) : _GLF_FUZZED(-85964))))), 1)), (int(ivec4(int(64), 1, 1, 1))) - 0)))), 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).y)) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, false))))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))).y)) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, false)))))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.8)), bool(false))), 0.0)), 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) || false))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true))), false, true))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, log(1.0), 1.0))).y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))) || false), true))), false, true))))))))))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], read, _GLF_IDENTITY(4, (4) >> 0), 64, 4);
}
