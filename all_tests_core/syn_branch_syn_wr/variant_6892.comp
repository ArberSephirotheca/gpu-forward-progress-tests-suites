#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (int(_GLF_IDENTITY(0, (0) - 0))) | 0)), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) - 0)), (int(_GLF_IDENTITY(0, (0) - 0))) | 0))) / 1)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))), 1 * (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))))), 0, 0), min(ivec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))), 1 * (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))))), 0, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))), 1 * (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))))), 0, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))), 1 * (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), min((_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0))))))))), 0, 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))), clamp(_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), min(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (0) - 0))))), ((~ (_GLF_IDENTITY(0, (0) - 0)))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0))))) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((0), 1, 0), (ivec3((0), 1, 0)) | (ivec3((0), 1, 0)))), (int(_GLF_IDENTITY(ivec3((0), 1, 0), (ivec3((0), 1, 0)) | (ivec3((0), 1, 0))))) ^ 0)) - 0))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - 0))))) / 1))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) >> _GLF_IDENTITY(0, (0) | 0)))))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ! (! (_injected_loop_counter < ((_GLF_IDENTITY(1, ((0 >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), int(1))) | (1)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(6, int(ivec4(6, 1, (1 ^ 0), 1)))))))) >> _GLF_IDENTITY(int(6), int(6))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ! (! (_injected_loop_counter < ((_GLF_IDENTITY(1, ((0 >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), int(1))) | (1)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(6, int(ivec4(6, 1, (1 ^ 0), 1)))))))) >> _GLF_IDENTITY(int(6), int(6))))))) && true, ! (! ((_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_injected_loop_counter))))), int(6))), ! (! (_injected_loop_counter < ((_GLF_IDENTITY(1, ((0 >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), int(1))) | (1)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec4(6, 1, (1 ^ 0), 1), (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(8), _GLF_IDENTITY(ivec4(8), (ivec4(8)) >> ivec4(0, 0, 0, 0)))) + (ivec4(6, 1, (1 ^ 0), 1)))))))))) >> _GLF_IDENTITY(int(6), int(6))))))) && true)))) || false))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.43)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)))), bool(true)))), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)) || false) || (_GLF_DEAD(false)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.43)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)))), bool(true)))), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)) || false) || (_GLF_DEAD(false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.43)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)))), bool(true)))), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)) || false) || (_GLF_DEAD(false)))) && true)), false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.43)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)))), bool(true)))), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)) || false) || (_GLF_DEAD(false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-56.43)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.0)), float(injectionSwitch.x), bool(true)))), bool(true)))), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)) || false) || (_GLF_DEAD(false)))) && true)), false))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false, false, true)), (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || (_GLF_DEAD(false)))) && true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), false))), false)))))) || false) || (_GLF_DEAD(false)))) && true))), true && (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false, false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true, true, true))))), (! (_GLF_DEAD(false))) || false))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true, true, true))))), (! (_GLF_DEAD(false))) || false)))))))) && _GLF_IDENTITY(true, false || (true)))))))) && true))))))))), ! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-20.89)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9654.5692)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false))))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true), true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))) || false) || (_GLF_DEAD(false)))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false) || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false) || (_GLF_DEAD(false))))), ! (! (! ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false) || (_GLF_DEAD(false)))))))))) && true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), false, _GLF_IDENTITY(true, ! (! (true))))))) || false) || (_GLF_DEAD(false)))) && true))), true && (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) || false)))))) && true)))))) && true), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true)))) || false) || (_GLF_DEAD(false)))) && true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(86.58)), vec2(_GLF_FUZZED(6.9), (vec2(1.0, 1.0))[1]), bvec2(false, true))))[0], injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))])))), injectionSwitch[1])).x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-932.866, -1.7)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-932.866, -1.7)))).x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), false, true)))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-932.866, -1.7), mix(vec2((vec2(-932.866, -1.7))[0], (vec2(-932.866, -1.7))[1]), vec2(_GLF_FUZZED(2131.0304), _GLF_FUZZED(-2363.0310)), bvec2(false, false)))))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.65), _GLF_FUZZED((-41.77 / (- -942.427)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], exp(0.0) * ((injectionSwitch)[1]))), bvec2(true, true))).y)), false, true)))))) || false) || (_GLF_DEAD(false)))) && true))), _GLF_IDENTITY(true && (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))))) && true)))), (_GLF_IDENTITY(true && (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))))), (! (_GLF_DEAD(false))) || false)))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))) && true, ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))) && true)))), bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))) && true, ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))) && true)))), false, false, true))))))) || false))) && true)))))))))))))), false || ((! (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-20.89)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), bool(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9654.5692)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false))))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true), true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))) || false) || (_GLF_DEAD(false)))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false) || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false) || (_GLF_DEAD(false))))), ! (! (! ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) || false) || (_GLF_DEAD(false)))))))))) && true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), false, _GLF_IDENTITY(true, ! (! (true))))))) || false) || (_GLF_DEAD(false)))) && true))), true && (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) || false)))))) && true)))))) && true), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true)))) || false) || (_GLF_DEAD(false)))) && true))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(86.58)), vec2(_GLF_FUZZED(6.9), (vec2(1.0, 1.0))[1]), bvec2(false, true))))[0], injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))])))), injectionSwitch[1])).x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-932.866, -1.7)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-932.866, -1.7)))).x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), false, true)))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-932.866, -1.7), mix(vec2((vec2(-932.866, -1.7))[0], (vec2(-932.866, -1.7))[1]), vec2(_GLF_FUZZED(2131.0304), _GLF_FUZZED(-2363.0310)), bvec2(false, false)))))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.65), _GLF_FUZZED((-41.77 / (- -942.427)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], exp(0.0) * ((injectionSwitch)[1]))), bvec2(true, true))).y)), false, true)))))) || false) || (_GLF_DEAD(false)))) && true))), _GLF_IDENTITY(true && (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) && true)), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))))) && true)))), (_GLF_IDENTITY(true && (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))))), (! (_GLF_DEAD(false))) || false)))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))) && true, ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))) && true)))), bool(bvec4((bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))) && true, ((bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), false, _GLF_IDENTITY(true, (true) && true))))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))) && true)))), false, false, true))))))) || false))) && true)))))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, true)), (bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, true, true))) || false))))))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)))) < injectionSwitch.y) && true)))))
              {
               barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(_GLF_IDENTITY(false || (false), true && (false || (false))), true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), bool(bvec3(! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false, true))))))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), bool(bool((false)))))))), true, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true)))))), true))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(! (false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(-233.086)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch))).y)) && (_GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true)))))), true))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))) || false))) || false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))), true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))), true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))), true, true, true)))))) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(584.746)), _GLF_IDENTITY(bool(false), (bool(false)) && true))) > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec4((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))), false, true, true)))))), true))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x2(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(5085.1082)), vec2(_GLF_FUZZED(-148.861), (vec2(0.0, 0.0))[1]), bvec2(false, true))), log(exp(0.0)), sqrt(1.0), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), injectionSwitch)).x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), false)))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), false, true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), true)), true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, false || (false)), true)))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true))), false)))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true))), false)))))), false)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat4x3((injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 1.0), (mat4x3((injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 1.0)) * mat4(1.0)))) - 0.0) > injectionSwitch.y)), true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-2515) : _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) | (3)))))))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_injected_loop_counter --)))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y = subgroup_local_id;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(-5.1, -9200.2846, 0.0, 943.869, -5.2, 9364.2785, 951.625, -7.3)))))))) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(packUnorm4x8(vec4(2.4, 9.3, 6626.4629, 780.428))) : gl_WorkGroupID.x))) >> 0u)));
 do
  {
   GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.z = workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(tan(0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(tan(0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(tan(0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0, 1.0) : _GLF_FUZZED(mat4(89.15, 4784.8660, -42.62, -5934.9673, 7.1, 4.3, -4.1, 202.452, 622.833, -766.402, -48.52, 1.0, 6496.8233, -3.4, 505.462, -1.6))))), (true ? transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0)))), abs(1.0), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0, 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, tan(tan(0.0)), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(tan(0.7)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(1.0), 0.0, 1.0) : _GLF_FUZZED(mat4(89.15, 4784.8660, -42.62, -5934.9673, 7.1, 4.3, -4.1, 202.452, 622.833, -766.402, _GLF_IDENTITY(-48.52, (false ? _GLF_FUZZED(-9482.6429) : -48.52)), 1.0, 6496.8233, -3.4, 505.462, -1.6))))) : _GLF_FUZZED((mat4(mat2(332.811, 7.3, -8946.3036, 6897.1321)) - 4.1)))))))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.z, 0u + (GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.z));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)), true && _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)))))), true && (_GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)))))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true))))))), (! (((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) && true)))))))) || false))))))), false, true))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
                barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.y = subgroup_base;
 GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.x = GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.y;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.x + GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z = virtual_gid;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))));
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.x + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y + 1, uint(uint(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y + 1))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y + 1, uint(uint(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y + 1)))) << 0u)) % _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0))))) * 1.0)), float(_GLF_FUZZED(2870.8259)), bool(false)))) < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(num_workgroup))));
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (1))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ (1)))) && true)) || false); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), _injected_loop_counter)) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))), true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))).y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))))))), bool(bool(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1))) >> 0)))), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))))))), bool(bool(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1))) >> 0)))), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))))))), bool(bool(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1))) >> 0)))), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))))))), bool(bool(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1))) >> 0)))), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0))))))))), bool(bool(bool(_GLF_IDENTITY(! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))), true && (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))))))), false || (! (_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 0, 0)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(~ (0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (0), (~ (0)) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1)), (int(ivec2(_GLF_IDENTITY(~ (0), (~ (0)) << 0), 1))) >> 0)))), 0, 1))), 0, 0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), bool(bvec2(_injected_loop_counter > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), int(ivec3(_GLF_IDENTITY(~ (0), (~ (0)) >> 0), 0, 0))))), true)))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-4.5), (injectionSwitch)[1]), bvec2(false, true))))).y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
        }
      }
    }
  }
 uint read = 0;
 GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.x = _GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_IDENTITY((read), _GLF_IDENTITY(((_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, (read) >> 0u), read, read)))), min(((_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, (read) >> 0u), read, read)))), ((_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, (read) >> 0u), read, read)))))) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) * 1u) / 1u);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 1 * (int(_GLF_IDENTITY(int(1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(64889) : int(1)))))))))), _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0))), ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0))), (_GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0))), clamp((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))), 1 * (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))))))), 0 | (min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978)))), (false ? _GLF_FUZZED(-20623) : int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(42978))))))) << 0))))), (min(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), min((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-98984))))))), (_GLF_IDENTITY(64, ~ (~ (64)))))) ^ 0), _GLF_IDENTITY(64, clamp(64, 64, 64)))) | 0)))))) + (0 ^ 0)))) >> 0), 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(_GLF_IDENTITY(6.5, (true ? _GLF_IDENTITY(6.5, mix(float(6.5), float(_GLF_FUZZED(-315.636)), bool(false))) : _GLF_FUZZED(log(-7733.1230))))) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - tan(0.0)))))); _injected_loop_counter ++)
        {
         if((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % 2, _GLF_IDENTITY((true ? GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(uvec4(31028u, 14086u, 187960u, 85908u)[_GLF_IDENTITY(3, int(ivec4(3, 0, 0, (0 << _GLF_IDENTITY(int(3), int(3))))))])), 0u ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2)), 0u + (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2)), max(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2)), (GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2))) | 0u))))) : _GLF_FUZZED(uvec4(31028u, 14086u, 187960u, 85908u)[3])), ((true ? GLF_merged3_0_1_13_1_1_17_2_1_12subgroup_basesubgroup_local_idworkgroup_id.y % _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(uvec4(31028u, 14086u, _GLF_IDENTITY(187960u, 0u + (187960u)), 85908u)[3]))) - 0u))))) == 0)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.x = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid) | uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))))) << uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid))))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))))) | (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, min(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))))))) / uvec3(1u, 1u, 1u)))).z) >> 0u)], 4, 64, 2);
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec2(int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) + ivec2(0, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[1]))), mix(vec2((min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_IDENTITY(_GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (false ? _GLF_FUZZED(vec2(-0.9, 34.08)) : _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], _GLF_FUZZED(-6.7)), vec2(_GLF_FUZZED(-8.4), ((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1], float(mat4((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1], 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.56)), float(1.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-16.78)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 0.0, 0.0, 1.0)))), vec2(_GLF_FUZZED(63.06), _GLF_FUZZED(1.7)), bvec2(false, false)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0)))))) && true)), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-2.6), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-4.3)), bvec2(true, false))))) * vec2(1.0, 1.0)).y) && true)), true, true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)), true, true))))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true, true))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))).y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, true))))) && true))))) || false)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))) || false))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), true)))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.x = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u, max((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u, ~ (~ ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, (true ? GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z : _GLF_FUZZED(workgroup_id))), (GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u, ((GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z) >> 0u) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, uvec3(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid[0], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid[1], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, uvec3(uvec3(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))[2])).z) >> 0u), max(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, uvec3(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid[0], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid[1], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, uvec3(uvec3(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))[2])).z) >> 0u), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, uvec3(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid[0], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid[1], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid, uvec3(uvec3(GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid)))[2])).z) >> 0u)))) / 1u)) ^ 0u)], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) * 1) | 0), 4)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), 0 + (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (4) | 0), 4)))), 0, 1)), 0 | (int(ivec3(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), 0, 1))))), 64, _GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), int(ivec3((2), 1, 0)))));
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y))))))) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(9.2)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)))), false || ((injectionSwitch.x > injectionSwitch.y))))))) && true) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) || false)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 & 45102); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroupBarrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 atomicStore(checker[GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.z], GLF_merged3_0_1_4_1_1_13_2_1_11readsubgroup_basevirtual_gid.x, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
