#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 mat4x3 _f0;
 mat2x3 _f1;
 mat2 _f2;
 int _f3;
} ;

struct _GLF_struct_23 {
 bvec2 _f0;
 float _f1;
 _GLF_struct_22 _f2;
} ;

struct _GLF_struct_21 {
 uint workgroup_base;
 vec4 _f0;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 int _f1;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 mat4 _f1;
 uvec3 _f2;
 vec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
 mat4 _f1;
 uvec3 _f2;
 bvec4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 ivec3 _f4;
 mat3x4 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_23 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_13 {
 uint subgroup_local_id;
 uvec3 _f0;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 mat4x3 _f3;
 vec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 ivec2 _f1;
 mat2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 uvec3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bvec4 _f1;
 uint subgroup_size;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 ivec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 bvec2 _f1;
 vec4 _f2;
 vec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 uint subgroup_id;
 mat2x4 _f1;
 bvec4 _f2;
 _GLF_struct_1 _f3;
 mat3x2 _f4;
 _GLF_struct_2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_6 _f3;
 mat2x4 _f4;
 mat3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), (ivec3(1)) >> ivec3(0, 0, 0)), ivec3(1))), _GLF_struct_3(_GLF_struct_0(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0)), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u | (_GLF_IDENTITY(1u, 0u ^ (1u))))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec2(1u)), (true ? _GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), uvec2(1u, 1u) * (clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) << uvec2(0u, 0u)) : _GLF_FUZZED((~ uvec2(116121u, 168889u)))))))), mat3x2(1.0)), gl_SubgroupID, mat2x4(1.0), bvec4(_GLF_IDENTITY(true, true && (true))), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), min(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), min(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u)))))))))))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(1u))), (_GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, (1u) << 0u), 1u), min(max(1u, 1u), max(1u, 1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), clamp((_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))), min(uvec4(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), clamp((_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))), uvec4(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), clamp((_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))))), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | (max(1u, 1u))), max(1u, 1u)))))))), (true ? (uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | (max(1u, 1u))), max(1u, 1u)))))))) : _GLF_FUZZED(uvec4(186916u, 135213u, 118832u, 58259u))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u)))))), clamp(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u)))))), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u)))))), (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u)))))), (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))) ^ 0u)))))), uvec4(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(max(1u, 1u), max(1u, 1u))))))))))), uvec4(1u)))) | uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1u), mat3x2(1.0), _GLF_struct_2(_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + ((vec3(1.0))[2])), float(mat4(_GLF_IDENTITY((vec3(1.0))[2], 0.0 + ((vec3(1.0))[2])), 1.0, sin(0.0), 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, length(0.0), 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0)))), vec3(_GLF_FUZZED(-0.8), _GLF_FUZZED(7.7), _GLF_FUZZED(32.47)), bvec3(false, false, false))), bvec2(true), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(68.98, -3.4, -38.19, _GLF_IDENTITY(-3.0, (-3.0) - 0.0))) : _GLF_IDENTITY(vec4(1.0), vec4(mat4(vec4(1.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 1.0, sin(0.0), 1.0, 0.0, 1.0))), vec4(mat2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec4(68.98, -3.4, -38.19, _GLF_IDENTITY(-3.0, (-3.0) - 0.0))) : _GLF_IDENTITY(vec4(1.0), vec4(mat4(vec4(1.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 1.0, sin(0.0), 1.0, 0.0, 1.0))), vec4(mat3x2(false ? _GLF_FUZZED(vec4(68.98, -3.4, -38.19, _GLF_IDENTITY(-3.0, (-3.0) - 0.0))) : _GLF_IDENTITY(vec4(1.0), vec4(mat4(vec4(1.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 1.0, sin(0.0), 1.0, 0.0, 1.0))), 0.0, 0.0)))))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))), float(_GLF_FUZZED(-8.0)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))))))) + 0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, (_GLF_IDENTITY(2.8, max(2.8, 2.8))) / 1.0))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4476.9642) : _GLF_IDENTITY(1.0, (1.0) * 1.0)))) - 0.0)), bool(true)))), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(9.9))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(9.9)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), float(mat4x2(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))), max(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(9.9)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), float(mat4x2(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(9.9)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), float(mat4x2(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))), min(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(9.9)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), float(mat4x2(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(9.9)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), float(mat4x2(float(_GLF_IDENTITY(mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (mat2x4((true ? 1.0 : _GLF_FUZZED(9.9)), exp(0.0), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))), length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) * mat2(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.9)))))))))) + 0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.8, (_GLF_IDENTITY(2.8, max(2.8, 2.8))) / 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4476.9642) : _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(1.0), bool(true))))))))) - 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4476.9642) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), float(1.0), bool(true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.9) : _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat2x3(float(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 1.0), (mat2x3(float(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(true))))))))))) - 0.0)) - 0.0)), bool(true))))) * vec3(1.0, 1.0, 1.0)), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(-9642.7997) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))))))), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(vec3(7.1, -5536.6427, 9.9).s)), bool(false))))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) ? _GLF_IDENTITY(_GLF_FUZZED(mat4(345.952, -363.623, 901.372, _GLF_IDENTITY(-1.2, mix(float(_GLF_FUZZED((+ -278.443))), float(-1.2), bool(true))), _GLF_IDENTITY(-5.3, mix(float(-5.3), float(_GLF_FUZZED(9.1)), bool(false))), 6644.8064, 14.95, _GLF_IDENTITY(5.3, (false ? _GLF_FUZZED(-36.11) : 5.3)), -6.1, -6.1, -12.80, 3.9, -229.046, -0.4, 7.1, -691.858)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(345.952, -363.623, _GLF_IDENTITY(901.372, clamp(901.372, 901.372, _GLF_IDENTITY(901.372, 1.0 * (901.372)))), -1.2, -5.3, 6644.8064, _GLF_IDENTITY(14.95, min(14.95, _GLF_IDENTITY(14.95, clamp(14.95, _GLF_IDENTITY(14.95, clamp(14.95, 14.95, 14.95)), 14.95)))), 5.3, -6.1, -6.1, -12.80, 3.9, -229.046, -0.4, 7.1, -691.858)))) : mat4(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / cos(tan(0.0)))))))), _GLF_struct_4(vec4(1.0)), _GLF_struct_6(_GLF_struct_5(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(9481.9610) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), clamp(1.0, 1.0, 1.0))), ivec3(1), mat3(1.0))), mat2x4(1.0), mat3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(25806u) : _GLF_IDENTITY(1u, (1u) << 0u)), uint(uvec3((false ? _GLF_FUZZED(25806u) : _GLF_IDENTITY(1u, (1u) << 0u)), ((1u ^ 0u) ^ 0u), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), 0u + (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(25806u) : _GLF_IDENTITY(1u, (1u) << 0u))))))))), bvec4(_GLF_IDENTITY(true, (true) || false)), gl_SubgroupSize, _GLF_struct_11(_GLF_struct_8(mat3x4(1.0), uvec3(_GLF_IDENTITY(1u, (1u) - 0u)), vec2(1.0)), _GLF_struct_9(uvec4(1u), ivec2(1), _GLF_IDENTITY(mat2(1.0), mat2(mat4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), transpose(transpose(mat2(1.0))))))), bvec3(true)), _GLF_struct_10(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), mat2x4(1.0), uvec3(1u), mat4x3(1.0), vec2(1.0), uvec3(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = (1 | (0 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))))))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)), _GLF_struct_13(gl_SubgroupInvocationID, uvec3(1u)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-6.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6.0), min(_GLF_FUZZED(-6.0), _GLF_FUZZED(-6.0))), _GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED(-6.0), mix(float(_GLF_FUZZED(-6.0)), float(_GLF_FUZZED(55.01)), bool(false))))), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(vec3(0.1, -8.5, -4.0).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[0], _GLF_FUZZED(-612.452)), bvec2(true, false)))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && true)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && true)), true))), false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false))))))), true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false))))))), true), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.6) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5585.0069), _GLF_FUZZED(2662.5139)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false))))))), true), true), true)))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) - 0.0))), 1.0)), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) - 0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > injectionSwitch.y)))))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, true)), true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.1)), bvec2(true, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1766.7187, 0.0)) : injectionSwitch)).x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1766.7187, 0.0)) : injectionSwitch)).x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(exp(0.0)), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(exp(0.0)), 1.0, 0.0, 1.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(exp(0.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1910.7885))), 1.0)), 0.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(exp(0.0)), 1.0, 0.0, 1.0, 1.0)))))) / cos(0.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-7.4) : exp(0.0)))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(exp(0.0)), 1.0, 0.0, 1.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(abs(exp(0.0)), float(vec3(_GLF_IDENTITY(abs(exp(0.0)), mix(float(abs(exp(0.0))), float(_GLF_FUZZED(61.37)), bool(false))), 0.0, 1.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(1910.7885))), 1.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.1)), bool(false))), 1.0), transpose(transpose(mat4x2(injectionSwitch.x, 1.0, 1.0, abs(exp(0.0)), 1.0, 0.0, 1.0, 1.0)))))) / cos(0.0))) > injectionSwitch.y)))))))), true, true)))), false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 ^ (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true), false), true))))))), true && (true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(11183u, 27660u, 13810u)))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - abs(tan(vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     do
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), ! (! (! (_injected_loop_counter < 1))))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_20(_GLF_struct_15(mat2x4(1.0), mat4(1.0), _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec4(uvec3(1u), 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uvec3(1u), 1u))))), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, 0u, 0u)))), bvec4(true), mat3x4(1.0)), _GLF_struct_16(mat2x3(1.0)), _GLF_struct_17(mat4x2(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.35) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED(determinant(mat2(39.01, -828.317, -3.8, 8689.9834))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 1.0, log(1.0), 0.0)) + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(1u), vec2(1.0), mat4x3(1.0)), _GLF_struct_18(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (true ? float(float(1.0)) : _GLF_FUZZED(-886.835))))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))))))))))), ivec3(1), mat3x4(1.0), _GLF_struct_19(uvec4(1u))), _GLF_struct_21(_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), vec4(1.0)), _GLF_struct_23(bvec2(true), _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0)), (dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0))) + sqrt(0.0)), max(dot(vec2(round(length(normalize(1.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(4.0) : length(normalize(1.0))))), 0.0), vec2(1.0, 0.0))))), round(length(normalize(1.0)))))), _GLF_struct_22(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, length(0.0), 1.0), vec3(0.0, 0.0, sqrt(1.0))), dot(vec3(0.0, length(0.0), 1.0), vec3(0.0, 0.0, sqrt(1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), (1.0) - 0.0)), mat2x3(1.0), mat2(1.0), 1)), mat2x4(1.0), mat4x3(1.0), mat4x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = _GLF_struct_replacement_24._f1.workgroup_base + _GLF_struct_replacement_7._f1.subgroup_id * _GLF_struct_replacement_12.subgroup_size + _GLF_struct_replacement_14._f1.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24._f1.workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_struct_replacement_24._f1.workgroup_base)) + _GLF_IDENTITY(_GLF_struct_replacement_7._f1.subgroup_id, (_GLF_struct_replacement_7._f1.subgroup_id) | (_GLF_struct_replacement_7._f1.subgroup_id)) * _GLF_struct_replacement_12.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_24._f1.workgroup_base, (true ? _GLF_struct_replacement_24._f1.workgroup_base : _GLF_FUZZED(virtual_gid))), 0u | (_GLF_struct_replacement_24._f1.workgroup_base)) + _GLF_struct_replacement_7._f1.subgroup_id * _GLF_struct_replacement_12.subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_24._f1.workgroup_base + _GLF_struct_replacement_7._f1.subgroup_id * _GLF_struct_replacement_12.subgroup_size)), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_struct_replacement_24._f1.workgroup_base + _GLF_struct_replacement_7._f1.subgroup_id * _GLF_struct_replacement_12.subgroup_size))), (~ (~ (~ (_GLF_struct_replacement_24._f1.workgroup_base + _GLF_struct_replacement_7._f1.subgroup_id * _GLF_struct_replacement_12.subgroup_size)))) << 0u))))) ^ (124306u & _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))) + (_GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_local_id + 1), ((_GLF_struct_replacement_14._f1.subgroup_local_id + 1)) * 1u)) | (_GLF_IDENTITY((_GLF_struct_replacement_14._f1.subgroup_local_id + 1), 0u ^ ((_GLF_struct_replacement_14._f1.subgroup_local_id + 1))))) % _GLF_struct_replacement_12.subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), _GLF_IDENTITY(false, ! (! (false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) || (false), false), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false || (false), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false || (false), false)), bvec2(bvec2(bvec2(bvec2(false || (false), _GLF_IDENTITY(false, (false) || false))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))) && true)), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false || (false), (false || (false)) || false), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), false))), false)))), false)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (false), false), _GLF_IDENTITY(true, false || (true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), _GLF_IDENTITY(false, ! (! (false)))), false))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec4(bvec2(false || (false), false), false, false))), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false), _GLF_IDENTITY(true, false || (true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))) || (false), false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false)))), false)))))))))))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (false), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (false), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (false), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))), false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || (false), false), false)))), false))), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec4(bvec2(false || (false), false), false, true))), false), false)), false)))))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))))))))), false)), _GLF_IDENTITY(true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec2(bvec2(false || (false), false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))))))), false))), false)))))))))))))), false))), true && (true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec2(bvec2(false || (false), false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false || (false), _GLF_IDENTITY(false, (false) || false)), false), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false || _GLF_IDENTITY((false), true && ((false))), false), false), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false || (false), bool(bool(_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true)))))), false), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))))))), false))), false)))))))))))))), false))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), (! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), (! (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec3(bvec3(bvec2(false || (false), false), false)))), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true) || (false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), false))))))))))))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))))))))), false)))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), (false || (false)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))))))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true) || (false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || _GLF_IDENTITY((false), ! (! ((false)))), false), false), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false || (false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false || (false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec2(bvec2(false || (false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false))))))), true, false))), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || _GLF_IDENTITY((false), true && ((false))), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || _GLF_IDENTITY((false), ! (! ((false)))), false), false), _GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false || (false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false || (false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec2(bvec2(false || (false), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), false))))))), true, false))), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || _GLF_IDENTITY((false), true && ((false))), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), false))))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false || (false), false), false))), false)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), true), bvec3(bvec3(bvec3(bvec2(false || (false), false), true)))))), true, true))), false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), false))))))))))))))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || _GLF_IDENTITY((false), ! (! ((false)))), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false || (false), false), false), bvec3(bvec4(bvec3(bvec2(false || (false), false), false), false)))))))))))), false))))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), max(_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) ^ 0u), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u)))))) ^ 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_IDENTITY((buf[virtual_gid]) ^ 0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY((buf[virtual_gid]) ^ 0u, 0u | ((buf[virtual_gid]) ^ 0u)), (buf[virtual_gid]) ^ 0u, (buf[virtual_gid]) ^ 0u), (clamp(_GLF_IDENTITY((buf[virtual_gid]) ^ 0u, 0u | ((buf[virtual_gid]) ^ 0u)), (buf[virtual_gid]) ^ 0u, (buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), clamp(_GLF_IDENTITY(uint(virtual_gid), _GLF_IDENTITY((uint(virtual_gid)), max((uint(virtual_gid)), (uint(virtual_gid)))) - 0u), uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u ^ 0u))), uint(virtual_gid)))))]) ^ 0u)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY((buf[virtual_gid]) ^ 0u, 0u | ((buf[virtual_gid]) ^ 0u)), (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))) / 1u)) ^ 0u, _GLF_IDENTITY((buf[virtual_gid]) ^ 0u, ((buf[virtual_gid]) ^ 0u) << 0u)), uint(uint(clamp(_GLF_IDENTITY((buf[virtual_gid]) ^ 0u, _GLF_IDENTITY(0u | ((buf[virtual_gid]) ^ 0u), uint(uvec2(0u | ((buf[virtual_gid]) ^ 0u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))))))), (buf[virtual_gid]) ^ 0u, (buf[virtual_gid]) ^ 0u)))))))), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.0))), 1.0)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), clamp(vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.2)), bool(false)))))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (true ? mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0) : _GLF_FUZZED(mat3x2(9871.2174, -4613.7733, -0.7, -69.73, -777.297, -1.4)))))).y)))))))))))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(-55295)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) / 1)), int(0)), (_GLF_IDENTITY(int(0), int(0))) ^ 0), min(_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) | 0)))) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), ! (! (bool(_GLF_WRAPPED_IF_FALSE(false))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) || false, ((_injected_loop_counter > 0) || false) || false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) || false, _GLF_IDENTITY(((_injected_loop_counter > 0) || false) || false, false || (((_injected_loop_counter > 0) || false) || false)))))), (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) || false, ((_injected_loop_counter > 0) || false) || false))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_struct_replacement_14._f1.subgroup_local_id + 1 < _GLF_struct_replacement_12.subgroup_size)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false, false))));
                   if(_GLF_DEAD(false))
                    barrier();
                   int i = 0;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     barrier();
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = (1 | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))) | _GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))) | _GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))) | _GLF_IDENTITY(1, 0 + (1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-6.0)), bool(false))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0)), 0.0 + (float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(57.60) : injectionSwitch.y))), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -49501)), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -49501)), true, true, false)), bool(bool(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -49501)), true, true, false)))))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ~ (~ (read))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) >> 0u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), uint(uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u)) ^ (read)), _GLF_IDENTITY(read, _GLF_IDENTITY(0u | _GLF_IDENTITY((read), ((read)) | ((read))), (0u | _GLF_IDENTITY((read), ((read)) | ((read)))) << 0u)), read)), 4, 64, 4);
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))))))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (! (injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! (bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))))) && true)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(62.00)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) && true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(198.564))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false))) && true))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.5)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, false, false)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
  }
}
