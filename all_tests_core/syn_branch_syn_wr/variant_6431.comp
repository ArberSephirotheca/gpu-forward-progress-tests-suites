#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + log(vec2(1.0, 1.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(815.984, 8.9)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ((_GLF_WRAPPED_IF_FALSE(false)) || false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
          continue;
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_injected_loop_counter --)))))
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))
      {
       return;
      }
     else
      {
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(int(0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(-9.4, _GLF_IDENTITY((true ? -9.4 : _GLF_FUZZED(7.7)), ((true ? -9.4 : _GLF_FUZZED(7.7))) - log(1.0))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), clamp(_GLF_FUZZED(-0.6), _GLF_FUZZED(-0.6), _GLF_IDENTITY(_GLF_FUZZED(-0.6), (true ? _GLF_FUZZED(-0.6) : _GLF_FUZZED(59.95))))), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(35.57, _GLF_IDENTITY(-1242.3264, (false ? _GLF_FUZZED(-2295.0724) : -1242.3264)))) : injectionSwitch, min(false ? _GLF_FUZZED(vec2(35.57, _GLF_IDENTITY(-1242.3264, (false ? _GLF_FUZZED(-2295.0724) : -1242.3264)))) : injectionSwitch, false ? _GLF_FUZZED(vec2(35.57, _GLF_IDENTITY(-1242.3264, (false ? _GLF_FUZZED(-2295.0724) : -1242.3264)))) : injectionSwitch)))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / sqrt(1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0)))[0], _GLF_FUZZED(-9.4)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), min(_GLF_FUZZED(-0.6), _GLF_FUZZED(-0.6))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true))) : _GLF_FUZZED(vec2(-515.502, 87.25)), mix(vec2((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / sqrt(1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0)))[0], _GLF_FUZZED(-9.4)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), min(_GLF_FUZZED(-0.6), _GLF_FUZZED(-0.6))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true))) : _GLF_FUZZED(vec2(-515.502, 87.25)))[0], _GLF_FUZZED((15.37 * -31.46))), vec2(_GLF_FUZZED(vec4(319.587, -372.706, -865.213, -2.4).q), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / sqrt(1.0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))) : vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0)))[0], _GLF_FUZZED(-9.4)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), min(_GLF_FUZZED(-0.6), _GLF_FUZZED(-0.6))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true))) : _GLF_FUZZED(vec2(-515.502, 87.25)))[1]), bvec2(false, true))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), 0), (ivec2(_GLF_IDENTITY(1, (1) >> 0), 0)) << ivec2(0, 0))))) | (_GLF_IDENTITY(1, (1) / 1))), ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-790.767)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), 0 | (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))))], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / 1.0))), vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, true)))))) + vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), exp(0.0), cos(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(2737.8856, (_GLF_IDENTITY(2737.8856, clamp(2737.8856, 2737.8856, 2737.8856))) / 1.0)) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))), 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))))), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1]))), (injectionSwitch))), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), exp(0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), exp(0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0)))))))))[0], float(mat4x2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), exp(0.0), cos(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(2737.8856, (_GLF_IDENTITY(2737.8856, clamp(2737.8856, 2737.8856, 2737.8856))) / 1.0)) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))), 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))))), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(float(injectionSwitch[0]))), injectionSwitch[1]))), (injectionSwitch))), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), exp(0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), exp(0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0)))))))))[0], 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0))), _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), true)))), (bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), true))))) && true)), bool(bool(bool(true))))), false))))))).y, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-9.4), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(-9.4), 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(-9.4), 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0), mat3x4(mat4(mat3x4(_GLF_FUZZED(-9.4), 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)))))))))))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(47922) : 1))))), (true ? _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY((1 | 1), ((1 | 1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, _GLF_IDENTITY(true, false || (true))))).y) - 0.0)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(-9.4, (true ? -9.4 : _GLF_FUZZED(7.7))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_FUZZED(-0.6), _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6), _GLF_IDENTITY(_GLF_FUZZED(-0.6), (true ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(_GLF_FUZZED(59.95), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat2(1.0) * (mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat2(1.0) * (mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat2(1.0) * (mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat2(1.0) * (mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))), float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat2(1.0) * (mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))))), float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), mat2(1.0) * (mat3x2(_GLF_FUZZED(59.95), 0.0, 1.0, 0.0, 1.0, sqrt(0.0)))))))))))), (injectionSwitch)[1]), bvec2(false, true))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))), vec2(_GLF_FUZZED(-0.6), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(35.57, -1242.3264)) : injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))), mix(vec2(_GLF_FUZZED(-18.38), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(360.786)), bvec2(true, false))))))) : vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(-9.4)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), min(_GLF_FUZZED(-0.6), _GLF_FUZZED(-0.6))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), true))) : _GLF_FUZZED(vec2(-515.502, 87.25)))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-790.767)))))), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), 0 | (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))))], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-9.4, 1.0 * (_GLF_IDENTITY(-9.4, clamp(-9.4, -9.4, -9.4)))), (-9.4) / 1.0))), vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-9.4, (-9.4) / 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, true)))))) + vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), exp(0.0), cos(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2737.8856) : 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.4)), float(0.0), bool(true))), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), exp(0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0)), transpose(transpose(transpose(mat4x2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), exp(0.0), cos(0.0), 1.0, 0.0, 0.0, 1.0)))))))))[0], _GLF_FUZZED(-9.4)), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), bool(bvec2(bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))), false))))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, min((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)), vec2(mat3x2(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_FUZZED(-9.4)), mix(vec2(_GLF_FUZZED(792.809), _GLF_FUZZED(-775.558)), vec2((vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(5.2)), vec2(_GLF_FUZZED(47.94), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-9.4)))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED(-9.4)))[1]), bvec2(true, true))), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -7517.6337 : 5.6))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316))))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))), (true ? _GLF_IDENTITY(1, int(ivec3(1, (1 | 1), 1))) : _GLF_FUZZED(-87316)))))) >> 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))) | 0)]), bvec2(false, true))).y) - 0.0))))))))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-7125.9393), 1.0 * (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-7125.9393), min(true ? injectionSwitch.y : _GLF_FUZZED(-7125.9393), true ? injectionSwitch.y : _GLF_FUZZED(-7125.9393))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)) || false, bool(bvec2((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) / 1), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * mat2(1.0)).x > injectionSwitch.y)) || (false))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0)).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true)), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true)))))))), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (false)))))))) && true)) || false)))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2758.3862, -2.0)), vec2(mat4x3(_GLF_FUZZED(vec2(-2758.3862, -2.0)), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, abs(0.0), 1.0))))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2758.3862, -2.0)), vec2(mat4x3(_GLF_FUZZED(vec2(-2758.3862, -2.0)), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, abs(0.0), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2758.3862, -2.0)), vec2(mat4x3(_GLF_FUZZED(vec2(-2758.3862, -2.0)), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, abs(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-1.8, 5143.1823)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2758.3862, -2.0)), vec2(mat4x3(_GLF_FUZZED(vec2(-2758.3862, -2.0)), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, abs(0.0), 1.0))))))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       continue;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))))
            break;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false))))), true))))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))));
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(77.10)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))))) || false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), min(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), 0u ^ (uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, (true ? (1) << 0 : _GLF_FUZZED(-75468)))), 1 * (1))))) % subgroup_size), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))) ? ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85236))))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) ^ 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (subgroup_local_id + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-85236))))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ~ (~ (_GLF_IDENTITY((1), 0 | ((1))) << 0)))), (_GLF_IDENTITY(1, (1) << 0)) ^ 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (subgroup_local_id + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u))))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (subgroup_local_id + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u))))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (subgroup_local_id + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (subgroup_local_id + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u))))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (1))), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)) >> 0u, clamp((~ (subgroup_local_id + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), subgroup_local_id)) + 1)))) >> 0u)))))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(1u), uint(1u))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))) ^ 0u) + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) | ((1u ^ 1u) >> _GLF_IDENTITY(uint(2u), uint(2u))))) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) << 0u) + 1)) >> 0u, clamp((~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ 0u) + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) + 0), 1))), ~ (subgroup_local_id + 1)))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) ^ 0u)) - 0u)) : subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))) ^ 0u) + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), clamp(~ (subgroup_local_id + 1), ~ _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) ^ 0u), ~ (subgroup_local_id + 1)))) >> 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0), 1)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_FUZZED(workgroup_size))) : subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1)), (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY((~ (subgroup_local_id + 1)) >> 0u, clamp((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id))) ^ 0u) + 1)) >> 0u, (~ (subgroup_local_id + 1)) >> 0u, (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))) >> 0u)))))))))) % subgroup_size) : _GLF_FUZZED((virtual_gid))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(37746, -34485, -16329)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(37746, -34485, -16329)), min(_GLF_FUZZED(bitfieldExtract(37746, -34485, -16329)), _GLF_FUZZED(bitfieldExtract(37746, _GLF_IDENTITY(-34485, 0 ^ (_GLF_IDENTITY(-34485, (_GLF_IDENTITY(-34485, int(ivec2(-34485, 0)))) | 0))), -16329))))) * 1))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - 0u) * 1u) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), ~ (~ (1u * (subgroup_local_id + 1))))))))), uint(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u))))), uint(uint(_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u))))), min(min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u))))), min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(0u ^ (subgroup_local_id + 1)), (uint(0u ^ (subgroup_local_id + 1))) << 0u)))), 1u, 0u)))))))))))))), 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), uint(uvec3(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(15459u) : subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(next_virtual_gid)))) | 0u))), subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? subgroup_local_id + 1 : _GLF_FUZZED(next_virtual_gid))), subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u))))))), 1u, 0u)))) - (83747u & 0u))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) - 0u) * 1u) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), ~ (~ (1u * (subgroup_local_id + 1))))))))), uint(uvec3(0u | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))), 1u, 0u))))), uint(uint(_GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))), 1u, 0u))))), min(min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u))))), min((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 1u, 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(0u ^ (subgroup_local_id + 1)), (uint(0u ^ (subgroup_local_id + 1))) << 0u)))), 1u, 0u)))))))))))))), 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u) | (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), uint(uvec3(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(15459u) : subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0), clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1))))))) << 0)), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(next_virtual_gid)))) | 0u))), subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), bool(bool(bool(bvec2(true, true))))))))) && true)) ? subgroup_local_id + 1 : _GLF_FUZZED(next_virtual_gid))), subgroup_local_id + 1)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))))), 1u, 0u))))))), 1u, 0u)))) - (83747u & 0u))) < subgroup_size) || false))
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(8.6)))))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))
            return;
          }
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > ((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((true)) && true))))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1))) ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) >> (0 | 0)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = ((true ? -18833 : 58134) & (-64383 & _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-5979), max(_GLF_FUZZED(-5979), _GLF_IDENTITY(_GLF_FUZZED(-5979), min(_GLF_IDENTITY(_GLF_FUZZED(-5979), min(_GLF_FUZZED(-5979), _GLF_FUZZED(-5979))), _GLF_FUZZED(-5979))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-715.895)))))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), false)))) || false))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_IDENTITY(false, false || (false))), true, true, true))))))) && true)))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(56.58))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))) || false)), ((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))) || false))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) || _GLF_IDENTITY(false, false || (false))))))) && true)))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), vec2(_GLF_FUZZED(-57.67), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        return;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))) && true)))))))
          {
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) / 1))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                break;
               continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bool(true))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true), false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && true), (injectionSwitch.x > injectionSwitch.y))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))))
                {
                 return;
                }
               else
                {
                }
              }
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
                continue;
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         if(_GLF_DEAD(false))
          break;
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), max(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), (true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)) : _GLF_FUZZED(805.272))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), clamp(float(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-51.10)), float(0.0), bool(true))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)), float(mat4(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)), float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), float(vec3(1.0, 0.0, 0.0)))), min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-181.625) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), clamp(float(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-51.10)), float(0.0), bool(true))))), float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))), min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))))))) - 0.0), mix(float(float(vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(-141.177)), bool(false)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), max(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)), (true ? float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(mat4x3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0)) : _GLF_FUZZED(805.272))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), clamp(float(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-51.10)), float(0.0), bool(true))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)), float(mat4(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)), min(float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)), float(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(598.257) : 1.0)), 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0))), float(vec3(1.0, 0.0, 0.0)))), min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-181.625) : _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(1.0, 0.0, 0.0)), clamp(float(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-51.10)), float(0.0), bool(true))))), float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0)))), min(float(vec3(1.0, 0.0, 0.0)), float(vec3(1.0, 0.0, 0.0))))))) - 0.0), mix(float(float(vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(-141.177)), bool(false)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) - 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true))))) || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | _GLF_IDENTITY(0, (0) - 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, (0 | 0) ^ (31582 & 0))), (_GLF_IDENTITY((0 | 0), ((_GLF_IDENTITY(0, (0) - 0) | 0)) - _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) << 0)) << 0) | (0 >> _GLF_IDENTITY(int(4), int(4)))))) | 0), (0 | 0), _GLF_IDENTITY((0 | 0), ((0 | 0)) | ((0 | _GLF_IDENTITY(0, (0) | (0))))))) | (0 | _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(int((injectionSwitch == vec2(38.94, -737.709)))), min(_GLF_IDENTITY(_GLF_FUZZED(int((injectionSwitch == vec2(38.94, -737.709)))), (_GLF_FUZZED(int((injectionSwitch == vec2(38.94, -737.709))))) ^ 0), _GLF_FUZZED(int((injectionSwitch == vec2(38.94, -737.709)))))) : 0)))), _GLF_IDENTITY(min(0 | 0, 0 | 0), min(min(0 | 0, 0 | 0), min(0 | 0, 0 | 0))))))), false || ((_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) ^ 0))) | 0), ((0 | 0)) - 0)) | 0), (0 | 0), _GLF_IDENTITY((0 | 0), ((0 | 0)) | (_GLF_IDENTITY((0 | _GLF_IDENTITY(0, (0) >> 0)), clamp((0 | _GLF_IDENTITY(0, (0) >> 0)), (0 | _GLF_IDENTITY(0, (0) >> 0)), (0 | _GLF_IDENTITY(0, (0) >> 0)))))))) | _GLF_IDENTITY((0 | _GLF_IDENTITY(0, max(0, 0))), max((0 | 0), _GLF_IDENTITY((0 | 0), 1 * (_GLF_IDENTITY((0 | 0), int(ivec4((0 | 0), 1, 0, 1)))))))), min(0 | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-52684))), 0 | 0))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), bool(bvec3(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), false, false))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), bool(bvec3(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), false, false))), true, true)), false)))), false || (_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, 1, 0)), (int(ivec3(_injected_loop_counter, 1, 0))) | 0)) > _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0)))) << 0)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), (0 | 0) | (_GLF_IDENTITY(0, (0) >> 0) | 0)), min(0 | _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0) : _GLF_FUZZED(-33505))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0))))) | 0))))) || false)))), (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(_GLF_IDENTITY(0 | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 | 0)), 0 | 0))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), bool(bvec3(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), false, false))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), bool(bvec3(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | _GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0))) | (0 | 0)), min(0 | 0, 0 | 0))), false, false))), true, true)), false)))), false || (_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)))), min(0 | 0, 0 | 0))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, 1, 0)), (int(ivec3(_injected_loop_counter, 1, 0))) | 0)) > _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(0 | 0, 0 | 0)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), (0 | 0) | (0 | 0)), min(_GLF_IDENTITY(0 | 0, 0 | (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)))), 0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), _GLF_IDENTITY((0 | 0) | (0 | 0), max((0 | 0) | (0 | 0), _GLF_IDENTITY((0 | 0) | (0 | 0), max((0 | 0) | (0 | 0), (0 | 0) | (0 | 0)))))), min(0 | 0, 0 | 0)))) << 0)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (0 | 0)), (0 | 0) | (_GLF_IDENTITY(0, (0) >> 0) | 0)), min(0 | _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0) : _GLF_FUZZED(-33505))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0))))) | 0))))) || false))))) && true))), _GLF_IDENTITY(! (! (bool(bool(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | _GLF_IDENTITY((0 | 0), ((0 | 0)) * 1)), _GLF_IDENTITY(min(0 | 0, 0 | 0), (_GLF_IDENTITY(min(0 | 0, 0 | 0), (false ? _GLF_FUZZED(floatBitsToInt(-7.4)) : min(0 | 0, 0 | 0)))) ^ 0))))))))), ! (! (! (! (bool(_GLF_IDENTITY(bool(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((~ (_injected_loop_counter)), max((~ (_injected_loop_counter)), (~ (_injected_loop_counter))))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8))), 0 | (_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), (_GLF_IDENTITY(8, 0 | (8))) << 0)), int(8))), ((0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) * 1)))) | 0)), min(0 | 0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) | 0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(0 | (8), (0 | (8)) / 1))), int(8)))) | 0)), min(0 | 0, 0 | 0))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((~ (_injected_loop_counter)), _GLF_IDENTITY(max((~ (_injected_loop_counter)), _GLF_IDENTITY((~ (_injected_loop_counter)), (false ? _GLF_FUZZED((_injected_loop_counter)) : (~ (_injected_loop_counter))))), (max((~ (_injected_loop_counter)), _GLF_IDENTITY((~ (_injected_loop_counter)), (false ? _GLF_FUZZED((_injected_loop_counter)) : (~ (_injected_loop_counter)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((~ (_injected_loop_counter)), max((~ (_injected_loop_counter)), (~ (_injected_loop_counter))))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8))), 0 | (_GLF_IDENTITY((0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (8)), (_GLF_IDENTITY(8, 0 | (8))) << 0)), int(8))), ((0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) * 1)))) | 0)), min(0 | 0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0))))) | 0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(0 | (8), (0 | (8)) / 1))), int(8)))) | 0)), min(0 | 0, 0 | 0))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((~ (_injected_loop_counter)), _GLF_IDENTITY(max((~ (_injected_loop_counter)), _GLF_IDENTITY((~ (_injected_loop_counter)), (false ? _GLF_FUZZED((_injected_loop_counter)) : (~ (_injected_loop_counter))))), (max((~ (_injected_loop_counter)), _GLF_IDENTITY((~ (_injected_loop_counter)), (false ? _GLF_FUZZED((_injected_loop_counter)) : (~ (_injected_loop_counter)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) > (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, 0 | (8))), int(8)))) | 0)), min(0 | 0, 0 | 0))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true))))))))))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) || false))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), true && (bool(bvec3(_GLF_DEAD(false), true, false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))) && true)))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), ~ (~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY((int(4)), int(ivec4((int(4)), 1, 1, 1))))))))));
  }
}
