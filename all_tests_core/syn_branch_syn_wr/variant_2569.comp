#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((false), true && ((false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2x3(vec2(injectionSwitch), 1.0, 0.0, 0.0, 1.0))), vec2(injectionSwitch))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(82.14)), float(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))), false || (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || (_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false)))), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-5008.6605, 91.34)))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(float(injectionSwitch.y)))) * sqrt(1.0)) : _GLF_FUZZED(round(881.110)))))))))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(float(injectionSwitch.y)))) * sqrt(1.0)) : _GLF_FUZZED(round(881.110))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) - ((1u ^ 1u) ^ (0u | 0u))), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((((subgroup_local_id + 1))), (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1))))))))), ((((subgroup_local_id + 1)))) | ((((subgroup_local_id + 1)))))) | 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u ^ (((subgroup_local_id + 1))), 0u + (0u ^ (((subgroup_local_id + 1))))), 0u ^ (((subgroup_local_id + 1))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))))))), (clamp(_GLF_IDENTITY(0u ^ (((subgroup_local_id + 1))), 0u + (0u ^ (((subgroup_local_id + 1))))), 0u ^ _GLF_IDENTITY((((subgroup_local_id + 1))), max(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1))), ((_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) | ((((subgroup_local_id + 1))))), (((subgroup_local_id + 1))))), 0u ^ (((subgroup_local_id + 1))))) + 0u))))) << 0u) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))) + (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))))) << 0u) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), (false ? _GLF_FUZZED((num_workgroup / workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))) / 1u)))))) << 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size))) ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))) << 0u) % subgroup_size))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)), 0u ^ (((subgroup_local_id + 1)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))) + (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)), 0u ^ (((subgroup_local_id + 1)))))))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))))) << _GLF_IDENTITY(0u, (0u) | (0u))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, clamp((1) / 1, (1) / 1, _GLF_IDENTITY((1) / 1, clamp((1) / 1, (1) / 1, (1) / 1))))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u, max(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u, ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))))), (false ? _GLF_FUZZED((num_workgroup / workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))) / 1u)))))) << 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size))))) ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))) - 0u)) << 0u) % subgroup_size))) : _GLF_FUZZED(uvec3(17558u, 96836u, 13939u).x)))), min((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u)), uint(uint(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, min(0u, 0u)))) ^ (((subgroup_local_id + 1)))))))) | (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))))) << 0u) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u))), ~ (~ (((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u)))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED((num_workgroup / workgroup_size)), 0u | (_GLF_FUZZED((num_workgroup / workgroup_size)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) / 1u)))) | 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY(0u, (0u) >> 0u) ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) / 1))))) | 0u)))) / 1u)))))) << 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, ~ (~ (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u ^ 1u), 0u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_local_id, (1u ^ 1u), 0u)))), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), clamp(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), clamp(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u)))))) | 0u))) / 1u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), clamp(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u))))), 0u + (((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u ^ 1u), 0u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_local_id, (1u ^ 1u), 0u)))), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), clamp(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), clamp(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u)))))) | 0u))) / 1u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), clamp(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u)))))))), ((_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u ^ 1u), 0u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_local_id, (1u ^ 1u), 0u)))), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), clamp(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), clamp(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u)))))) | 0u))) / 1u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), clamp(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u))))), 0u + (((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u ^ 1u), 0u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_local_id, (1u ^ 1u), 0u)))), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), clamp(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), clamp(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u)))))) | 0u))) / 1u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), clamp(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u))))))))) | ((_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u ^ 1u), 0u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_local_id, (1u ^ 1u), 0u)))), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), clamp(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), clamp(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u)))))) | 0u))) / 1u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), clamp(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u))))), 0u + (((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (1u ^ 1u), 0u), uvec3(0u, 0u, 0u) | (uvec3(subgroup_local_id, (1u ^ 1u), 0u)))), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (_GLF_IDENTITY(1u, (1u) | 0u) ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), clamp(((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), min(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))))), ((((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (_GLF_IDENTITY(1, (1) / 1)))))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), clamp(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u), uvec3((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), 1u, 0u)))))) | 0u))) / 1u), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), clamp(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))))) << 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u)))))))))) ^ 0u) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))) << 0u) % subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))))), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))) + (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))))), 0u))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / (0u ^ 1u)) + 1)), 0u ^ (((subgroup_local_id + 1)))))))))) << 0u) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) + (0 | (0 >> _GLF_IDENTITY(int(7), int(7)))))))))) | 0u))), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max((1) / 1, _GLF_IDENTITY((1) / 1, ((1) / 1) | 0)))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), (false ? _GLF_FUZZED((num_workgroup / workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), 1u))))), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)) | 0u)))))) / 1u)))))) << 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size))) ^ 0u, (_GLF_IDENTITY((((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size))) ^ 0u, min((((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size))) ^ 0u, (((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), max(uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u)), uint(uvec3(subgroup_local_id, (1u ^ 1u), 0u))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), max(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)), (0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u))) / 1u), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)))), ((((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1))))) | 0u)))))) << 0u) % subgroup_size))) ^ 0u))) ^ 0u)) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), (int(ivec4(1, 1, 0, 0))) | (int(ivec4(1, 1, 0, 0)))))), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))) << 0u) % subgroup_size)))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))))) << 0u) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), clamp((0) | (0), (0) | (0), (0) | (0)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (false ? _GLF_FUZZED((90195 ^ -37607)) : _GLF_IDENTITY(1, clamp(1, 1, 1))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) >> 0u)) * 1u)], ~ (~ (buf[virtual_gid]))) : _GLF_FUZZED(next_virtual_gid))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), 0.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, true, true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(1.3), min(_GLF_IDENTITY(_GLF_FUZZED(1.3), max(_GLF_FUZZED(1.3), _GLF_FUZZED(1.3))), _GLF_FUZZED(1.3))), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-80.22) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-94.16)), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : injectionSwitch.x)), injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.2) : injectionSwitch.x)), injectionSwitch.x))))) > injectionSwitch.y)))) || false), false))))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(bitfieldInsert(25444, -9600, -53685, -69654)))), 64, 4);
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sqrt(1.0), 0.0, determinant(mat3(sqrt(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0, ((_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0) - 0.0))) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, abs(0.0), 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(437.771))), 1.0), transpose(transpose(mat3x4(0.0, abs(0.0), 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-232.709)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) / exp(0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sqrt(1.0), 0.0, determinant(_GLF_IDENTITY(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), (true ? _GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-5412.9085)), float(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(331.378)))), bool(true))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat3(-2657.7590, -148.332, 8056.9419, -8.1, 124.840, 8.7, -41.03, -69.33, -54.48))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))))))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat2(injectionSwitch.x, sqrt(1.0), 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), sqrt(1.0), 0.0, determinant(_GLF_IDENTITY(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat2(injectionSwitch.x, sqrt(1.0), 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y)) || false), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-1380.3196) : _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(54.59))))), 0.0, determinant(_GLF_IDENTITY(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5024.0238)), float(1.0), bool(true))), min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), transpose(transpose(transpose(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))))))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat2(injectionSwitch.x, sqrt(1.0), 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y)) || false, (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat2(injectionSwitch.x, sqrt(1.0), 0.0, determinant(mat3(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y)) || false) && true)), false)))))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false || (false), (false || (false)) || false)))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))), false || (false))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), false, false))))), (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))) && true))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         break;
        }
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
