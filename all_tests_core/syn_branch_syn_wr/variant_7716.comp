#version 460
struct _GLF_struct_0 {
 vec3 _f0;
 mat2x3 _f1;
 mat4 _f2;
 vec2 _f3;
 bvec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_1 {
 int _f0;
 vec3 _f1;
 float _f2;
 uvec2 _f3;
 _GLF_struct_0 _f4;
 vec2 _f5;
 uint workgroup_size;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 _GLF_struct_1 _f1;
 vec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid;
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base;
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_base;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y = subgroup_local_id;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.x = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(vec3(1.0), _GLF_struct_1(1, vec3(1.0), 1.0, uvec2(1u), _GLF_struct_0(vec3(1.0), mat2x3(1.0), mat4(1.0), vec2(1.0), bvec3(true), uvec2(1u)), vec2(1.0), gl_WorkGroupSize.x), vec3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_2._f1.workgroup_size * GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z = workgroup_base;
 uint subgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.y * subgroup_size;
 uint virtual_gid = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + subgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z;
 uint next_virtual_gid = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + subgroup_base + ((GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z + 1) % subgroup_size);
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.w = next_virtual_gid;
 GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x = GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.w;
 uint read = 0;
 atomicStore(buf[GLF_merged2_0_3_79_3_1_16GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x], uint(1), 4, 64, 4);
 if((GLF_merged3_0_1_13_1_1_11_2_1_17num_workgroupsubgroup_idsubgroup_local_id.z % 2) == 0)
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
