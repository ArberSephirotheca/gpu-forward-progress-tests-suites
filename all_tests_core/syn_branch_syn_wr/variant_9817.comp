#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(mat2x3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), determinant(mat4(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), tan(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-6020.4697) : dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))), log(1.0), 0.0))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (! (injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.8)), bool(false))), injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true, true)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(37.61)), bool(false))) > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(23.01, -678.075)) : injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(atan(vec2(-2567.0415, 67.88), vec2(4208.7062, 918.518))) : _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))), 0.0, 1.0))) / vec2(1.0, 1.0))))) - sqrt(vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(atan(vec2(-2567.0415, 67.88), vec2(4208.7062, 918.518))) : _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))), 0.0, 1.0))) / vec2(1.0, 1.0))))) - sqrt(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-9753.9160), _GLF_FUZZED(4445.8119)), vec2(((_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(atan(vec2(-2567.0415, 67.88), vec2(4208.7062, 918.518))) : _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))), 0.0, 1.0))) / vec2(1.0, 1.0))))) - sqrt(vec2(0.0, 0.0)))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(atan(vec2(-2567.0415, 67.88), vec2(4208.7062, 918.518))) : _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), 0.0, 0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))), 0.0, 1.0))) / vec2(1.0, 1.0))))) - sqrt(vec2(0.0, 0.0)))[1]), bvec2(true, true)))))) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(8u, uint(_GLF_IDENTITY(uvec2(8u, 0u), ~ (~ (_GLF_IDENTITY(uvec2(8u, _GLF_IDENTITY(0u, (0u) >> 0u)), (uvec2(8u, _GLF_IDENTITY(0u, (0u) | (0u)))) * uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u)))))))), uvec3(8u)), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)), ~ (~ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bool(true)))), (bool(_GLF_IDENTITY(true, false || (true)))) || false))))))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6524.6417)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6524.6417)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6524.6417)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.x), bool(true)))) + 0.0)), float(_GLF_FUZZED(6524.6417)), bool(false))))) : _GLF_FUZZED(-7.2))), injectionSwitch.x), float(mat2x3(min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6524.6417)), bool(false))), injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(40877u, 186261u, 113939u)) : gl_WorkGroupSize)), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (false))) ? _GLF_FUZZED(uvec3(40877u, 186261u, 113939u)) : gl_WorkGroupSize)), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, true), bvec3(bvec3(bvec3(! (true), true, true)))))))) && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, true), bvec3(bvec3(bvec3(! (true), true, true)))))))) && (false))) || false)))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, true), bvec3(bvec3(bvec3(! (true), true, true)))))))) && (false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, true), bvec3(bvec3(bvec3(! (true), true, true)))))))) && (false))) || false)))) && true))) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(true ? _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (true ? float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(3451.9751))))))) : _GLF_FUZZED(-2.4), mix(float(_GLF_FUZZED(3648.1420)), float(true ? _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (true ? float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(3451.9751))))))) : _GLF_FUZZED(-2.4)), bool(true)))))) + 0.0) - tan(0.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), bvec3(bvec3(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (! (true)) && true))))), bvec3(bvec3(bvec3(bvec4(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, bool(_GLF_IDENTITY(bvec3((! (true)) && true, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (true)) && true, true, true), bvec3(bvec4(bvec3((! (true)) && true, true, true), false))), true)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(ivec4((1), 0, 0, 1))), (~ (1)) / 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) | ((1)))) / 1))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))) >> 0))))))]), mix(vec2(_GLF_FUZZED(vec2(-4723.9291, _GLF_IDENTITY(53.61, (false ? _GLF_FUZZED(dot(vec3(6368.9535, 5354.1003, -8.4), vec3(38.96, -3.2, -0.8))) : 53.61))).r), (vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))]))[1]), vec2((vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))]))[0], _GLF_FUZZED(-37.33)), bvec2(true, false))), vec2((injectionSwitch)[0], _GLF_FUZZED(-69.20)), bvec2(true, false))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-69.20)), bvec2(true, false))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-69.20)), bvec2(true, false))).y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-69.20)), bvec2(true, false))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-69.20)), bvec2(true, false))).y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-62.52), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-69.20)), bvec2(true, false))).y)), true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(true && (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7262.3410)))), float(_GLF_FUZZED(216.151)), bool(false)))) - 0.0)) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(879.358), _GLF_FUZZED(53.10)), vec2(_GLF_IDENTITY(((mat2(1.0) * (injectionSwitch)))[0], clamp(((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[0], ((mat2(1.0) * (injectionSwitch)))[0])), ((mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]), vec2(_GLF_FUZZED(32.67), _GLF_FUZZED(693.594)), bvec2(false, false)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), uint(uvec2(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u)))));
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! (_GLF_IDENTITY((! (bool(false))), true && ((! (bool(false))))))))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (bool(false)))))))))))) || false), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false)))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! (_GLF_IDENTITY((! (bool(false))), true && ((! (bool(false))))))))), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), ! (! (! _GLF_IDENTITY((bool(false)), ((bool(false))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) && (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false, false))))))))))))) || false)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))))), ! (! (true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y)), true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0)) ^ (clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), (false ? _GLF_FUZZED(-71403) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))))), 1))), 4, 64, 4);
 if((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(43024, min(43024, _GLF_IDENTITY(43024, ~ (~ (43024))))), clamp(_GLF_IDENTITY(43024, (43024) | (43024)), _GLF_IDENTITY(43024, _GLF_IDENTITY((43024), ~ (_GLF_IDENTITY(~ ((43024)), (~ ((43024))) >> 0))) * 1), _GLF_IDENTITY(43024, 0 | (43024))))) : _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) + 0), 1)))) | (2)), clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), 1)))) | (2)), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 1)))) | (2)), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 1)), ~ (~ (int(ivec2(_GLF_IDENTITY(2, ~ (~ (2))), 1))))))) | (2))))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (false ? _GLF_FUZZED(inversesqrt(vec2(44.56, -7.9))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (false ? _GLF_FUZZED(inversesqrt(vec2(44.56, -7.9))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 0.0, log(1.0), 0.0))) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(inversesqrt(vec2(44.56, -7.9)), max(_GLF_IDENTITY(inversesqrt(vec2(44.56, -7.9)), min(inversesqrt(vec2(44.56, -7.9)), inversesqrt(vec2(44.56, -7.9)))), inversesqrt(vec2(44.56, -7.9))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(422.464), _GLF_FUZZED(5.6)), vec2((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], (vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))))), 0.0, 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(422.464), _GLF_FUZZED(5.6)), vec2((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], (vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))))), 0.0, 0.0, round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(51.83) : injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(inversesqrt(vec2(44.56, -7.9))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((false ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(vec2(44.56, -7.9), max(vec2(44.56, -7.9), vec2(44.56, -7.9))))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (false ? _GLF_FUZZED(inversesqrt(vec2(44.56, -7.9))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(438.496), _GLF_FUZZED(-213.235)), bvec2(false, false))))).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))), false || (false)), false, false)), true && (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), mat2(1.0) * (mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))) > injectionSwitch.y) || false)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), true), true), true)))), true, true)))), false, true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3((false) && true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, (false) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, false || (true))), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, false))), true, _GLF_IDENTITY(false, bool(bool(false))), false))))), true && (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), _GLF_IDENTITY(true, false || (true)), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
