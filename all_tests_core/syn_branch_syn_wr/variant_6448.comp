#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bool(false))), false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true, (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true, ((bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true) && true)) && _GLF_IDENTITY(true, (true) && true)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true)))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, false))) && true)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))))).y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, false))), false)))))), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! (! (_GLF_DEAD(false))))))), false, true, false))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, false, false))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), 0u, 0u)), clamp(uint(uvec3((subgroup_id), 0u, 0u)), uint(uvec3((subgroup_id), 0u, 0u)), uint(uvec3((subgroup_id), 0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ (~ (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u)))), ((subgroup_id)) << 0u), 0u, 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))), min((uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))), (uint(_GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), uvec3(uvec4(uvec3((subgroup_id), 0u, 0u), 0u)))), (~ (_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), uvec3(uvec4(uvec3((subgroup_id), 0u, 0u), 0u))))) >> uvec3(0u, 0u, 0u)))))))))) >> 0u)), (true ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u)))), (uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))) >> 0u)) : _GLF_FUZZED(min(subgroup_local_id, workgroup_base))))), ((subgroup_id) | (subgroup_id)) << 0u), min(_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))), ((subgroup_id) | (subgroup_id)) << 0u), _GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), uint(uvec3(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id))), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)), ((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))) >> 0u), _GLF_IDENTITY(max((_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)), 0u | (_GLF_IDENTITY((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)), ((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (178551u & 0u))))) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))), (max((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)), (_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)))) ^ 0u)), ((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))) * 1u) << 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), 0u, 0u)), clamp(uint(uvec3((subgroup_id), 0u, 0u)), uint(uvec3((subgroup_id), 0u, 0u)), uint(uvec3((subgroup_id), 0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ (~ (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u)))), ((subgroup_id)) << 0u), 0u, 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))), min((uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))), (uint(_GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), uvec3(uvec4(uvec3((subgroup_id), 0u, 0u), 0u)))), (~ (_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), uvec3(uvec4(uvec3((subgroup_id), 0u, 0u), 0u))))) >> uvec3(0u, 0u, 0u)))))))))) >> 0u)), (true ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u)))), (uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))) >> 0u)) : _GLF_FUZZED(min(subgroup_local_id, workgroup_base))))), ((subgroup_id) | (subgroup_id)) << 0u), min(_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))), ((subgroup_id) | (subgroup_id)) << 0u), _GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), uint(uvec3(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id))), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)), ((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))) >> 0u), _GLF_IDENTITY(max((_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)), 0u | (_GLF_IDENTITY((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)), ((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (178551u & 0u))))) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))), (max((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)), (_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)))) ^ 0u)), ((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))) * 1u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uvec3((subgroup_id), 0u, 0u)), clamp(uint(uvec3((subgroup_id), 0u, 0u)), uint(uvec3((subgroup_id), 0u, 0u)), uint(uvec3((subgroup_id), 0u, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ~ (~ (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u)))), ((subgroup_id)) << 0u), 0u, 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))), min((uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))), (uint(_GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), uvec3(uvec4(uvec3((subgroup_id), 0u, 0u), 0u)))), (~ (_GLF_IDENTITY(uvec3((subgroup_id), 0u, 0u), uvec3(uvec4(uvec3((subgroup_id), 0u, 0u), 0u))))) >> uvec3(0u, 0u, 0u)))))))))) >> 0u)), (true ? uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u)))), (uint(_GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))))) >> 0u)) : _GLF_FUZZED(min(subgroup_local_id, workgroup_base))))), ((subgroup_id) | (subgroup_id)) << 0u), min(_GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY((subgroup_id), uint(uvec3((subgroup_id), 0u, 0u))), ((subgroup_id) | (subgroup_id)) << 0u), _GLF_IDENTITY((subgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u), uint(uvec3(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) >> 0u), (subgroup_id))), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)), ((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))) >> 0u), _GLF_IDENTITY(max((_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)), 0u | (_GLF_IDENTITY((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id)), ((true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (178551u & 0u))))) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))), (true ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))), (max((_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)), (_GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id)))) ^ 0u)), ((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? (subgroup_id) : _GLF_FUZZED(subgroup_local_id))) | (subgroup_id))) * 1u) << 0u)))))) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))], injectionSwitch[1])))).y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0))))), clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))))) ^ 0)], injectionSwitch[1])))).y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(0, int(ivec2(0, 0)))))], injectionSwitch[1])))).y))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) * 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), determinant(mat2(tan(0.0), 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, determinant(mat2(tan(0.0), 0.0, 0.0, 0.0)))), (float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, determinant(mat2(tan(0.0), 0.0, 0.0, 0.0))))) / 1.0) : _GLF_FUZZED(8621.6708))))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) >> _GLF_IDENTITY(0, min(0, 0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - 0u)) == _GLF_IDENTITY(0, (0) ^ 0))
  {
   if(_GLF_DEAD(false))
    barrier();
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), 0 | (min(64, 64))))) | 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(64, 64), (_GLF_IDENTITY(min(64, 64), int(ivec4(min(64, 64), 0, 1, 1)))) | 0), 0 | (min(64, 64))))) | 0 : _GLF_FUZZED(57614)))), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, int(ivec2(64, 1))) : _GLF_FUZZED(-14430)))) | 0), 1)))) ^ 0), 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), 0 | (min(64, 64))))) | 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(64, 64), (_GLF_IDENTITY(min(64, 64), int(ivec4(min(64, 64), 0, 1, 1)))) | 0), 0 | (min(64, 64))))) | 0 : _GLF_FUZZED(57614)))), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, int(ivec2(64, 1))) : _GLF_FUZZED(-14430)))) | 0), 1)))) ^ 0), 2)) | (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), 0 | (min(64, 64))))) | 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(min(64, 64), (_GLF_IDENTITY(min(64, 64), int(ivec4(min(64, 64), 0, 1, 1)))) | 0), 0 | (min(64, 64))))) | 0 : _GLF_FUZZED(57614)))), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, int(ivec2(64, 1))) : _GLF_FUZZED(-14430)))) | 0), 1)))) ^ 0), 2))), max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) | (min(64, 64))))) | _GLF_IDENTITY(0, int(ivec2(0, 0)))), int(ivec2(64, 1)))) ^ 0), 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), 0 | (min(64, 64))))) | 0), int(_GLF_IDENTITY(ivec2(64, 1), (false ? _GLF_FUZZED(ivec2(-38425, -48908)) : ivec2(64, 1)))))) ^ 0), 2)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0)) * mat4(1.0)))).y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y) || false)))), true, false, true))), false || (! (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true, false, true)))))))), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), mat2(1.0) * (vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true))).y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((- -52.92), (false ? _GLF_FUZZED(-1226.3592) : _GLF_IDENTITY((- -52.92), float(mat2x4((- -52.92), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))))))), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)))), bvec2(true, true))).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((- -52.92), (false ? _GLF_FUZZED(-1226.3592) : _GLF_IDENTITY((- -52.92), float(mat2x4((- -52.92), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))))))))), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)))), bvec2(true, true))).y, 1.0, length(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, tan(0.0), determinant(mat2(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), abs(1.0), 1.0, 0.0)))), true, false, true))), false || (! (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -52.92)), _GLF_FUZZED(368.437)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), true, false, true)))))))))))))), false, false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), true, false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), true, false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
    barrier();
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2)))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2)))) << 0u), (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2)))) << 0u)) + 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2)))) << 0u), (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2), min(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 2)))))) << 0u)) + 0u))) + 0u)));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y), float(_GLF_FUZZED(-48.39)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y), float(_GLF_FUZZED(-48.39)), bool(false))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))), (bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true))))) && true))) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), false), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), false), false, true))))), _GLF_IDENTITY(true, ! (! (true))), true))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (((injectionSwitch.x > injectionSwitch.y)) || false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-97.05)), float(injectionSwitch.y), bool(true))))) || false)), false), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-9616.3961 * 5.0)) : injectionSwitch.x))), float(_GLF_FUZZED(-5380.9899)), bool(false)))) / 1.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) / 1.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(116.949)))), float(_GLF_FUZZED(-5380.9899)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.2) : injectionSwitch.x))), float(_GLF_FUZZED(-5380.9899)), bool(false))))) / exp(0.0)) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(-6.4, 2519.1493, -3.4)) : injectionSwitch.x)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) / 1.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false))))) / exp(0.0)) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) / 1.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) / 1.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) - abs(0.0)))) / exp(0.0)) / 1.0), injectionSwitch.x)), mix(float(_GLF_FUZZED((8086.8664))), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5380.9899)), bool(false)))) - abs(0.0)))) / exp(0.0)) / 1.0), injectionSwitch.x))), bool(true))) > injectionSwitch.y)))))))))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-3667.0617)), (true ? _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-3667.0617)), ((true ? injectionSwitch.y : _GLF_FUZZED(-3667.0617))) / 1.0) : _GLF_FUZZED(4.8))))), float(_GLF_FUZZED(-62.67)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) + 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid))), 0u | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), ~ (~ (uint(uint(virtual_gid)))))) << 0u))))))), (1u * (virtual_gid)) >> 0u))], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), max(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(48478) : (~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), (0 ^ 1))), clamp(int(ivec2((4), (0 ^ 1))), int(ivec2((4), (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 | (0)))) ^ 1))), int(ivec2((4), (_GLF_IDENTITY(0 ^ 1, (true ? 0 ^ 1 : _GLF_IDENTITY(_GLF_FUZZED(-31558), 1 * (_GLF_IDENTITY(_GLF_FUZZED(-31558), ~ (~ (_GLF_FUZZED(-31558)))))))))))))), max(~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), (0 ^ 1))), clamp(int(ivec2((4), (_GLF_IDENTITY(0 ^ 1, 0 ^ (0 ^ 1))))), int(ivec2((_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-94949) : 4))))), (0 ^ 1))), int(ivec2((4), (_GLF_IDENTITY(0 ^ 1, (true ? 0 ^ 1 : _GLF_FUZZED(-31558))))))))), ~ _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), (0 ^ 1))), clamp(int(ivec2((4), (0 ^ 1))), int(ivec2((4), (0 ^ 1))), int(ivec2((4), (_GLF_IDENTITY(0 ^ 1, (true ? 0 ^ 1 : _GLF_IDENTITY(_GLF_FUZZED(-31558), (_GLF_FUZZED(-31558)) | (_GLF_FUZZED(-31558))))))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
}
