#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat4x2 _f0;
 bvec3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 uint _f1;
 mat3x2 _f2;
 mat4 _f3;
 bvec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_13 {
 uint virtual_gid;
 mat3 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 vec2 _f1;
 mat4x2 _f2;
 int _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 int _f1;
 bvec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_8 {
 int _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_7 {
 uint _f0;
 bool _f1;
 bool _f2;
 int _f3;
 uvec3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 mat3x2 _f1;
 bool _f2;
 mat3x4 _f3;
 mat4x2 _f4;
 mat4x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 ivec4 _f1;
 bool _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 bvec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 vec4 _f4;
 _GLF_struct_8 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 vec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 uint _f0;
 ivec4 _f1;
 float _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 bvec3 _f2;
 float _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat3x4 _f1;
 vec2 _f2;
 uvec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_1 {
 bool _f0;
 _GLF_struct_0 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 _GLF_struct_4 _f2;
 mat3x4 _f3;
 _GLF_struct_9 _f4;
 mat3 _f5;
 _GLF_struct_11 _f6;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4((_GLF_IDENTITY(true, ! (! (true)))), false, false, true))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), false))))))) && true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(40.75)), bool(false)))), float(_GLF_FUZZED(8.6)), bool(false))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)), min((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))))).x) / 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)) >> 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), max(_GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), max((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u)))) / (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), max(_GLF_IDENTITY((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), max((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u)))) / (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u)))).x) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))).x) / 1u))))))) << 0u))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) / (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(116660u, 103580u, 133274u)))) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)))) ^ uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))))).x)) : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(subgroup_local_id)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) + (gl_WorkGroupSize.x)) * 1u))) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-6.1, 51.55, -116.199).r)), bvec2(true, false))))).x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-6.1, 51.55, -116.199).r)), bvec2(true, false))))).x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-6.1, 51.55, -116.199).r)), bvec2(true, false))))).x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)))))))) > injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (false))), true, false))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (false))), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! (! (false))), true, false))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))))))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, false || ((_GLF_IDENTITY(true, bool(bool(true)))) || false))))))) || false), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)) || false), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bool(false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))), bvec3(bvec3(bvec3(false, true, false)))), true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), true))), true))), true))))))))))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_1(_GLF_IDENTITY(true, (true) || false), _GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) ^ 0))), clamp(1, 1, 1)), mat3x4(1.0), vec2(1.0), uvec2(1u), mat4(1.0)), bvec4(true)), _GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(161487u, 113665u, 6675u))))), (~ (_GLF_IDENTITY(uvec3(1u), (true ? uvec3(1u) : _GLF_FUZZED(uvec3(161487u, 113665u, 6675u)))))) / uvec3(1u, 1u, 1u)))), _GLF_struct_4(_GLF_struct_2(1u, ivec4(1), 1.0, bvec4(true)), _GLF_struct_3(_GLF_IDENTITY(vec2(1.0), mat2(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)), ((vec2(1.0))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0)), ((vec2(1.0))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY((vec2(1.0)), ((vec2(1.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(1.0)), ((vec2(1.0))) + vec2(0.0, 0.0))))) / vec2(1.0, 1.0))), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 0.0)), cos(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-8735.6462) : float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), (1.0) * sqrt(1.0)), min(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), (true ? _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)) : _GLF_FUZZED(distance(vec3(-6591.9406, -53.94, 0.5), vec3(_GLF_IDENTITY(-5554.8055, (false ? _GLF_FUZZED(-3.4) : -5554.8055)), -28.05, 521.502))))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0 * (float(mat4x3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-534.141)), bool(false))), 1.0, 0.0)))))), mat3x2(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.6)), float(1.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), mat4x3(1.0)), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(57335u), 0.0 + (_GLF_IDENTITY(float(57335u), 0.0 + (float(57335u))))))), float(1.0), bool(true))), 1.0)), clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(57335u), 0.0 + (_GLF_IDENTITY(float(57335u), 0.0 + (float(57335u))))))), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(57335u), 0.0 + (_GLF_IDENTITY(float(57335u), 0.0 + (float(57335u))))))), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(57335u), 0.0 + (_GLF_IDENTITY(float(57335u), 0.0 + (float(57335u))))))), float(1.0), bool(true))), 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(57335u), 0.0 + (_GLF_IDENTITY(float(57335u), 0.0 + (float(57335u))))))), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(57335u), 0.0 + (_GLF_IDENTITY(float(57335u), 0.0 + (float(57335u))))))), float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-7454.8439)))), bool(true))), 1.0))))))), mat3x4(1.0), _GLF_struct_9(_GLF_struct_5(mat4(1.0), ivec4(1), true, bvec2(true)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))), _GLF_struct_6(uvec4(1u), mat3x2(1.0), true, mat3x4(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((- 50.99)), clamp(_GLF_FUZZED((- 50.99)), _GLF_FUZZED((- 50.99)), _GLF_FUZZED((- 50.99))))), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bool(! (bool(false))), bool(bool(bool(! (bool(false))))))))))))), mat4x3(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))), dot(vec2(0.0, abs(1.0)), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0), transpose(transpose(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))), dot(vec2(0.0, abs(1.0)), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))))))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0)))), (true ? mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 1.0, abs(0.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-15.10) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), dot(_GLF_IDENTITY(vec2(0.0, abs(1.0)), min(_GLF_IDENTITY(vec2(0.0, abs(1.0)), (vec2(0.0, abs(1.0))) * mat2(1.0)), vec2(0.0, abs(1.0)))), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0) : _GLF_FUZZED(mat4(8251.2426, 747.765, 743.203, -772.151, 1.3, 79.95, -471.886, -1.7, -5.6, -21.82, -194.835, 9.5, 71.34, 5765.2126, -25.29, -663.574))))), clamp(float(_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.6)), bool(false))), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0))), 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), clamp(1.0, 1.0, 1.0))))) * 1.0)), 1.0), (true ? mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(57.58) : 0.0)), abs(1.0)), vec2(vec4(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(57.58) : 0.0)), abs(1.0)), 0.0, log(1.0)))), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0) : _GLF_FUZZED(mat4(8251.2426, 747.765, 743.203, -772.151, 1.3, 79.95, -471.886, -1.7, -5.6, _GLF_IDENTITY(-21.82, float(_GLF_IDENTITY(vec4(-21.82, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec4(-21.82, 0.0, 1.0, 0.0), clamp(vec4(-21.82, 0.0, 1.0, 0.0), vec4(-21.82, 0.0, 1.0, 0.0), vec4(-21.82, 0.0, 1.0, 0.0))))))), -194.835, 9.5, 71.34, 5765.2126, -25.29, -663.574))))), float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0), (true ? _GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(438.164), (_GLF_IDENTITY(_GLF_FUZZED(438.164), (_GLF_IDENTITY(_GLF_FUZZED(438.164), (_GLF_FUZZED(438.164)) * 1.0)) + 0.0)) / exp(0.0)) : abs(1.0)))), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.9)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(438.164, (438.164) - sin(length(vec2(0.0, 0.0))))) : abs(1.0))))), max((vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(438.164, (438.164) - sin(length(vec2(0.0, 0.0))))) : abs(1.0))))), (vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(438.164, (438.164) - sin(length(vec2(0.0, 0.0))))) : abs(1.0)))))))), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0), (true ? mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(438.164), (_GLF_IDENTITY(_GLF_FUZZED(438.164), (_GLF_IDENTITY(_GLF_FUZZED(438.164), (_GLF_FUZZED(438.164)) * 1.0)) + 0.0)) / exp(0.0)) : abs(1.0)))), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.9)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(438.164, (438.164) - sin(length(vec2(0.0, 0.0))))) : abs(1.0))))), max((vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(438.164, (438.164) - sin(length(vec2(0.0, 0.0))))) : abs(1.0))))), (vec2(0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(438.164, (438.164) - sin(length(vec2(0.0, 0.0))))) : abs(1.0)))))))), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0) : _GLF_FUZZED(mat4(8285.5138, 5.9, -97.09, -5363.5610, 9.5, 4.4, -401.661, -440.363, -95.44, 0.5, 437.279, -20.63, -637.280, -273.966, 5.4, 211.012)))) : _GLF_FUZZED(mat4(8251.2426, 747.765, 743.203, -772.151, 1.3, 79.95, -471.886, -1.7, -5.6, -21.82, -194.835, 9.5, 71.34, 5765.2126, -25.29, -663.574))))), float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-534.456)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (1.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -2.4))), float(0.0), bool(true))), 1.0)), mix(float(_GLF_FUZZED(9610.9346)), float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-534.456)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (1.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -2.4))), float(0.0), bool(true))), 1.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-534.456)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (1.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -2.4))), float(0.0), bool(true))), 1.0)) : _GLF_FUZZED(33.74)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((-8.0 * -8.9)))), 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0), (true ? mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, abs(1.0)), min(vec2(0.0, abs(1.0)), vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), abs(1.0)))), vec2(0.0, 1.0))), round(length(normalize(cos(vec3(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * abs(1.0)), 1.0, 1.0, 0.0, sin(0.0), log(1.0), 1.0) : _GLF_FUZZED(mat4(8251.2426, 747.765, _GLF_IDENTITY(743.203, (743.203) * abs(1.0)), -772.151, 1.3, 79.95, -471.886, -1.7, _GLF_IDENTITY(-5.6, (-5.6) / 1.0), -21.82, -194.835, 9.5, 71.34, 5765.2126, -25.29, -663.574)))))))))), _GLF_struct_7(1u, true, true, 1, _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), mat2x3(1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(43.95) : 1.0))))), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat4x3(vec4(1.0), 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0))))), _GLF_struct_8(1, uvec3(1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(1, 0 ^ (1)))) / ivec3(1, 1, 1)), max(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1)), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) - ivec3(0, 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), 1)), 0 ^ (1)))) / ivec3(1, 1, 1)), max(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, _GLF_IDENTITY(1, (1) - (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) / ivec3(1, 1, 1), max((ivec3(1)) / ivec3(1, 1, 1), (ivec3(1)) / ivec3(1, 1, 1)))), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1))) - ivec3(0, 0, 0)))))))), mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), transpose(transpose(mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), min(vec3(1.0, 1.0, 0.0), vec3(1.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))))), _GLF_struct_11(_GLF_struct_10(mat4x2(1.0), vec2(1.0), mat4x2(1.0), 1, mat2x3(1.0)), _GLF_IDENTITY(1, 0 | (1)), bvec3(true), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, cos(0.0), log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, cos(0.0), log(1.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, cos(0.0), log(1.0)), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, cos(0.0), log(1.0)))))) : _GLF_FUZZED(38.88)))), (false ? _GLF_FUZZED(68.91) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))))), (mat3(1.0)) - mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.8)), float(0.0), bool(_GLF_IDENTITY(true, (true) && true)))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(589.078)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0))))), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(_GLF_struct_13(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat3(1.0)), _GLF_struct_14(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1u, mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true)))), mat4(1.0), bvec4(true), bvec2(true)), _GLF_struct_15(mat4x2(1.0), bvec3(true), mat3x2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_17._f0._f0.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   atomicStore(checker[_GLF_struct_replacement_17._f0._f0.virtual_gid], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f0._f0.virtual_gid, clamp(_GLF_struct_replacement_17._f0._f0.virtual_gid, _GLF_struct_replacement_17._f0._f0.virtual_gid, _GLF_struct_replacement_17._f0._f0.virtual_gid)), _GLF_IDENTITY((_GLF_struct_replacement_17._f0._f0.virtual_gid) ^ 0u, ((_GLF_struct_replacement_17._f0._f0.virtual_gid) ^ 0u) << 0u))], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(workgroup_base))), 4, _GLF_IDENTITY(64, (64) | 0), 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-769.240)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-769.240)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), 0.0 + (max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))) && true))) ? _GLF_FUZZED(vec2(-83.81, 88.88)) : vec2(injectionSwitch.x, 1.0))))))))))) > injectionSwitch.y))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
