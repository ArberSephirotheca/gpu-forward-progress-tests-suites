#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 mat4x2 _f0;
 bvec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
 vec3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_25 {
 bvec2 _f0;
 mat2x3 _f1;
 vec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_28 {
 float _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 ivec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_23 {
 mat4x3 _f0;
 uvec3 _f1;
 ivec2 _f2;
 bvec3 _f3;
 mat4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
} ;

struct _GLF_struct_21 {
 float _f0;
 float _f1;
 uvec4 _f2;
 vec2 _f3;
 mat3x4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_24 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
 uint subgroup_id;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 ivec2 _f1;
 vec4 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
 mat2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 mat4 _f1;
 mat2x4 _f2;
 mat3x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 uvec2 _f1;
 ivec4 _f2;
 bvec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_13 {
 bool _f0;
 bvec3 _f1;
 mat2 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_19 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 bvec3 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 mat4x3 _f1;
 mat2 _f2;
 ivec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_10 {
 int _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 _GLF_struct_10 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 _GLF_struct_11 _f4;
 bool _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 uvec4 _f1;
 uvec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat2x4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_7 _f0;
 _GLF_struct_9 _f1;
 uvec2 _f2;
 uint workgroup_base;
 _GLF_struct_12 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uint _f1;
 uvec2 _f2;
 mat3x4 _f3;
 int _f4;
 uvec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 _GLF_struct_3 _f1;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat2x3 _f1;
 vec3 _f2;
 ivec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uvec4 _f1;
 mat3 _f2;
 float _f3;
 vec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 bool _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 uint subgroup_size;
 _GLF_struct_2 _f1;
 _GLF_struct_4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(713.998, 68.00) * -1.7)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec3(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec2(vec2(0.0, 1.0)))), 1.0)))) - vec2(0.0, 0.0))))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-490.001)), bool(false))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec2(0.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0)), 0.0, 0.0, 0.0, sin(0.0), sqrt(0.0), 1.0, sqrt(0.0))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(bvec4(true), _GLF_struct_22(_GLF_struct_21(1.0, 1.0, uvec4(1u), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5.0), (_GLF_FUZZED(-5.0)) * 1.0) : -324.241))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.7)), float(1.0), bool(true))), 1.0, 1.0)))), 1.0, tan(0.0)))), 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y), 1.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.1, mix(float(_GLF_FUZZED(-5.9)), float(_GLF_IDENTITY(-4.1, clamp(-4.1, -4.1, -4.1))), bool(true)))) : 1.0))))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat4(-5.0, -17.51, -20.71, -1446.6367, -78.79, -5.3, -1.5, -0.9, -468.992, -6.1, -719.266, 2411.4227, -600.969, -61.89, 6350.6007, 4.5)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(true, (true) && true) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(103521u))), bool(false))), 1.0)), 1.0, tan(0.0)))), 0.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y), 1.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.1, mix(float(_GLF_FUZZED(-5.9)), float(_GLF_IDENTITY(-4.1, clamp(-4.1, -4.1, -4.1))), bool(true)))) : 1.0))))), 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat4(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-85.36) : injectionSwitch.x))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, tan(0.0)), (_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, tan(0.0)), transpose(transpose(mat2(0.0, 1.0, 1.0, tan(0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x2(1.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))), 0.0, 1.0, 0.0, abs(1.0), 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y), 1.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.1, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.9)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(-5.9)), (true ? float(_GLF_FUZZED(-5.9)) : _GLF_FUZZED(9.0))))), float(_GLF_IDENTITY(-4.1, clamp(-4.1, -4.1, -4.1))), bool(true)))) : 1.0))))), 1.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(max(float(mat4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(628.251)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), injectionSwitch.y), 1.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat4(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cos(6771.1264)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(34.71) : 1.0)))), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(384.506)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3986.0489, 6.1)))).y), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0))), (true ? max(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(1.0, _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(628.251)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), injectionSwitch.y), float(mat3x2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(628.251)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(-5.0) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec4(1.0, _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(628.251)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), injectionSwitch.y), float(mat3x2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(628.251)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0))))), float(mat4(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-324.241, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5.0, (false ? _GLF_FUZZED(-93.92) : -5.0))) : -324.241))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cos(6771.1264)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(34.71) : 1.0, (false ? _GLF_FUZZED(34.71) : 1.0) + 0.0))))), dot(vec4(0.0, 0.0, abs(0.0), 0.0), vec4(1.0, _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(1.0), float(_GLF_FUZZED(384.506)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3986.0489, 6.1)))).y), 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(dot(injectionSwitch, injectionSwitch))))))))), mat3x4(1.0), mat4x2(1.0))), _GLF_struct_24(_GLF_struct_23(mat4x3(1.0), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(-6.0, -362.087)) : _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(1.5), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0)))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(12.38)), bvec2(true, false)))))).x))), ~ (~ (_GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.4))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x))))))) : _GLF_FUZZED(clamp(142552u, 199034u, 164391u)))))), ivec2(1), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED((54.25))), bool(false))) > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(1u, 1u))))), mat3x4(1.0), mat3x4(1.0), gl_SubgroupID, _GLF_struct_28(1.0, _GLF_struct_25(bvec2(true), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (true ? _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(4910.7254), _GLF_FUZZED(-753.525)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(-350.077, -323.965)))))), true), _GLF_struct_26(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))) || false) || (true)), bool(bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(51.64)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) * 1.0))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.0))), (injectionSwitch.y) * 1.0))))) || (true)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.1)))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.1)))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0))))))) || (true)), bool(bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(4220.0960)), bool(false))) * 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) + log(1.0))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))) || (true)), true, false, false)))), true))), vec3(1.0), uvec4(1u)), _GLF_struct_27(mat4x2(1.0), bvec4(true), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(5.0, float(mat3x4(5.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) - 0.0)), _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))) / 1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x4(determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-4297.4497)), float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), bool(true))), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, cos(0.0), 0.0, 1.0, abs(1.0))), (true ? float(mat3x4(determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, cos(0.0), 0.0, 1.0, abs(1.0))) : _GLF_FUZZED(65.39)))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-706.590)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))), false || (bool(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(5.0, float(mat3x4(5.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) - 0.0)), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(26.71)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(26.71)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(26.71)), bool(false))))), 0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), max(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0)))))), clamp(float(mat2(0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0)))))), float(mat2(0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0)))))), float(mat2(0.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, log(1.0), 1.0, cos(0.0)))))))))))), 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(_GLF_IDENTITY(5.0, float(mat3x4(5.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) - 0.0)), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) : _GLF_FUZZED(max(vec3(-3.5, -25.69, -58.48), 5.4))))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(461.018)), float(0.0), bool(true)))) / 1.0), 0.0)), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((8.1 * -23.73))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(length(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0)), min(length(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0)), length(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0)), 0.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(5.0, float(mat3x4(5.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))) - 0.0)), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), abs(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-16.16 + -9048.8670))), float(1.0), bool(_GLF_IDENTITY(true, false || (true))))))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))) ? 1 : _GLF_FUZZED((79108 & 83947)))), (_GLF_IDENTITY(1, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))) ? 1 : _GLF_FUZZED((79108 & 83947))))) >> 0)), vec2(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(ivec3(1), gl_SubgroupSize, _GLF_struct_2(_GLF_struct_0(mat2x3(1.0), uvec4(1u), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (false ? _GLF_FUZZED(mat3(845.876, -3.0, 3.3, _GLF_IDENTITY(5822.8043, clamp(_GLF_IDENTITY(5822.8043, clamp(5822.8043, 5822.8043, 5822.8043)), 5822.8043, 5822.8043)), 6.9, 511.044, 7.7, 245.597, _GLF_IDENTITY(3.0, float(mat2(_GLF_IDENTITY(3.0, min(3.0, 3.0)), 0.0, 0.0, 0.0))))) : transpose(mat3(1.0)))))), 1.0, vec2(1.0), mat3x4(1.0)), mat3x4(1.0), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0)), true, _GLF_struct_1(true, mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-194.995)), bool(false)))))), vec3(1.0), ivec3(1), mat2(1.0))), _GLF_struct_4(mat2x4(1.0), _GLF_struct_3(mat4x2(1.0), 1u, uvec2(1u), mat3x4(1.0), 1, uvec2(1u), 1u)));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))))))))
        barrier();
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))), clamp(_GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))), _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))), _GLF_IDENTITY(_GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))), (_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0)))) ^ ((1)))) ^ 0))) | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-98.65 * 4.7))), bool(false))), (injectionSwitch.x) - 0.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED((-98.65 * 4.7))), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.9))), 0.0))) > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true)))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true)))))), false))))))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, gl_WorkGroupID), uvec3(0u, 0u, 0u) + (max(gl_WorkGroupID, gl_WorkGroupID)))).x;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_7(_GLF_struct_6(mat4x2(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (vec2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(1.0)), max(_GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(1.0)), mat2(1.0) * (vec2(0.0, 0.0) + (vec2(1.0)))), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(1.0)), (vec2(0.0, 0.0) + (vec2(1.0))) + vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat4x3(_GLF_FUZZED(0.8), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), log(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0) + _GLF_IDENTITY((vec2(1.0)), vec2(_GLF_IDENTITY(vec2((vec2(1.0))), min(vec2((vec2(1.0))), vec2((vec2(1.0))))))), mat2(1.0) * (vec2(0.0, 0.0) + (vec2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))), (_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))))))), min(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat4x3(_GLF_FUZZED(0.8), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), log(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0) + _GLF_IDENTITY((vec2(1.0)), vec2(_GLF_IDENTITY(vec2((vec2(1.0))), min(vec2((vec2(1.0))), vec2((vec2(1.0))))))), mat2(1.0) * (vec2(0.0, 0.0) + (vec2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))), (_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(0.8), float(mat4x3(_GLF_FUZZED(0.8), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), log(1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0) + _GLF_IDENTITY((vec2(1.0)), vec2(_GLF_IDENTITY(vec2((vec2(1.0))), min(vec2((vec2(1.0))), vec2((vec2(1.0))))))), mat2(1.0) * (vec2(0.0, 0.0) + (vec2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true))), (_GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3856.4783)), float(0.0), bool(true)))) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))), mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (vec2(1.0))) : _GLF_FUZZED(vec2(423.200, -8162.3960))))))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4004.6309), _GLF_IDENTITY(_GLF_FUZZED(-17.26), clamp(_GLF_FUZZED(-17.26), _GLF_FUZZED(-17.26), _GLF_IDENTITY(_GLF_FUZZED(-17.26), mix(float(_GLF_FUZZED(966.634)), float(_GLF_FUZZED(-17.26)), bool(true)))))), vec2((vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0)))[0], (vec2(mat3x4(vec2(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))) + (vec2(1.0)))), 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1]), bvec2(true, true)))))))))))))), _GLF_struct_9(_GLF_struct_8(uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(uvec4(1u), (uvec4(_GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, max(7u, 7u)), 7u))), uint(7u)))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), uvec2(1u), 1u)), uvec2(1u), workgroup_size * workgroup_id, _GLF_struct_12(mat3(1.0), _GLF_struct_10(1, ivec2(1)), mat2x4(1.0), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), 0u | ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))))) ^ 0u)), _GLF_struct_11(bvec4(true), mat4x3(1.0), mat2(1.0), ivec2(1), mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), cos(0.0)))))), 1.0)))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true)))), _GLF_struct_19(_GLF_struct_13(true, bvec3(true), mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), ivec4(1)), _GLF_struct_14(mat2x3(1.0), _GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(1u, min(1u, 1u)))) ^ (uvec2(83214u, 41855u) & _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) << uvec2(0u, 0u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), (uvec2(1u)) ^ (uvec2(_GLF_IDENTITY(83214u, (true ? 83214u : _GLF_FUZZED(178133u))), 41855u) & uvec2(0u, 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), (uvec2(1u)) ^ (uvec2(_GLF_IDENTITY(83214u, (true ? 83214u : _GLF_FUZZED(178133u))), 41855u) & uvec2(0u, 0u))))) - uvec2(0u, 0u)))), uvec2(1u))), ivec4(_GLF_IDENTITY(1, ~ (~ (1)))), bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))), bool(bool(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))))))), mat2x4(1.0)), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))), _GLF_struct_15(mat3x2(1.0)), _GLF_struct_16(mat2x4(1.0), mat4(1.0), mat2x4(1.0), mat3x2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-8.6)))), uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_struct_17(bvec3(true)), _GLF_struct_18(mat2(_GLF_IDENTITY(1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)))))), ivec2(1), vec4(1.0), mat3x2(1.0), mat3x2(1.0), mat2(1.0), mat4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29.subgroup_id * _GLF_struct_replacement_5.subgroup_size, (_GLF_struct_replacement_29.subgroup_id * _GLF_struct_replacement_5.subgroup_size) - 0u), (_GLF_struct_replacement_29.subgroup_id * _GLF_struct_replacement_5.subgroup_size) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base + subgroup_local_id, min(_GLF_struct_replacement_20.workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), (true ? _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), uint(uvec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))), (clamp(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base, _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) | 0u), 0u)))) + subgroup_local_id, _GLF_struct_replacement_20.workgroup_base + subgroup_base + subgroup_local_id));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || false)) && true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, true)))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) + (_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (_GLF_struct_replacement_20.workgroup_base + subgroup_base) | (_GLF_struct_replacement_20.workgroup_base + subgroup_base)))), (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u), 1u, 1u, 0u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base, 0u | (_GLF_struct_replacement_20.workgroup_base)) + subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base, (_GLF_struct_replacement_20.workgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_base) << 0u), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u), 1u, 1u, 0u), uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u), 1u, 1u, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u), (_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (_GLF_struct_replacement_20.workgroup_base + subgroup_base) << 0u)) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, (0u ^ 0u), 1u)), (uint(uvec4(subgroup_base, 0u, (0u ^ 0u), 1u))) | 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, (_GLF_struct_replacement_20.workgroup_base + subgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(29843u)))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec3(~ ((subgroup_local_id + 1)), 0u, 0u))))))), max((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), uint(uvec2(min(subgroup_local_id, subgroup_local_id), 1u)))))) + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1)))) - 0u))), min(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), max(~ ((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))), ~ ((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))))))) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), (~ (1)) | (~ _GLF_IDENTITY((1), 0 ^ ((1)))))))) ^ 0u)), (subgroup_local_id + 1)), (_GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ _GLF_IDENTITY((1), 0 ^ ((1)))))))) ^ 0u)), (subgroup_local_id + 1)), (max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ _GLF_IDENTITY((1), 0 ^ ((1)))))))) ^ 0u)), (subgroup_local_id + 1))) - 0u)) << 0u)))) % _GLF_struct_replacement_5.subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(64, 64)), 64, _GLF_IDENTITY(64, (64) | (64))))))), (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, 0 | (64)))))) >> 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 | (0 << _GLF_IDENTITY(int(0), int(0))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))) | (0 << _GLF_IDENTITY(int(0), int(0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 1u, 1u))))) >> 0u))))) - (1u ^ 1u)), ~ (~ (_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) << 0u)))), max(_GLF_IDENTITY((subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 1u, 1u))))) >> 0u))))) - (1u ^ 1u)), ~ (~ (_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) << 0u)))), _GLF_IDENTITY((subgroup_local_id) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (uvec4(0u, 0u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 1u, 1u))))) >> 0u))))) - (1u ^ 1u)), ~ (~ (_GLF_IDENTITY((subgroup_local_id) << 0u, ((subgroup_local_id) << 0u) << 0u))))))) % 2) == 0)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((-36615 % 86336) & 0)); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((injectionSwitch.x < injectionSwitch.y))), true && (! (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((injectionSwitch.x < injectionSwitch.y))), true && (! (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x < injectionSwitch.y)))))))), true, true, false))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, true))).x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))), min(vec4(injectionSwitch, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))), vec4(injectionSwitch, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))))).y)) && _GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bool(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(mix(injectionSwitch, injectionSwitch, vec2(-386.528, -72.93)))))).y)) && _GLF_IDENTITY(true, ! (! (true)))), false || (bool(((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))), true && (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(40.58, -4.0).x), _GLF_FUZZED(687.383)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y)), _GLF_IDENTITY(false, (false) || false)))))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             read = atomicLoad(buf[virtual_gid], 4, 64, 2);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (! (false))), true && (true && (! (! (false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
       read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], 4, 64, 2);
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 | 0) & 1)); _injected_loop_counter ++)
  {
   subgroupBarrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     for(int _injected_loop_counter = (1 & (1 | 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ! (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), max(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false)))))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, 1 * (4)));
}
