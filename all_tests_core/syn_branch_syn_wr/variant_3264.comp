#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 ivec3 _f0;
 vec2 _f1;
 mat4x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 bvec4 _f1;
 ivec3 _f2;
 uint _f3;
 mat3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 mat3x4 _f1;
 _GLF_struct_23 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 ivec2 _f1;
 bool _f2;
 float _f3;
 uint subgroup_base;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 bool _f1;
 mat2x3 _f2;
 ivec3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 ivec3 _f1;
 ivec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
 uint _f1;
 vec3 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 mat2 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 uint _f1;
 mat2 _f2;
} ;

struct _GLF_struct_15 {
 bvec4 _f0;
 mat4 _f1;
 mat2 _f2;
 mat2 _f3;
 bool _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 uvec4 _f1;
 mat3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_14 {
 float _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_25 {
 _GLF_struct_14 _f0;
 ivec4 _f1;
 _GLF_struct_17 _f2;
 mat3x2 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_24 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 int _f1;
 mat3x2 _f2;
 vec3 _f3;
 uint workgroup_id;
 bvec4 _f4;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 float _f1;
 mat4 _f2;
 mat4x3 _f3;
 vec4 _f4;
 bvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat3 _f1;
 bvec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_10 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 uint virtual_gid;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uvec2 _f1;
 vec4 _f2;
 mat4 _f3;
 uvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 ivec2 _f3;
 mat2x4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 mat4 _f3;
 mat3x4 _f4;
 uvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_2 {
 uint subgroup_id;
 ivec4 _f0;
 mat2x3 _f1;
 _GLF_struct_0 _f2;
 bvec4 _f3;
 mat4x3 _f4;
 _GLF_struct_1 _f5;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), false, _GLF_IDENTITY(true, (true) || false), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, false))))))))), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(0.6)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(0.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(0.6)), bool(false)))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(bvec4(true), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), max(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, uint(uint(1u)))))))), (uvec2(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), max(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, uint(uint(1u))))))))) | (uvec2(0u, 0u) | uvec2(0u, 0u))), mat4x3(1.0), _GLF_struct_2(gl_SubgroupID, ivec4(1), mat2x3(1.0), _GLF_struct_0(mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.5), max(_GLF_IDENTITY(_GLF_FUZZED(1.5), mix(float(_GLF_FUZZED(1.5)), float(_GLF_FUZZED(-43.52)), bool(false))), _GLF_FUZZED(1.5)))), float(1.0), bool(true)))), mat3x4(1.0), mat4(1.0), mat3x4(1.0), uvec4(1u), uvec3(1u)), bvec4(true), mat4x3(1.0), _GLF_struct_1(ivec3(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))), mat3x2(1.0), ivec3(1), ivec2(1), mat2x4(1.0), vec4(1.0))), _GLF_struct_4(_GLF_struct_3(mat4x2(1.0), uvec2(1u), vec4(1.0), mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), _GLF_IDENTITY(vec4(mat4x3((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), 0.0, 1.0, abs(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), tan(0.0), 0.0, 0.0)), (true ? vec4(mat4x3((vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0), 0.0, 1.0, abs(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), tan(0.0), 0.0, 0.0)) : _GLF_FUZZED(vec4(-4558.1901, 765.891, -3.6, -53.95))))))))), uvec3(1u), mat4(1.0)), vec3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((bool(false || (false))), _GLF_IDENTITY(bool(bvec3((bool(false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3((bool(false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(866.061)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))) || _GLF_IDENTITY((bool(false || (false))), ((bool(false || (false)))) && true))), true, true)), true && _GLF_IDENTITY((bool(bvec3(bool(_GLF_IDENTITY(bool(false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))) || (false))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec3(bool(_GLF_IDENTITY(bool(false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false || (false))))), true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (! (! (injectionSwitch.x > injectionSwitch.y))), false), true))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), ! (! (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))), true)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, _GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) | _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))))), ((~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u), 1u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))))))) ^ uvec4(0u, 0u, 0u, 0u))))))) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, (false) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat2(1.0), 1, mat3x2(1.0), vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true)))), float(_GLF_FUZZED(-2819.7829)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(36408u, 98332u, 179337u)) : _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(36408u, 98332u, 179337u)) : _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, max(7u, 7u))))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], min(gl_WorkGroupID[2], gl_WorkGroupID[2])))), gl_WorkGroupID), uvec3(uvec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID), (true ? clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))], gl_WorkGroupID[2])), gl_WorkGroupID) : _GLF_FUZZED(uvec3(172243u, 48267u, 73389u)))))))), gl_WorkGroupID)).x, bvec4(true));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_12.workgroup_id, (_GLF_struct_replacement_12.workgroup_id) << (1u ^ 1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_14(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, tan(0.0), 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0))), clamp(float(mat4(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, tan(0.0), 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, tan(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0))), float(mat4(1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, tan(0.0), 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))), 1.0, 1.0, 0.0))))), vec3(1.0, tan(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0))), float(mat4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x3(0.0, 1.0, 1.0, sqrt(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), 0.0, 1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(-624.916)), float(0.0), _GLF_IDENTITY(bool(true), true && (bool(true))))), 0.0, 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, tan(0.0), 0.0)), dot(vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec3(1.0, _GLF_IDENTITY(tan(0.0), float(_GLF_IDENTITY(mat2x4(tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0)))))), _GLF_struct_13(ivec2(1), uvec4(1u), mat3(1.0), uvec3(1u))), ivec4(1), _GLF_struct_17(_GLF_struct_15(bvec4(true), mat4(1.0), mat2(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), _GLF_struct_16(uvec4(1u), 1u, mat2(1.0))), mat3x2(1.0), _GLF_struct_21(mat4x2(1.0), 1u, vec3(1.0), _GLF_struct_18(mat2(1.0), ivec3(1), ivec4(1), vec2(1.0)), _GLF_struct_19(mat2x3(1.0), true, mat2x3(1.0), ivec3(1), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(47.80), _GLF_FUZZED((+ 48.97)), _GLF_FUZZED(float(true)), _GLF_FUZZED(float(46188))), vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mat2(1.0), _GLF_struct_20(mat4x3(1.0), ivec2(1), true, 1.0, _GLF_struct_replacement_5._f3.subgroup_id * subgroup_size)), _GLF_struct_24(_GLF_struct_22(mat4(1.0), bvec4(true), ivec3(1), 1u, mat3(1.0), mat3(1.0)), mat3x4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, tan(0.0), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, tan(0.0), 1.0))), 0.0, 1.0, 1.0, tan(0.0), 1.0)))), _GLF_struct_23(ivec3(1), vec2(1.0), mat4x3(1.0), bvec4(true)), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), (transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))), 1.0, 1.0)), (float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))), true, false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)))), true, false))))) && true))) || (false))))), 1.0, 1.0))) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(13.12)), bool(false))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), (transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(false))), 1.0, 1.0)), (float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), 1.0, 1.0))) - 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, 58.12, -2.3, 2760.8659, 2605.8750, 77.00, 79.30, _GLF_IDENTITY(-7.5, float(mat3(-7.5, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 5.8, -81.30)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, _GLF_IDENTITY(58.12, (false ? _GLF_FUZZED(7073.5299) : 58.12)), -2.3, 2760.8659, 2605.8750, 77.00, 79.30, -7.5, 5.8, -81.30)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(6262.0017, -756.986, -4576.1893, 722.363, -7.7, -2.1, 617.706, -1026.7875, 11.52, 988.810, 1.0, -9803.9508, 7.0, 91.15, -7.4, -2.7)) : _GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, 58.12, -2.3, 2760.8659, 2605.8750, 77.00, 79.30, -7.5, 5.8, -81.30)))), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, _GLF_IDENTITY(58.12, (false ? _GLF_FUZZED(7073.5299) : 58.12)), -2.3, 2760.8659, 2605.8750, 77.00, 79.30, -7.5, 5.8, -81.30)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(6262.0017, -756.986, -4576.1893, 722.363, -7.7, -2.1, 617.706, -1026.7875, 11.52, 988.810, 1.0, -9803.9508, 7.0, 91.15, -7.4, -2.7)) : _GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, 58.12, -2.3, 2760.8659, 2605.8750, 77.00, 79.30, -7.5, 5.8, -81.30)))))))), mat4(1.0) * (transpose(_GLF_IDENTITY(_GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, 58.12, -2.3, 2760.8659, 2605.8750, 77.00, 79.30, -7.5, 5.8, -81.30)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(6262.0017, -756.986, -4576.1893, 722.363, _GLF_IDENTITY(-7.7, min(-7.7, -7.7)), _GLF_IDENTITY(-2.1, clamp(-2.1, _GLF_IDENTITY(-2.1, 0.0 + (-2.1)), -2.1)), 617.706, -1026.7875, 11.52, 988.810, 1.0, -9803.9508, 7.0, 91.15, -7.4, -2.7)) : _GLF_FUZZED(mat4(541.090, -575.618, 73.27, 1762.7348, 10.42, 8.5, -624.434, 58.12, -2.3, 2760.8659, 2605.8750, 77.00, 79.30, -7.5, 5.8, -81.30))))))))) : _GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), _GLF_IDENTITY((transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))), mat4(1.0) * ((transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + 0.0), _GLF_IDENTITY((1.0) / 1.0, _GLF_IDENTITY(((1.0) / 1.0), mix(float(_GLF_FUZZED(-5.7)), float(((1.0) / 1.0)), bool(true))) - 0.0), (1.0) / 1.0)))) - 0.0)), float(_GLF_FUZZED(0.2)), bool(false))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, clamp(-6.0, -6.0, -6.0)))), bool(false))), 1.0, 1.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), 1.0, 1.0))), ((float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.0)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), 1.0, 1.0)))) / 1.0) - 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))) - mat4(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-26.64)), (float(_GLF_FUZZED(-26.64))) / determinant(mat3(abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), ivec4(1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_7(mat4x2(1.0), _GLF_struct_6(1.0, mat3(1.0), bvec2(true), uvec3(1u))), _GLF_struct_10(mat2x3(1.0), _GLF_struct_8(mat4(1.0), 1.0, _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), mat4x3(1.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), ivec4(1)), _GLF_struct_9(uvec3(1u), mat2x4(1.0), mat4x2(1.0), bvec2(true), mat2(1.0))), mat2x4(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), false, true)))))), workgroup_base + _GLF_struct_replacement_25._f4._f6.subgroup_base + subgroup_local_id, mat2x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_25._f4._f6.subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(_GLF_IDENTITY(bool(! (! (! (false)))), (bool(! (! (! (false))))) || false))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, (false ? _GLF_FUZZED(atomicLoad(subgroup_size, 99337, 50134, -3044)) : _GLF_struct_replacement_11.virtual_gid)), max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)) : _GLF_FUZZED((num_workgroup | read))))) | (((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid))))))) << 0u)), (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)) | ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid))))))) << 0u))) | (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid))))) << 0u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, (false ? _GLF_FUZZED(atomicLoad(subgroup_size, 99337, 50134, -3044)) : _GLF_struct_replacement_11.virtual_gid)), max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), clamp(((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)), ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)))) : _GLF_FUZZED((num_workgroup | read))))) | (((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid))))))) << 0u)), (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid)) | ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid))))))) << 0u))) | (uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid), ~ (~ ((_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, max(_GLF_struct_replacement_11.virtual_gid, _GLF_struct_replacement_11.virtual_gid))) | (_GLF_struct_replacement_11.virtual_gid))))) << 0u)))) : _GLF_FUZZED(packUnorm4x8(vec4(-902.304, -485.300, -9.3, 2320.8838))))))))], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false))))), true, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))) || false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(46.92) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[_GLF_struct_replacement_11.virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true, true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))) && true)))
  return;
 atomicStore(checker[_GLF_struct_replacement_11.virtual_gid], _GLF_IDENTITY(read, (read) * 1u), 4, 64, 4);
}
