#version 460
struct _GLF_struct_13 {
 bvec2 _f0;
 mat3x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 ivec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_14 {
 uint read;
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 int _f1;
} ;

struct _GLF_struct_9 {
 bool _f0;
 int _f1;
 ivec3 _f2;
 uvec3 _f3;
 uint _f4;
 uvec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_10 {
 uint subgroup_size;
 _GLF_struct_9 _f0;
 mat3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 _GLF_struct_6 _f1;
 vec3 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 uint _f1;
 ivec4 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
 uvec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 bvec2 _f1;
 uvec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 int _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 ivec2 _f1;
 vec2 _f2;
 mat3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
 _GLF_struct_2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_10 _f4;
 uvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(mat3x4(1.0), _GLF_struct_0(mat3x4(1.0), ivec2(1), vec2(1.0), mat3(1.0), mat4(1.0)), _GLF_struct_1(mat3x2(1.0), 1, mat3x2(1.0)), mat3x4(1.0), _GLF_struct_2(1u), mat3(1.0)), mat2x3(1.0), _GLF_struct_5(_GLF_struct_4(mat4(1.0), 1u, ivec4(1), mat4x2(1.0), mat2x3(1.0), uvec4(1u), mat3x4(1.0)), bvec2(true), uvec3(1u), uvec2(1u)), _GLF_struct_8(bvec4(true), _GLF_struct_6(mat4x2(1.0), bvec2(true), uvec2(1u), mat4(1.0), uvec4(1u)), vec3(1.0), _GLF_struct_7(mat3(1.0), uvec4(1u))), _GLF_struct_10(gl_SubgroupSize, _GLF_struct_9(true, 1, ivec3(1), uvec3(1u), 1u, uvec2(1u), bvec2(true)), mat3(1.0), mat2x4(1.0)), uvec4(1u));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_11._f4.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1) % _GLF_struct_replacement_11._f4.subgroup_size);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(0, _GLF_struct_12(mat2x3(1.0), ivec3(1), mat2x4(1.0)), _GLF_struct_13(bvec2(true), mat3x2(1.0), uvec4(1u))), 1);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x % 2) == 0)
  {
   _GLF_struct_replacement_15._f0.read = atomicLoad(buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], 4, 64, 2);
  }
 else
  {
   _GLF_struct_replacement_15._f0.read = atomicLoad(buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], _GLF_struct_replacement_15._f0.read, 4, 64, 4);
}
