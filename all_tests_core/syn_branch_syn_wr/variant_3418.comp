#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 ivec4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 uint _f3;
 uint workgroup_base;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 vec2 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 float _f4;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 mat3x4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_8 {
 int _f0;
 uvec4 _f1;
 uvec4 _f2;
 bvec4 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
 int _f6;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_6 {
 bool _f0;
 mat4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat2x3 _f1;
 mat3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 bool _f1;
} ;

struct _GLF_struct_14 {
 uint workgroup_size;
 bvec4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 mat3x2 _f3;
 uvec4 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_1 {
 bool _f0;
 uvec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 uint read;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), bool(bvec4(! (! (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4392.4142)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u), bvec4(true), _GLF_struct_5(_GLF_struct_4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(mix(subgroup_id, subgroup_id, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) >> 0u))), 0u | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(mix(subgroup_id, subgroup_id, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) >> 0u)))))), mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(1.0), vec3(1.0)), true), _GLF_struct_9(_GLF_struct_6(true, mat4(1.0), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && true) || false)))))), bool(bvec3((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && true))), false, true)))) && true)) && true)))), _GLF_struct_7(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), uvec2(1u)), _GLF_struct_8(1, uvec4(1u), uvec4(1u), bvec4(true), mat4x2(1.0), mat3x4(1.0), _GLF_IDENTITY(1, (1) >> 0))), mat3x2(1.0), uvec4(_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_struct_13(_GLF_struct_10(vec2(1.0)), _GLF_struct_11(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), mat3x4(1.0), vec2(1.0)), _GLF_struct_12(mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), vec2(1.0), ivec2(1), mat3x2(1.0), 1.0), vec4(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7528.7052) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7528.7052) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(6758.9329), _GLF_FUZZED(0.3)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]))), bvec2(true, true))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3939.9634))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))))))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), true, false), true)))))), (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-39.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9490.4045), _GLF_FUZZED(2.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) - _GLF_ZERO(0.0, injectionSwitch.x))) > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0)) | (0 << _GLF_IDENTITY(int(3), int(3))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), (true ? (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) : _GLF_FUZZED(-54475))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), (true ? (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) : _GLF_FUZZED(-54475))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), min((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))), (true ? (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) : _GLF_FUZZED(-54475))))) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(83504, min(83504, _GLF_IDENTITY(83504, ~ (~ (83504))))))))) << 0)))))))), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec4(1u), 1u, _GLF_IDENTITY(_GLF_struct_replacement_14.workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (1u | _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (1u))))) * (uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), clamp(~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) * uvec2(1u, 1u)), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))) * uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), uvec2(uvec3(~ (uvec2(workgroup_id, 0u)), 1u))))), (_GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), clamp(~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) * uvec2(1u, 1u)), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))), max(uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))))) * uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)))), 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), uvec2(uvec3(~ (uvec2(workgroup_id, 0u)), 1u)))))) * uvec2(1u, 1u)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_struct_replacement_14.workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) | (_GLF_IDENTITY(uvec2(workgroup_id, 0u), min(uvec2(workgroup_id, 0u), uvec2(workgroup_id, 0u)))))), (1u | 1u) * (uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), clamp(~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) * uvec2(1u, 1u)), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))) * uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), uvec2(uvec3(~ (uvec2(workgroup_id, 0u)), 1u))))), _GLF_IDENTITY(uvec2(uvec4(_GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), clamp(~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) * uvec2(1u, 1u)), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))) * uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), uvec2(uvec3(~ (uvec2(workgroup_id, 0u)), 1u))))), 1u, 0u)), (uvec2(uvec4(_GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), clamp(~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) * uvec2(1u, 1u)), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))) * uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), uvec2(uvec3(~ (uvec2(workgroup_id, 0u)), 1u))))), 1u, 0u))) | (uvec2(uvec4(_GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), clamp(~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) * uvec2(1u, 1u)), ~ (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))) * uvec2(1u, 1u)), min((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u))))))), _GLF_IDENTITY(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), _GLF_IDENTITY(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec2(uvec4(uvec2(0u, 0u) ^ ((_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(_GLF_IDENTITY(uvec2(uvec2(workgroup_id, 0u)), clamp(uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)), uvec2(uvec2(workgroup_id, 0u)))))))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))), _GLF_IDENTITY(~ (uvec2(workgroup_id, 0u)), uvec2(uvec3(~ (uvec2(workgroup_id, 0u)), 1u))))), 1u, 0u))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), 0.0 + (_GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, max(0.0, 0.0)))), mix(float(_GLF_FUZZED(-7.6)), float(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (injectionSwitch.y) + 0.0))), bool(true))))))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && true, ((_GLF_IDENTITY(false, bool(bool(false)))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_15.workgroup_base + subgroup_base)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (1u & 1u) * (num_workgroup))) : _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + subgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, ~ (~ (_GLF_struct_replacement_15.workgroup_base)))) >> 0u) + subgroup_base, _GLF_struct_replacement_15.workgroup_base + subgroup_base)))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + subgroup_base + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_base) : _GLF_struct_replacement_15.workgroup_base + subgroup_base + subgroup_local_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5266.6119))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(4.4)), bool(false))))), length(0.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(_GLF_IDENTITY(70.67, float(mat4x3(70.67, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0))), 388.003, 6.9, 3.7, 8788.9467, 5242.5185, 1.4, 9392.7365, 6.9, 9064.3074, 65.07, 69.64)) : mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-74.78) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1230.3829))))), length(0.0), 1.0, 1.0))))).y))))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_15.workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 0)))) ^ 0u), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) - 0)))))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u)))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))))))) - 0u))) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size)))) * 1u)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))))), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_id))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) % subgroup_size, max((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_base)))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(~ (~ ((subgroup_local_id + 1) % subgroup_size)), clamp(~ (~ ((subgroup_local_id + 1) % subgroup_size)), ~ (~ ((subgroup_local_id + 1) % subgroup_size)), ~ (~ ((subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-7.5)), bool(false))))), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)) : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-84.34) : _GLF_ZERO(0.0, injectionSwitch.x)))))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))), 0u | ((_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u))), subgroup_size))))), (subgroup_local_id + 1) % subgroup_size)) / _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)), min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (0u & 136789u) ^ ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.0), _GLF_FUZZED(889.337)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x)), _GLF_IDENTITY(0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(156388u) : _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(17856u) : (subgroup_local_id) | 0u)))), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, _GLF_IDENTITY(-98.60, (true ? -98.60 : _GLF_FUZZED(3.7))), 8.5, 5.4))) : (subgroup_local_id) | 0u))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 1u * (_GLF_IDENTITY(uint(8u), 0u + (uint(8u))))), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + _GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), 0u | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))), 1u, 1u)), max(uint(uvec3(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), 0u | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))), 1u, 1u)), uint(uvec3(_GLF_IDENTITY((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), 0u | ((uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))), 1u, 1u)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u, (false ? _GLF_FUZZED((num_workgroup & subgroup_base)) : false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u))))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uvec2(uint(8u), 0u))), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)))) % subgroup_size)) / 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0u, max(0u, 0u)) + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4)), ~ (~ (_GLF_IDENTITY(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4)), ~ (_GLF_IDENTITY(~ (packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))), (~ (packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4)))) - 0u))))))) : (subgroup_local_id) | 0u))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_base) : subgroup_local_id))) ^ 0u) + 1) % subgroup_size), _GLF_IDENTITY(min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))) | (min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-735.587, -98.60, 8.5, 5.4))) : (subgroup_local_id) | 0u) * 1u)))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) / 1u))))))) / 1u)) << 0u)) ^ 0u)) - 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(603.076)), bool(false))), injectionSwitch.y))))))) && true))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1))), 0), _GLF_struct_1(true, _GLF_IDENTITY(uvec4(1u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), (true ? _GLF_IDENTITY(mat4x2(0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0), mat4x2(mat4x3(mat4x2(0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0)))) : _GLF_FUZZED(mat4x2(5.4, 2.6, 0.9, 89.91, -28.00, 92.41, 4.9, -7.1)))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-54.13))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec4(1u))), mat4(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(-177.201), _GLF_FUZZED(491.187), _GLF_FUZZED(-9464.3712)), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(true, true, true))), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat2x4(float(mat2x3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat2x4(float(mat2x3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 1.0))), mat4(1.0) * (mat2x4(float(mat2x3(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 1.0))))))))))), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)), _GLF_IDENTITY(max(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1064.4416) : 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0))), (max(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2(vec3(0.0, 1.0, 0.0), 0.0))), vec3(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), float(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), float(mat3x4(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), 0.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-1064.4416) : 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)))) - 0.0))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(223.811))), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), tan(0.0), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, log(1.0), sqrt(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(57.79, 1940.9996, -380.682, 5250.4728, 8.7, 6.3, 3375.7935, -5.4, 6.5)) : mat3(0.0, log(1.0), sqrt(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))), 1.0, 1.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat3(0.0, log(1.0), sqrt(1.0), 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.4)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(84.02)), float(log(1.0)), bool(true))))), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(57.79, 1940.9996, -380.682, 5250.4728, 8.7, 6.3, 3375.7935, -5.4, 6.5)) : mat3(0.0, log(1.0), sqrt(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.7) : 0.0)), log(1.0))), 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat3(0.0, log(1.0), sqrt(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0))), 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(57.79, 1940.9996, -380.682, 5250.4728, 8.7, 6.3, 3375.7935, -5.4, 6.5)) : mat3(0.0, log(1.0), sqrt(1.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), 0.0 + (log(1.0))))), 1.0, 1.0, 0.0, 0.0)))))))))))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false))))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))), true))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))), true)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), false, false), false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7036.3955)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7036.3955), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7036.3955), mix(float(_GLF_FUZZED(-7036.3955)), float(_GLF_FUZZED(float(197862u))), bool(false)))), float(_GLF_FUZZED(-9140.5204)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-179.909, -53.45, -433.910, -41.48, -737.200, -4668.9040, 6.3, 345.540, -8.3, 5556.5245, -2244.7437, -2831.6482, -8.4, -7132.0773, -9.4, -408.511)) : _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-69882) : _GLF_IDENTITY(2, (2) | (2))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_struct_replacement_3._f0._f0.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, abs(0.0), tan(0.0), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-7112.5940, -5300.8667, 5.5, 4.9, -15.70, -2.7, 171.086, 7569.8183, -9.7, -6.5, 9.0, -172.868, 158.837, -6.3, 5.2, -0.9)) : mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, abs(0.0), tan(0.0), 0.0, 1.0, 0.0))))).y))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, (false) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_struct_replacement_3._f0._f0.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-145.106)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && ((! (false)))))))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, false || (true)) && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x)), mat2(1.0) * (vec2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, true, true))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, true, true))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))) || false))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(8.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)) : injectionSwitch)).x < injectionSwitch.y)), true)))))).y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, false))), true && (bool(bool(bvec2(false, false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true, false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_3._f0._f0.read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))))))))), true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
