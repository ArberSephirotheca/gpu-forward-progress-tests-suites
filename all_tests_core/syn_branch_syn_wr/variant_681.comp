#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2 _f0;
 mat2 _f1;
 uvec3 _f2;
 mat2 _f3;
 mat2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uint subgroup_base;
 _GLF_struct_0 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
 mat2 _f3;
 uint _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(_GLF_IDENTITY(! ((false)), false || (! (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-21.52) : injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool((_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false)))))))))) || false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || false)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || false)))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false))))), bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), false))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), false))))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true), false))))))), false))))))), false)))))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))) || false)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false)))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, false || (true))))))))))))) || false))))))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true, true))))))))) || false)))) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || ((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))) || false)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))) && true)))))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))))) && true)))), false || (((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))))) && true))))))))))) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, true)))))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))), true, true, false))) && true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false)), (bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false))) && true)))))))) || false))))))))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(gl_NumWorkGroups.x, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0u)) | (uint(uvec4(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 0u, 0u) ^ (gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) | (workgroup_id)))))), workgroup_id, workgroup_id)), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) | 0u), min(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))) | (workgroup_id)))))), workgroup_id, workgroup_id)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(uvec2(1u), _GLF_struct_1(_GLF_IDENTITY(ivec2(1), clamp(ivec2(_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1), 0, 1))))))), min(ivec2(1), ivec2(_GLF_IDENTITY(1, 0 ^ (1))))) : _GLF_FUZZED(ivec2(62533, -80192)), (_GLF_IDENTITY(ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6)), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(6), ivec2(6))) >> ivec2(0, 0))) ^ (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1), 0, 1))))), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1), 0, 1)))))) | (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec4(ivec2(1), 0, 1)), ivec2(0, 0) | (ivec2(ivec4(ivec2(1), 0, 1))))))))), min(ivec2(1), ivec2(1))) : _GLF_FUZZED(ivec2(62533, -80192)))))), ivec2(1))), subgroup_id * subgroup_size, _GLF_struct_0(mat2(1.0), mat2(1.0), uvec3(1u), mat2(1.0), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-147.944) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.6)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1045.3718)), float(0.0), bool(true)))), float(_GLF_FUZZED(5.7)), bool(false)))) - 0.0), 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1159.0929) : 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), clamp(float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-147.944) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.6)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1045.3718)), float(0.0), bool(true)))), float(_GLF_FUZZED(5.7)), bool(false)))) - 0.0), 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1159.0929) : 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-147.944) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.6)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1045.3718)), float(0.0), bool(true)))), float(_GLF_FUZZED(5.7)), bool(false)))) - 0.0), 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1159.0929) : 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-147.944) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0))), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.6)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1045.3718)), float(0.0), bool(true)))), float(_GLF_FUZZED(5.7)), bool(false)))) - 0.0), 1.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1159.0929) : 0.0)), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))))), vec3(1.0)), mat2x3(1.0)), mat4x2(1.0), mat2(1.0), 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_2._f1.subgroup_base, _GLF_IDENTITY(0u, (0u) / 1u) + (workgroup_base + _GLF_struct_replacement_2._f1.subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(num_workgroup), (true ? workgroup_base : _GLF_FUZZED(num_workgroup)) | (true ? workgroup_base : _GLF_FUZZED(num_workgroup))), true ? workgroup_base : _GLF_FUZZED(num_workgroup)))) ^ 0u)))) | (workgroup_base)) + _GLF_struct_replacement_2._f1.subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))), 0u | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4415.1016, 4325.8204).rr)))) / vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x : _GLF_FUZZED(1.2))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = _GLF_IDENTITY(0, int(ivec2(0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, min(64, 64)))))), _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), clamp((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), clamp((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)))), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u))) - 0u), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id % 2))) << 0u)) ^ 0u)))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 0)), clamp(_GLF_IDENTITY(int(ivec3(64, 1, 0)), clamp(int(ivec3(64, 1, 0)), int(ivec3(64, 1, 0)), int(ivec3(64, 1, 0)))), int(ivec3(64, 1, 0)), int(ivec3(64, 1, 0)))))))) / 1), _GLF_IDENTITY(2, 0 + (2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_size))), 0u + (read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(37953))), 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_size))))), 0u | (_GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_size))), 1u * (_GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) : _GLF_FUZZED(workgroup_size)))))), (true ? read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], 4, 64, 2) : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(subgroup_local_id))))))), 0u ^ (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_IDENTITY(uint((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), max(uint((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), exp(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-8.4, -0.9, 93.65, 6.2, -8.3, 230.101, 8.6, 4.8, -1.0, 73.78, 8718.9568, 7.3, -859.407, 74.92, -5.6, -4950.0206)))))) > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(-23450, -69841)[0]) : (2))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(93383))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)))) - 0)), 0u ^ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)))) - 0)), 0u ^ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))))), (false ? _GLF_FUZZED(read) : (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)))) - 0)), 0u ^ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)))) - 0)), 0u ^ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / _GLF_IDENTITY(1u, (1u) | 0u))), uint(uint((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / _GLF_IDENTITY(1u, (1u) | 0u))))))), 4, 64, 2), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(5u) : _GLF_FUZZED(subgroup_id))), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)))) - 0)) << (0 >> _GLF_IDENTITY(int(7), int(7))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2)))), ~ (~ (0u ^ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) >> 0u), max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2))))))))), (false ? _GLF_FUZZED(read) : (_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), clamp(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), ~ (~ (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1)))))), _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))))), min(_GLF_IDENTITY(2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(53527) : 2)), 2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257)), ~ (_GLF_IDENTITY(~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257))), min(~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257))), ~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) * 1))), min(2, 2)) : _GLF_FUZZED(48257))))))))) - 0)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2), (read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))), 4, 64, 2)) | 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (read = atomicLoad(buf[virtual_gid], 4, 64, 2))))))))))) / 1u) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3658.9730), _GLF_FUZZED((-4.8))), bvec2(false, false))), mix(vec2(_GLF_FUZZED(499.486), _GLF_FUZZED(-685.883)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3658.9730), _GLF_FUZZED((-4.8))), bvec2(false, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3658.9730), _GLF_FUZZED((-4.8))), bvec2(false, false))))[1]), bvec2(true, true))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-6953.6719)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
