#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (88819 & 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             continue;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = (1 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), ~ (_GLF_IDENTITY(~ (0 << _GLF_IDENTITY(int(3), int(3))), (~ (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))))) - 0)))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, false), true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true), bvec3(bvec3(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true))))))), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true, true, true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true, true, true), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true, true, true), false)), false))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true), bvec3(bvec4(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true), false))))), false), true, false)))))))))
          continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(76317)), _GLF_FUZZED(18.59)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + tan(0.0))), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), true && ((_GLF_IDENTITY(! (false), true && (! (false))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(147715u)), _GLF_FUZZED(82.05)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9046.8129)))) - 0.0) > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
            {
             return;
            }
           else
            {
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.3)), vec2(_GLF_FUZZED(224.799), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-313.905) : _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)))), bvec2(false, true))).x > injectionSwitch.y)))))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY((1 & _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-22848))), (1) >> 0)), ((1 & 1)) | ((1 & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), 0 ^ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), clamp(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), 0 ^ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))))) | 0), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))), (false ? _GLF_FUZZED(62645) : 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec4(int(0), 1, 0, 0), max(ivec4(int(0), 1, 0, 0), ivec4(int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))), 1, 0, 0))))), int(0))), _GLF_IDENTITY(int(0), 0 | (int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(0 | (int(0)), min(0 | (int(0)), 0 | (int(0)))))), int(ivec2(0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | (_GLF_IDENTITY(0, max(0, 0)))) | (int(0)))), 1))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(int(0)))), _GLF_IDENTITY(int(0), _GLF_IDENTITY(0 | (int(0)), min(0 | (int(0)), 0 | (int(0)))))), int(ivec2(0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | (_GLF_IDENTITY(0, max(0, 0)))) | (int(0)))), 1)))) | 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, 0 + (6)), 6))), int(6)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) ^ 0))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))
    return;
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(23823u, 165778u, 149607u)) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 1u * (0u)))) | (workgroup_size)) * workgroup_id;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) >> 0))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(_GLF_IDENTITY(5, min(5, 5)))))) >> _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(~ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) - 0)), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(_GLF_IDENTITY(5, (5) / 1)), int(5)))) >> 0)))), ~ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) >> 0)), min(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) | (0 << _GLF_IDENTITY(int(2), int(2)))), int(5)))) >> 0)), 1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), clamp(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))) >> 0), min(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), clamp(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))) >> 0), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), clamp(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))) >> 0)))))))), _GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), (clamp(int(5), int(5), int(5))) << 0))) >> 0)))), _GLF_IDENTITY(1 * (~ ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) >> 0, ((_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) >> 0) | ((_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) >> 0))))))), int(ivec3(1 * (~ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-68502)))))), _GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))))), int(5)))) >> 0, min(_GLF_IDENTITY((_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))))), int(5)))) >> 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))))), int(5)))) >> 0)), (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))))), int(5)))) >> 0))))))), 1, 0)))))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-919.085, 5.0))))))[_GLF_IDENTITY(1, (1) - 0)])).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base)), (clamp(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), clamp(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) / 1u), ~ (~ (subgroup_base)), ~ (~ (subgroup_base)))))), ~ (subgroup_base), ~ (subgroup_base))) | (clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY((~ (workgroup_base)) >> 0u, ~ (~ ((~ (workgroup_base)) >> 0u))))))))) >> 0u) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(0u, (0u) - 0u)))))))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) | 0u)) | (subgroup_base)), _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u))))) + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u | (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 | ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), clamp((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), clamp((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, clamp(1, 1, 1))))))))) - 0)), (subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), 0u | (~ (0u)))))))), subgroup_size)));
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true)))))), _GLF_IDENTITY(true, false || (true)) && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))), bool(bool((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))))))), (bool(_GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))), bool(bool((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))))))))) && true))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))) && true), true)))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), true))))))))), ! (_GLF_IDENTITY(! (((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), true)))))))))), (_GLF_IDENTITY(! (((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), true)))))))))), (! (((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), false, false), true))))))))))) && true)) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))) || (false))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))), (((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))) && true)), bool(bool((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))))))), (bool(_GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))), bool(bool((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false)) || (false)))))))))))))))) && true))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))))))) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))) || (false))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))), (((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))) && true)), bool(bool((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))))))), (bool(_GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)))))), bool(bool((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, false || (false)) || (false)))))))))))))))) && true))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))))))) && true), true))))))))) || false)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), min(_injected_loop_counter, _injected_loop_counter)) != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false, false, false))), true, false))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, 1), ivec3(0, 0, 0) + (ivec3(_injected_loop_counter, 1, 1))))) != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), mix(float(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_FUZZED(vec2(5.5, -4739.4953).r)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(1.1))))), injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(1.1), max(true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(1.1), true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(abs(1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0)))) : _GLF_FUZZED(1.1))))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0) * sqrt(1.0)))) - log(1.0))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))))
              continue;
             continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED((float(-5175) - -28.60))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-8.6 + -5.1))), bool(false))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), bool(bool(! (_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bool(true))))), ((! (_GLF_IDENTITY(true, bool(bool(true)))))) || false) || false))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.0, -90.73)))).y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, true && (false))))) && true)), true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))) && true)), true, false, true)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))) && true)), true, false, true))), true && (_GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))) && true)), true, false, true))), (false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))) && true)), true, false, true)))) && true))))))))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(667.608)), bool(false)))))))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), true)), false, true))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))) && true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))))), ((injectionSwitch.x < injectionSwitch.y)) && true))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), true)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))) && true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)) && true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) && true))), true)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (injectionSwitch.x < injectionSwitch.y))), false)), false)))))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))), true))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1))), 1, 0)))); _injected_loop_counter --)
                  {
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          continue;
        }
       else
        {
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62601)))), int(ivec3(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62601)))), 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))), (int(4)) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(849.509) : injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((20409 & 0), ((20409 & 0)) - 0)); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) >> 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true, (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(500.768) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0)), (vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0))) / vec2(1.0, 1.0)))).y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), true && (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))) || false), false, false)))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, _GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, (true ? _GLF_IDENTITY(-4.4, min(-4.4, -4.4)) : _GLF_FUZZED(951.728))))), 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))))).y, injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true, (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(500.768) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0)), (vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0))) / vec2(1.0, 1.0)))).y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), true && (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))) || false), false, false)))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, _GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, (true ? _GLF_IDENTITY(-4.4, min(-4.4, -4.4)) : _GLF_FUZZED(951.728))))), 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))))).y, injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true, (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(500.768) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0)), (vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0))) / vec2(1.0, 1.0)))).y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), true && (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))) || false), false, false)))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, _GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, (true ? _GLF_IDENTITY(-4.4, min(-4.4, -4.4)) : _GLF_FUZZED(951.728))))), 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))))).y, injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))))), bool(bvec3(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7642.0169), _GLF_FUZZED(8.3)), bvec2(false, false))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))), true, true), false))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true, (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y, min(injectionSwitch.y, injectionSwitch.y)))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(500.768) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0)), (vec2(mat2x3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 0.0, log(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0))) / vec2(1.0, 1.0)))).y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(4.3), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch))))[1]), vec2((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], _GLF_IDENTITY(_GLF_FUZZED(5588.0110), mix(float(_GLF_FUZZED(5890.0274)), float(_GLF_FUZZED(5588.0110)), bool(true)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y, min(injectionSwitch.y, injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))).y, injectionSwitch.y))) && true)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), true && (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1298.0535)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))) || false), false, false)))))), ! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, _GLF_IDENTITY(-4.4, max(-4.4, _GLF_IDENTITY(-4.4, (true ? _GLF_IDENTITY(-4.4, min(-4.4, -4.4)) : _GLF_FUZZED(951.728))))), 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, -3.3, 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-4.3, _GLF_IDENTITY(-3.3, min(-3.3, -3.3)), 17.51, 2.5, -4.4, 3.4, -116.619, -612.902, -4986.0459, -4.6, -5848.1496, 877.831, 0.7, 2.8, -42.32, 3.5)) : mat4(injectionSwitch, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, sin(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat4(-2.6, 311.084, -976.786, -2.1, -1.3, 24.30, -6.8, -0.1, -0.8, -71.47, 16.20, -6396.3779, 881.257, 0.0, 722.597, 5.6)) : mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))))).y, injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))))))))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false), bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false), bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false)))))))))) || false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (false) || false))))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))).x, injectionSwitch.x)) < injectionSwitch.y))))
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-406.274 - -7.2))), vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))
            continue;
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) / 1))));
            }
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec2((_GLF_WRAPPED_IF_FALSE(false)), false)), bool(bvec2(bool(bvec2((_GLF_WRAPPED_IF_FALSE(false)), false)), false)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), ! (! (bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))))))), true)), true && (bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, true, true)))))), false || ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), ! (! (bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))))))), true)), true && (bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), false, true, true))))))))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) && true) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY((0 & 56321), ~ (~ ((0 & 56321)))) << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(((subgroup_local_id % 2)), ~ (~ (((subgroup_local_id % 2))))) | ((subgroup_local_id % 2))) == 0)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          continue;
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), true && (! (! (_GLF_WRAPPED_IF_FALSE(false)))))))
      {
      }
     else
      {
       read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(next_virtual_gid) : (virtual_gid))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) * 1u)), min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(next_virtual_gid) : (virtual_gid))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))), 0u))) * 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)), min(min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)), min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)), virtual_gid, virtual_gid))) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))))))))) << 0u)], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) << (0 << _GLF_IDENTITY(int(1), int(1)))) + (4)), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), max(max(64, 64), max(64, 64)))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, int(ivec2(2, 0))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | _GLF_IDENTITY(0, 0 | (0))))), 0)))) / _GLF_IDENTITY(1, (1) / 1)));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))) * 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED((ivec4(65803, 64030, -62420, 21583) / _GLF_IDENTITY(ivec4(-32100, 41860, 12857, 91368), (ivec4(-32100, 41860, 12857, 91368)) | (_GLF_IDENTITY(ivec4(-32100, 41860, 12857, 91368), clamp(ivec4(-32100, 41860, 12857, 91368), ivec4(-32100, 41860, 12857, 91368), ivec4(-32100, 41860, 12857, 91368)))))).b)))) << 0)))));
    }
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], _GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY((read), ((read)) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (read)), 0u | (_GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((read), ((read)) * 1u), 0u | (_GLF_IDENTITY((read), ((read)) * 1u))) | (read)))), 4, 64, 4);
}
