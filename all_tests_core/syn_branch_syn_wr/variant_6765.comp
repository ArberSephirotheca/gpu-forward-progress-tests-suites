#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_28 {
 float _f0;
 bool _f1;
 mat2 _f2;
 mat2x3 _f3;
 _GLF_struct_27 _f4;
 ivec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_25 {
 ivec3 _f0;
 float _f1;
 bvec3 _f2;
 vec2 _f3;
 vec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 mat4x2 _f1;
 int _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 mat4x2 _f1;
 _GLF_struct_25 _f2;
 float _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_23 {
 vec2 _f0;
} ;

struct _GLF_struct_21 {
 ivec3 _f0;
 float _f1;
 mat2 _f2;
 ivec3 _f3;
 ivec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 int _f1;
 mat3x4 _f2;
 vec2 _f3;
 mat4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 mat2x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_21 _f3;
} ;

struct _GLF_struct_29 {
 mat4x3 _f0;
 _GLF_struct_22 _f1;
 uint workgroup_size;
 mat2x3 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_28 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 ivec3 _f1;
 mat4x3 _f2;
 mat2x4 _f3;
 vec2 _f4;
 mat4x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 float _f1;
 vec3 _f2;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
 mat4 _f1;
 vec2 _f2;
 bvec3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_17 {
 uvec4 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 bool _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 uvec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 _GLF_struct_12 _f1;
 uint _f2;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_17 _f2;
 uint num_workgroup;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat3x4 _f1;
 mat3 _f2;
 bvec2 _f3;
 ivec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_10 {
 uint workgroup_id;
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 uint _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_11 {
 uint _f0;
 mat2x4 _f1;
 float _f2;
 _GLF_struct_8 _f3;
 mat2x4 _f4;
 ivec2 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_3 {
 int i;
 float _f0;
 mat3 _f1;
 vec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 _GLF_struct_2 _f1;
 vec2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_1 {
 float _f0;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat4x3 _f1;
 vec3 _f2;
 mat4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_4 _f3;
 bvec3 _f4;
 ivec2 _f5;
 _GLF_struct_5 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))) || (false)))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, false), bvec3(bvec4(bvec3(bool(bvec2(false, false)), true, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, false), bvec3(bvec4(bvec3(bool(bvec2(false, false)), true, false), true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, false)), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, false))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false), true))))), ! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, bool(bool((bool(false)) || false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))), false))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))))) || false), false, true))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) || false), false, true))) && true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), bool(bvec2(bool(bvec4(false, false, false, false)), true)))))))), false)), false, false))))), true, false)))), true, false), bvec3(bvec4(bvec3(bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))), true, false), true))))), _GLF_IDENTITY(bool(bvec2((bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, ((bool(false)) || false) || false))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, ((bool(false)) || false) || false))), false, true, true))), true, false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), true && (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, ((bool(false)) || false) || false))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, ((bool(false)) || false) || false))), false, true, true))), true, false)))), false), true, true)))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false))), false, true))), false), bvec3(bvec4(bvec3(bool(bvec2(false, false)), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2((bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (! (_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), true && (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, false)))), false)), true, false), bvec3(bvec4(bvec3(bool(bvec2(false, false)), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-5.1, -9.6, 45.66, 0.6), (_GLF_IDENTITY(vec4(-5.1, -9.6, 45.66, 0.6), (vec4(-5.1, -9.6, 45.66, 0.6)) + vec4(0.0, 0.0, 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)).w), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-5.1, -9.6, 45.66, 0.6), (_GLF_IDENTITY(vec4(-5.1, -9.6, 45.66, 0.6), (vec4(-5.1, -9.6, 45.66, 0.6)) + vec4(0.0, 0.0, 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)).w), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-5.1, -9.6, 45.66, 0.6), (_GLF_IDENTITY(vec4(-5.1, -9.6, 45.66, 0.6), (vec4(-5.1, -9.6, 45.66, 0.6)) + vec4(0.0, 0.0, 0.0, 0.0))) / vec4(1.0, 1.0, 1.0, 1.0)).w), _GLF_FUZZED(-5.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-10.58, -612.177, 772.084)))))), max(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-10.58, -612.177, 772.084)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-10.58, -612.177, 772.084)))))), (max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(-10.58, -612.177, 772.084))))))) * 1.0)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(544.135)), bool(false))))), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(uvec4(1u), _GLF_struct_13(bvec3(true), _GLF_struct_12(mat3x4(1.0), uvec3(1u), mat4(1.0)), 1u), _GLF_struct_17(uvec4(1u), _GLF_struct_14(mat2(1.0), mat4(1.0), vec2(1.0), bvec3(true), vec3(1.0)), _GLF_struct_15(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, exp(0.0), 0.0)), mix(float(_GLF_FUZZED((+ 87.64))), float(float(mat2(1.0, 1.0, exp(0.0), 0.0))), bool(true)))), vec3(1.0)), _GLF_struct_16(uvec3(1u), ivec3(1), mat4x3(1.0), mat2x4(1.0), vec2(1.0), mat4x3(1.0), 1u), true, uvec2(1u)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)).x);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(mat4x3(1.0), _GLF_struct_22(ivec2(1), _GLF_struct_19(ivec2(1), mat3x2(1.0), bvec2(true), mat2x4(1.0), ivec2(1)), _GLF_struct_20(mat2x3(1.0), 1, mat3x4(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4434.2366)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-16.45)))) - 0.0), 1.0))), bool(true)))), mat4(1.0), vec3(1.0)), _GLF_struct_21(ivec3(1), 1.0, mat2(1.0), ivec3(1), ivec2(1), mat2x4(1.0))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))).x, mat2x3(1.0), _GLF_struct_23(vec2(1.0)), _GLF_struct_26(_GLF_struct_24(ivec4(1), mat4x2(1.0), 1, _GLF_IDENTITY(ivec4(1), max(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0))))), mat4x2(1.0), _GLF_struct_25(ivec3(1), 1.0, bvec3(true), vec2(1.0), vec3(1.0), mat3x4(1.0)), 1.0, ivec2(1)), _GLF_struct_28(1.0, true, mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))), mat2x3(1.0), _GLF_struct_27(vec2(1.0), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.6, (6.6) / 1.0))), float(1.0), bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), _GLF_IDENTITY(true, (true) && true), true, false)))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2092.6308))))))), ivec3(1), vec2(1.0)), mat2x3(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-584.966)), vec2(_GLF_FUZZED(-164.945), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, true, true)), true, false), bvec3(bvec3(bvec3(bool(bvec4(false, false, true, true)), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = _GLF_IDENTITY(_GLF_struct_replacement_29.workgroup_size, max(_GLF_struct_replacement_29.workgroup_size, _GLF_struct_replacement_29.workgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1u, mat2x4(1.0), 1.0, _GLF_struct_8(_GLF_struct_7(_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1))), 1u, mat2x4(1.0), mat3x4(1.0), ivec3(1))), mat2x4(1.0), ivec2(1), _GLF_struct_10(gl_WorkGroupID.x, _GLF_struct_9(vec3(1.0), mat3x4(1.0), mat3(1.0), bvec2(true), ivec2(1), true)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(41.19), _GLF_FUZZED(-9.2)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.y), bool(true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * _GLF_struct_replacement_11._f6.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.z = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, min(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base, GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base)).z + subgroup_id * subgroup_size + GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2702.7012) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.z + subgroup_id * subgroup_size + ((GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, int(ivec3(4, 1, 1))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bool((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))) || false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true)))))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false))))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], (_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], min(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x]))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x = _GLF_IDENTITY(read, 0u + (read));
 if(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y, max(GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y, GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.y)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(678.264), _GLF_FUZZED((vec4(-3.9, 9174.8146, -8.2, -994.250) * vec4(-24.03, 269.560, 25.45, 829.637)).t)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0)), float(_GLF_FUZZED(5369.0014)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(ivec3(1), mat4x3(1.0), vec3(1.0), mat4(1.0), bvec4(true)), mat3x4(1.0), _GLF_struct_1(1.0), _GLF_struct_4(vec2(_GLF_IDENTITY(1.0, float(mat3x4(1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, sqrt(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, log(1.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0)))), _GLF_struct_2(mat3x4(1.0)), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), _GLF_struct_3(0, 1.0, mat3(1.0), vec4(1.0), true)), bvec3(true), ivec2(1), _GLF_struct_5(mat4x3(1.0), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u)))) ^ uvec3(0u, 0u, 0u))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(38096) : _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, max(64, 64)))), max(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, max(64, 64)))))))), _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, false))), ! (! (! (bool(bvec3(false, true, false)))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], GLF_merged3_0_1_4_1_1_17_2_1_14readsubgroup_local_idworkgroup_base.x, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
