#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 ivec4 _f0;
 mat4 _f1;
 vec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_38 {
 vec3 _f0;
 uvec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_40 {
 int _f0;
 bvec2 _f1;
 _GLF_struct_38 _f2;
 _GLF_struct_39 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_36 {
 bvec2 _f0;
 ivec3 _f1;
 ivec3 _f2;
 bool _f3;
 bool _f4;
 mat2x4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_37 {
 _GLF_struct_36 _f0;
} ;

struct _GLF_struct_34 {
 uvec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
 mat3x2 _f1;
 uint _f2;
} ;

struct _GLF_struct_32 {
 bvec2 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 uint _f3;
 mat3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_31 {
 mat3x4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_30 {
 mat3x2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_29 {
 mat4x2 _f0;
 bvec4 _f1;
 mat3x4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_33 {
 mat2x3 _f0;
 mat4x3 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 uint subgroup_id;
 _GLF_struct_31 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_27 {
 uvec4 _f0;
 uvec3 _f1;
 bool _f2;
 uint _f3;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
 bvec4 _f1;
 mat4 _f2;
 vec2 _f3;
 ivec4 _f4;
 mat2x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 mat4 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 _GLF_struct_27 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_41 {
 _GLF_struct_28 _f0;
 _GLF_struct_33 _f1;
 _GLF_struct_35 _f2;
 _GLF_struct_37 _f3;
 _GLF_struct_40 _f4;
 mat2x4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_23 {
 mat3x4 _f0;
 uvec4 _f1;
 mat4x3 _f2;
 mat3 _f3;
 mat3x4 _f4;
 ivec4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_22 {
 mat4x2 _f0;
 vec3 _f1;
 mat2x3 _f2;
 bool _f3;
 mat4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_24 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 bvec2 _f2;
 _GLF_struct_23 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_20 {
 bool _f0;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 float _f1;
 ivec2 _f2;
 ivec4 _f3;
 mat4x2 _f4;
 mat4x2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 mat3x4 _f1;
 mat3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 uvec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_19 {
 mat4 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_12 {
 int _f0;
 float _f1;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_25 {
 _GLF_struct_13 _f0;
 mat3x2 _f1;
 uint workgroup_size;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
} ;

struct _GLF_struct_8 {
 float _f0;
 mat4x3 _f1;
 uint subgroup_size;
 bvec4 _f2;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 float _f1;
 int _f2;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 vec3 _f1;
 int _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 vec2 _f1;
 ivec3 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 ivec4 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 _GLF_struct_1 _f1;
 mat3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint subgroup_base;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(_GLF_struct_28(_GLF_struct_26(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bvec4(true), mat4(1.0), vec2(1.0), ivec4(1), mat2x3(1.0), bvec4(true)), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) + 0.0))), (mat4(1.0)) + mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat4x2(1.0), mat3x4(1.0), _GLF_struct_27(uvec4(1u), uvec3(1u), true, 1u), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0)))), _GLF_struct_33(mat2x3(1.0), mat4x3(1.0), _GLF_struct_29(mat4x2(1.0), bvec4(true), mat3x4(1.0), mat3(1.0)), _GLF_struct_30(mat3x2(1.0), mat4x3(1.0)), gl_SubgroupID, _GLF_struct_31(mat3x4(1.0), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, clamp((1u) - 0u, _GLF_IDENTITY((1u) - 0u, (false ? _GLF_FUZZED(29124u) : (1u) - 0u)), _GLF_IDENTITY((1u) - 0u, (_GLF_IDENTITY((1u) - 0u, min((1u) - 0u, (1u) - 0u))) >> 0u)))))), _GLF_struct_32(bvec2(true), mat3x4(1.0), mat2x3(1.0), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) | 0u)))), mat3(1.0), uvec4(1u))), _GLF_struct_35(_GLF_struct_34(uvec4(1u), mat2x3(1.0), uvec3(1u), mat4(1.0)), mat3x2(1.0), 1u), _GLF_struct_37(_GLF_struct_36(bvec2(true), ivec3(1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), max(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))))), true, true, mat2x4(1.0), mat2(1.0))), _GLF_struct_40(1, bvec2(true), _GLF_struct_38(vec3(1.0), uvec4(1u), bvec2(true)), _GLF_struct_39(ivec4(1), mat4(1.0), vec4(1.0), bvec2(true)), mat3x2(1.0)), mat2x4(1.0), uvec2(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3(1.0), ivec4(1), _GLF_struct_10(_GLF_struct_4(mat2x3(1.0), vec2(1.0), ivec3(1), mat3x2(1.0), mat3x2(1.0)), _GLF_struct_5(mat2x4(1.0), vec3(1.0), 1), _GLF_struct_6(bvec4(true), 1.0, 1), _GLF_struct_7(mat4x2(1.0)), _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1858.4948) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1858.4948) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1858.4948) : 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1858.4948) : 1.0)))), mat4x3(1.0), gl_SubgroupSize, bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bool(true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), false, true)), ! (! (bool(bvec3((true), false, true)))))))))))), _GLF_struct_9(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, _GLF_IDENTITY(1, (1) + 0))), 1)), clamp(1, 1, 1))) | (1)), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(95509))), 0)), 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))))) << 0), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))))) << 0), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))))) << 0), 0 | (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), ((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))))) << 0))))), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), 0 + (int(int(0))))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-68873) : 1)), 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, _GLF_IDENTITY(0, ((-86574 << -52077) & 0) | (0)), 0)) - ivec4(0, 0, 0, 0)))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), ((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0)))))))) - 0))) << 0), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), _GLF_IDENTITY((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), max((ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))))))))))) ^ 0)), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) << (0 & -98927)), 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)), ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))) | (0)), 0)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-76927, 11474, -94384, 45335)) : ivec4(0, 0, 0, 0)))))))))) / 1)) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1))))) ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21211) : 0)))), 0)))), max(((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) << (0 & -98927)), 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)), ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))) | (0)), 0)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-76927, 11474, -94384, 45335)) : ivec4(0, 0, 0, 0)))))))))) / 1)) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1))))) ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21211) : 0)))), 0)))), ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) << (0 & -98927)), 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) - ivec4(0, 0, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)), ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))) | (0)), 0)) - _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-76927, 11474, -94384, 45335)) : ivec4(0, 0, 0, 0)))))))))) / 1)) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1))))) ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-21211) : 0)))), 0))))))))), mat2(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_13(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-770.569)))), _GLF_struct_12(1, 1.0)), mat3x2(1.0), gl_WorkGroupSize.x, _GLF_struct_19(mat4(1.0), _GLF_struct_14(mat2x3(1.0), uvec2(1u), mat3x2(1.0)), _GLF_struct_15(mat3x4(1.0), mat3x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(74.78)), min(float(_GLF_FUZZED(74.78)), float(_GLF_FUZZED(74.78)))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.3)), float(1.0), bool(true)))))), _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), mat3x4(1.0)), _GLF_struct_16(mat2x3(1.0)), _GLF_struct_17(mat2x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-1843.8666)), bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ivec2(1)), _GLF_struct_18(mat3x2(1.0), 1.0, ivec2(1), ivec4(1), mat4x2(1.0), mat4x2(1.0), _GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(2.6, 7532.9921, 360.649, 328.775)) : vec4(1.0)))), uvec3(1u)), _GLF_struct_20(true), _GLF_struct_24(_GLF_struct_21(mat2x3(1.0), bvec2(true)), _GLF_struct_22(mat4x2(1.0), vec3(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) ? 1.0 : _GLF_FUZZED(-4117.0615)))), true, mat4(1.0), ivec4(1)), bvec2(true), _GLF_struct_23(mat3x4(1.0), uvec4(1u), mat4x3(1.0), mat3(1.0), mat3x4(1.0), ivec4(1), uvec4(1u)), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_25.workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, (false) && true))), true && (bool(bvec4(false || (false), false, false, _GLF_IDENTITY(false, (false) && true))))))), false, true))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 815.514))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(380.974)), float(injectionSwitch.y), bool(true)))), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, true)))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / cos(sin(vec2(0.0, 0.0))))).y), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))), false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / cos(sin(vec2(0.0, 0.0))))).y), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))), false, true, true)))), bool(bvec2(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / cos(sin(vec2(0.0, 0.0))))).y), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))), false, true, true)))), false)))) && true)), bool(bvec4(! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))))), true, false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), false, true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true, false, true)))))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, ! (! (true))), true)), ! (_GLF_IDENTITY(! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(bvec4(! (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), false, true, true))), true, true, false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.2))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(5982.1636).x), _GLF_FUZZED(-0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))).y), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))))), true, false, false)))))))) || false))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(5.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x), float(_GLF_FUZZED(0.9)), bool(false))) > injectionSwitch.y), false, true, true)))), bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true)))), false, true, false))))), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(8494.2604)))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(17.29, 6.8))))) * vec2(1.0, 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.6) : 1.0))), _GLF_struct_1(uvec4(1u), ivec4(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), mat3(1.0), mat3(1.0)), _GLF_struct_replacement_41._f1.subgroup_id * _GLF_struct_replacement_11._f2._f4.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), true && (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(false, ! (! (false)))))))))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))), true, false)), ! (! (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), bool(bool(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))), true, false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_base, min(workgroup_base + _GLF_struct_replacement_3.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_struct_replacement_3.subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u, min((workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u, (workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u))), 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_base, min(workgroup_base + _GLF_struct_replacement_3.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_struct_replacement_3.subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u, min((workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u, (workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u))), 1u))))), (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_base, min(workgroup_base + _GLF_struct_replacement_3.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + _GLF_struct_replacement_3.subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u, min((workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u, (workgroup_base + _GLF_struct_replacement_3.subgroup_base) * 1u))), 1u)))))) | 0u)) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), workgroup_base + _GLF_struct_replacement_3.subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), int(_GLF_IDENTITY(int((~ (1))), (int((_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) - 0)) | (~ (1)))))) / 1))))) * 1)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f2._f4.subgroup_size, (_GLF_struct_replacement_11._f2._f4.subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_struct_replacement_11._f2._f4.subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_11._f2._f4.subgroup_size, (_GLF_struct_replacement_11._f2._f4.subgroup_size) << 0u))))) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_0.next_virtual_gid], _GLF_IDENTITY(uint(1), 0u ^ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 | (4)), 4)), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tan(1.9)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2593.2233)), bool(false)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5934.0562)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x), bool(true))) < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) || false)) || false)), (bool(bool(false))) && true))) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0), mix(vec4((vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(4.1), _GLF_FUZZED(3.2)), vec4(_GLF_FUZZED(-14.33), (vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))[1], (vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))[2], (vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))[3]), bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)), (true ? _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)), (true ? dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)) : _GLF_FUZZED(4237.6971))) : _GLF_FUZZED(-410.195))), mix(float(_GLF_FUZZED(-66.75)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0)), min(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)), mix(float(_GLF_FUZZED(-66.75)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0)), mix(float(_GLF_FUZZED(-66.75)), float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), sqrt(1.0), 0.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), bool(bvec3((! (! ((_GLF_DEAD(false))))), true, true)))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), bool(bvec3((! (! ((_GLF_DEAD(false))))), true, true))), ! (! (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), bool(bvec3((! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), true && ((! ((_GLF_DEAD(false))))))), true, true))))))) || false)))))), true && ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, false)))))), ! (! (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), bool(bvec3((! (! ((_GLF_DEAD(false))))), true, true)))) || false))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), bool(bvec3((! (! ((_GLF_DEAD(false))))), true, true)))) || false)))))), true && ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))))))))), false || ((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), bool(bool(bool(bool((_GLF_DEAD(false)))))))))))))))))))))), (_GLF_IDENTITY((! (! ((_GLF_DEAD(false))))), bool(bvec3((! (! ((_GLF_DEAD(false))))), true, true)))) || false)))))))))) && true)))), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! (! ((_GLF_DEAD(false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))), true && (false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))), bool(bvec4(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))), true, false, false)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))), bool(bvec4(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))), true, false, false)))))))))))))), true, true, true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), max(true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), (false ? _GLF_FUZZED(45.26) : true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4))))), true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), clamp(true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4), true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(4.4)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((false ? _GLF_FUZZED(181256u) : read), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(181256u) : _GLF_IDENTITY(read, max(read, read))), clamp((false ? _GLF_FUZZED(181256u) : read), (false ? _GLF_FUZZED(181256u) : read), (false ? _GLF_FUZZED(181256u) : read))), (false ? _GLF_FUZZED(181256u) : read), (false ? _GLF_FUZZED(181256u) : read)))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
}
