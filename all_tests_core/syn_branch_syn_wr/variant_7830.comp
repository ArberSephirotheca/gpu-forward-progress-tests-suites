#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u))))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, _GLF_IDENTITY(106524u, (106524u) | (106524u)), 8717u)))))) - uvec3(0u, 0u, 0u)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u))))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))))) - uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))), 0u)))), 1u))) | (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)), min(true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)), true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED(uvec3(151606u, 106524u, 8717u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_FUZZED(uvec3(151606u, 106524u, 8717u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))))))))) - uvec3(0u, 0u, 0u), ((uvec3(29169u, 95666u, 95447u) * uvec3(104006u, 167498u, 10333u)) & uvec3(0u, 0u, 0u)) + ((uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))))) - uvec3(0u, 0u, 0u)))))), 1u))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))) * uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))) ^ (1u)), 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), min(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) - 0u), 0u)), (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (uvec3(gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), min(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), max(_GLF_IDENTITY(uvec3(2u), uvec3(2u)), _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), _GLF_IDENTITY((1u), ((1u)) | 0u))))), ((_GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), _GLF_IDENTITY((1u), ((1u)) | 0u)))))) | ((_GLF_IDENTITY(1u, 1u * _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), ~ (~ ((1u)))), _GLF_IDENTITY((1u), ((1u)) | 0u))))))) | 0u), 1u, 1u) * (uvec3(2u)))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))))) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))), (false ? _GLF_FUZZED((uvec3(18164u, 112079u, 176995u) >> subgroup_local_id)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(151606u, 106524u, 8717u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))))), (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u))))))), 0u) + (gl_NumWorkGroups)))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))))).y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))), false, true, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))), false, true, true))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(49.43)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(49.43)), bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) || false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))
      return;
     return;
    }
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec2(63147u, 138897u) & uvec2(170999u, 79326u))) : uvec2(0u, 1u))))), 1u, 0u)), (uint(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))), 1u, 0u))) | (uint(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), 1u, 0u)))))], 4, 64, _GLF_IDENTITY(2, (2) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))), 1u, 0u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(packUnorm4x8(vec4(86.63, 89.11, 941.969, 4335.3514)))))) >> 0u)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))), 1u, 0u), (_GLF_IDENTITY(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))), 1u, 0u), (uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(uvec2(0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u))))), 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u))))))], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 1u), (true ? uvec2(0u, 1u) : _GLF_FUZZED(uvec2(43479u, 188902u)))), (_GLF_IDENTITY(uvec2(0u, 1u), min(uvec2(0u, 1u), uvec2(0u, 1u)))) << _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), 1u, 1u))) | (uvec2(0u, 0u)))))), 1u, 0u)))], 4, 64, 2)) | (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))), ((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u)))))))))) | 0u)) >> 0u), _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))), uint(uint(_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))), max((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))), (~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED((subgroup_size << subgroup_id)) : (~ (0u))))))))))))))))), uint(_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))), ~ (~ (_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))), min(uvec2(0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)))), uvec2(0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))))))))))), 1u, 0u)))], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(ivec3(-25460, -20452, -56206).t))), 64, 2)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) | 0u);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))), injectionSwitch)).x), bool(true))) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY(0u, (0u) << 0u))) - 0u)))], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) / (0 ^ 1)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((0 >> _GLF_IDENTITY(int(8), int(8))) ^ 0) ^ ((4))) / (0 ^ 1)), 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(_GLF_FUZZED(6365.5465), float(mat2x3(_GLF_FUZZED(6365.5465), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)))))))), vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), bvec2(false, true))).y)), 0), max(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (0 ^ 1), (false ? _GLF_FUZZED(-71801) : _GLF_IDENTITY((4) / (0 ^ 1), ((4) / (0 ^ 1)) / 1)))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) * 1))), 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0), min(ivec4(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (0))), (int(0)) ^ 0))) ^ 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(0 ^ 1, (true ? 0 ^ 1 : _GLF_FUZZED(52292))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> (1 ^ 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), max(ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> (1 ^ 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (0 ^ 1), _GLF_IDENTITY(0 | ((4) / (0 ^ 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0 | ((4) / (0 ^ 1)), int(ivec4(0 | ((4) / (0 ^ 1)), 1, 0, 0))) : _GLF_FUZZED(11610))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) - 0)) >> (1 ^ 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), (4) / (0 ^ 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), int(ivec3((1), (0 >> _GLF_IDENTITY(int(5), int(5))), 0))), (_GLF_IDENTITY((1), ~ (~ ((1))))) | 0) | 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (0 ^ 1), min((4) / (0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, 4, 4))))) / (0 ^ 1), max((4) / (0 ^ 1), (4) / (0 ^ 1)))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) ^ (1 ^ 1), (((1)) ^ (1 ^ 1)) * 1)), min(_GLF_IDENTITY(~ (1), (~ (1)) | 0), ~ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, (0) / 1))), ((~ (_GLF_IDENTITY(0, (0) / 1)))) / 1)), 0, 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(0, (0) | 0))))))), clamp(ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0), ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(~ (~ (ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (true ? ~ (~ (ivec4(_GLF_IDENTITY(4, (4) / (0 ^ 1)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) : _GLF_FUZZED(ivec4(74494, 85789, 46231, -44099))))))), min(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), int(4)))))) << 0)))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))))))), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) * (1 | _GLF_IDENTITY(0, ~ (~ (0))))), 4, 4)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) * (1 | 0)), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, (1 ^ (1 ^ 0)), 0, 1), (ivec4(4, (1 ^ (1 ^ 0)), 0, 1)) | ivec4(0, 0, 0, 0)))), 4), int(int(clamp(_GLF_IDENTITY(4, (4) * (1 | 0)), 4, 4))))), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) * (1 | 0)), 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) * (1 | 0)), 4, 4)))), 1, 1, 1))))), 4, 4))))))), 64, 4);
}
