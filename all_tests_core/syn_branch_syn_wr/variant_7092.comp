#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(false)))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, false, true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.3, -58.27)) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, true))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(586.503) : injectionSwitch.y))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + log(vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), (false) || _GLF_IDENTITY(false, (false) || false))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))))) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) >> 0u, clamp(((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) >> 0u, (((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) >> 0u) | (((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) >> 0u)), ((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u | (min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) ^ 0u) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (uint(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) >> 0u), uint(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), uint(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))), (uint(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, clamp((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)))) / 1u))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, min((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u)))), (uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)) : _GLF_FUZZED(subgroup_id))), min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ 0u))) ^ 0u))) * 1u)))), gl_WorkGroupSize.x));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))) && true)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-28.71), _GLF_FUZZED(90.19)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 1.0))))))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))), (uint(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, (1u | 0u)), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (uvec3(subgroup_id, 0u, (1u | 0u)))))) * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 1u * (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-4.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec4((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true, false, false)))) || false))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, true && ((false) || false))))))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size))) | 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), buf[virtual_gid])) : _GLF_FUZZED(mix(subgroup_size, workgroup_size, false)))), _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), max((0), _GLF_IDENTITY((0), ~ (~ ((0)))))) | (0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0)))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0)))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))), 0 ^ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))))))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0)))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))), 0 ^ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))))))), 1), clamp(ivec2(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0)))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))), 0 ^ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))))))), 1), ivec2(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0)))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))), 0 ^ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))))))), 1), ivec2(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0)))), ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))), 0 ^ (~ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0)))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))), 0 | (_GLF_IDENTITY(int(6), 1 * (_GLF_IDENTITY(int(6), int(ivec3(int(6), 0, 0))))))))) ^ 0)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(max(int(6), int(6)), max(max(int(6), int(6)), max(int(6), int(6)))), 0 | (max(int(6), int(6))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6)))))), ((_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))) + 0) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), 0 | _GLF_IDENTITY((max(int(6), int(6))), ((max(int(6), int(6)))) / 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), int(int(int(6)))), int(6))), _GLF_IDENTITY(max(int(6), int(6)), 0 | (max(int(6), int(6))))))))) ^ 0))))))))), 1)))) >> ivec2(0, 0))))); _injected_loop_counter ++)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))], read, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = (_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
