#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 mat3 _f0;
 float _f1;
 bvec3 _f2;
 bvec3 _f3;
 mat3x4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 uint read;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 ivec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_13 {
 uint _f0;
 uvec4 _f1;
 vec2 _f2;
 uvec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_12 {
 float _f0;
 bool _f1;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 int _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 uvec2 _f3;
 mat3x4 _f4;
 vec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 mat2x4 _f1;
 float _f2;
 _GLF_struct_7 _f3;
 ivec4 _f4;
 mat4x3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 ivec4 _f1;
 _GLF_struct_8 _f2;
 uvec3 _f3;
 ivec4 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat2 _f1;
 vec3 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 bvec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 vec4 _f1;
 _GLF_struct_3 _f2;
 mat2 _f3;
 mat2x4 _f4;
 float _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 ivec4 _f1;
 _GLF_struct_0 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_6 {
 uint subgroup_base;
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
 mat3x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w, _GLF_struct_1(ivec2(1), ivec4(1), _GLF_struct_0(mat4x3(1.0), ivec4(1)), vec2(1.0)), mat2x3(1.0), _GLF_struct_5(_GLF_struct_2(mat2(1.0), mat2(1.0), vec3(1.0), ivec4(1), mat4x3(1.0), bvec3(true), vec4(1.0)), vec4(1.0), _GLF_struct_3(mat4(1.0), mat2x4(1.0), mat2x4(1.0), vec3(1.0)), mat2(1.0), mat2x4(1.0), 1.0, _GLF_struct_4(mat2x3(1.0), ivec4(1))), mat3x4(1.0));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_6.subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_6.subgroup_base + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.w);
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x = next_virtual_gid;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(uvec4(1u), ivec4(1), _GLF_struct_8(ivec2(1), mat2x4(1.0), 1.0, _GLF_struct_7(mat4x3(1.0), mat2x3(1.0), bvec2(true), uvec2(1u), mat3x4(1.0), vec4(1.0), mat4x2(1.0)), ivec4(1), mat4x3(1.0), mat3(1.0)), uvec3(1u), ivec4(1), _GLF_struct_11(_GLF_struct_9(ivec2(1)), _GLF_struct_10(vec4(1.0))), _GLF_struct_17(ivec3(1), _GLF_struct_12(1.0, true), _GLF_struct_13(1u, uvec4(1u), vec2(1.0), uvec4(1u), uvec2(1u)), _GLF_struct_14(mat3(1.0), ivec4(1), ivec4(1)), _GLF_struct_15(ivec4(1), 0), 1, _GLF_struct_16(mat3(1.0), 1.0, bvec3(true), bvec3(true), mat3x4(1.0), vec4(1.0))));
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_13next_virtual_gidnum_workgroupsubgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     _GLF_struct_replacement_18._f6._f4.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
    }
  }
 else
  {
   _GLF_struct_replacement_18._f6._f4.read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
  }
 else
  {
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_18._f6._f4.read, 4, 64, 4);
  }
}
