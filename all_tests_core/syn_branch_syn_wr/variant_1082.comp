#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) && true)));
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-35012))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9360.7974)), vec2(_GLF_FUZZED(-944.986), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))) > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uvec4 GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base;
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(92138)))) ^ 0)) - 0), _GLF_IDENTITY(7, (7) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(92138)))) ^ 0)) - 0), _GLF_IDENTITY(7, (7) - 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(92138)))) ^ 0)) - 0), _GLF_IDENTITY(7, (7) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) - 0), clamp(_GLF_IDENTITY(7, (7) - 0), _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(92138)))) ^ 0)) - 0), _GLF_IDENTITY(7, (7) - 0))))))) - 0) - 0)))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) | 0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    break;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-89.27)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))), true, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uvec2 GLF_merged2_0_1_4_1_1_11readvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.xy = GLF_merged2_0_1_4_1_1_11readvirtual_gid;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy = GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.xy, (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(4u), uvec2(4u))) ^ (GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy = GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.xy));
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))) || false)))))))))
      barrier();
     GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.z = subgroup_id;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ! (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bool(! (! (true)))), (bool(bool(! (! (true))))) && true))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), (_GLF_IDENTITY(int(3), int(3))) + (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, int(ivec2(7, 0))))))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, false || (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))), false, true, true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))) || (false)) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)) && true, false || (_GLF_IDENTITY((false || (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false || (false)) && true, ! (! ((false || (false)) && true)))))))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))), false, true, true))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.4)), float(injectionSwitch.y), bool(true)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))))))), (bool(_GLF_IDENTITY(false, (false) || false))) || false)))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         continue;
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid) - uvec4(0u, 0u, 0u, 0u)).z;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
 for(int _injected_loop_counter = (0 | _GLF_IDENTITY((1 | 0), _GLF_IDENTITY(0 + ((1 | 0)), clamp(0 + ((1 | 0)), _GLF_IDENTITY(0 + ((1 | 0)), max(0 + ((1 | 0)), 0 + ((1 | 0)))), 0 + ((1 | 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false, false, true)))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false, false, true)))) && true)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 do
  {
   _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.y, (true ? GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.y : _GLF_FUZZED(subgroup_size)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), true && (! (_GLF_WRAPPED_LOOP(false)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))), true))))))));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), 1 * (_GLF_IDENTITY(min(int(1), int(1)), clamp(min(int(1), int(1)), min(int(1), int(1)), _GLF_IDENTITY(min(int(1), int(1)), int(ivec4(min(int(1), int(1)), int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 1), 0)))))))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), 1 * (_GLF_IDENTITY(min(_GLF_IDENTITY(int(1), (int(1)) / 1), int(1)), clamp(min(int(1), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), (int(1)) + 0)), (false ? _GLF_FUZZED(mix(84080, -9858, true)) : ~ (_GLF_IDENTITY(int(1), (int(1)) + 0))))))), min(int(1), int(1)), min(int(1), int(1))))))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(min(int(1), int(1)), 1 * (_GLF_IDENTITY(min(int(1), int(1)), clamp(min(int(1), int(1)), min(int(1), int(1)), min(int(1), int(1))))))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) - 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y = GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.z;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size.x = num_workgroup;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.x = GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))), false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size.z = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.9) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.9) : injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.9) : injectionSwitch.x)) > injectionSwitch.y) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z = workgroup_id;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6896.2762)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.54))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-817.392) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.y) / 1.0)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.54))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-817.392) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.y) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(50.54))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-817.392) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.y) / 1.0))))) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            {
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, log(1.0), 0.0, 0.0, 1.0), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, log(1.0), 0.0, 0.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7705.4830)), bool(false))))), 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
            }
           for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (int(8)))))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), clamp((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / 1)), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             break;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z)), 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z, _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size, (GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)).z * GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.z)), 1u, 1u))))), 1u)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.w = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))))) || false))) && true) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
      break;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size.y = GLF_merged3_0_2_39_2_1_17_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idworkgroup_base.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(-5230.6799)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z = GLF_merged3_0_1_13_1_1_14_2_1_14num_workgroupworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, max(_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, min(_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, (GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w) / 1u), _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, 0u + (GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w))) ^ 0u))), GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w));
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.x = subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.x, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.x, 0u | (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.xyz.y;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz, (true ? GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_id))).z, _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz, ~ (~ (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz)))) << uvec3(0u, 0u, 0u))), min(~ _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz), ((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz)) << uvec3(0u, 0u, 0u)), ~ (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz))))).z, (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid, uvec4(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid[0], _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid[1], 0u + (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid[1])), GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid[2], GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid[3])).xyz.z) / 1u))) + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y;
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w), 0u | ((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w), 0u | ((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w), 0u | ((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, max(_GLF_IDENTITY(8u, max(8u, 8u)), 8u))), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))))), 0u ^ (_GLF_IDENTITY((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w), 0u | (_GLF_IDENTITY((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w), ((GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_11subgroup_basesubgroup_local_idsubgroup_sizevirtual_gid.w)) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))) - (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))) ^ 0u)) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, clamp(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, _GLF_IDENTITY(min(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x), min(min(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x), _GLF_IDENTITY(min(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x), uint(uvec4(min(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x), 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))), GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x)), _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, clamp(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x))), _GLF_IDENTITY(((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x)) << 0u, 0u | (((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x)) << _GLF_IDENTITY(0u, min(0u, 0u)))))) >> 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z) >> (0u | 0u)) + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, max(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x) ^ 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz, _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz) | (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz), min((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz) | (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz), (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz) | (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz)))).z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x))), (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x) + 0u)) >> 0u), ~ _GLF_IDENTITY((~ (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x)), ((~ (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.z + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.x))) * 1u)))) + ((_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y, _GLF_IDENTITY((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y), ((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y)) - 0u) | _GLF_IDENTITY(0u, (0u) / 1u)) + _GLF_IDENTITY(1, 0 ^ (1))) % _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, uint(_GLF_IDENTITY(uvec2(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, 1u), (uvec2(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.w, 1u)) / uvec2(1u, 1u)))));
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u);
 do
  {
   if(_GLF_DEAD(false))
    continue;
   GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.w = GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.w;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x = read, (GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x = read) - 0u);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 0.0, 1.0, 0.0))), vec4(1.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(645.750)))), cos(0.0), 1.0), (mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(645.750)))), cos(0.0), 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     atomicStore(buf[GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_13_2_1_12num_workgroupsubgroup_baseworkgroup_idnext_virtual_gid.w], uint(1), 4, 64, 4);
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y) - 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y) - 0u), min(_GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y) - 0u), _GLF_IDENTITY(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y, (GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_13_1_1_17_2_1_14subgroup_basesubgroup_local_idworkgroup_basenext_virtual_gid.xyz.y) - 0u))) : _GLF_FUZZED(workgroup_base))) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2132.0780), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-41584))), bvec2(true, false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false)))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false))))), false), false, _GLF_IDENTITY(false, true && (false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), false, false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))) && true)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))))[1]), vec2(_GLF_FUZZED((5656.3793 - -37.93)), _GLF_FUZZED(vec3(-3.4, -5.8, -32.72).t)), bvec2(false, false)))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x = atomicLoad(buf[GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y], 4, 64, 2);
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(77.96)), bool(false))), injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x = atomicLoad(buf[GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.y], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) << 0), int(8))), int(ivec3((2) << (0 << _GLF_IDENTITY(int(8), int(8))), (0 << _GLF_IDENTITY(int(4), int(4))), 1)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, true, true)))) || false))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false))) || false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size), (~ (GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size)) << uvec4(0u, 0u, 0u, 0u)))).xy.y], _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x, 0u | (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x, uint(_GLF_IDENTITY(uvec3(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x, 1u, 0u), (uvec3(GLF_merged3_0_2_39_2_1_11_3_1_13GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_idsubgroup_size.xy.x, 1u, 0u)) << uvec3(0u, 0u, 0u)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = (1 ^ ((1 ^ 1) ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
