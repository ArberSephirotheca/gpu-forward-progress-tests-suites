#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 do
  {
   switch(_GLF_SWITCH((-95411 & 0)))
    {
     case 50:
     vec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[24], _GLF_SWITCH_5_2v;
     case 9:
     bvec2(true, false);
     case 0:
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 16:
       if(_GLF_DEAD(false))
        barrier();
       for(mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v; false; mat2x4(0.9, 4979.5128, -7100.9855, 7.1, -2.2, -2.7, -85.64, -6.5))
        {
        }
       case 0:
       case 84:
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       case 29:
       if(_GLF_DEAD(false))
        barrier();
       case 32:
       case 68:
       if(_GLF_DEAD(false))
        barrier();
       case 13:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       case 41:
       case 46:
       case 4:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 73:
                   mat3x2(-61.54, -109.161, 2.8, -5512.9151, 6.8, -399.441);
                   case 12:
                   uvec4 _GLF_SWITCH_7_0v;
                   case 0:
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))
                      {
                       case 79:
                       vec2 _GLF_SWITCH_7_0v[74];
                       case 35:
                       ;
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       break;
                       case 51:
                       (1.0 >= 188.514);
                       default:
                       1;
                      }
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((- 95958) & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   break;
                   case 75:
                   bool _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                   case 33:
                   bvec2 _GLF_SWITCH_7_3v, _GLF_SWITCH_7_4v[50];
                   default:
                   1;
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH((0 | (0 << _GLF_IDENTITY(int(6), int(6))))))
            {
             case 20:
             vec2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[24];
             case 42:
             393.685;
             case 0:
             case 82:
             case 12:
             case 85:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
                barrier();
              }
             else
              {
              }
             case 74:
             case 77:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 39:
             barrier();
             break;
             case 70:
             ivec4(-32845, 67112, 34486, 30829);
             case 49:
             do
              {
               ;
              }
             while(_GLF_WRAPPED_LOOP(false));
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       break;
       case 86:
       if(((- mat2(-9.4, -7.6, 79.56, 158.960)) == mat2(-3.4, 2.3, 356.257, 76.61)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           switch(_GLF_SWITCH((-39553 & 0)))
            {
             case 98:
             float _GLF_SWITCH_7_0v[76];
             case 0:
             case 78:
             case 34:
             case 46:
             case 5:
             if(_GLF_DEAD(false))
              barrier();
             case 17:
             case 53:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             switch(_GLF_SWITCH(0))
              {
               case 14:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               bvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[43], _GLF_SWITCH_5_2v;
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               case 65:
               case 38:
               case 34:
               case 16:
               case 91:
               case 77:
               case 11:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               case 82:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 mat2x4(7.9, -5.6, -7.9, -26.47, 5981.3577, 753.207, -5550.4005, 5946.6229);
                }
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
             break;
             default:
             1;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 39:
             ivec4 _GLF_SWITCH_8_0v;
             case 0:
             case 11:
             case 61:
             case 44:
             case 43:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) ^ 0))) ^ 1)))
                {
                 case 88:
                 for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((0 << _GLF_IDENTITY(int(4), int(4)))) * 1)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     for(                     mat3(-770.784, -6551.5328, -39.09, -1.3, 86.82, -32.78, -88.66, 887.210, 663.570);
 ((78319) < 98819); clamp(subgroup_id, subgroup_id, 153680u))
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 96:
                         mat4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         uvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                         case 59:
                         case 30:
                         do
                          {
                           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         case 82:
                         mat2x3(-2.7, 8.5, 8.1, -3300.7778, -861.644, 5.3);
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         mat2x4(6627.6950, -166.050, -1513.3802, -86.83, -88.90, 14.69, 0.1, 1.2);
                         case 61:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                            {
                             case 56:
                             ;
                             case 87:
                             if(_GLF_DEAD(false))
                              barrier();
                             mix(bvec3(false, true, false), bvec3(false, false, true), bvec3(false, true, true));
                             case 0:
                             case 85:
                             case 4:
                             case 63:
                             injectionSwitch;
                             break;
                             case 37:
                             int _GLF_SWITCH_7_0v;
                             default:
                             1;
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 91:
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 64:
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 subgroup_id;
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 79:
                               mat3x2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[34];
                               case 0:
                               if(_GLF_DEAD(false))
                                barrier();
                               case 37:
                               case 14:
                               case 26:
                               case 61:
                               case 36:
                               if(_GLF_DEAD(false))
                                barrier();
                               break;
                               case 66:
                               uvec3(_GLF_SWITCH_4_0v.x);
                               default:
                               do
                                {
                                 1;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         bool _GLF_SWITCH_4_2v;
                         break;
                         default:
                         1;
                        }
                      }
                    }
                  }
                 case 0:
                 case 7:
                 case 46:
                 uvec4 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v[65], _GLF_SWITCH_3_4v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 case 91:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 mat3 _GLF_SWITCH_3_5v;
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 57:
                 if((bvec4(false, true, false, false) != bvec4(true, false, true, false)))
                  {
                   int(-3.3);
                   vec2 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                   false;
                   uvec3 _GLF_SWITCH_4_5v;
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   _GLF_SWITCH_3_4v;
                   lessThan((ivec4(10451, -36481, -93595, -1151) / 35650), ivec4(-89437, 19432, 42096, 17930));
                  }
                 default:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   1;
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                          {
                           case 0:
                           case 44:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 74:
                           case 19:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           break;
                           default:
                           1;
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             break;
             case 84:
             floatBitsToUint(vec4(3198.3821, -502.170, -6.8, 2.1));
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     break;
     case 84:
     while(false)
      {
       vec3(-6.7, -426.318, 2398.0246).y;
       if(false)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         matrixCompMult(mat4(vec4(3.4, -60.84, -26.56, 270.391), vec4(2959.3889, 2188.6016, 6.8, -5.6), vec4(-860.037, -257.611, -3103.7735, 4467.4481), vec4(-1142.1087, -792.620, 9606.4079, -9.2)), mat4(mat2x4(-7.9, 9.8, -4.0, 6738.3763, 3129.0492, -2.1, -34.95, -4.1)));
         while((mat3x2(-72.75, -2.1, -3.7, 6.5, 556.572, 5.0) == mat3x2(-6.4, -4860.5897, 672.639, 3751.7567, 100.974, 9.3)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat3(mat2(5561.2622, 1142.2320, 4458.3507, -0.2));
           do
            {
             uvec2(174197u, 115683u);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           while((-85014 != 91739))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat3x4 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v[47];
             ;
             do
              {
               do
                {
                 mat4x2(-5996.6812, 6140.2480, 702.103, 8966.6514, 79.68, 78.76, 6.1, 3.7);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         mat2x4 _GLF_SWITCH_5_5v[66];
         while((-9888 == 85921))
          {
           do
            {
             bool(subgroup_id);
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat3(-5.6, -7.5, 341.009, sqrt((8.4 + -4594.1823)), -338.580, 855.911, 5320.5372, 0.3, determinant(mat4(-31.35, 85.12, -583.552, -53.07, 656.225, 388.347, 31.53, -2.9, -0.0, -5.4, -358.144, 792.753, -507.184, -54.38, -6.7, 8.9)));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             mat4x2(91.92, 4.7, -145.042, -28.52, -5.3, -1258.2553, -7.1, -7.4);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         do
          {
           if(true)
            {
             acos(66.21);
             mix(bvec3(false, true, false), lessThan(vec3(-837.518, -7.8, 8268.8396), vec3(-826.215, -3965.8364, 7580.4951)), bvec3(true, true, true)).b;
             (ivec2(30982, 16795) | ivec2(-40064, -77873));
             outerProduct(vec3(8254.6951, 8.9, 57.92), (-80.44 / vec3(-1.0, 2.4, 3433.3849)));
            }
           else
            {
             ;
             mat4x3 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         bvec2(false, true);
         ivec3 _GLF_SWITCH_5_8v[66], _GLF_SWITCH_5_9v;
         if(_GLF_DEAD(false))
          barrier();
         mat4x2 _GLF_SWITCH_5_10v, _GLF_SWITCH_5_11v;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         uvec3(121713u, 109574u, 62495u);
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       ivec4 _GLF_SWITCH_5_12v, _GLF_SWITCH_5_13v[78];
       uvec2(7360u, 94952u);
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
        {
         for(uvec2 _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v; ((mat4x2(6631.7665, -7130.4498, -775.540, -7.4, 2.6, 66.82, 601.345, 4.4) * mat3x4(6021.9911, 732.547, -9.5, 0.1, 5.7, -20.85, -1094.9560, -5.9, 75.40, 9.5, -7272.9462, -373.160)) != mat3x2(-7.2, -92.12, 8.3, 5.6, 300.680, 224.975)); true)
          {
           while(false)
            {
             uint _GLF_SWITCH_5_16v;
             ivec2 _GLF_SWITCH_5_17v, _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v;
             notEqual(bvec2(true, false), bvec2(true, false));
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             do
              {
               mat3(94.34, -5141.7362, 2.3, 9.8, 1.6, -3.8, -2.1, -403.355, -1.3);
              }
             while(_GLF_WRAPPED_LOOP(false));
             ivec2 _GLF_SWITCH_5_20v;
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (- mat3x4(1840.3452, -1.2, -8520.4860, -6.2, -88.52, -4.4, -15.68, 341.305, 9.3, -1579.8406, 3.3, -4.9));
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           for(           lessThanEqual(ivec2(-49893, 57661), ivec2(-38326, 27484));
 true; _GLF_SWITCH_5_14v)
            {
             ((ivec3(81141, -13437, 2134) / ivec3(-68126, -33648, 69968)) + -3393);
             mat2x4 _GLF_SWITCH_5_21v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             ivec2(70147, -86284);
             mat2 _GLF_SWITCH_5_22v, _GLF_SWITCH_5_23v;
             mat4x2(9.5, 6733.5808, -9.0, 729.369, 17.96, -8.5, -8.4, -39.87);
            }
          }
        }
       while(true)
        {
         (-2.2 - mat3(8833.8553, -911.802, -199.076, -8.2, -0.8, 6.2, 8.2, -9138.6125, 7625.5838));
         for(mat4x2 _GLF_SWITCH_5_24v, _GLF_SWITCH_5_25v, _GLF_SWITCH_5_26v[80]; false; 135447u)
          {
           567.931;
           mat2x3(3.4, -6504.4912, -459.271, 305.898, 7174.4632, 8872.0949);
           if(_GLF_DEAD(false))
            barrier();
           -34710;
           float _GLF_SWITCH_5_27v, _GLF_SWITCH_5_28v[7], _GLF_SWITCH_5_29v;
           do
            {
             mat4x3(mat4x2(8.9, 247.580, 1.8, 924.325, 40.79, -7.6, 3.3, 57.67));
            }
           while(_GLF_WRAPPED_LOOP(false));
           ivec4 _GLF_SWITCH_5_30v, _GLF_SWITCH_5_31v[33];
           ((195793u + uvec2(60421u, 58578u)) | uvec2(19830u, 183615u).tt);
          }
        }
       do
        {
         ivec3(-11789, -24305, -40756);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     default:
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     switch(_GLF_SWITCH(0))
      {
       case 6:
       if(_GLF_DEAD(false))
        barrier();
       {
        (ivec3(80616, -54410, 31820) & max(ivec3(-11267, -79791, -83834), ivec3(-96397, 96828, 77549)));
        if(_GLF_DEAD(false))
         {
          do
           {
            barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
         }
        {
         ivec4 _GLF_SWITCH_7_0v[30], _GLF_SWITCH_7_1v[53], _GLF_SWITCH_7_2v[54];
         bitfieldExtract((uvec2(168893u, 194543u) << uvec2(88439u, 154039u)), 64240, (uvec2(144436u, 32114u) , -71505));
         uint _GLF_SWITCH_7_3v[59], _GLF_SWITCH_7_4v[6], _GLF_SWITCH_7_5v[95];
         ;
         mat3x4 _GLF_SWITCH_7_6v[59], _GLF_SWITCH_7_7v;
         mat3x2(4.6, 32.65, -1.4, -664.826, -763.879, 2.6);
         uint _GLF_SWITCH_7_8v, _GLF_SWITCH_7_9v[89];
        }
        if(_GLF_DEAD(false))
         barrier();
        if(true)
         {
          if(_GLF_DEAD(false))
           barrier();
          vec4(-778.983, 3304.0626, -886.339, 8754.1149);
          ivec4(77473, -93950, 99170, 87695);
          mat2x4(-238.940, -6.0, 772.843, 0.0, 5377.6389, -1.7, 1.0, -84.16);
          uvec3 _GLF_SWITCH_7_10v, _GLF_SWITCH_7_11v;
          mat4x2 _GLF_SWITCH_7_12v, _GLF_SWITCH_7_13v;
          (mat2x4(3056.7070, -9.7, 0.1, 0.3, 7811.3608, 7.3, -2789.3981, -34.27) == mat2x4(-4422.5987, 251.235, -16.09, 840.050, 5.6, -39.52, -7.5, -8.5));
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            mod(57.16, -3.2);
           }
          mat4x2(5423.4388, 34.07, -4.5, -9.0, 128.701, -761.808, 69.34, 13.50);
         }
        else
         {
          vec4(8891.0570, -8.2, 739.401, -2.0);
          transpose((-2.5 - mat4x2(94.77, -7.9, -40.01, -239.930, -0.1, 7.2, 72.27, -4.4)));
          bitfieldReverse(atomicAnd(workgroup_id, subgroup_id));
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            vec4(8325.3507, 90.69, 1.8, 0.8);
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
          bvec3 _GLF_SWITCH_7_14v[51], _GLF_SWITCH_7_15v, _GLF_SWITCH_7_16v;
          mat2x4 _GLF_SWITCH_7_17v;
          uvec4 _GLF_SWITCH_7_18v, _GLF_SWITCH_7_19v;
          vec4 _GLF_SWITCH_7_20v[42], _GLF_SWITCH_7_21v[91];
         }
        mat3x2 _GLF_SWITCH_7_22v[69];
        mat4(acos((-8.6 * -540.340)));
       }
       case 0:
       case 66:
       case 45:
       case 23:
       case 2:
       case 27:
       case 51:
       case 30:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       case 40:
       9.1;
       case 31:
       if(all(bvec4(true, false, true, true)))
        {
         if(false)
          {
           (mat4x3(-4.8, -6.1, 2599.1784, 3.4, -6.3, 2.2, 5.7, 4221.0757, -1.8, 6.2, -26.25, -4.9) / mat4x3(669.962, -3.6, -459.705, 2.5, 601.580, -215.534, 395.644, -7.0, 909.716, -52.25, -921.583, -12.38));
           ivec3(-13108, -93350, -94831);
           bvec2 _GLF_SWITCH_7_23v, _GLF_SWITCH_7_24v, _GLF_SWITCH_7_25v[97];
           ivec3 _GLF_SWITCH_7_26v, _GLF_SWITCH_7_27v, _GLF_SWITCH_7_28v[18];
           ;
           mat2 _GLF_SWITCH_7_29v[46], _GLF_SWITCH_7_30v, _GLF_SWITCH_7_31v;
           mat3x4(-363.786, -754.646, 183.829, 9.3, 6.7, -646.378, 5622.7138, -8.9, 4.0, 736.905, -2105.4032, 922.068);
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             mat4(6.3, 71.12, -8.8, -2.3, 0.3, -1.2, 4970.6741, 7421.9649, -8464.6326, -636.861, -61.45, -9.3, -990.141, 8625.1676, 8585.7128, 54.49);
            }
           (vec4(155.837, 5810.9523, 22.27, 1073.0626) == exp(vec4(-550.298, 12.78, -90.23, 6309.9970)));
           if(_GLF_DEAD(false))
            barrier();
           mat2x4 _GLF_SWITCH_7_32v, _GLF_SWITCH_7_33v, _GLF_SWITCH_7_34v[28];
           ;
           mat4x2(-1.3, 9275.8774, 67.26, 618.443, 8.7, 385.993, -976.404, -9.5);
           mat4(51.28, 888.643, 5.9, -5.4, 4104.8269, 2.0, -5.2, -548.473, 3096.1797, 2.9, -6694.2692, 6999.5342, 668.805, -4.9, 1.1, -205.150);
           do
            {
             -348.468;
            }
           while(_GLF_WRAPPED_LOOP(false));
           mat2(mat4x2(-6.4, -129.923, 331.825, 9.2, -2.7, -29.56, -6.6, 7.6));
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             (+ _injected_loop_counter);
            }
          }
         do
          {
           bvec4 _GLF_SWITCH_7_35v, _GLF_SWITCH_7_36v;
           uvec2(142076u, 111627u);
           lessThan(ivec2(11463, -63102), ivec2(-28533, -91397));
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(ivec2 _GLF_SWITCH_7_37v, _GLF_SWITCH_7_38v, _GLF_SWITCH_7_39v; any(bvec4(true, true, false, false)); bvec3(true, false, true))
          {
           mat4x2(2200.5192, -6.0, -78.80, 6.6, 195.642, -45.80, -218.840, 4.8);
           ;
           vec4 _GLF_SWITCH_7_40v[98], _GLF_SWITCH_7_41v;
          }
         ;
        }
       else
        {
         mat4x2(546.895, 8.0, 5.2, 64.84, 8943.6556, 7526.1533, 37.77, -7.2);
         for(mat2x3 _GLF_SWITCH_7_42v, _GLF_SWITCH_7_43v[49]; true; mat4x2(mat2(0.9, -2048.7343, -2.4, -8.8)))
          {
           sqrt(vec3(-62.48, 832.469, -602.342));
           ;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ;
            }
           else
            {
            }
           mat2 _GLF_SWITCH_7_44v;
           uvec3(8090u, 28107u, 108186u);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         {
          equal(uvec4(179661u, 1085u, 26166u, 56969u), uvec4(max(workgroup_size, subgroup_id)));
          mat3x4 _GLF_SWITCH_7_45v;
          mat3 _GLF_SWITCH_7_46v[65], _GLF_SWITCH_7_47v;
          uint _GLF_SWITCH_7_48v[93];
          bvec2 _GLF_SWITCH_7_49v, _GLF_SWITCH_7_50v[35], _GLF_SWITCH_7_51v;
         }
         mat4 _GLF_SWITCH_7_52v, _GLF_SWITCH_7_53v;
         ;
         for(         mat2x4(-1700.6895, -44.36, -8109.4263, -1704.0639, 9.4, 810.710, -4.7, 91.36);
 true; bvec3(false, true, true)[1])
          {
           ivec2 _GLF_SWITCH_7_54v, _GLF_SWITCH_7_55v, _GLF_SWITCH_7_56v[38];
           mat4x2(mat2(3.8, -94.93, 313.029, 53.11));
           (subgroup_base + uvec4(150805u, 20381u, 3765u, 164219u));
           mat2x3 _GLF_SWITCH_7_57v, _GLF_SWITCH_7_58v;
           vec2 _GLF_SWITCH_7_59v;
           (_GLF_SWITCH_7_52v - 924.471);
          }
         if(true)
          {
           -8.7;
           ivec2 _GLF_SWITCH_7_60v, _GLF_SWITCH_7_61v[51], _GLF_SWITCH_7_62v;
           if(_GLF_DEAD(false))
            barrier();
           mat3x4((-2841.0818 , mat3(-9.1, 5.5, 7066.5085, 8226.9478, 30.45, 8.9, 5.7, -8913.0464, 93.16)));
           (ivec4(83488, -45515, 65817, 54644) / ivec4(10548, -25585, 80067, 12524));
           bool(subgroup_base);
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           ;
           mat4 _GLF_SWITCH_7_63v[78], _GLF_SWITCH_7_64v, _GLF_SWITCH_7_65v;
           uvec2(99599u, 67970u);
           ivec3 _GLF_SWITCH_7_66v, _GLF_SWITCH_7_67v, _GLF_SWITCH_7_68v;
          }
         else
          {
           _GLF_SWITCH_7_52v;
           mat3x4(-639.659, -1.1, -67.55, 5.7, -7210.9714, -9.7, -628.530, 411.754, 2353.8028, -387.872, 46.75, 6.6);
           vec4 _GLF_SWITCH_7_69v, _GLF_SWITCH_7_70v[84];
           outerProduct(vec3(-873.271, -867.242, -0.9), vec4(-0.8, 16.31, 9.5, -1.0));
           ivec3(-59383, -74151, -14565);
           do
            {
             mat3x2(3.1, 82.65, -6.9, -77.53, -7553.4756, -349.375);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint read = 0;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(0))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 73:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       case 5:
       case 12:
       case 29:
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       case 41:
       case 16:
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       case 84:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       case 59:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 98:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       bvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       default:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH(0))
          {
           case 23:
           vec3 _GLF_SWITCH_7_0v;
           case 29:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           uint _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
           case 0:
           case 35:
           case 42:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           case 66:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               1;
              }
            }
           break;
           case 4:
           (injectionSwitch);
           case 67:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             ;
            }
           default:
           1;
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(0))
      {
       case 0:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 47:
       if(_GLF_DEAD(false))
        barrier();
       case 17:
       case 24:
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 87:
       case 94:
       case 73:
       case 2:
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
       if(_GLF_DEAD(false))
        barrier();
       break;
       case 41:
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(false)
        {
         switch(_GLF_SWITCH((0 & -93863)))
          {
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 12:
           case 84:
           case 86:
           case 1:
           case 58:
           case 14:
           case 51:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           break;
           case 55:
           if((-87978 < floatBitsToInt(3.8)))
            {
            }
           default:
           1;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       else
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 45:
           mat3x2(-2.4, -0.2, 9438.2870, 9.1, 821.636, 11.96);
           case 93:
           ivec3((1397 - 6660));
           case 0:
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             switch(_GLF_SWITCH(0))
              {
               case 11:
               ivec2 _GLF_SWITCH_6_0v[83], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
               case 0:
               case 6:
               case 28:
               case 92:
               case 41:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 67:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 34:
               case 65:
               case 17:
               do
                {
                 false;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               case 14:
               bvec4 _GLF_SWITCH_6_3v[14], _GLF_SWITCH_6_4v[42], _GLF_SWITCH_6_5v;
               default:
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 1;
                }
              }
            }
           case 87:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           case 66:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             ;
            }
           ivec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
           uint _GLF_SWITCH_1_3v[82];
           if(_GLF_DEAD(false))
            barrier();
           ivec2(91584, 61662);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           float _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
            }
           else
            {
             false;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             switch(_GLF_SWITCH(0))
              {
               case 49:
               ivec3(-48595, 59640, -39594);
               case 96:
               do
                {
                 _injected_loop_counter;
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 0:
               case 91:
               case 60:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               matrixCompMult(mat2(12.08, -9.8, -1.8, -566.059), mat2(-50.45, 0.5, 2702.8679, 0.6));
               break;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 22:
           uvec3 _GLF_SWITCH_1_6v[80];
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           break;
           default:
           1;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       case 40:
       if(_GLF_DEAD(false))
        barrier();
       mat3x4(4234.9007, -342.323, -8.4, 581.120, -4075.1465, 0.1, 8.0, -1850.1618, 39.80, -82.18, 21.98, 8.9);
       default:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         1;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       else
        {
        }
      }
    }
  }
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 62:
     if(_GLF_DEAD(false))
      barrier();
     for(mat2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v; isnan(800.730); mat3(-66.67, 16.14, 0.9, 2.6, 8.7, -3610.2617, 3.3, -5814.2634, 0.0))
      {
      }
     case 0:
     case 41:
     case 95:
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))
            {
             switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(3), int(3))) | 0)))
              {
               case 15:
               ;
               if(_GLF_DEAD(false))
                barrier();
               case 99:
               (((true ? mat3x4(1.5, 1.4, -7.6, -487.555, 1083.3827, -6.8, 811.422, 5.1, 4.6, -3.7, 16.51, 0.5) : mat3x4(-823.338, 55.03, 6.7, 1.8, 0.6, -2716.5197, 4.3, 69.39, 3768.8980, -2.5, 1.3, 7314.8368)) * mat4x3(8.6, 8721.4147, 398.083, -337.538, -7.3, 7140.3111, 5923.2320, -99.34, 7864.6979, 2.9, 7.2, -4708.5611)) * mat4(217.420, 94.60, -52.79, -8.7, 8118.0214, 0.4, -1.1, -1.0, 4.3, 98.37, -810.817, 6.2, -6.9, -883.512, -331.471, -6684.1994));
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               case 1:
               case 96:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 94:
               case 66:
               case 46:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               break;
               case 12:
               mat3x2(vec2(6.1, 5.8), mat3x2(mat4(-5.9, -830.983, -9.6, -444.098, 324.166, -4.9, -4.7, -68.13, 323.480, 69.63, 7.2, -119.896, 514.702, -40.39, -5748.3215, 8.7))[1], vec2(-5618.9570, -6.1));
               case 82:
               mat4(vec4(7415.9254, -99.42, -9079.3756, -4623.4741), vec4(-2.9, -6.4, 3.8, -129.830), vec4(5.1, 477.392, 55.04, -3.1), vec4(-9.3, -2960.8624, 87.82, -8.8));
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     case 21:
     case 98:
     case 90:
     case 49:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     case 37:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     case 2:
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(0))
      {
       case 50:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
        }
       bvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
       case 18:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         while((num_workgroup < subgroup_base))
          {
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) << (0 | 0))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       subgroupBarrier();
       do
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 ^ 0))); _injected_loop_counter --)
            {
             switch(_GLF_SWITCH(0))
              {
               case 67:
               do
                {
                 ivec4(49474, -52441, -77362, -73737);
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
               case 85:
               case 40:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               case 50:
               case 82:
               case 54:
               case 51:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 17:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               case 73:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               case 23:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               break;
               default:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 41:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         do
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             (bitfieldInsert(ivec2(-25139, -7902), ivec2(16587, 31668), _injected_loop_counter, _injected_loop_counter) & ivec2(93497, 78947));
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                       case 93:
                       uint _GLF_SWITCH_6_0v;
                       case 0:
                       case 2:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                       case 84:
                       case 44:
                       case 37:
                       case 56:
                       case 14:
                       case 79:
                       case 63:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       1;
                       break;
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       break;
       default:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         1;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     break;
     default:
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) << 0)))
        {
         case 36:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                       else
                        {
                        }
                       barrier();
                      }
                    }
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         bvec2(false, true);
         case 44:
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(84608)))))); _injected_loop_counter --)
          {
           if((uvec2(80469u, 137145u) == uvec2(141758u, 180813u)))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               (mat2x3(0.7, -9.2, -6.8, -6.2, -17.00, 699.898) - mat2x3(5.4, -318.174, -6495.9230, 6.3, -5.1, 3.9));
              }
             else
              {
              }
             int _GLF_SWITCH_5_0v[3], _GLF_SWITCH_5_1v;
             bvec4(true, false, false, true);
             bvec3 _GLF_SWITCH_5_2v;
             mat4x3(-16.87, -2734.0134, -8033.6797, -99.53, 34.09, 577.043, -629.208, -1543.2245, -5.8, 7.3, -3063.9071, 36.92);
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 26:
                 mat4(232.361, 8.4, -4134.8760, -32.59, -3.9, 5639.6317, 35.84, -1.0, 3.9, 5361.7872, -6.8, -0.9, -1.6, -927.201, -5051.2748, -30.08);
                 case 0:
                 case 97:
                 case 94:
                 case 49:
                 case 86:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 case 59:
                 case 85:
                 mat2x4(-9.5, 9.4, -5.5, 1513.6114, 200.031, -5.4, 9.3, 34.41);
                 break;
                 case 38:
                 vec2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[26];
                 case 60:
                 mat4(77.25, 3.1, -0.2, -738.903, -16.79, 9964.7097, -998.970, 14.45, -8649.6116, 7697.1423, 797.246, -334.987, 9357.2402, 3637.3753, -808.492, -375.922);
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                {
                 mat4x2(-9.0, 0.7, -6049.1346, 4.1, 9.3, 13.85, -377.093, -2.0);
                }
              }
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               849.690;
              }
            }
           else
            {
             mat3x4 _GLF_SWITCH_5_3v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               mat4(mat3(-2.6, 27.87, 6.1, -8105.8250, 21.23, -78.99, -1.4, 1.9, 37.97));
              }
             ivec3 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
             ivec3 _GLF_SWITCH_5_7v[2], _GLF_SWITCH_5_8v;
            }
          }
         case 0:
         case 70:
         case 60:
         case 50:
         if(_GLF_DEAD(false))
          barrier();
         case 87:
         if(_GLF_DEAD(false))
          barrier();
         1;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         case 32:
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           mat4x3(627.163, -96.35, -6225.0460, 3.7, -9747.5170, 2.6, -391.270, 74.01, -20.34, 76.96, -0.8, -7097.9372);
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           ;
           uvec4(135598u, 57579u, 143366u, 83000u);
          }
         case 85:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         uvec3(6334u, 115270u, 86051u);
         default:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 18:
           while((mat4x3(-8428.3409, 645.110, -6239.9199, -3.6, 7.8, -5.0, 7556.8213, 1348.4512, -2.1, 453.369, -35.23, 3726.6679) != mat4x3(-2887.9782, 86.92, 2.7, -4.9, -6997.8460, -77.34, 5660.0659, -51.09, -69.33, -4.2, 0.9, 33.59)))
            {
             for(             mat3x4(4757.6798, 1873.7159, -1238.1619, -7.8, -0.6, 5.6, 2.7, 368.146, 9.2, 359.676, -5224.0965, -46.76);
 bvec4(false, true, true, true).b; (ivec3(-55547, 17355, 85660) % clamp(82983, 80584, 38566))[1])
              {
               mat2x4(mat3x2(8684.2095, -2881.8979, -7045.0339, -931.145, -0.5, 5.8));
               bool _GLF_SWITCH_6_0v[63];
               mat4x2 _GLF_SWITCH_6_1v;
               ivec3 _GLF_SWITCH_6_2v;
               mat4x3 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[21];
               vec2 _GLF_SWITCH_6_5v, _GLF_SWITCH_6_6v;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat2(-904.833, -94.07, 3.1, 9.1);
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   mat2x4(mat3(1.9, -5789.5691, 8.6, -0.0, -5444.5298, 10.95, 488.897, -295.285, -0.5));
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               uint _GLF_SWITCH_6_7v, _GLF_SWITCH_6_8v, _GLF_SWITCH_6_9v[31];
              }
             if(_GLF_DEAD(false))
              barrier();
             bvec3 _GLF_SWITCH_6_10v[26], _GLF_SWITCH_6_11v[15], _GLF_SWITCH_6_12v;
             for(             (+ ivec3(79013, -50847, -57133));
 (mat3(-1176.8699, -99.83, 162.597, -99.85, -8.7, -3.3, -7.7, 31.73, 7.5) == (- mat3(15.77, -34.32, 407.936, -9.5, -5.4, -10.12, -6.6, 6.6, -814.872))); degrees(vec3(2574.0592, -9.5, 710.281)))
              {
               ;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 ;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   mat3x4(73.93, 80.84, 0.9, 219.375, -5.4, 7.6, -140.331, 2.2, 61.69, 74.53, 1105.2600, -69.91);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             mat3x2 _GLF_SWITCH_6_13v, _GLF_SWITCH_6_14v, _GLF_SWITCH_6_15v;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               while((false == false))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 39:
                   vec2 _GLF_SWITCH_6_16v, _GLF_SWITCH_6_17v[55];
                   case 16:
                   uvec3(14019u, 177213u, 178529u);
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     mat2x4(56.27, -813.195, 9.6, -0.2, -77.24, -83.28, 5812.1668, 5.0);
                    }
                   break;
                   case 54:
                   uvec3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v;
                   default:
                   1;
                  }
                }
              }
             while(false)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               lessThan(uvec4(66883u, 73239u, 158393u, 172319u), uvec4(15768u, 69782u, 72904u, 116859u));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               (ivec4(-37903, 75400, -49629, 46777) + -38146);
               uvec3 _GLF_SWITCH_6_18v;
               ivec2 _GLF_SWITCH_6_19v, _GLF_SWITCH_6_20v;
               (- mat4x2(-78.62, -8.4, 7262.4764, -920.616, -1750.7722, -3.5, -5630.1818, 1904.2277));
               uvec2 _GLF_SWITCH_6_21v, _GLF_SWITCH_6_22v, _GLF_SWITCH_6_23v[50];
              }
             vec2 _GLF_SWITCH_6_24v;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           case 92:
           vec2 _GLF_SWITCH_6_25v, _GLF_SWITCH_6_26v, _GLF_SWITCH_6_27v;
           case 0:
           case 99:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 6:
           case 80:
           case 98:
           case 35:
           case 20:
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           case 70:
           case 41:
           barrier();
           break;
           case 73:
           mat2x3 _GLF_SWITCH_6_28v, _GLF_SWITCH_6_29v;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           case 55:
           (! (-2916 >= -33667));
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & (66590 ^ 59954))))
      {
       case 0:
       case 21:
       case 11:
       case 87:
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       default:
       1;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), max(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0 ^ (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 0, 1))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       case 60:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 63:
             while(true)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 for(vec3 _GLF_SWITCH_2_0v[38], _GLF_SWITCH_2_1v[88], _GLF_SWITCH_2_2v; true; (ivec2(67543, 68837) % ivec2(86170, 5622)))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       for(int _injected_loop_counter = (0 & ((-67825) + -41942)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                        {
                         do
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             mat3x2(572.820, 5.4, 59.47, -1585.8280, -7.0, 6575.4706);
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                   bvec2(false, false);
                   int _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 44:
                       case 52:
                       mat2(837.599, 5.1, 33.37, 9.6);
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       default:
                       1;
                      }
                    }
                   uvec3 _GLF_SWITCH_2_5v;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         ivec3(-37110, -95412, 84118);
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   false;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   (faceforward(fract(1.4), 267.377, 9.9) + (mat4x2(-6214.5670, -17.42, -7130.5931, -46.88, 1.4, 81.22, 8649.3600, -383.641) - sqrt(-2.6)));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               do
                {
                 switch(_GLF_SWITCH(((int(_GLF_ZERO(0.0, injectionSwitch.x)) & -60340) ^ (80419 & 0))))
                  {
                   case 48:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 1 * (int(8)))))))
                          {
                           case 0:
                           case 4:
                           case 5:
                           case 41:
                           case 95:
                           barrier();
                           break;
                           case 85:
                           -14.86;
                           default:
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             1;
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   log(vec4(29.45, 4.1, -9.3, 209.637));
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 2:
                   case 76:
                   case 36:
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 15:
                       case 52:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       case 96:
                       if(true)
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           bvec3 _GLF_SWITCH_2_6v;
                           case 86:
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               ;
                              }
                             else
                              {
                              }
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                           case 56:
                           case 17:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           vec4(-306.932, -44.04, -0.1, 9915.8489);
                           mat3(58.80, 380.114, -2.4, -7.0, 0.9, -9.9, 3.4, -656.072, -2484.6377);
                           mat4x3(7856.6973, 1.9, -50.41, 4.5, 7.9, 917.258, -7.0, 229.467, -791.505, 4.3, 65.10, 9.8);
                           case 79:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             mat3x2(asinh(-6.6));
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                              barrier();
                             ;
                            }
                           mat4x2 _GLF_SWITCH_2_7v[68], _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            barrier();
                           break;
                           default:
                           1;
                          }
                        }
                       break;
                       case 42:
                       bvec2(true, true);
                       default:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           1;
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   break;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             case 0:
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(checker[virtual_gid], read, 4, 64, 4);
              }
             else
              {
              }
             break;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = (0 & -34285); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             case 5:
             ;
             case 76:
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             mat2(89.17, 4620.3068, -9.6, -4.9);
             default:
             1;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
                  {
                   case 79:
                   (mat4x2(38.08, -3623.7898, -3070.5705, -0.6, -5205.6047, -2068.5751, -8.5, 7712.5943) * (8.2 / mat4(1781.4335, -4.4, 169.570, 6487.5052, -5.6, 56.72, -8.4, -571.353, 6.9, -5830.1650, -7037.2918, 6.2, 6.9, -966.118, 9267.7433, 8431.6898)));
                   case 38:
                   bvec3(false, false, true);
                   case 0:
                   case 90:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 91:
                   case 42:
                   case 96:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 24:
                   case 31:
                   barrier();
                   break;
                   default:
                   1;
                  }
                }
               else
                {
                }
              }
            }
          }
        }
       else
        {
        }
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       case 99:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           do
            {
             mat3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
            }
           while(_GLF_WRAPPED_LOOP(false));
           ;
           do
            {
             while((equal((bvec4(false, false, false, false) , uvec2(62608u, 144888u)), uvec2(87081u, 6282u)) != bvec2(false, false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               min(num_workgroup, (+ subgroup_base));
               uint _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 94:
           uvec3 _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 86:
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 bitfieldInsert(_GLF_SWITCH_4_5v, _GLF_SWITCH_4_5v, _injected_loop_counter, 9148);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat2x4 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v;
             read;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             (mat2x3(-470.850, 9.2, -5202.8835, 705.447, -1.5, -3.4) * mat2(-44.45, 903.688, -2.3, -355.916));
             mat2x4 _GLF_SWITCH_4_9v;
             mat3x2 _GLF_SWITCH_4_10v;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               vec3(-80.66, 9861.7504, 5.3).gb;
              }
             uvec4(76323u, 141994u, 714u, 92979u);
             vec2 _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v;
            }
           greaterThanEqual(vec3(1.3, -506.863, -7.1), vec3(4541.6509, -7247.7768, 551.142));
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (67630 & int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
            {
             while(all(bvec3(false, true, false)))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 mat4x2(-8.5, -2738.7486, 2.2, 649.795, 226.921, -45.27, 1.7, -81.38);
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           break;
           case 77:
           mat2x4(-0.6, -6473.5327, 920.848, -29.02, -0.1, -98.75, -6.3, 51.29);
           case 61:
           mat4x2(2.3, 3447.7836, -9.7, 19.76, -3542.7775, 8.4, -7.4, -8.4);
           default:
           1;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = ((-96504 & 0) << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
       case 17:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         vec3(4.1, 27.88, -798.808);
        }
       else
        {
        }
       default:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         1;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
}
