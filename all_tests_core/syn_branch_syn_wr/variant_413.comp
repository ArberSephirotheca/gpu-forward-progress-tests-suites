#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat4x2 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
 vec2 _f1;
 bvec2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 vec2 _f1;
 ivec4 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 mat3x2 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_21 _f3;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 ivec3 _f1;
 uvec4 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 mat4x3 _f5;
 float _f6;
} ;

struct _GLF_struct_16 {
 ivec4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 vec2 _f3;
 uint subgroup_local_id;
 ivec4 _f4;
 float _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 bvec4 _f1;
 float _f2;
 bool _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 mat4 _f1;
 vec4 _f2;
 uvec4 _f3;
 uint _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_13 {
 bool _f0;
 mat4 _f1;
 vec2 _f2;
 vec2 _f3;
 bvec2 _f4;
 mat2x4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 uvec3 _f1;
 vec4 _f2;
 mat3 _f3;
 _GLF_struct_14 _f4;
 bool _f5;
} ;

struct _GLF_struct_23 {
 _GLF_struct_15 _f0;
 bvec4 _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 mat3 _f1;
 bvec3 _f2;
 mat3 _f3;
 mat2 _f4;
 vec2 _f5;
 bool _f6;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 bvec2 _f3;
 uvec3 _f4;
 mat4x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 ivec3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 vec3 _f4;
 mat4x3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 bool _f1;
 bvec3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat2 _f1;
 bvec2 _f2;
 vec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x3 _f1;
 bvec4 _f2;
 mat3x2 _f3;
 _GLF_struct_1 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 uint subgroup_id;
 _GLF_struct_6 _f1;
 _GLF_struct_11 _f2;
 int _f3;
 uvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(_GLF_struct_0(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), vec2(1.0), uvec4(1u)), mat4x3(1.0), bvec4(true), mat3x2(1.0), _GLF_struct_1(ivec4(1), mat2(1.0), mat2x4(1.0)), bvec2(true)), gl_SubgroupID, _GLF_struct_6(_GLF_struct_3(ivec4(1), true, bvec3(true), mat2x3(1.0)), _GLF_struct_4(bvec4(true), ivec4(1), mat3x4(1.0), bvec4(true), vec3(1.0), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0))))))))), mat3x4(1.0)), _GLF_struct_5(mat4x3(1.0), vec2(1.0))), _GLF_struct_11(_GLF_struct_7(uvec4(1u)), _GLF_struct_8(mat2(1.0), ivec3(1), mat2(1.0)), _GLF_struct_9(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), (true ? _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)) : _GLF_FUZZED((-27718))))), clamp(ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)))) ^ (1))), ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) << 0)))), ivec2(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(dot(vec4(sqrt(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(sqrt(0.0), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3536.8152)), float(0.0), bool(true))), 0.0, 0.0, 1.0))) * (_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (1))))), mat3x2(1.0), mat3x4(1.0), bvec2(true), uvec3(1u), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-370.350, 5.2, -0.4, 5.5, 297.112, -17.10, 125.183, 2.6, -3.1, 511.654, 6393.2472, 134.765, 716.947, -50.56, 5538.2862, -209.803)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat4(-370.350, 5.2, -0.4, 5.5, 297.112, -17.10, 125.183, 2.6, -3.1, 511.654, 6393.2472, 134.765, 716.947, -50.56, 5538.2862, -209.803)), transpose(transpose(_GLF_FUZZED(mat4(-370.350, 5.2, -0.4, 5.5, 297.112, -17.10, 125.183, 2.6, -3.1, 511.654, 6393.2472, 134.765, 716.947, -50.56, 5538.2862, -209.803)))))))) : mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))), _GLF_struct_10(bvec2(true), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat4(mat3(1.0))), transpose(transpose(mat3(mat4(mat3(1.0))))))), bvec3(true), mat3(1.0), mat2(1.0), vec2(1.0), true), uvec3(1u)), 1, uvec3(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_15(_GLF_struct_13(true, mat4(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)), vec2(1.0), bvec2(true), mat2x4(1.0), ivec2(1)), uvec3(1u), vec4(1.0), mat3(1.0), _GLF_struct_14(bvec2(true), mat4(1.0), vec4(1.0), uvec4(1u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))), (~ (1u)) | (~ (1u))))), mat2x4(1.0)), true), bvec4(true), _GLF_struct_18(ivec3(1), bvec4(true), 1.0, true, _GLF_struct_16(_GLF_IDENTITY(ivec4(1), ~ (_GLF_IDENTITY(~ (ivec4(1)), ivec4(0, 0, 0, 0) | (~ (ivec4(1)))))), mat2x4(1.0), ivec3(1), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(858.522)), float(1.0), bool(true)))), vec2(mat4x3(vec2(1.0), tan(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0))), gl_SubgroupInvocationID, ivec4(1), 1.0, ivec2(1)), _GLF_struct_17(mat2x3(1.0), _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), mat2x4(1.0), mat3x2(1.0), mat4x3(1.0), 1.0), uvec2(1u)), _GLF_struct_22(_GLF_struct_19(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (vec4(1.0)), mix(vec4(_GLF_FUZZED(-729.590), (mat4(1.0) * (vec4(1.0)))[1], (mat4(1.0) * (vec4(1.0)))[2], _GLF_FUZZED(-586.564)), vec4((mat4(1.0) * (vec4(1.0)))[0], _GLF_FUZZED(4.6), _GLF_FUZZED(368.143), _GLF_IDENTITY((mat4(1.0) * (vec4(1.0))), (true ? (mat4(1.0) * (vec4(1.0))) : _GLF_FUZZED(cosh(vec4(-9.2, -929.305, -0.0, 572.627)))))[3]), bvec4(true, false, false, true)))), vec2(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | 0) << 0))), mat4x3(1.0), bvec2(_GLF_IDENTITY(true, (true) && true)), uvec2(1u)), mat3x2(1.0), _GLF_struct_20(mat2x4(1.0), vec2(1.0), bvec2(true), mat3x4(1.0)), _GLF_struct_21(mat4x2(1.0), ivec3(_GLF_IDENTITY(1, (1) >> 0)), mat2x4(1.0), mat2x4(1.0))));
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u)).x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false))))))), true, false))))))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), (vec2((injectionSwitch)[0], _GLF_FUZZED(36.11))) * mat2(1.0)), vec2(_GLF_FUZZED(14.13), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(0.0, 0.0) + (vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(36.11))) * mat2(1.0)), vec2(_GLF_FUZZED(14.13), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.6)))))))).y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))).y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(36.11)), vec2(_GLF_FUZZED(14.13), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))).y))), false)))))))))) && true));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) & 1, clamp(int(_GLF_ONE(1.0, injectionSwitch.y)) & 1, int(_GLF_ONE(1.0, injectionSwitch.y)) & 1, int(_GLF_ONE(1.0, injectionSwitch.y)) & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_base = _GLF_struct_replacement_12.subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_23._f2._f4.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true))))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)))))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.1) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-8915.9660)), bool(false))))))))) || _GLF_IDENTITY(false, ! (! (false)))))) || false), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, clamp((injectionSwitch.x) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0) - 0.0, ((injectionSwitch.x) - 0.0) - 0.0), (injectionSwitch.x) - 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0))), 0.0)), dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-66.77) : 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), 1.0)), clamp(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])).x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), 1.0, 0.0, 0.0, abs(0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length((vec3(-44.45, -4265.6981, -944.488) * mat3(-490.116, -6.8, 7.6, 3.0, 8601.8458, -7478.3920, -1964.9102, 279.396, -494.497)))) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(-8.0)) : 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) - 0.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-475.014)), float(1.0), bool(true))))), 0.0, 0.0, 0.0, 1.0)), max(determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), _GLF_IDENTITY((0.0), max((0.0), (0.0))))) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0)), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.1) : 1.0)), 1.0))), 0.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) + 0.0))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-224.956) : 1.0)))), determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-0.1)), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0 * (length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)), dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5251.5173)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mix(vec3(_GLF_FUZZED(6.8), _GLF_FUZZED(-43.37), _GLF_FUZZED(0.1)), vec3((vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(5251.5173), mix(float(_GLF_FUZZED(5251.5173)), float(_GLF_FUZZED(6775.9145)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5251.5173)), float(1.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0))))[1], (vec3(1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5251.5173)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(mat3x2(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-74.17) : float(0.0))), 1.0, 0.0, 0.0, 0.0, 0.0))), float(0.0))), float(_GLF_FUZZED(-0.2)), bool(false))), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-37.73)), float(dot(vec4(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(_GLF_IDENTITY(float(0.0), float(mat3x2(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-74.17) : float(0.0))), 1.0, 0.0, 0.0, 0.0, 0.0))), float(0.0))), float(_GLF_FUZZED(-0.2)), bool(false))), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-51.55))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-51.55))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))) * 1.0, min((_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-51.55))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))) * 1.0, (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-51.55))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))) * 1.0))), float(_GLF_FUZZED(17.36)), bool(false))))), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, determinant(mat4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(718.148)), float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(mat4x3(vec4(1.0, 1.0, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(vec4(1.0, 1.0, 0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(28.60) : 0.0)))), 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3383.9630))), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0)), max(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(87.17)), bool(false))), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0)), (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(66.52)), bool(false)))), 0.0)), 0.0))), 0.0)), (true ? dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 1.0, 1.0))), vec4(0.0, 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0)) : _GLF_FUZZED(64.93))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0), max(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0), mix(vec3((vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0))[0], _GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0))[1], min((vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0))[1], (vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0))[1])), _GLF_FUZZED(262.412)), vec3(_GLF_FUZZED(9138.1370), _GLF_FUZZED(-0.1), (vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0))[2]), bvec3(false, false, true)))))), 0.0 + (_GLF_IDENTITY(dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0)), 1.0 * (dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0))), 0.0)))))))), dot(vec3(1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9269.5172) : 0.0)), (0.0) / 1.0), 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1597.5993)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1597.5993)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), (vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1597.5993)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1597.5993)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1597.5993)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6648.9874)))) / 1.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, 0.0)), (min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.4)), float(0.0), bool(true)))))))) - vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-2.2), _GLF_FUZZED(-1.8), ((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(45.61)), vec4(((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[0], ((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(9.1), ((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(true, true, false, true))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-2.2), _GLF_FUZZED(-1.8), ((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(45.61)), vec4(((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[0], ((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED(9.1), ((_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0)), (vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), min(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.9))), 0.0, 0.0)), 0.0))), 0.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))[3]), bvec4(true, true, false, true))), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0, 1.0))))))))))), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(171.167)), bool(false)))), 1.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, abs(1.0))))), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0))))), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(-7.8) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5860.4077))), 0.0))), 0.0), _GLF_IDENTITY(min(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)), clamp(min(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)), min(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)), min(vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), max(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 1.0)))))), transpose(transpose(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), max(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 1.0))))))))))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)))))), dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.4) : 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.4) : 0.0)), clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.4) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.4) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.4) : 0.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.4) : 0.0)))), 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), clamp(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, false)))))), (! (! (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false || ((bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-79.58) : injectionSwitch[1])))).y)))))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, false)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))))), false, false, false)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) << 0))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), false || (! (bool(bool(_GLF_DEAD(false))))))))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_23._f2._f4.subgroup_local_id + 1) % subgroup_size);
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : next_virtual_gid)), next_virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, false)), _GLF_IDENTITY(false, (false) && true)))))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, (_GLF_struct_replacement_23._f2._f4.subgroup_local_id) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, (_GLF_IDENTITY(0u | 1u, ~ (_GLF_IDENTITY(~ (0u | 1u), (~ (0u | 1u)) >> 0u)))), 0u), ~ (~ (uvec3(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, (_GLF_IDENTITY(0u | 1u, uint(uvec4(0u | 1u, (174107u & 0u), 1u, 0u)))), 0u)))))), _GLF_struct_replacement_23._f2._f4.subgroup_local_id)))) - 0u)), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id)))) - _GLF_IDENTITY(0u, 0u + (0u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id)))) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id)))) - 0u)), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id)))) - 0u)))), (uint(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, max(_GLF_struct_replacement_23._f2._f4.subgroup_local_id, _GLF_struct_replacement_23._f2._f4.subgroup_local_id)))) - 0u))))) / 1u))))) % 2) == _GLF_IDENTITY(0, 1 * (0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_23._f2._f4.subgroup_local_id % _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(88883)))) == 0, ! (! ((_GLF_struct_replacement_23._f2._f4.subgroup_local_id % _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(88883)))) == 0))), bool(bvec2(_GLF_IDENTITY((_GLF_struct_replacement_23._f2._f4.subgroup_local_id % 2) == 0, (_GLF_IDENTITY((_GLF_struct_replacement_23._f2._f4.subgroup_local_id % 2) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))), false || (_GLF_IDENTITY((_GLF_struct_replacement_23._f2._f4.subgroup_local_id % 2) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))), ((_GLF_struct_replacement_23._f2._f4.subgroup_local_id % 2) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))))))) || false)))) || false), true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), ! (! (! (true)))), true, true))))))))), true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (false ? _GLF_FUZZED((~ _GLF_IDENTITY(12347, clamp(12347, 12347, 12347)))) : _GLF_IDENTITY(2, (2) + 0))));
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))), bool(bvec2(true && (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (false)) && true), bool(bvec4(! (false), false, _GLF_IDENTITY(false, true && (false)), true)))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (false)) && true), bool(bvec4(! (false), false, _GLF_IDENTITY(false, true && (false)), true)))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (false)) && true), bool(bvec4(! (false), false, _GLF_IDENTITY(false, true && (false)), true)))))), true), false, false))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(1, 0 + (1))])), 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(tan(0.0), 1.0), _GLF_IDENTITY(vec2(sqrt(0.0), 1.0), (true ? _GLF_IDENTITY(vec2(sqrt(0.0), 1.0), clamp(vec2(sqrt(0.0), 1.0), vec2(sqrt(0.0), 1.0), vec2(sqrt(0.0), 1.0))) : _GLF_FUZZED(injectionSwitch))))), 0.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (true ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-686.444, 6.9, 8.7, 583.060))))), 0.0, 1.0, sqrt(1.0), 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, sqrt(1.0), 0.0))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, sqrt(1.0), 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0)), dot(vec2(tan(0.0), 1.0), vec2(sqrt(0.0), 1.0))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, sqrt(1.0), 0.0))).x > injectionSwitch.y) || false))))) || false))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        continue;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / cos(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false)))))), true)))))), ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(20.68), _GLF_FUZZED(-88.66)), bvec2(false, false)))) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x2(vec2(0.0, 0.0), sin(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(vec2(0.0, 0.0), sin(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0)))))).y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true, true, false)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             barrier();
            }
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false)))))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(39.50), _GLF_FUZZED(vec4(-6449.6880, 1078.6452, 3993.8161, -250.743).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
      }
     return;
    }
   subgroupBarrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(959.314)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), true))))))))) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-874.629), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -9.4 : 2671.1502))), bvec2(true, false))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (4) - 0), 0, 1, 1)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), clamp(ivec4(4, _GLF_IDENTITY(0, min(0, 0)), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | 0)), (min(1, _GLF_IDENTITY(1, (1) | 0))) ^ 0))) | 0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0)))), 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), max(ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) << 0), 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)))), _GLF_IDENTITY(ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), (ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0))) >> (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0))))))) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) / 1)), ~ (~ ((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(81744))), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)) | 0)), clamp(ivec4(4, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | 0)), (min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, (1) | 0))))) ^ 0))) | 0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) - 0)))), 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), max(ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) << 0), _GLF_IDENTITY(0, (0) << (0 | 0)), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)))), _GLF_IDENTITY(ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0)), (ivec4(4, 0, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))) | 0))) >> (ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))) | ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) - 0), 0))))))) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) / 1))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)), false)))))), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true))), ((bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true)))) || false)), false || (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true))), ((bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true)))) || false))))))))))) && true))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (! (false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
