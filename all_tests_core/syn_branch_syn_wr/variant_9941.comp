#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), abs(1.0) * (float(injectionSwitch.x))))), float(_GLF_FUZZED(-4.8)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0)), (true ? float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(607.955)))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-38.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), clamp(vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), (vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]))), bvec2(false, true)))).x) - 0.0) > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-38.25)), _GLF_IDENTITY(vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), clamp(vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), (vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]))), bvec2(false, true)))).x) - 0.0) > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-982.495, -5.0)) : injectionSwitch)))))).x) - 0.0) > injectionSwitch.y))), false, true), false))))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-4.8, mix(float(_GLF_FUZZED(float(98570))), float(-4.8), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-38.25)), vec2(_GLF_FUZZED(10.82), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0))))), min(injectionSwitch, injectionSwitch)))).x) - 0.0) > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0))))), min(injectionSwitch, injectionSwitch)))).x) - 0.0) > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true), false))))))))) > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, (false) && true)))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), true && ((_GLF_IDENTITY(false, (false) && true)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), _GLF_IDENTITY(true, true && (true)), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, false)), false, true, true)), bool(bool(bool(bvec4(bool(bvec2(true, false)), false, true, true)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, false)), false, true, true)), bool(bool(bool(bvec4(bool(bvec2(true, false)), false, true, true)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, false)), false, true, true)), bool(bool(bool(bvec4(bool(bvec2(true, false)), false, true, true)))))))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, false)), false, true, true)), bool(bool(bool(bvec4(bool(bvec2(true, false)), false, true, true)))))))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(true, false)), false, true, true)), bool(bool(bool(bvec4(bool(bvec2(true, false)), false, true, true)))))))))), false, true, false))))) || false))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(579.679) : injectionSwitch[1])), injectionSwitch[1])))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), float(vec4(injectionSwitch.y, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, float(float(0.0)))), float(mat3x2(exp(_GLF_IDENTITY(0.0, float(float(0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(55.53)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(-0.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(false))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), (! (_GLF_DEAD(false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(_GLF_IDENTITY(false, true && (false)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))))))), ! (! (false))), true, false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, (true) && true)))) || false), (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), true, true, false)))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))), false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.8, 7179.3363)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), max(_GLF_FUZZED(vec2(765.616, -5064.8470)), _GLF_FUZZED(vec2(765.616, -5064.8470)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), mat2(1.0) * (_GLF_FUZZED(vec2(765.616, -5064.8470)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), mat2(1.0) * (_GLF_FUZZED(vec2(765.616, -5064.8470)))))))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.8, 7179.3363)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), max(_GLF_FUZZED(vec2(765.616, -5064.8470)), _GLF_FUZZED(vec2(765.616, -5064.8470)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), mat2(1.0) * (_GLF_FUZZED(vec2(765.616, -5064.8470)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), mat2(1.0) * (_GLF_FUZZED(vec2(765.616, -5064.8470)))))))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.8, 7179.3363)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(765.616, mix(float(765.616), float(_GLF_FUZZED(float(145966u))), bool(false))), -5064.8470)), max(_GLF_FUZZED(vec2(765.616, -5064.8470)), _GLF_FUZZED(vec2(765.616, -5064.8470)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), mat2(1.0) * (_GLF_FUZZED(vec2(765.616, -5064.8470)))), _GLF_IDENTITY(_GLF_FUZZED(vec2(765.616, -5064.8470)), mat2(1.0) * (_GLF_FUZZED(vec2(765.616, -5064.8470)))))))).y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) || false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-55.43)), float(injectionSwitch.y), bool(true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_DEAD(false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), _GLF_IDENTITY(true && ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), bool(bvec3(true && ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))))) && true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))) && true))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) && true) || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) && true) || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)) / 1u)))), clamp((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) || false))))) ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(7u, _GLF_IDENTITY(7u, min(7u, 7u)), _GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (7u))))), (uint(7u)) << 0u), uint(7u)))) - 0u), uint(7u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3882.4322), _GLF_FUZZED(-6762.2027)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), 1))])).y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-3.4), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(9950.8801)), bvec2(true, false))) : _GLF_FUZZED(vec2(-3.3, -2.0))))).x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((7003.0749 / -8.5))), vec2(_GLF_FUZZED(421.215), (injectionSwitch)[1]), bvec2(false, true))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), min(_GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), min(uint(uint(subgroup_local_id % 2)), uint(uint(subgroup_local_id % 2)))), _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), 0u | (uint(uint(subgroup_local_id % 2)))))), (_GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), min(_GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), min(uint(uint(subgroup_local_id % 2)), uint(uint(subgroup_local_id % 2)))), _GLF_IDENTITY(uint(uint(subgroup_local_id % 2)), 0u | (uint(uint(subgroup_local_id % 2))))))) >> 0u)), (_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))) - 0u)), (uint(subgroup_local_id % 2)) | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(mix(read, next_virtual_gid, true)), (_GLF_IDENTITY(_GLF_FUZZED(mix(read, next_virtual_gid, true)), min(_GLF_FUZZED(mix(read, next_virtual_gid, true)), _GLF_FUZZED(mix(read, next_virtual_gid, true))))) | (_GLF_FUZZED(mix(read, next_virtual_gid, true)))))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), true && (_GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec2((! ((false))), false), bvec2(bvec3(bvec2((! ((false))), false), false)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(933.637), _GLF_FUZZED(-3.0)), bvec2(false, false))))).x, (false ? _GLF_FUZZED(-1.5) : injectionSwitch.x))), float(mat2x4(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.3) : 1.0)), 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.5) : injectionSwitch.x))), 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0))))) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(933.637), _GLF_FUZZED(-3.0)), bvec2(false, false))))).x, (false ? _GLF_FUZZED(-1.5) : injectionSwitch.x))), float(mat2x4(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.3) : 1.0)), 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.5) : injectionSwitch.x))), 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]) / 1.0)), vec2(_GLF_FUZZED(933.637), _GLF_FUZZED(-3.0)), bvec2(false, false))))).x, (false ? _GLF_FUZZED(-1.5) : injectionSwitch.x))), float(mat2x4(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.3) : 1.0)), 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-1.5), max(_GLF_FUZZED(-1.5), _GLF_FUZZED(-1.5))) : injectionSwitch.x))), 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 1.0)))) : _GLF_FUZZED(-5080.0344)))) - 0.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), ! (! (bool(bvec2(bool(true), true))))))), true && (bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), ! (! (bool(bvec2(bool(true), true))))))))))))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), false)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), false))))) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))], min((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))])))), min(false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))], min((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))])))), false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))], min((injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))]))))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)), false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false, false)), false, true))))))))), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0]), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false, false)), false, true))))))))), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0]), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false, false)), false, true))))))))), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], mix(float(_GLF_FUZZED(5.3)), float(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0]), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.8) : (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false)))))))))))))))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), true), true, false))))).y))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), true), true, false))))).y))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, sqrt(0.0), determinant(mat3(exp(0.0), 1.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))))), injectionSwitch.x)))) > injectionSwitch.y)), false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.2))) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0]), mix(float(_GLF_FUZZED(817.563)), float(max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), bool(true)))), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2((injectionSwitch)[0], 0.0, 1.0, 0.0))))))), max(float(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2((injectionSwitch)[0], 0.0, 1.0, 0.0))))))), float(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2((injectionSwitch)[0], 0.0, 1.0, 0.0)))))))))), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && true) && true)), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.4, -89.31)) : injectionSwitch)).x)))) > injectionSwitch.y)), false))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) * _GLF_ONE(1.0, injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(roundEven(exp(vec2(5.7, -7.8)))) : injectionSwitch)).y)), false))))))))))))))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(844.173)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6568.1206)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(124.240))))), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) - 0.0)))) > injectionSwitch.y) || false))))), false)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), false))))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-1.5)), bool(false)))) > injectionSwitch.y)), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-1.5)), bool(false)))) > injectionSwitch.y)), false)))))))), bool(bvec4(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-1.5)), bool(false)))) > injectionSwitch.y)), false)))))))), true, true, false)))), false || (bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-1.5)), bool(false)))) > injectionSwitch.y)), false)))))))), bool(bvec4(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), false))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))) && true)))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-1.5)), bool(false)))) > injectionSwitch.y)), false)))))))), true, true, false))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-40.98, 398.435)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, sqrt(0.0)))))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x)))) > injectionSwitch.y)), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-764.817)), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(asin(-94.90))))), bvec2(_GLF_IDENTITY(false, (false) && true), true))).y))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false))))))))))))))) || false))), false, false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-782.643), _GLF_FUZZED(-3471.5286)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), clamp(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), vec3(mat3x4(vec3(injectionSwitch.y, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), vec3(injectionSwitch.y, 0.0, 1.0), vec3(injectionSwitch.y, 0.0, 1.0))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.y)))) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-29.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, false, false))), false, false, true))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y))))), true, true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true && (false)) ? _GLF_FUZZED(174403u) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ~ (~ ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))) | 0u)))))], 4, 64, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-73943)))), min(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), true && (false)) ? _GLF_FUZZED(174403u) : _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(uvec3(38756u, 18931u, 83696u)[0]))), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))))], 4, 64, 2), min(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), true && (false)) ? _GLF_FUZZED(174403u) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), clamp(virtual_gid, virtual_gid, virtual_gid))))))], 4, 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), true && (false)) ? _GLF_FUZZED(174403u) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))))], 4, 64, 2))), (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (false)) ? _GLF_FUZZED(174403u) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ (_GLF_IDENTITY(~ (clamp(virtual_gid, virtual_gid, virtual_gid)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (clamp(virtual_gid, virtual_gid, virtual_gid)))))))))))], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) && true)))), true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(174403u, 0u | (174403u))) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))), _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))))))], 4, 64, 2)) / 1u)) * 1u), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), true && (false)) ? _GLF_FUZZED(174403u) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))))], _GLF_IDENTITY(4, (4) | (4)), 64, 2)));
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.24), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-55.11)), bvec2(true, false))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))) && true, (_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(bvec4((! (false)) && true, true, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((! (false)) && true, true, true, true)), bool(bool(bool(bvec4((! (false)) && true, true, true, true))))), true, false))))) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ vec4(-5724.6481, 3365.6894, 13.60, 3.4).a))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0)))), bool(true))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * vec3(1.0, 1.0, 1.0)))).x < injectionSwitch.y)) && ((false) && true))))), bool(bvec4(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * vec3(1.0, 1.0, 1.0)))).x < injectionSwitch.y)) && ((false) && true))))), true, false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)), true && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))), false, true)), true && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))), false || (bool(_GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))), false, true)), true && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true, bool(bvec2((! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true, true))))))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec2(! ((false) && true), true))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) || false))), bool(bvec4(! (! (true)), false, true, false)))), (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true)))))), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, true)))))))) || false)) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))), (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))), (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))), (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))))))) || false)) && true), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))), (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false)))))), (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))))), true, false, false))) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (! (true)), false, true, false)), bool(bvec3(bool(bvec4(! (! (true)), false, true, false)), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true && ((_GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), false, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (! (true)), false, true, false)), bool(bvec3(bool(bvec4(! (! (true)), false, true, false)), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), false, true, false))))) && true)))))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && _GLF_IDENTITY((bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))), ! (! ((bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true))))))))))) || false)) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))) && true), bool(bool(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))) && true)))), _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), true, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), true, true, true)), false, true)), false || (bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), true, true, true)), false, true)))), ! (! (bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(true, false || (true))))), (bool(! (! (true)))) || false))), ! (! (_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))) && true)))), true, true, true)), _GLF_IDENTITY(false, (false) || false), true)))))))), false, true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec4(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), _GLF_IDENTITY(true, ! (! (true))), false, true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)), true && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)), true && (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))))))))), bool(bvec2(bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)), true && (bool(bvec4((false) && true, _GLF_IDENTITY(true, ! (! (true))), false, true)))))))))), _GLF_IDENTITY(true, (true) && true)))))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (_GLF_IDENTITY(false, true && (false))) || false)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) * 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) != 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1)))) | (_GLF_IDENTITY(0, (0) | (0))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, ~ (~ (0)))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-4.3)), min((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-4.3)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-4.3))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
