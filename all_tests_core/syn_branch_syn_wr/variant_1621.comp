#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), ! (! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)), ! (! ((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y))))))))))), bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))), (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || ((! (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || ((! (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! ((! (injectionSwitch.x < injectionSwitch.y))))), false || ((! (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(471.610)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6900.2942) : 1.0))), bool(true))))))).x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8859.7816), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(27.49)), bvec2(true, false))).y))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0) < injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(20.50), min(_GLF_IDENTITY(_GLF_FUZZED(20.50), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(20.50), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))), float(float(float(mat2x4(_GLF_FUZZED(20.50), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))))))), _GLF_FUZZED(20.50)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(20.50), min(_GLF_IDENTITY(_GLF_FUZZED(20.50), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(20.50), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))), float(float(float(mat2x4(_GLF_FUZZED(20.50), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))))))), _GLF_FUZZED(20.50)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(20.50), min(_GLF_IDENTITY(_GLF_FUZZED(20.50), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(20.50), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))), float(float(float(mat2x4(_GLF_FUZZED(20.50), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0))))))), _GLF_FUZZED(20.50)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / 1.0) < injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) && true)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0) < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0) < injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(20.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)))) / 1.0) < injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bool(! (injectionSwitch.x < injectionSwitch.y))))))) || false)))), (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec4(bool(bvec3(true, true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true)))))))))), false, false, false))))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, exp(0.0)))) > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))), (max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) >> 0u), (max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))) | 0u)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u)), 0u | (uint(_GLF_IDENTITY((subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u))))), ~ (~ (uint(uint((subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), (subgroup_local_id) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, (_GLF_IDENTITY(39336u, min(39336u, 39336u))) | (39336u)), 146335u, 6850u, 93597u).p), max(_GLF_IDENTITY(true ? subgroup_base : _GLF_FUZZED(_GLF_IDENTITY(uvec4(39336u, 146335u, 6850u, 93597u), clamp(_GLF_IDENTITY(uvec4(39336u, 146335u, 6850u, 93597u), (uvec4(39336u, 146335u, 6850u, 93597u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(39336u, 146335u, 6850u, 93597u), uvec4(39336u, 146335u, 6850u, 93597u))).p), (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p), uint(uint(_GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))))) ^ 0u), true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))))), max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, _GLF_IDENTITY(6850u, (6850u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(93597u, (93597u) ^ 0u)).p)), 0u + ((true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, _GLF_IDENTITY(93597u, _GLF_IDENTITY((93597u), (true ? (93597u) : _GLF_FUZZED(workgroup_size))) ^ 0u)).p))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (39336u)), 146335u, 6850u, 93597u).p), (true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (39336u)), 146335u, 6850u, 93597u).p)) - 0u))), min(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(bool((_GLF_IDENTITY(true, false || (true))))))))) ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (_GLF_IDENTITY(39336u, min(39336u, _GLF_IDENTITY(39336u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (39336u)))))), 146335u, 6850u, 93597u).p))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))), (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))), (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p)))) ^ 0u))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true)) ? subgroup_base : _GLF_FUZZED(uvec4(39336u, _GLF_IDENTITY(146335u, (146335u) / 1u), 6850u, 93597u).p)), 1u * ((_GLF_IDENTITY(true, false || (true)) ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p), (_GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p)) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(39336u, ~ (~ (39336u))), 0u | (39336u)), 146335u, 6850u, _GLF_IDENTITY(93597u, ~ (~ (93597u)))).p))), min(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, false || (true)) ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p)))))) / 1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))) ^ 0u)) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, _GLF_IDENTITY(0u | (39336u), clamp(_GLF_IDENTITY(0u | (39336u), min(0u | (39336u), 0u | (39336u))), 0u | (39336u), 0u | (39336u)))), 146335u, 6850u, 93597u).p)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (39336u)), 146335u, 6850u, _GLF_IDENTITY(93597u, (93597u) | 0u)).p)), uint(_GLF_IDENTITY(uvec4((true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (39336u)), 146335u, 6850u, 93597u).p)), 1u, 0u, 0u), max(uvec4((true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (_GLF_IDENTITY(39336u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (39336u)))), 146335u, 6850u, 93597u).p)), 1u, 0u, 0u), uvec4((true ? subgroup_base : _GLF_FUZZED(uvec4(_GLF_IDENTITY(39336u, 0u | (39336u)), 146335u, 6850u, 93597u).p)), 1u, 0u, 0u))))))))), min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)) : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p), (true ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p)) ^ 0u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, false || (true)) ? subgroup_base : _GLF_FUZZED(uvec4(39336u, 146335u, 6850u, 93597u).p)))))) / 1u)))) | 0u))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) + 0u), subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) ^ 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), (subgroup_local_id + 1) ^ 0u)))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), min(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, clamp(_GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) ^ 0u)) - 0u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) ^ 0u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) << 0u)))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-73.24)))))))), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), clamp((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), (true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), ~ (_GLF_IDENTITY(~ ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u))), uint(uvec3(~ ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u))), 0u, 1u)))))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), clamp((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), (true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), ~ (_GLF_IDENTITY(~ ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u))), uint(uvec3(~ ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u))), 0u, 1u)))))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), clamp((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), (true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u)), ~ (_GLF_IDENTITY(~ ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u))), uint(uvec3(~ ((true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) >> 0u))), 0u, 1u)))))))) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)) + 1) % subgroup_size)), uint(uint(_GLF_IDENTITY(min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u)))))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))) + 1) : _GLF_FUZZED(30051u), 0u | (true ? (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, ((subgroup_local_id) - 0u) | ((subgroup_local_id) - 0u))) + 1) : _GLF_FUZZED(30051u))))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), (min((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(30051u))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(30051u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) : _GLF_FUZZED(30051u))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(30051u))), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(30051u))))))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))), (clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) | 0u)) % subgroup_size))) | (min((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(30051u, max(_GLF_IDENTITY(30051u, (30051u) / 1u), 30051u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(30051u, max(_GLF_IDENTITY(30051u, (30051u) / 1u), 30051u))))), max(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(30051u, max(_GLF_IDENTITY(30051u, (30051u) / 1u), 30051u))))), _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(30051u, max(_GLF_IDENTITY(30051u, (30051u) / 1u), 30051u)))))))))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) ? _GLF_FUZZED(82948) : 1)), 1, 1))) % subgroup_size)))))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), min((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) - 0u)) | (_GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_IDENTITY(_GLF_FUZZED(30051u), (_GLF_FUZZED(30051u)) - 0u)) | (_GLF_FUZZED(30051u))))))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(30051u))) % subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(30051u))) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))))), ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), 1, 1)), 0, 0, 1)))) % subgroup_size)));
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) - 0u) - 0u)) / 1u)], uint(_GLF_IDENTITY(1, 1 * (1))), 4, 64, 4);
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) % 2) == 0, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, max(0, 0))), clamp(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, max(0, 0))), (max(0, _GLF_IDENTITY(0, max(0, 0)))) ^ 0), max(0, _GLF_IDENTITY(0, max(0, 0))), max(0, _GLF_IDENTITY(0, max(0, 0))))))), ! (! (! ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) | 0u)) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0)) << _GLF_IDENTITY(0, 0 | (0)))) == 0)))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, _GLF_IDENTITY(0, max(0, 0))), clamp(_GLF_IDENTITY(max(0, _GLF_IDENTITY(0, max(0, 0))), (max(0, _GLF_IDENTITY(0, max(0, 0)))) ^ 0), max(0, _GLF_IDENTITY(0, max(0, 0))), max(0, _GLF_IDENTITY(0, max(0, 0))))))), ! (! (! ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), (~ (~ (subgroup_local_id))) | 0u)) % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0)) << _GLF_IDENTITY(0, 0 | (0)))) == 0)))), false, false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-579.891)), bool(false)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY(max(6, 6), (max(6, 6)) | (max(6, 6))))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), int(0))) ^ (int(6))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(6), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (int(6))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (int(6))), 1))))), 1 * (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(6), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (int(6))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) / 1)), (0 << _GLF_IDENTITY(int(0), int(0))) ^ (int(6))), 1)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (read = atomicLoad(buf[virtual_gid], 4, 64, 2))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y)))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (false))))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, true, true)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), bool(bvec4(bool(_GLF_IDENTITY((false), false || ((false)))), true, false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), bool(bvec4(bool(_GLF_IDENTITY((false), false || ((false)))), true, false, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), false || ((false)))), bool(bvec4(bool(_GLF_IDENTITY((false), false || ((false)))), true, false, true))))) && true)) || false)) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - abs(0.0)))) ? read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) - 0), 2) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, ~ (~ (3))), _GLF_IDENTITY(_GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), (true ? (true ? 3 : _GLF_FUZZED(2488)) : _GLF_FUZZED(42699))), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488))))))) ^ _GLF_IDENTITY(0, min(0, 0))), int(3)), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)))))), 0 ^ (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)))))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488))))))) ^ 0), int(3)), _GLF_IDENTITY(clamp(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true) ? 3 : _GLF_FUZZED(2488)))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488))))))) ^ 0), int(3)), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? _GLF_IDENTITY(3, min(3, 3)) : _GLF_FUZZED(2488)))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(2488)), min((true ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(2488)), ((true ? _GLF_IDENTITY(3, (3) << 0) : _GLF_FUZZED(2488))) * 1))), (true ? 3 : _GLF_FUZZED(2488))))))) ^ 0), int(3)), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((_GLF_IDENTITY(true ? 3 : _GLF_FUZZED(2488), int(ivec3(_GLF_IDENTITY(true ? 3 : _GLF_FUZZED(2488), (true ? 3 : _GLF_FUZZED(2488)) / 1), _GLF_IDENTITY(1, max(1, 1)), 1)))), (true ? 3 : _GLF_FUZZED(2488)))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488))))))) ^ 0), int(3))), (clamp(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (_GLF_IDENTITY(true ? 3 : _GLF_FUZZED(2488), clamp(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? 3 : _GLF_FUZZED(2488), _GLF_IDENTITY(true ? 3 : _GLF_FUZZED(2488), clamp(true ? 3 : _GLF_FUZZED(2488), true ? 3 : _GLF_FUZZED(2488), _GLF_IDENTITY(true ? 3 : _GLF_FUZZED(2488), ~ (~ (true ? 3 : _GLF_FUZZED(2488)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? 3 : _GLF_FUZZED(2488)))))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) ? 3 : _GLF_FUZZED(2488)), (_GLF_IDENTITY(true, (true) && true) ? 3 : _GLF_FUZZED(2488))))))) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec4((0), 0, 1, 1), (ivec4((0), 0, 1, 1)) * ivec4(1, 1, 1, 1)))) | (0))), int(3)), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(_GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)))), 0 ^ (_GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY(min((true ? 3 : _GLF_FUZZED(2488)), (true ? _GLF_IDENTITY(3, int(ivec4(3, _GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), 1, 0))) : _GLF_IDENTITY(_GLF_FUZZED(2488), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), ~ (_GLF_IDENTITY(~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), clamp(~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), ~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), ~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))))))), 0 | (min((true ? 3 : _GLF_FUZZED(2488)), (true ? _GLF_IDENTITY(3, int(ivec4(3, _GLF_IDENTITY((1 | 1), ~ (~ ((1 | 1)))), 1, 0))) : _GLF_IDENTITY(_GLF_FUZZED(2488), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), ~ (_GLF_IDENTITY(~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), clamp(~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), ~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), ~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(2488), (_GLF_FUZZED(2488)) | 0), 1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))))))))))))) ^ 0), int(3)), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY(min((true ? 3 : _GLF_FUZZED(2488)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? 3 : _GLF_FUZZED(2488))), (min((true ? 3 : _GLF_FUZZED(2488)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? 3 : _GLF_FUZZED(2488)))) << 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, (3) / 1))), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY(min((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), clamp((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), max((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), int(int((true ? 3 : _GLF_FUZZED(2488)))))))))), 0 + (min((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), clamp((true ? 3 : _GLF_FUZZED(2488)), (_GLF_IDENTITY(true, true && (true)) ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), max((true ? 3 : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), int(int((true ? 3 : _GLF_FUZZED(2488)))))))))))))))) ^ 0), int(3)))) - 0)), 0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? _GLF_IDENTITY(3, (3) + 0) : _GLF_FUZZED(2488)), _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), ((true ? 3 : _GLF_FUZZED(2488))) >> 0))))), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_FUZZED(2488)), min((true ? 3 : _GLF_FUZZED(2488)), (true ? 3 : _GLF_FUZZED(2488))))))) ^ 0)) << 0), (int(_GLF_IDENTITY(3, _GLF_IDENTITY((true ? 3 : _GLF_IDENTITY(_GLF_FUZZED(2488), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(2488, (2488) | (_GLF_IDENTITY(2488, (2488) - 0))))) - 0, (true ? (_GLF_FUZZED(_GLF_IDENTITY(2488, (2488) | (_GLF_IDENTITY(2488, _GLF_IDENTITY((2488), 0 | ((2488))) - 0))))) - 0 : _GLF_FUZZED(_injected_loop_counter))))), min((true ? 3 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(2488, (2488) | (_GLF_IDENTITY(2488, (2488) | (2488)))), ~ (~ (_GLF_IDENTITY(2488, (2488) | (_GLF_IDENTITY(2488, (2488) | (2488))))))))), (true ? 3 : _GLF_FUZZED(2488))))))) ^ 0), int(3)))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               subgroupBarrier();
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (0 >> _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, 1.0, 1.0)), 0.0 + (float(mat2(0.0, 0.0, 1.0, 1.0)))))), 0.0))).x, mix(float(_GLF_FUZZED(-677.249)), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, tan(0.0))), mix(float(float(mat3x2(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0)))), float(_GLF_FUZZED(float(72024u))), _GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-996.306)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))), mix(float(_GLF_FUZZED(-2.0)), float(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))), bool(true)))))), 0.0, 0.0, sin(0.0), 0.0))).x, mix(float(_GLF_FUZZED(-677.249)), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch.x), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-11.01) : 1.0)), 1.0, 0.0, 1.0, tan(0.0))), mix(float(float(mat3x2(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0)))), float(_GLF_FUZZED(float(72024u))), bool(false)))), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-996.306)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))), mix(float(_GLF_FUZZED(-2.0)), float(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0)))), bool(true)))))), 0.0, 0.0, sin(0.0), 0.0))).x, mix(float(_GLF_FUZZED(-677.249)), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch.x), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-11.01) : 1.0)), 1.0, 0.0, 1.0, tan(0.0))), mix(float(float(mat3x2(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0)))), float(_GLF_FUZZED(float(72024u))), bool(false)))), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-996.306)), clamp(float(_GLF_FUZZED(-996.306)), _GLF_IDENTITY(float(_GLF_FUZZED(-996.306)), (float(_GLF_FUZZED(-996.306))) - 0.0), float(_GLF_FUZZED(-996.306)))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) < injectionSwitch.y))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))), mix(float(_GLF_FUZZED(-2.0)), _GLF_IDENTITY(float(float(mat2x3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), abs(0.0)))), (float(float(mat2x3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), abs(0.0))))) - 0.0), bool(true)))))), 0.0, 0.0, sin(0.0), 0.0), (mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-996.306)), clamp(float(_GLF_FUZZED(-996.306)), _GLF_IDENTITY(float(_GLF_FUZZED(-996.306)), (float(_GLF_FUZZED(-996.306))) - 0.0), float(_GLF_FUZZED(-996.306)))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) < injectionSwitch.y))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0))), mix(float(_GLF_FUZZED(-2.0)), _GLF_IDENTITY(float(float(mat2x3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), abs(0.0)))), (float(float(mat2x3(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), abs(0.0))))) - 0.0), bool(true)))))), 0.0, 0.0, sin(0.0), 0.0)) * mat3(1.0)))).x, mix(float(_GLF_FUZZED(-677.249)), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch.x), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-11.01) : 1.0)), 1.0, 0.0, 1.0, tan(0.0))), mix(float(float(mat3x2(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, tan(0.0)))), float(_GLF_FUZZED(float(72024u))), bool(false)))), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))) - 0.0))) < injectionSwitch.y)))))))
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))], read, 4, 64, _GLF_IDENTITY(4, (4) | 0));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 & 19049), (_injected_loop_counter != (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0))) & 19049)) && true)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false, false)))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
