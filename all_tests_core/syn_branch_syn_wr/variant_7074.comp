#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 int _f0;
 vec3 _f1;
 uvec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 mat3 _f1;
 ivec2 _f2;
 uvec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 uint read;
 bool _f0;
 mat3 _f1;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 ivec4 _f4;
 bvec3 _f5;
 _GLF_struct_3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4(! ((! (_GLF_DEAD(false)))), true, false, false)), bool(bvec4(bool(bvec4(! ((! (_GLF_DEAD(false)))), true, false, false)), true, false, true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x < injectionSwitch.y), true, true)))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) && true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true)) || false)), false, true)))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y))) && true))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y))) && true))))))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false), false))))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9303.2273) : mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true))))))), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(8898.8145, min(_GLF_IDENTITY(8898.8145, max(8898.8145, 8898.8145)), 8898.8145)))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9303.2273) : mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true))))))), false, true, true))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9303.2273) : mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true))))))), false, true, true)))), ! (! ((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9303.2273) : mix(float(_GLF_FUZZED(8898.8145)), float(injectionSwitch.y), bool(true))))))), false, true, true))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)) && true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), false)), false, true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true)))), _GLF_IDENTITY(true, true && (true))))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)), false, true), bvec3(bvec3(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, true)))), true))), true)))))))), true, true)))))), false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) : _GLF_FUZZED(-104.428)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))) || false)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(44.36) : injectionSwitch.x)) > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), true, true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))), true, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true))), true, true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, false))))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.0)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(76.12)), bool(false))) > injectionSwitch.y))))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7749.5303), _GLF_FUZZED(31.79)), bvec2(false, false))).y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(-8125.9859)), vec2(_GLF_FUZZED(-7102.8989), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[0], _GLF_FUZZED(1.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[2]), vec3(_GLF_FUZZED(785.517), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[1], _GLF_FUZZED(197.032)), bvec3(false, true, false))))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[0], _GLF_FUZZED(1.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[2]), vec3(_GLF_FUZZED(785.517), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[1], _GLF_FUZZED(197.032)), bvec3(false, true, false))))))).y) / 1.0), mix(float(_GLF_FUZZED(7370.6498)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), mix(vec3((vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])), 1.0))[0], _GLF_FUZZED(1.0), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[2]), vec3(_GLF_FUZZED(785.517), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))[1], _GLF_FUZZED(197.032)), bvec3(false, true, false))))))).y), bool(true)))))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), bool(bool(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), bool(bool(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))), false, false))))))));
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (_GLF_IDENTITY(int(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (false ? _GLF_FUZZED(-23315) : int(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), 0 ^ (0)) : _GLF_FUZZED(_injected_loop_counter)))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) >> 0, 1 * ((_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(-55876)))) >> 0)))) * (_GLF_IDENTITY(1 | 0, (_GLF_IDENTITY(1 | 0, _GLF_IDENTITY(max(1 | 0, 1 | 0), (_GLF_IDENTITY(max(1 | 0, 1 | 0), (false ? _GLF_FUZZED(26153) : max(1 | 0, 1 | 0)))) >> 0))) - 0))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))
        break;
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(704.020), _GLF_FUZZED(3.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        break;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     else
      {
      }
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bool(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (6982 & 0)); _injected_loop_counter --)
        {
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (0u ^ 0u))), uvec3(uvec4(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))), (~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))) / uvec3(1u, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))), 1u))))), (0u ^ 0u))), 0u)))).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (0u ^ 0u))), uvec3(uvec4(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) / uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u)))), (~ (~ (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))) / uvec3(1u, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))), 1u))))), (0u ^ 0u))), 0u)))).x) ^ 0u);
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y), float(injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))) && true))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), ((_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false || (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))) || _GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1))))))) | 0, ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1))))))) | 0) / 1))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (_GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) | 0u))) << _GLF_IDENTITY(uint(0u), uint(0u))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
            {
             for(int _injected_loop_counter = ((0 & -49069) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) >> 0)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(-21962) : int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), _GLF_IDENTITY(int(7), (int(7)) << 0)))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), subgroup_base)), uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(uint(uvec2((subgroup_base), 0u)), (uint(uvec2((subgroup_base), 0u))) + 0u)) >> 0u), subgroup_base)), 1u, (1u & 1u), 1u))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 1 * _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(67670) : (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * virtual_gid)), min(_GLF_FUZZED((subgroup_id * virtual_gid)), _GLF_FUZZED((subgroup_id * virtual_gid)))) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), 0u | (~ (subgroup_local_id))))))) + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id)))))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)))) + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (_GLF_IDENTITY(subgroup_id * virtual_gid, (subgroup_id * virtual_gid) / 1u)))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)))), max(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)))), _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))))) - 0u)))) ^ 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * virtual_gid)), ~ (~ (_GLF_FUZZED((subgroup_id * virtual_gid))))) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)), _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1))) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))))))) - 0u)))) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))), (_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid)))), clamp(~ (_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid)))), ~ (_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid)))), ~ (_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid)))))))))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))))) * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))))) + (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * virtual_gid)), min(_GLF_FUZZED((subgroup_id * virtual_gid)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * virtual_gid)), (_GLF_FUZZED((subgroup_id * virtual_gid))) ^ 0u))) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) << 0u) * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_base) : false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) << 0u) * virtual_gid)) : subgroup_local_id + 1))))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)))))) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))), (max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * _GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * virtual_gid)), max(_GLF_FUZZED((subgroup_id * virtual_gid)), _GLF_IDENTITY(_GLF_FUZZED((subgroup_id * virtual_gid)), max(_GLF_FUZZED((subgroup_id * virtual_gid)), _GLF_FUZZED((subgroup_id * virtual_gid)))))) : subgroup_local_id + 1, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_id * virtual_gid), ((subgroup_id * virtual_gid)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)))))) / 1u))) - 0u)))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1), uint(uvec4(max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1), 1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, ~ (~ (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))), max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_id * virtual_gid), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_id * virtual_gid), ((subgroup_id * virtual_gid)) ^ 0u)))) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true)), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true)), false))))), false)))) ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))) / 1u)))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_id * virtual_gid), (_GLF_IDENTITY((subgroup_id * virtual_gid), max((subgroup_id * virtual_gid), _GLF_IDENTITY((subgroup_id * virtual_gid), (true ? (subgroup_id * virtual_gid) : _GLF_FUZZED(workgroup_id)))))) + 0u)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 0, 1))), max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * virtual_gid, (subgroup_id * virtual_gid) | (subgroup_id * virtual_gid)), ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 0, 1))), max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * virtual_gid, (subgroup_id * virtual_gid) | (subgroup_id * virtual_gid)), ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u))) >> (147377u & 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1), (max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)) - 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * virtual_gid, (subgroup_id * virtual_gid) | (subgroup_id * virtual_gid)), ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * _GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))) : subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1)), (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, max(false ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id * virtual_gid, ~ (~ (subgroup_id * virtual_gid))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, clamp(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1), ~ (~ ((false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) | (false ? _GLF_FUZZED((subgroup_id * virtual_gid)) : subgroup_local_id + 1))))))) - 0u)))) ^ 0u)))))) % subgroup_size);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(vec2(1.0), _GLF_struct_0(0, true, mat3(1.0)), ivec2(1), mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(13198) : _GLF_IDENTITY(1, min(1, 1)), 0 + (false ? _GLF_FUZZED(13198) : _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, 1))))))), bvec3(true), _GLF_struct_3(_GLF_struct_1(bvec4(true), mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((true ? -0.5 : 2270.5327), (_GLF_IDENTITY((true ? -0.5 : 2270.5327), (true ? (true ? -0.5 : 2270.5327) : _GLF_FUZZED(clamp(-6.5, -817.864, 4873.6709))))) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(6.7, 7.1, 2.5, -68.91), vec4(73.30, 4.9, 4.0, 75.72))) : 1.0))) + 0.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), (vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -468.329 : -9.2))), bool(false))), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-9.4, 853.527, 489.080, 715.799)) : vec4(0.0, 0.0, 1.0, 0.0)))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.8) : 1.0))) * 1.0), max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9399.4778)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.7) : 1.0))), bool(true))))), clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.8) : 1.0))) * 1.0), max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9399.4778)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.8) : 1.0))) * 1.0), max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9399.4778)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.8) : 1.0))) * 1.0), max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9399.4778)), float(1.0), bool(true)))))))), _GLF_IDENTITY(bool(true), (bool(true)) || false)))), ivec2(1), uvec2(1u), ivec3(1)), _GLF_struct_2(1, vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(_GLF_IDENTITY(-860.688, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-65.49, -7.8, -385.585, -4834.3153).x) : -860.688)), 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(744.028)), bool(false))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) * 1.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, _GLF_IDENTITY(-9.6, min(-9.6, -9.6)))))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2835.3539))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6))))))), (false ? _GLF_FUZZED(-9625.7583) : _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 1.0)), float(mat2(float(vec4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(744.028)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2835.3539))), min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2835.3539))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2835.3539))))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(_GLF_IDENTITY(-860.688, max(-860.688, _GLF_IDENTITY(-860.688, min(-860.688, -860.688)))), 6.1, 5779.6607, _GLF_IDENTITY(-9.9, (true ? _GLF_IDENTITY(-9.9, max(-9.9, -9.9)) : _GLF_FUZZED(1347.5239))), 9.7, -9.6))))))), mix(float(_GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(744.028)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2835.3539))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))) ? mat2x3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6))))))), max(clamp(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(744.028)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-2835.3539), 0.0 + (_GLF_FUZZED(-2835.3539))))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6))))))), clamp(float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(744.028)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, _GLF_IDENTITY(-9.9, float(_GLF_IDENTITY(mat4x3(-9.9, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, abs(1.0), 1.0), (mat4x3(-9.9, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, abs(1.0), 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2835.3539))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2180.7687)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))), float(_GLF_IDENTITY(mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED((- mat2x3(-860.688, 6.1, 5779.6607, -9.9, 9.7, -9.6)))))))))), float(_GLF_FUZZED(-8.8)), bool(false)))))))), uvec4(1u), bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   do
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) * 1), 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if((subgroup_local_id % 2) == 0)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(round(2.3)) : injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(round(2.3)) : injectionSwitch.x)))) > injectionSwitch.y)), false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(round(2.3)) : injectionSwitch.x)))) > injectionSwitch.y)), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(round(2.3)) : injectionSwitch.x)))) > injectionSwitch.y)), false, true))))), false))))))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), ! (! ((bool(bvec2(_GLF_DEAD(false), false))))))) && true))))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), ! (! ((bool(bvec2(_GLF_DEAD(false), false))))))) && true))))))) || false, true)), bool(bool(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), ! (! ((bool(bvec2(_GLF_DEAD(false), false))))))) && true))))))) || false, true)))))))) || false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0) != (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, ~ (~ (2))))))); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(0.0), 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(0.0), 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), clamp(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), min(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, abs(1.0), 1.0)))))))), abs(0.0), 0.0)))), vec2(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(0.0), 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / cos(0.0)), abs(0.0))), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))), abs(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))))))), (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4)))))), 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(0.0), 0.0), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(0.0), 0.0))))) * vec2(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))).y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          continue;
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0))) || false); _injected_loop_counter --)
                          {
                           return;
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                      continue;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                        return;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               else
                {
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               _GLF_struct_replacement_4._f1.read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2)));
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), (bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false), true, false))) && true))))
          continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(-81926) : 5))))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                  break;
                 break;
                }
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     _GLF_struct_replacement_4._f1.read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), 4, 64, 2), uint(uvec2(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), 4, 64, 2), 0u | (atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), uint(uvec2(uint(uvec3(1u, 1u, 1u)), 1u)))) * _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid]))))) - 0u)), 4, 64, 2))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(-1.4)) : injectionSwitch.y)))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-26.05)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(atan(-622.711, 8361.6359)) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-86.69) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ((! (_GLF_DEAD(false)))) && true))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3423.5206)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0)), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3423.5206)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-3423.5206)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-3423.5206)), float(injectionSwitch.x), bool(true)))) : _GLF_FUZZED(-8233.2692))))) / 1.0))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), (mat4((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat4((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), (mat4((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)), (mat4((injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(0.4)), bool(false))) + 0.0) : _GLF_FUZZED(-173.378)), min((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(581.937)), bvec2(true, false))).x) + 0.0) : _GLF_FUZZED(-173.378)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-173.378))))), 0.0, 0.0, 0.0, abs(1.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
          break;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, false)))))
        continue;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 0.4))), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 0.4))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 0.4))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 0.4))), float(injectionSwitch.x), bool(true))))), float(mat2x4(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 0.4))), float(injectionSwitch.x), bool(true))))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), (_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)) && true)); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        break;
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 subgroupBarrier();
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_struct_replacement_4._f1.read, _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2293.2190) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
      {
       return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
}
