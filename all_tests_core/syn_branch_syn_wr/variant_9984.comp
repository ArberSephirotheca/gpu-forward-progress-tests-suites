#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bool((_GLF_IDENTITY(false, bool(bool(false))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bool((_GLF_IDENTITY(false, bool(bool(false))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), (vec4(injectionSwitch.x, 0.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(38.53)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), mix(_GLF_IDENTITY(float(max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(max(injectionSwitch.x, injectionSwitch.x)), mix(float(float(max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- 8.4))), bool(false))))), (float(float(_GLF_IDENTITY(float(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), mix(float(float(max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- 8.4))), bool(false)))))) / 1.0)), float(_GLF_FUZZED(3432.5336)), bool(false))) : _GLF_FUZZED(-5896.6920)))), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(1.0)) > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false)), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(-549.300) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))) / 1.0)) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.5), (false ? _GLF_FUZZED(-2147.6248) : _GLF_IDENTITY(_GLF_FUZZED(-4.5), (_GLF_FUZZED(-4.5)) * 1.0))) : 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)))) || false)))) ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0))))), 0.0, 0.0)) : _GLF_FUZZED(-6764.8834), (false ? _GLF_FUZZED(-3715.1565) : _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)))) || false)))) ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0))))), 0.0, 0.0)) : _GLF_FUZZED(-6764.8834))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-641.902))) > injectionSwitch.y)), false, false))) || false)), false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))) / 1.0)) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-4.5), (false ? _GLF_FUZZED(-2147.6248) : _GLF_IDENTITY(_GLF_FUZZED(-4.5), (_GLF_FUZZED(-4.5)) * 1.0))) : 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), false, true)))), false)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)))) || false)))) ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0))))), 0.0, 0.0)) : _GLF_FUZZED(-6764.8834))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | _GLF_IDENTITY((subgroup_size), uint(uint(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u))))))), subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size)), uint(uvec2(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size)), 0u))))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), ((~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))) << 0u))) | (subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u)))) + 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))) | (subgroup_size)), subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) | (workgroup_base), max((workgroup_base) | (workgroup_base), (workgroup_base) | (workgroup_base))), clamp((workgroup_base) | (workgroup_base), (workgroup_base) | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_size) : uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u)))), (workgroup_base) | (workgroup_base))))) / 1u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << (_GLF_IDENTITY((42510u & 0u), (true ? (42510u & _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED(subgroup_base))) << _GLF_IDENTITY(uint(1u), uint(1u))), (true ? (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << (_GLF_IDENTITY((42510u & 0u), (true ? (42510u & 0u) : _GLF_FUZZED(subgroup_base))) << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(workgroup_size))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, _GLF_IDENTITY(((subgroup_base) + 0u), min(((subgroup_base) + 0u), ((subgroup_base) + 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (_GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), min(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), uint(uvec3((subgroup_base) + 0u, 0u, 1u))))))), ((subgroup_base) + 0u) - 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) ^ 0u) | (workgroup_base))) / _GLF_IDENTITY(1u, (1u) * 1u)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u))))) | 0u))), 1u), (uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u)) * uvec2(1u, 1u)), uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base))), (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))) ^ 0u)))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY((subgroup_base) + 0u, ((subgroup_base) + 0u) << (0u | 0u)), 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, ((subgroup_base) + 0u) | ((subgroup_base) + 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | _GLF_IDENTITY((uint(uvec3((subgroup_base) + 0u, 0u, 1u))), ((uint(uvec3((subgroup_base) + 0u, 0u, 1u)))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), ((subgroup_base) + 0u) - 0u)))), 1u), (uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u)) | uvec2(0u, 0u))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) << 0u)))))) + _GLF_IDENTITY(0u, (0u) | (0u)), ((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, 1u, (1u & 1u), 1u), clamp(uvec4(subgroup_base, 1u, (1u & 1u), 1u), _GLF_IDENTITY(uvec4(subgroup_base, 1u, (1u & 1u), 1u), (uvec4(subgroup_base, 1u, (1u & 1u), 1u)) | (uvec4(subgroup_base, 1u, (1u & 1u), 1u))), uvec4(subgroup_base, 1u, (1u & 1u), 1u)))))) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(0u ^ (~ (subgroup_base)), (_GLF_IDENTITY(0u ^ (~ (subgroup_base)), max(0u ^ (~ (subgroup_base)), _GLF_IDENTITY(0u ^ (~ (subgroup_base)), 0u ^ (0u ^ (~ (subgroup_base))))))) | (0u ^ (~ (subgroup_base)))))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY((subgroup_base) + 0u, min((subgroup_base) + 0u, (subgroup_base) + 0u)), 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u), (uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))), (true ? (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) : _GLF_FUZZED((subgroup_base >> subgroup_id)))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), min(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), uint(uvec3((subgroup_base) + 0u, 0u, 1u))))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u)) * uvec2(1u, 1u)), uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))), clamp((_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))), (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))), (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))), (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base)) - 0u)) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (_GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))))), ((subgroup_base) + 0u) - 0u)))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) | (workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u))), (workgroup_base))) | (workgroup_base))) / 1u)) + 0u)) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (_GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base)))))) + 0u, ((subgroup_base) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) + 0u, min((subgroup_base) + 0u, (subgroup_base) + 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_base) + 0u, 0u, 1u)), (uint(uvec3((subgroup_base) + 0u, 0u, 1u))) | (uint(uvec3((subgroup_base) + 0u, 0u, 1u))))), ((subgroup_base) + 0u) - 0u)))), 1u)) | uvec2(0u, 0u)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), 0u + (_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base)))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), uint(uvec4(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), 1u, 0u, 0u)))) / 1u)) << 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base))))), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), 1u * ((workgroup_base)))))))))) ^ 0u) / 1u)) | 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))))) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) / 1u), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) / 1u)) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | 0u) : _GLF_FUZZED(subgroup_local_id))))))) | 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) | (workgroup_base), (false ? _GLF_FUZZED(workgroup_id) : (workgroup_base) | (workgroup_base))))) / 1u))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, max((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u)) | 0u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))) / 1u))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u))) >> 0u)))) | 0u))) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), max((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), ~ (~ ((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))))), ((workgroup_size)) * 1u)) : subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.7)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0), (mat2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))), 1.0, cos(0.0), length(0.0), 0.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-7.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-179.151), _GLF_FUZZED(-776.029)), bvec2(false, false))).y)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.7)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(length(vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.8)), float(0.0), bool(true))), 0.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), 1.0, cos(0.0), length(0.0), 0.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7865.6808) : 1.0)), 1.0)), 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-12.05)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2613.4759)), float(1.0), bool(true)))), bool(true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.7)), float(0.0), bool(_GLF_IDENTITY(true, (true) || false)))), 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), 1.0, cos(0.0), length(0.0), 0.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-4148))), min(_GLF_IDENTITY(1, (1) << 0), 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)))), max(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))), clamp(0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))), 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))), (0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)))) - 0)))), min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0), 1)))), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1))))))))) % _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))) / 1u)))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 1 * (1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), bool(bvec4(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), false, true, true)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | _GLF_IDENTITY(((subgroup_local_id % 2)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(((subgroup_local_id % 2)), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(_GLF_IDENTITY(uvec3(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u, 1u), (uvec3(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u, 1u)) - uvec3(0u, 0u, 0u))))) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | 0u), 1u, _GLF_IDENTITY(0u, (0u) >> 0u)), (_GLF_IDENTITY(uvec4(((subgroup_local_id % 2)), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> (164282u & 0u))) | 0u), 1u, _GLF_IDENTITY(0u, (0u) >> 0u)), (true ? uvec4(((subgroup_local_id % 2)), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(3u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) | 0u), 1u, _GLF_IDENTITY(0u, (0u) >> 0u)) : _GLF_FUZZED(_GLF_IDENTITY(uvec4(139464u, 113018u, 55537u, 165062u), (uvec4(139464u, 113018u, 55537u, 165062u)) << uvec4(0u, 0u, 0u, 0u)))))) | uvec4(0u, 0u, 0u, 0u)), min(uvec4(((subgroup_local_id % 2)), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u), 1u, 0u), uvec4(((subgroup_local_id % 2)), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), min(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) | 0u), (((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), min(0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), 0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) | 0u)) << 0u), (((0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))) | 0u)) | 0u), 1u, 0u)))))) == 0)
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))), true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   _GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2), int(ivec3((2), 0, 1))) << 0)), (read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), ~ (~ (_GLF_IDENTITY(2, (2) << 0))))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) << 0)), 1u * (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((2), ((2)) - (0 | 0)), 0)), (int(ivec2(_GLF_IDENTITY((2), ((2)) - (0 | 0)), 0))) << 0)) << 0)), (true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, clamp(2, 2, 2))))) << 0)) : _GLF_FUZZED(read)))))) * 1u)) ^ 0u), (_GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : virtual_gid))], 4, 64, 2), (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : virtual_gid))], 4, 64, 2)) | 0u)) << 0u);
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true))))))))))), false || (bool(bvec3(false, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || false))) ? virtual_gid : _GLF_FUZZED(read)), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || false))) ? virtual_gid : _GLF_FUZZED(read))) | ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), (injectionSwitch.x < injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false))) ? virtual_gid : _GLF_FUZZED(read))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) / 1u))))) : _GLF_FUZZED(read)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), false, true, true))))))))) ? virtual_gid : _GLF_FUZZED(read)))))))], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))))) - 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5809.2426)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
