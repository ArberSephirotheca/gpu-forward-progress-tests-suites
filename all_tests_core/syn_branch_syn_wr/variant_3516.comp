#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), false, true, false))))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))))))))) > injectionSwitch.y) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && true), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1], injectionSwitch[1]))), vec2(_GLF_IDENTITY(mat4x2(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1], injectionSwitch[1]))), 1.0, abs(sqrt(0.0)), exp(0.0), 0.0, 0.0, abs(0.0)), (false ? _GLF_FUZZED((mat4x2(2.1, 8.5, -881.385, -4.6, -8.6, 8.4, 783.662, -3.6) - 735.748)) : mat4x2(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1], injectionSwitch[1]))), 1.0, abs(sqrt(0.0)), exp(0.0), 0.0, 0.0, abs(0.0))))))), min(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(determinant(mat4(-9442.7004, -8154.7009, 4.9, _GLF_IDENTITY(5.9, mix(float(_GLF_FUZZED(6762.6843)), float(5.9), bool(true))), _GLF_IDENTITY(-6267.4420, mix(float(-6267.4420), float(_GLF_FUZZED(-1.4)), bool(false))), _GLF_IDENTITY(-6.8, clamp(-6.8, _GLF_IDENTITY(-6.8, min(-6.8, -6.8)), -6.8)), 1.4, 433.369, -2268.1805, 3.1, -8.5, -83.28, 807.093, -0.6, -3.8, 2.3)), float(_GLF_IDENTITY(mat4(determinant(_GLF_IDENTITY(mat4(-9442.7004, -8154.7009, 4.9, 5.9, -6267.4420, -6.8, 1.4, 433.369, -2268.1805, 3.1, -8.5, _GLF_IDENTITY(-83.28, float(vec4(-83.28, 1.0, sin(0.0), 1.0))), 807.093, -0.6, -3.8, 2.3), (mat4(-9442.7004, -8154.7009, 4.9, 5.9, -6267.4420, -6.8, 1.4, 433.369, -2268.1805, 3.1, -8.5, _GLF_IDENTITY(-83.28, float(vec4(-83.28, 1.0, sin(0.0), 1.0))), 807.093, -0.6, -3.8, 2.3)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x)))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(mat2(1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(float(mat2(1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat2x3(float(mat2(1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(float(mat2(1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(-468.252)), bool(false))))))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), transpose(_GLF_IDENTITY(transpose(mat4(determinant(mat4(-9442.7004, -8154.7009, 4.9, 5.9, -6267.4420, _GLF_IDENTITY(-6.8, (false ? _GLF_FUZZED(-593.735) : -6.8)), 1.4, 433.369, -2268.1805, 3.1, -8.5, -83.28, 807.093, -0.6, -3.8, 2.3)), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), (vec4(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0)), transpose(transpose(transpose(mat4(_GLF_IDENTITY(determinant(mat4(-9442.7004, -8154.7009, 4.9, 5.9, -6267.4420, -6.8, 1.4, _GLF_IDENTITY(433.369, mix(float(433.369), float(_GLF_FUZZED(-490.028)), bool(false))), -2268.1805, 3.1, -8.5, -83.28, 807.093, -0.6, -3.8, 2.3)), (determinant(mat4(-9442.7004, -8154.7009, 4.9, 5.9, -6267.4420, -6.8, 1.4, 433.369, -2268.1805, 3.1, -8.5, -83.28, 807.093, -0.6, -3.8, 2.3))) - 0.0), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, abs(1.0)))), 1.0)), 0.0)))))))))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-328.793)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, _GLF_IDENTITY(true, (true) || false))))), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)), injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(816.372)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))) + 0.0) * abs(1.0)), injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(816.372)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3937.9673)), float(injectionSwitch.y), bool(true)))) / 1.0))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-497.391, -11.21)))).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-497.391, -11.21)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-497.391, -11.21)))).x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-497.391, -11.21)))).x > injectionSwitch.y))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) | (min(subgroup_id, subgroup_id)))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(-8.9)), bool(false)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), 0u | (uint(uint(workgroup_base)))))) | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))) : _GLF_FUZZED(uvec2(191189u, 172153u)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), (false ? _GLF_FUZZED(uvec2(98939u, 177653u)) : _GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))))))))), min(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ _GLF_IDENTITY((subgroup_base), ((subgroup_base)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3555.6434) : 1.0)), injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), max(uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))), uvec2(_GLF_IDENTITY(~ (subgroup_base), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (subgroup_base))), 0u))))))))))))) + 0u)) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, (0u) | (0u)))), ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))) * 1u)))) + 0u)) << 0u) >> _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u * (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) << (172366u & 0u)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(12.95), _GLF_FUZZED(407.129)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && ((false) && true))), _GLF_IDENTITY(((_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(12.95), _GLF_FUZZED(407.129)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) && ((false) && true)))) && true, (((_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(12.95), _GLF_FUZZED(407.129)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch), clamp(false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch), false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch), false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch))), false ? _GLF_FUZZED(vec2(-410.409, -5773.1628)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y)) && ((false) && true)))) && true) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (int(4)), 1 * (0 ^ (int(4)))), 0 | (0 ^ (int(4))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(8202.6142, (false ? _GLF_FUZZED(-7667.4866) : 8202.6142))) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((3216.5480 * -516.907))))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).y, (injectionSwitch.y) + 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0), 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).y, (injectionSwitch.y) + 0.0))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(false), true, false, false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(faceforward(injectionSwitch, vec2(-6932.4304, 865.664), vec2(-4.1, 6.2))))).x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) << 0u), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))), ((_GLF_IDENTITY(4, 0 ^ (4)))) >> 0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || ((true))))) && ((! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   return;
  }
}
