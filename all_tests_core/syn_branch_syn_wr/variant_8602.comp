#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 ivec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 float _f1;
 uvec2 _f2;
 bool _f3;
 int _f4;
 uvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_20 {
 float _f0;
 uint _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 ivec2 _f1;
 _GLF_struct_21 _f2;
 bvec3 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 ivec4 _f1;
 uint _f2;
 mat4x2 _f3;
 bvec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_17 {
 float _f0;
 vec3 _f1;
 vec4 _f2;
 mat3x2 _f3;
 vec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_16 {
 uint _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 uint _f3;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 uvec3 _f1;
 uint _f2;
 mat3x2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 int _f2;
 ivec2 _f3;
 uvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 _GLF_struct_15 _f1;
 bvec2 _f2;
 int i;
 _GLF_struct_19 _f3;
 _GLF_struct_23 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 ivec3 _f1;
 vec2 _f2;
 ivec4 _f3;
 mat3x2 _f4;
 uint _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 bool _f1;
 vec3 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 bvec3 _f2;
 uvec2 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 uint _f1;
 mat2 _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 mat4x3 _f1;
 float _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 int _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat3 _f1;
 bvec3 _f2;
 int _f3;
 bvec4 _f4;
 uvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_12 {
 bool _f0;
 uint virtual_gid;
 _GLF_struct_2 _f1;
 vec3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_10 _f4;
 ivec3 _f5;
 _GLF_struct_11 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(bool(false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), int(ivec3(int(2), 0, 0))), int(2)))))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(188.428)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) >> 0u), (false ? _GLF_FUZZED(38547u) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) >> 0u))), 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)) >> 0u))) + subgroup_local_id, _GLF_struct_2(_GLF_struct_0(mat3(1.0), mat3(1.0), bvec3(true), 1, bvec4(true), uvec4(_GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (1u))), vec3(1.0)), _GLF_struct_1(mat2x3(1.0), 1, uvec4(1u))), vec3(1.0), _GLF_struct_5(_GLF_struct_3(vec3(1.0), mat4x3(1.0), 1.0), uvec2(1u), mat4x2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_struct_4(mat3(1.0), _GLF_IDENTITY(1u, (1u) / 1u), mat2(1.0), mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((6613.5486 + 86.21))), float(1.0), bool(true)))))), bvec2(true))), _GLF_struct_10(_GLF_struct_6(mat4(1.0), _GLF_IDENTITY(true, (true) || false), vec3(1.0)), _GLF_struct_7(vec4(1.0), ivec3(1), vec2(1.0), ivec4(1), mat3x2(1.0), 1u, ivec2(1)), bvec3(true), uvec2(1u), _GLF_struct_8(uvec4(1u), mat3(1.0)), _GLF_struct_9(vec3(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat2x4(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0))))))))), ivec3(1), _GLF_struct_11(bvec2(_GLF_IDENTITY(true, ! (! (true))))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))); _injected_loop_counter ++)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (next_virtual_gid)), 0u ^ ((~ (next_virtual_gid)))), ~ (_GLF_IDENTITY(~ (~ (~ (next_virtual_gid))), (~ (~ (_GLF_IDENTITY(~ (next_virtual_gid), max(~ (next_virtual_gid), ~ (next_virtual_gid)))))) - 0u))))], uint(1), 4, 64, 4);
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, false))))), true && (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, false))))))))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_12.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0))) * (injectionSwitch))) - vec2(0.0, 0.0)).y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) : _GLF_FUZZED(subgroup_size), 0u | (true ? _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) : _GLF_FUZZED(subgroup_size))))) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) ^ 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) ^ 0u)) + _GLF_IDENTITY(0u, (0u) << 0u)))
  {
   _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(vec4(1.0), _GLF_struct_15(_GLF_struct_13(mat3x2(1.0), uvec3(1u), 1u, mat3x2(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)))), (mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(674.889)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), min((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), float(float((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141))))))))))), (_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2x4((1.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))), (true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141))))) - 0.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.1)), bool(false)))), 0.0, cos(0.0)), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0), max(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat4x3(vec3(1.0, 1.0, 1.0), 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(vec3(1.0, 1.0, 1.0), 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))), (round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0))))), 1.0))))) - 0.0)), 0.0, cos(0.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-60.68)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), min(_GLF_IDENTITY(1.0, (1.0) * round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0))), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), 0.0, cos(0.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), clamp((1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) / vec3(1.0, 1.0, 1.0))))), (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (true ? _GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))) : _GLF_FUZZED(-6.5))), float(_GLF_FUZZED(-3381.1674)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0)), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY((cos(0.0)), (true ? (cos(0.0)) : _GLF_FUZZED(983.613))) + 0.0))), min((vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))), (vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))))), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))))) + vec3(0.0, 0.0, 0.0))))))), max(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)))), (mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(674.889)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), min((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), float(float((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141))))))))))), (_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2x4((1.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))), (true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141))))) - 0.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.1)), bool(false)))), 0.0, cos(0.0)), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0), max(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat4x3(vec3(1.0, 1.0, 1.0), 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(vec3(1.0, 1.0, 1.0), 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))), (round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0))))), 1.0))))) - 0.0)), 0.0, cos(0.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-60.68)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), min(_GLF_IDENTITY(1.0, (1.0) * round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0))), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), 0.0, cos(0.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), clamp((1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) / vec3(1.0, 1.0, 1.0))))), (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (true ? _GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))) : _GLF_FUZZED(-6.5))), float(_GLF_FUZZED(-3381.1674)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0)), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY((cos(0.0)), (true ? (cos(0.0)) : _GLF_FUZZED(983.613))) + 0.0))), min((vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))), (vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))))), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))))) + vec3(0.0, 0.0, 0.0))))))), vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(_GLF_IDENTITY(mat2x3(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.9)), float(0.0), bool(true)))), (mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(674.889)), bool(false))), 1.0, 1.0, 1.0, 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), min((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), _GLF_IDENTITY((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141)))), float(float((_GLF_IDENTITY(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), min(true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141), true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141))))))))))), (_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat2x4((1.0), 1.0, cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))), (true ? float(mat2x4((1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) : _GLF_FUZZED(-463.141))))) - 0.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), float(_GLF_FUZZED(-2.1)), bool(false)))), 0.0, cos(0.0)), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0), max(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(mat4x3(vec3(1.0, 1.0, 1.0), 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat3(1.0) * (mat4x3(vec3(1.0, 1.0, 1.0), 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))), (round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0))))), 1.0))))) - 0.0)), 0.0, cos(0.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-60.68)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), min(_GLF_IDENTITY(1.0, (1.0) * round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0))), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), 0.0, cos(0.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), clamp((1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) / vec3(1.0, 1.0, 1.0))))), (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0))))), (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (true ? _GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))) : _GLF_FUZZED(-6.5))), float(_GLF_FUZZED(-3381.1674)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0)), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY((cos(0.0)), (true ? (cos(0.0)) : _GLF_FUZZED(983.613))) + 0.0))), min((vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))), (vec3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) - vec3(0.0, 0.0, 0.0))))))), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0))))) + vec3(0.0, 0.0, 0.0)))))))))), _GLF_struct_14(vec2(1.0)), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(57042) : 1)))), (~ (~ (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(57042) : 1))))) ^ 0)), _GLF_IDENTITY(ivec2(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec2(-48675, -66821)) : ivec2(1))), uvec4(1u), mat4x2(1.0)), bvec2(true), _GLF_IDENTITY(0, (0) | 0), _GLF_struct_19(_GLF_struct_16(1u, mat4x3(1.0), mat2x4(1.0), mat4x2(1.0), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(ivec4(int(int(1)), 0, 0, 1)))))), _GLF_struct_17(1.0, vec3(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, 0.0)), mat3x2(1.0), vec2(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7.2), min(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7.2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7.2)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7.2))))))), _GLF_struct_18(mat3x4(1.0), ivec4(1), 1u, mat4x2(1.0), bvec4(true), uvec2(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(read))), (_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(read)))) * 1u))))), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u)))), _GLF_struct_23(_GLF_struct_20(1.0, _GLF_IDENTITY(1u, ~ (~ (1u))), uvec4(1u)), ivec2(1), _GLF_struct_21(mat2x3(1.0), 1.0, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(2u), uvec2(2u)))), true, 1, uvec2(1u), mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.0)))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0))), 0.0 + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.0)))), clamp((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.0)))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.0)))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.0)))), (true ? (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.0)))) : _GLF_IDENTITY(_GLF_FUZZED(4417.1680), 1.0 * (_GLF_FUZZED(4417.1680))))))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(clamp(1.0, 1.0, 1.0)), float(_GLF_FUZZED(656.168)), bool(false))))))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 1.0, 1.0)))), bvec3(true), _GLF_struct_22(ivec4(1), vec2(1.0))), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, 1.0)), min(float(mat2x4(1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0)), float(mat2x4(1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0)))))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[_GLF_struct_replacement_12.virtual_gid], _GLF_IDENTITY(read, (read) / 1u), 4, 64, 4);
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       return;
      }
    }
   else
    {
    }
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-30.99), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || ((injectionSwitch.x > injectionSwitch.y))))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       atomicStore(checker[_GLF_struct_replacement_12.virtual_gid], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((0 ^ 1), clamp(_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) | (_GLF_IDENTITY((0 ^ 1), int(ivec2((0 ^ 1), 1))))), (0 ^ 1), _GLF_IDENTITY((0 ^ 1), 0 | ((0 ^ 1))))) ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true))); _injected_loop_counter ++)
              {
               return;
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      continue;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
}
