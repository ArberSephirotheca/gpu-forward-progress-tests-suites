#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 mat3 _f0;
 int i;
} ;

struct _GLF_struct_26 {
 vec2 _f0;
 vec4 _f1;
 mat2 _f2;
 uvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 mat4 _f1;
 _GLF_struct_27 _f2;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 uvec3 _f1;
 mat3 _f2;
 bool _f3;
 uvec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_22 {
 float _f0;
 mat2x4 _f1;
 bvec3 _f2;
 uint _f3;
 mat3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_24 _f2;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_28 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 int _f1;
 mat2 _f2;
 bvec3 _f3;
 bool _f4;
 vec3 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
 uvec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_17 {
 uint _f0;
 ivec2 _f1;
 bvec3 _f2;
 float _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_16 {
 ivec3 _f0;
 mat4 _f1;
 uvec3 _f2;
 mat3x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_18 {
 int _f0;
 uvec2 _f1;
 bool _f2;
 _GLF_struct_16 _f3;
 ivec4 _f4;
 _GLF_struct_17 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 ivec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 uvec3 _f1;
 uvec2 _f2;
 ivec3 _f3;
 uvec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_12 {
 int _f0;
 vec4 _f1;
 mat4x2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 mat3x4 _f1;
 _GLF_struct_13 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 _GLF_struct_14 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_9 {
 float _f0;
 mat2x3 _f1;
 mat3 _f2;
 vec2 _f3;
 mat4 _f4;
 mat4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 mat3x4 _f1;
 bool _f2;
} ;

struct _GLF_struct_7 {
 bool _f0;
 bvec3 _f1;
 uvec3 _f2;
 vec2 _f3;
 vec3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_21 {
 uint next_virtual_gid;
 _GLF_struct_11 _f0;
 _GLF_struct_15 _f1;
 int _f2;
 mat4x3 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 vec3 _f1;
 float _f2;
 vec3 _f3;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 vec3 _f1;
 vec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 vec4 _f1;
 vec3 _f2;
 float _f3;
 bool _f4;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 uvec2 _f1;
 bvec3 _f2;
 mat3x2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 _GLF_struct_1 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 uint workgroup_base;
 mat4 _f1;
 _GLF_struct_5 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(-583.222, -9.1), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true, true)))))
      return;
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false))) && true) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9785.1756) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.2)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-739.888)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9440.8783)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))) : _GLF_FUZZED(873.036)))))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9785.1756) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.2)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-739.888)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9440.8783)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))) : _GLF_FUZZED(873.036)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7203.7385 - 38.04)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3822.5286, 6.7)) : injectionSwitch)))[0], (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0)) / 1.0), _GLF_FUZZED(6.7)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-311.989))) > injectionSwitch.y), false), false, false))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(33.40)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))), (! (_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false)))))))) || false))))))), false)), bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))), (! (_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false)))))))) || false))))))), false)), false)))))), true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))), true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.0) : injectionSwitch.y))), float(_GLF_FUZZED((- -39.46))), bool(false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, abs(0.0), 0.0, 0.0))).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), false, false))), true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), min(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))))), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))) * 1.0)), 1.0)), mix(vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(31.44)), vec2((_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(297.363), _GLF_FUZZED(30.02)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), mat3(1.0) * (vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))) * 1.0)), 1.0)), (false ? _GLF_FUZZED(vec2(-90.25, 7238.2683)) : vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(297.363), _GLF_FUZZED(30.02)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), mat3(1.0) * (vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))) * 1.0)), 1.0)))))[0], (vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) * 1.0)), 1.0)))[1]), bvec2(true, true)))).y)) && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), true && ((false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), true && ((false))))), (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), true && ((false)))))) && true))))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bool(false))))) || false), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(sign(-499.906), float(float(sign(-499.906))))) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))) > injectionSwitch.y)))))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), false, false, false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-17.18)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), bool(bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))), true))))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- -1.5))), bool(false))))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5493.2210, -58.89)) : injectionSwitch)).y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), true && (bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(mat4x3(1.0), uvec2(1u), bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), mat3x2(1.0), uvec2(_GLF_IDENTITY(1u, (0u ^ 0u) | (_GLF_IDENTITY(1u, 0u + (1u)))))), ivec4(1), _GLF_struct_1(ivec3(1), vec4(1.0), vec3(1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) && true)) || false)), false))))))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((true)))), _GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, false || (false)), true))))))))), _GLF_IDENTITY(bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, false || (false)), true))))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, false || (false)), true))))))))), true))), bool(bvec3(! (bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, false || (false)), true))))))))), true))), true, true))))))))))), ! (! (true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), ! (! (true)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), ! (! (true)))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ((true) || false) && true))))) && true))) && true))), ! (! (true)))))))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true)))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), true)))))))), false, _GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))) && true))), ! (! (true))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)))), false), false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true))), true, false)))))))), ! (! (_GLF_IDENTITY(true, true && (true))))))) && true), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false)))), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false)))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY((! (true)), ((! (true))) || false) || false)))), false, false, false)))))))))), true && (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(true, (true) && true)))), (((! (_GLF_IDENTITY(true, (true) && true))))) || false) || false, ! (! (((! (_GLF_IDENTITY(true, (true) && true)))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(true, (true) && true)))), (((! (_GLF_IDENTITY(true, (true) && true))))) || false) || false, ! (! (((! (_GLF_IDENTITY(true, (true) && true)))) || false)))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(true, (true) && true)))), (((! (_GLF_IDENTITY(true, (true) && true))))) || false) || false, ! (! (((! (_GLF_IDENTITY(true, (true) && true)))) || false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))), mat4x2(1.0)), workgroup_size * workgroup_id, mat4(1.0), _GLF_struct_5(_GLF_struct_3(mat3x4(1.0), vec3(1.0), vec2(1.0), bvec2(true)), ivec3(1), _GLF_struct_4(vec2(1.0), vec3(1.0), 1.0, vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.6)))))));
 uint virtual_gid = _GLF_struct_replacement_6.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(subgroup_id, 1u, 0u, (1u & 1u)), (uvec4(subgroup_id, 1u, 0u, (1u & 1u))) << uvec4(0u, 0u, 0u, 0u)))))), clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), min(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))), (~ (subgroup_size))))), (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), min(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))), uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) * subgroup_size))))), uint(uvec4(min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size))), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) << (0u | 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)))), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(reflect(6.9, 71.22)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(reflect(6.9, 71.22)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(-16.01)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(reflect(6.9, 71.22)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true)) || false))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-104.540) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))))))))) && true))))) || false)) && true))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(573.239)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(573.239)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) && true)) || false))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true, false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true, bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))) && true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y), float(_GLF_FUZZED(6.8)), bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || _GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_base, max(_GLF_struct_replacement_6.workgroup_base, _GLF_struct_replacement_6.workgroup_base)), 0u, (1u & 1u))), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_base, max(_GLF_struct_replacement_6.workgroup_base, _GLF_struct_replacement_6.workgroup_base)), 0u, (1u & 1u)))) - 0u)) + subgroup_id * subgroup_size, _GLF_struct_replacement_6.workgroup_base + subgroup_id * subgroup_size, _GLF_struct_replacement_6.workgroup_base + subgroup_id * subgroup_size))) | 0u) + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_11(_GLF_struct_7(_GLF_IDENTITY(true, ! (! (true))), bvec3(true), uvec3(1u), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))) - 0.0)), _GLF_IDENTITY(vec3(1.0), clamp(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0))), vec3(1.0), vec3(1.0)))), _GLF_struct_8(ivec3(1), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), true), _GLF_struct_9(1.0, mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) * sqrt(1.0)) : _GLF_FUZZED(tan(-78.17)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0)) - 0.0), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x3(vec3(1.0, 0.0, 0.0), 1.0, 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0)), 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(1.0))), (false ? _GLF_FUZZED(mat3(-7.2, -8941.5923, 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)) : mat3(1.0)))))))), (true ? mat3(mat4x3(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec3(mat2x3(vec3(1.0, 0.0, 0.0), 1.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat2x3(vec3(1.0, 0.0, 0.0), 1.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))) * mat3(1.0))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(171.012, -127.722, 84.36, 79.72).s)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(-7.2, _GLF_IDENTITY(-8941.5923, mix(float(_GLF_FUZZED(54.73)), float(_GLF_IDENTITY(-8941.5923, (-8941.5923) / 1.0)), bool(true))), 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)) : mat3(1.0)), transpose(transpose((false ? _GLF_FUZZED(mat3(-7.2, _GLF_IDENTITY(-8941.5923, mix(float(_GLF_FUZZED(54.73)), float(_GLF_IDENTITY(-8941.5923, (-8941.5923) / 1.0)), bool(true))), 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)) : mat3(1.0))))))))))) : _GLF_FUZZED(mat3(-95.35, -58.32, -7.7, 8067.7488, -3031.4256, -2811.6473, -2.3, -582.421, 7.7)))), transpose(_GLF_IDENTITY(transpose(mat3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0)))), transpose(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0)))), (transpose(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-278.165)), bool(false))) : _GLF_FUZZED(-967.574)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(-7.2, -8941.5923, 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)), (_GLF_IDENTITY(_GLF_FUZZED(mat3(-7.2, -8941.5923, 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)), mat3(mat3(_GLF_FUZZED(mat3(-7.2, -8941.5923, 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)))))) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) : mat3(1.0))))))))), (true ? transpose(_GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), (false ? _GLF_FUZZED(mat3(-7.2, -8941.5923, 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)) : mat3(1.0)))))))), (false ? _GLF_FUZZED(mat3(0.5, -4.4, -7.4, -357.820, 123.015, -83.02, 31.55, 809.686, -774.482)) : mat3(mat4x3(_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9533.2221))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-53.74))), 1.0, 1.0))) - 0.0), 1.0))))), (false ? _GLF_FUZZED(mat3(-7.2, -8941.5923, 72.74, -4.5, -1344.0694, -1954.9566, 71.15, -40.12, -2.1)) : mat3(1.0))))))))))) : _GLF_FUZZED(mat3(907.448, -18.01, 6626.3512, 9.5, 3477.2459, -0.9, 2046.4736, 41.34, 7.5))))))), vec2(1.0), mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), min(0.0, 0.0)), 0.0)) : _GLF_FUZZED(-8.3))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1185.9325)), float(0.0), bool(true))), 0.0)), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), 1.0)))), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), uvec2(1u)), _GLF_struct_10(mat2x4(1.0), mat2(1.0))), _GLF_struct_15(_GLF_struct_12(1, vec4(1.0), mat4x2(1.0), uvec4(1u)), mat3x4(1.0), _GLF_struct_13(mat3x4(1.0), uvec3(1u), uvec2(1u), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), ((1)) - 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((1)) | 0)))) - 0), 0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6)))), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), (((1))) | (((1)))) | 0), 0 | (_GLF_IDENTITY((1), ((1)) | 0)))) - 0), 0, (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), vec2(_GLF_FUZZED(-294.613), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x)) >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-45669, 81591, 21579), (ivec3(-45669, 81591, 21579)) | ivec3(0, 0, 0)))))), _GLF_IDENTITY(0 ^ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), min(_GLF_IDENTITY((1), clamp((1), (1), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), int(ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), 1)))))) - 0)) >> 0), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) * 1))), max(((_GLF_IDENTITY(1, (1) * 1))), ((_GLF_IDENTITY(1, (1) * 1))))) | 0), 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) | (6)))), _GLF_IDENTITY((6), min((6), (6))) | (6)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) | (6))))))) << 0))))), (_GLF_IDENTITY(0 ^ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), min(_GLF_IDENTITY((1), clamp((1), (1), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), int(ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), 1)))))) - 0)) >> 0), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) * 1))), max(((_GLF_IDENTITY(1, (1) * 1))), ((_GLF_IDENTITY(1, (1) * 1))))) | 0), 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) | (6)))), _GLF_IDENTITY((6), min((6), (6))) | (6)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) | (6))))))) << 0))))), 0 ^ (0 ^ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), min(_GLF_IDENTITY((1), clamp((1), (1), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), int(ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), 1)))))) - 0)) >> 0), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) * 1))), max(((_GLF_IDENTITY(1, (1) * 1))), ((_GLF_IDENTITY(1, (1) * 1))))) | 0), 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) | (6)))), _GLF_IDENTITY((6), min((6), (6))) | (6)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) | (6))))))) << 0)))))))) | (0 ^ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), min(_GLF_IDENTITY((1), clamp((1), (1), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), int(ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), 1)))))) - 0)) >> 0), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) * 1))), max(((_GLF_IDENTITY(1, (1) * 1))), ((_GLF_IDENTITY(1, (1) * 1))))) | 0), 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) | (6)))), _GLF_IDENTITY((6), min((6), (6))) | (6)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (6) | (6))))))) << 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))), ((1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - _GLF_IDENTITY(0, int(ivec2(0, 0)))), (_GLF_IDENTITY((1), ((1)) - 0)) | (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) | 0)) - 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) ^ 0), ((1)) | 0), _GLF_IDENTITY(0 | (_GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, (0) | (0)))), (0 | (_GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, (0) | (0))))) ^ 0))) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), 0 | (_GLF_IDENTITY((1), ((1)) | 0)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), 0 | (_GLF_IDENTITY((1), ((1)) | 0)))) - 0))), 0, _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(int(ivec4((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) >> _GLF_IDENTITY(int(6), int(6))), 0, 1, 1)), (int(ivec4((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6))))), 0, 1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), (true ? ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0))) | 0, min(((1)) | _GLF_IDENTITY(0, ~ (~ (0))), ((1)) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), 0 | (_GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(((1)), max(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))), ((1)))) | 0, clamp(_GLF_IDENTITY(((1)), max(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))), ((1)))) | 0, _GLF_IDENTITY(((1)), max(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))), ((1)))) | 0, _GLF_IDENTITY(((1)), max(((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))))), ((1)))) | 0)))))) - 0), 0, (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(ivec3(-45669, 81591, 21579))))), 0 ^ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), min(_GLF_IDENTITY((1), clamp((1), (1), (1))), _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, int(ivec2(0, 1))))), clamp((1), (1), (1))), 1)))))) - 0)) >> 0), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), int(int(_GLF_IDENTITY(1, (1) * 1)))))))), max(((_GLF_IDENTITY(1, (1) * 1))), ((_GLF_IDENTITY(1, (1) * 1))))) | 0), 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6))))))), (6) | (6)))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY((6), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6) : _GLF_FUZZED(findLSB(subgroup_id)))) | (6))))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY((6), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6) : _GLF_FUZZED(findLSB(subgroup_id)))) | (6)))))) << (0 | 0)) << 0)))))))) / _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 1)))))) << (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))) / 1, (true ? (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(3), int(3))) / 1 : _GLF_FUZZED(-70373))))))))))), uvec2(1u), mat4x3(1.0)), mat4x3(1.0), bvec2(true), _GLF_struct_14(vec4(1.0), ivec4(1), mat4(1.0)), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((1), ~ (~ ((1))))), ((~ (1))) << 0), ((~ (1))) | ((~ _GLF_IDENTITY((1), ((1)) ^ 0))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))))), _GLF_IDENTITY(1, 0 | (1)))))) | (1)))), ~ (~ ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), ((~ (1))) << 0), ((~ (1))) | ((~ _GLF_IDENTITY((1), ((1)) ^ 0))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))))), _GLF_IDENTITY(1, 0 | (1)))))) | (1)))))))), mat4x3(1.0), _GLF_struct_18(1, uvec2(1u), true, _GLF_struct_16(ivec3(1), mat4(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) << 0u), _GLF_IDENTITY(1u, max(1u, 1u))))), mat3x4(1.0), ivec3(1)), ivec4(1), _GLF_struct_17(1u, ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(true), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bvec3(bvec4(bvec3(true), false)))), false))))), 1.0, 1, 1.0), mat4(1.0)), _GLF_struct_20(_GLF_struct_19(_GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), vec3(1.0), vec3(1.0))), 1, mat2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))) || (true))), bvec3(bvec3(bvec3(true))))))), _GLF_IDENTITY(true, ! (! (true))), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-97.41)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), uvec3(1u), mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_21.next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(int(1)))))), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) ^ 0), 64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5447.9568), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(42.93)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))) < _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(subgroup_size, 0u, 0u, 0u), (uvec4(subgroup_size, 0u, 0u, 0u)) | (uvec4(subgroup_size, 0u, 0u, 0u)))) | (_GLF_IDENTITY(uvec4(subgroup_size, 0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u), (uvec4(subgroup_size, 0u, 0u, 0u)) | (uvec4(subgroup_size, 0u, 0u, 0u))))))), ! (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) / _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 ^ (1))))) < subgroup_size))), _GLF_IDENTITY(false || (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, 0 ^ ((1) | 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) << 0)))) / 1))), 1, 1))) / 1))) < subgroup_size, _GLF_IDENTITY(! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))), ~ (~ ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / _GLF_IDENTITY(1, 0 ^ (1))))) < subgroup_size)), false || (_GLF_IDENTITY(! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), 0 + (min(1, 1)))), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / _GLF_IDENTITY(1, 0 ^ (1))))) < subgroup_size)), bool(bvec4(_GLF_IDENTITY(! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), 0 + (min(1, 1)))), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / _GLF_IDENTITY(1, 0 ^ (1))))) < subgroup_size)), (! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), 0 + (min(1, 1)))), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / _GLF_IDENTITY(1, 0 ^ (1))))) < subgroup_size))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (false || (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1, (0 << _GLF_IDENTITY(int(4), int(4)))), (ivec3(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1, (0 << _GLF_IDENTITY(int(4), int(4))))) | (ivec3(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1, (0 << _GLF_IDENTITY(int(4), int(4)))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1), (clamp(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1)) | (clamp(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1))))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (1))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), max(int(ivec2((_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), int(ivec2((_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))) | (_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) | (_GLF_IDENTITY(1, (1) | (1)))), min(_GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) | (_GLF_IDENTITY(1, (1) | (1)))), int(ivec4(((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) << 0)) * int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) | (_GLF_IDENTITY(1, (1) | (1)))), 1, 0, 1))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) | (_GLF_IDENTITY(1, (1) | (1)))))) << 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), (((1))) ^ 0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1))))) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))) / 1)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))) / 1))))) - 0)) < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) / _GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) / _GLF_IDENTITY(1, 0 ^ (1)), ~ (~ ((_GLF_IDENTITY(1, clamp(1, 1, 1))) / _GLF_IDENTITY(1, 0 ^ (1)))))) ^ 0)))) < subgroup_size))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6444.2737)), bool(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)), false, false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, sin(0.0), 1.0, 0.0, sqrt(1.0), 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))).x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0))))), injectionSwitch) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch))))) - log(vec2(1.0, 1.0))), injectionSwitch)).y) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(refract(-791.408, -94.25, -96.01))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)))) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)))) && true), true))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4x2(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, sin(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) && true), true)))) && true)) && true))), _GLF_IDENTITY(false, (false) && true), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(bvec4(true), _GLF_struct_25(_GLF_struct_22(1.0, mat2x4(1.0), bvec3(true), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))), mat3(1.0), bvec2(true)), _GLF_struct_23(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | _GLF_IDENTITY(((1u)), max(((1u)), ((1u))))) | (_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(1u), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0)), mat3x4(mat4(mat3x4(1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0)))))))))), mat3(mat4x3(mat3(1.0)))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)), ((uvec3(1u))) | ((uvec3(1u)))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y))), mat4(1.0)), _GLF_struct_24(mat3(1.0), mat4x2(1.0))), _GLF_struct_28(_GLF_struct_26(vec2(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(5.2, -60.21, -60.66, -641.261, 472.111, -47.61, 3.2, 87.72, _GLF_IDENTITY(0.9, (false ? _GLF_FUZZED(-2917.4899) : 0.9)), -6332.1118, -1300.1670, -1.0, -593.320, -80.27, 4.5, 510.656)) : mat4(1.0)))))), (_GLF_IDENTITY((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(mat3(1192.7789, -4163.3616, 9.4, -3684.8054, 11.59, 7216.9972, 52.05, 4.1, _GLF_IDENTITY(4469.3696, max(4469.3696, 4469.3696))))) : mat4(1.0))), max((vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(mat3(1192.7789, -4163.3616, 9.4, -3684.8054, 11.59, 7216.9972, 52.05, _GLF_IDENTITY(4.1, float(mat2x3(4.1, sqrt(1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), 4469.3696))) : mat4(1.0))), (vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(mat3(1192.7789, -4163.3616, 9.4, -3684.8054, 11.59, 7216.9972, 52.05, 4.1, 4469.3696))) : mat4(1.0)))))) / vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2510.7919)), bool(false))), 0.0, 0.0), mat4x2(mat4(mat4x2(1.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (false ? _GLF_FUZZED(mat2(616.470, 5.7, _GLF_IDENTITY(-884.924, clamp(-884.924, -884.924, -884.924)), 3980.7392)) : mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), uvec4(1u), true), mat4(1.0), _GLF_struct_27(mat3(1.0), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (0) ^ 0)), max(_GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-24142) : 0))), _GLF_IDENTITY(0, (0) - 0))))))), bvec4(true));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, ((_GLF_IDENTITY(false, false || (false))) && true) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, false || ((false) && true))))), true, false))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))), false || (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false)))), false)))))))) || false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(false))), bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) && true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << 0))) | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << 0)))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec3(0 ^ (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, _GLF_IDENTITY(0, 0 ^ (0)))), int(ivec3(int(ivec3(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0)), 1, 1)))), 0 ^ (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(80248)))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) | 0), 64)), clamp(64, 64, 64)), 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).y) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true, true))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, bool(bool(false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, (false) && true))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), false, false)), true, false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
