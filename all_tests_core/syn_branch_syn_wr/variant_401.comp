#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1093.5414)), vec2(_GLF_FUZZED(208.440), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-71.22)))), bvec2(false, true))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1093.5414)), vec2(_GLF_FUZZED(208.440), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-71.22)))), bvec2(false, true))).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1093.5414)), vec2(_GLF_FUZZED(208.440), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-71.22)))), bvec2(false, true))).y), true, false, false)), bool(bvec2(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1093.5414)), vec2(_GLF_FUZZED(208.440), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-71.22)))), bvec2(false, true))).y), true, false, false)), true)))))))), false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.4))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false)))) && true))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.4) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupSize)))), max(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupSize)))), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) | (uvec3(gl_WorkGroupSize)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec3(0.0, 0.0, 0.0))), 0.0)), abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))), ~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))))).x)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))), min(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))))))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (99034u & uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u))))))))) * uvec3(1u, 1u, 1u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))))).x)), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(49403u, 181600u, 54819u)) : gl_WorkGroupSize)), max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) - uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (false ? _GLF_FUZZED(mat2(-16.79, -2.2, 261.365, -34.34)) : mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0))), _GLF_IDENTITY((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)), mat2(_GLF_IDENTITY(mat3((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0))), transpose(_GLF_IDENTITY(transpose(mat3((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)))), mat3(mat3(transpose(mat3((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0))))))))))) * mat2(1.0)) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-587.607, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (vec3(-587.607, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0))))))) - 0.0)), 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) - uvec3(0u, 0u, 0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), _GLF_IDENTITY((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0), transpose(transpose((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0))))) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(uvec3(~ (uvec3(uvec4(gl_WorkGroupSize, 0u)))))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), _GLF_IDENTITY((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0), transpose(transpose((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0))))) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(uvec3(~ (uvec3(uvec4(gl_WorkGroupSize, 0u)))))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), _GLF_IDENTITY((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0), transpose(transpose((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0))))) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(uvec3(~ (uvec3(uvec4(gl_WorkGroupSize, 0u)))))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), _GLF_IDENTITY((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0), transpose(transpose((mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0))))) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(_GLF_IDENTITY(~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), uvec3(uvec3(~ (uvec3(uvec4(gl_WorkGroupSize, 0u)))))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))), ~ (uvec3(uvec4(gl_WorkGroupSize, 0u))))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)))))) : _GLF_FUZZED(subgroup_local_id))), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))) << uvec3(0u, 0u, 0u)), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), min(uvec4(gl_WorkGroupSize, 0u), uvec4(gl_WorkGroupSize, 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED((uvec3(85655u, 137943u, 179192u) - (subgroup_id + subgroup_id))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-4401.6007 , uvec3(39578u, 94417u, 62521u))) : gl_WorkGroupSize)), 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(uvec4(gl_WorkGroupSize, 0u))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) - 0u)))))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(-5.6, 580.657, 4.4, -9194.3697)) : _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)))) : _GLF_FUZZED(mat2(-587.607, 38.25, -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u))))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) * uvec4(1u, 1u, 1u, 1u))))))))))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), 0u)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))))), 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? _GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0), (mat2(injectionSwitch.x, 0.0, abs(0.0), 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2(-587.607, _GLF_IDENTITY(38.25, (38.25) - 0.0), -3776.7158, 386.548))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), gl_WorkGroupSize[2])), 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6976.2323, 50.20)) : injectionSwitch))) / abs(vec2(1.0, 1.0))).x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (true ? uvec3(uvec4(gl_WorkGroupSize, 0u)) : _GLF_FUZZED(min(uvec3(190997u, 165458u, 166548u), num_workgroup)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u))))) * uvec4(1u, 1u, 1u, 1u)))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).x)))) : _GLF_FUZZED(subgroup_local_id))), 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_local_id))), ~ (~ (gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), mix(float(_GLF_FUZZED(-32.91)), float(float(float(injectionSwitch.x))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(uvec3((workgroup_size * workgroup_id), _GLF_IDENTITY(0u, 0u | (0u)), 0u))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, 1u))))), _GLF_IDENTITY(max(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))), (max(4u, _GLF_IDENTITY(4u, ~ (~ (4u))))) | 0u))), uint(4u))) - 0u), _GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(4u), uint(4u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), false))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), 0u ^ (uint((subgroup_local_id + 1) % subgroup_size)))), (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1) % subgroup_size), 0u ^ (uint((subgroup_local_id + 1) % subgroup_size))))) >> 0u)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % subgroup_size)))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))), 1u, 1u), uvec3(_GLF_IDENTITY(uvec4(uvec3(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (subgroup_size))))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (subgroup_size)))))))))), 1u, 1u), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uvec3(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), min(~ _GLF_IDENTITY(((subgroup_size)), min(_GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), min(((subgroup_size)), ((subgroup_size))))) >> 0u), ((subgroup_size)))), ~ ((subgroup_size)))))) | (subgroup_size))), (((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size)))), 1u, 1u), 1u))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec3(-13835, 96015, 11602)[2]) : 1))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) << 0u) | (((subgroup_local_id + 1) % subgroup_size)))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) << 0u) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 1u), clamp(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 1u), uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 1u), uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 1u))))))))) << 0u)) / _GLF_IDENTITY(1u, min(1u, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((-12.26)), _GLF_FUZZED(914.290)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), 0.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((-12.26)), _GLF_FUZZED(914.290)), _GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[1]), (true ? _GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[1]), min(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[1]))) : _GLF_FUZZED(injectionSwitch))), bvec2(true, true))), 0.0, 1.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.6)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, determinant(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, sin(0.0))), 1.0, exp(0.0), 1.0, 0.0, tan(0.0), 0.0, cos(0.0), 0.0, 0.0, exp(0.0), determinant(mat4(1.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(44.65, 27.80, -22.46, 6.3, -4936.5413, -9070.3736, -4.7, 9834.5681, 1.5))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), 1.0, 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1999.0268))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (bool(bvec4(true, true, _GLF_IDENTITY(true, (true) || false), true))))) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(-1999.0268)), max((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(-1999.0268)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(true, true, true, true))))) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), float(mat3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(-1999.0268)))))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-6.0, 3283.1194).s)), bool(false))))), false), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, true, true)), (bool(bvec4(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, true, true))) && true), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true, true, true)), (bool(bvec4(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true))))))))), true, true, true))) && true), true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (true && (false))), (! (! (true && (false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), (bool(bool(false))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), false || ((false)))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), true, true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(vec3(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8486.9228)), float(injectionSwitch.y), bool(true)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0)))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), float(vec3(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))))))))) || false)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))) || (false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 + (1))) << 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> (0 | 0))) ^ 0), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) || false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0))), 0.0, 0.0, 0.0, sqrt(1.0))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, true && (false))), false))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), ! (! (! (subgroup_local_id + 1 < subgroup_size)))))), true)), (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))) || false), bool(bool(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), true))) || false)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), (bool(bvec2(subgroup_local_id + 1 < subgroup_size, true))) || false), bool(bool(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), false || (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), true))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)) < subgroup_size)), true))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < subgroup_size, true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u) + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u) + 1) ^ (107115u & 0u)))) < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < subgroup_size, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) ^ 0u) + 1 < subgroup_size, true))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < subgroup_size, true))), true, true)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(46624) : 1)) < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < subgroup_size, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < subgroup_size, true))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1 < subgroup_size, true))), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))))) && true)) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (int(ivec3(1, 1, 0))))) < subgroup_size, true)), (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), true))) || false))), ! (! (bool(bool(_GLF_IDENTITY(bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (int(ivec3(1, 1, 0))))) < subgroup_size, true)), (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), true))) || false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(339.170) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(52.39), _GLF_FUZZED(-7.7)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-875.863, 47.46)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0)))))[1])).y))), clamp((false ? _GLF_FUZZED(339.170) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (false ? _GLF_FUZZED(339.170) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), mix(float(_GLF_FUZZED(-13.08)), float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(true))) / 1.0)), (false ? _GLF_FUZZED(339.170) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 + (0)), 0))], injectionSwitch[1])).y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     return;
    }
   int i = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (0) | (0)), 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))], injectionSwitch[1])), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && true)) && true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-9568.0283)), bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-9568.0283)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (! (bool(false)))))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, tan(0.0), 1.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))) * 1.0)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(-9568.0283), mix(float(_GLF_FUZZED(-9568.0283)), float(_GLF_FUZZED(-1.4)), bool(false)))), bool(false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), (bool(bvec2((! (false)), false))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat4(1.0) * (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat4(1.0) * (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), injectionSwitch), vec2(vec3(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat4(1.0) * (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat4(1.0) * (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), injectionSwitch), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-4.2)), vec2(_GLF_FUZZED(-4.6), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], float(vec3((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1], 1.0, 1.0)))), bvec2(false, true)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(i) : 0))])), _GLF_IDENTITY(_GLF_FUZZED(227.402), (_GLF_FUZZED(_GLF_IDENTITY(227.402, 1.0 * (_GLF_IDENTITY(227.402, clamp(_GLF_IDENTITY(227.402, float(mat3x2(227.402, 1.0, 1.0, 0.0, 1.0, 1.0))), 227.402, 227.402)))))) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(53.54), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)])), _GLF_FUZZED(227.402)), vec2(_GLF_IDENTITY(_GLF_FUZZED(53.54), _GLF_IDENTITY(float(float(_GLF_FUZZED(53.54))), clamp(float(float(_GLF_FUZZED(53.54))), float(float(_GLF_FUZZED(53.54))), float(float(_GLF_FUZZED(53.54)))))), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), clamp(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_FUZZED(227.402)), vec2(_GLF_FUZZED(53.54), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(5), int(5))) + (0))], (injectionSwitch)[0])), _GLF_FUZZED(227.402)), vec2(_GLF_FUZZED(53.54), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))) + log(vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(227.402), (_GLF_FUZZED(227.402)) / 1.0)), vec2(_GLF_FUZZED(53.54), (injectionSwitch)[1]), bvec2(false, true))).y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, true, _GLF_IDENTITY(false, true && (false)), true))))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(933.790), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 1 * ((4)))) ^ (0 & 71004))) << ((0 ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, 0 + (0))))) >> _GLF_IDENTITY(int(1), int(1)))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(int(0)))))), 1 * _GLF_IDENTITY((0), ((0)) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) >> ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(2), int(2)), 0 ^ (0 << _GLF_IDENTITY(int(2), int(2))))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))), max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) + 0), 4)), clamp(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | (_GLF_IDENTITY(min(4, 4), 0 | (_GLF_IDENTITY(min(4, 4), (min(4, 4)) / 1)))))), _GLF_IDENTITY(4, min(4, 4))))))), (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, max(_GLF_IDENTITY((4) + 0, min((4) + 0, (4) + 0)), _GLF_IDENTITY((4) + 0, ~ (_GLF_IDENTITY(~ ((4) + 0), 0 | (~ ((4) + 0)))))))), 4)), clamp(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | (_GLF_IDENTITY(min(4, 4), 0 | (_GLF_IDENTITY(min(4, 4), (min(4, 4)) / 1)))))), _GLF_IDENTITY(4, min(4, 4)))))))) / 1)))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.6)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), abs(0.0)))) / 1.0)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
