#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.xy = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
  }
 uvec4 GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id;
 uvec4 GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_id;
 uvec4 GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid;
 uvec4 GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread;
 uvec4 GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid;
 uvec4 GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size;
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.xyz = GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_size;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.xyz;
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5)))), (false ? _GLF_FUZZED(clamp(96765, -17675, 95959)) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5)))), (false ? _GLF_FUZZED(95546) : 1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.xy = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.xy = GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.xy, ~ (~ (GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.xy = GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.xy)));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size.xy = GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.xy;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy = GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size.xy;
  }
 else
  {
  }
 uvec4 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid;
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size;
 GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id.xyz = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_size;
 do
  {
   GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_id.xyz = _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id.xyz, (GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id.xyz) << uvec3(0u, 0u, 0u));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_id.xyz;
    }
  }
 else
  {
  }
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.w = subgroup_id;
 GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_id.w = GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_74_3_1_11GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_id.w;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.xy.x = subgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.xy.x;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackHalf2x16(54633u)))).x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))) || false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(false || (false), true, false, false)), (bool(bvec4(false || (false), true, false, false))) || false))))))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id.w = subgroup_local_id;
 do
  {
   GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.z = GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id.w;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.z = GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.z;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))
              {
               for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) + 0))) ^ (7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0))))) >> _GLF_IDENTITY(int(0), int(0))) * (0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) ^ 0)))) >> (0 ^ 0)), int(ivec3(_injected_loop_counter, 0, 1))) != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), bool(bvec3(! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), true, true)))) && true)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.z;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.y) << (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u);
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.x = num_workgroup;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1)), _GLF_IDENTITY(1, min(1, 1)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), min(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(min(int(3), int(3)), (min(int(3), int(3))) - 0)))), _GLF_IDENTITY(int(3), (int(3)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) ^ 0), (_GLF_IDENTITY(int(3), (int(3)) ^ 0)) >> 0))), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))
    {
     GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.x;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(1, 0 + (1)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (min(_injected_loop_counter, _injected_loop_counter)) / 1))) - 0) > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), ~ (~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy), (~ (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy)) * (uvec2(1u, 1u) | uvec2(1u, 1u))))).x, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, ~ (~ (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size))).xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)))) << 0u, ((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)))) << 0u) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(uvec2(5u, 1u)))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(5u, uint(uvec2(5u, 1u)))), 0u)), (uint(uvec2(uint(_GLF_IDENTITY(5u, uint(uvec2(5u, 1u)))), 0u))) << 0u)), uint(5u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size) | (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size)).xy.x, 1u)), (uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, _GLF_IDENTITY(1u, (1u) + 0u)))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) : GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size)).xy, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) : GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size)).xy), (~ (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) : GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size)).xy)) >> uvec2(0u, 0u)))).x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))))), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, uvec4(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size[0], GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size[1], GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size[2], GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size[3])).xy.x, 1u))))))), (true ? GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy, _GLF_IDENTITY(uvec2(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy)), (uvec2(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy))) | (uvec2(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy))))).x, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, min(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size, GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size)).xy.x, _GLF_IDENTITY(1u, 0u | (1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy, (GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)))) << 0u, ((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, _GLF_IDENTITY(uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)), uint(uint(uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))))))) << 0u) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(5u, (5u) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), uint(5u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, _GLF_IDENTITY(uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)), (uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))) ^ 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))), (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)))) | (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))))), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))), (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u)))) | (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, 1u))))), _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, uint(uvec2(GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, _GLF_IDENTITY(length(0.0), 0.0 + (length(0.0))), 1.0, 1.0, abs(sqrt(0.0)), 0.0, 0.0, log(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), injectionSwitch.y))))))))))))) : _GLF_FUZZED(163967u)));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
        }
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.xy.y = workgroup_size;
 do
  {
   GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size.w = GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.xy.y;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w = GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size.w;
 for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), _GLF_IDENTITY(int(5), 0 + (int(5)))))); _injected_loop_counter --)
  {
   _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w, ~ (~ (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w)))) - 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w, ~ (~ (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.w)))) - 0u) : _GLF_FUZZED(subgroup_local_id)))) / 1u);
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x));
 GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size.z = GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.w;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter > 0, false, true), bvec3(bvec3(bvec3(_injected_loop_counter > 0, false, true))))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(true))), 0.0)))), injectionSwitch.x)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.w = GLF_merged3_0_2_52_2_1_12_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_baseworkgroup_idworkgroup_size.z;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), false, true, false)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint workgroup_base = GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.z * GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.w;
 GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.z;
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id) ^ uvec4(0u, 0u, 0u, 0u)).z;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(132.769)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(132.769)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), _GLF_IDENTITY(bool(bvec2((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y) / 1.0)))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false, true))))))))))))), true)), ! (! (bool(bvec2((! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), injectionSwitch)).y))))), false, true)))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
  }
 uint virtual_gid = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.y + GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x * GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, _GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid), (_GLF_IDENTITY((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid), ((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid)) | uvec4(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u))) | ((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid))) | uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)).xyz.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) | uvec4(0u, 0u, 0u, 0u)).xyz.x, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) | uvec4(0u, 0u, 0u, 0u)).xyz.x)), (~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid) | uvec4(0u, 0u, 0u, 0u)).xyz.x))) - 0u)) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0))) < injectionSwitch.y))))
  {
   _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w = virtual_gid, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w = virtual_gid), ((GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w = virtual_gid)) << 0u), 0u ^ (~ _GLF_IDENTITY((GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w = virtual_gid), ((GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w = virtual_gid)) << 0u)))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
      {
      }
     else
      {
       GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w, max(GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w, _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w), (~ (GLF_merged3_0_2_52_2_1_17_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idvirtual_gid.w)) | 0u)))))) << 0u);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((1 | (0 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), ((1 | (0 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y), min(_GLF_IDENTITY(clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y), _GLF_IDENTITY(uint(uvec2(clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y), 1u)), min(uint(uvec2(clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y), 1u)), uint(uvec2(clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y), 1u))))), clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y))), (clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y)) | (clamp(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y, GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupvirtual_gidworkgroup_baseworkgroup_id.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(intBitsToFloat(-30325)) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-86300) : int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), 1 * (int(4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-85476) : 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), max((false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), false, false))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), false, false))), false, false)))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false)), true))))))))))))))
  barrier();
 uint next_virtual_gid = GLF_merged3_0_2_52_2_1_17_3_1_14GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basesubgroup_local_idworkgroup_size.xy.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x, clamp(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x, ~ (~ (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x))), _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x, (45081u & 0u) | (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x)), GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x)) * GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, min(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz, ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) ^ (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz)).x * GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.x * _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, min(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, clamp(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid)))), GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid)).xyz.z)) + ((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0)))) / 1)) % _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, 0u ^ _GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z), (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, clamp(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid)).xyz.z), (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, clamp(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid)).xyz.z), (true ? (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, clamp(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid, GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid)).xyz.z) : _GLF_FUZZED(virtual_gid))) : _GLF_FUZZED(workgroup_base)))) / 1u)) * 1u), ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z)) * 1u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z), (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z), ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z)) / 1u)) * 1u), ((GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z)) * 1u)) : _GLF_FUZZED((GLF_merged3_0_2_52_2_1_14_3_1_12GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeworkgroup_baseworkgroup_id.w << 188289u)))) * 1u)));
 GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.w = next_virtual_gid;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w = GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.w;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))));
 GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.x = GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.w;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.x], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), _GLF_IDENTITY(uint(1), 0u ^ (uint(1)))))) ^ 0u), _GLF_IDENTITY(4, (4) / 1), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (0 << _GLF_IDENTITY(int(4), int(4))) ^ (_GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1)))), (false ? _GLF_FUZZED(-9183) : _GLF_IDENTITY((4), int(ivec2((4), 0))) / 1))));
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(59848) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) / 1.0))))).y)))), (true ? mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))), clamp(_GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))), _GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))))) * mat2(1.0))[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y) / 1.0))))) : _GLF_FUZZED(mat2(_GLF_IDENTITY(4827.1331, mix(float(_GLF_FUZZED(1.7)), float(4827.1331), bool(true))), -9.2, -6.9, -1256.6479)))) * (injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) / 1.0))))).y)))), (true ? mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))) * mat2(1.0))[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))) * mat2(1.0))[0], injectionSwitch[1]))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)) + 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y), mix(float((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), float(_GLF_FUZZED(316.258)), bool(false)))))))) : _GLF_FUZZED(mat2(_GLF_IDENTITY(4827.1331, mix(float(_GLF_FUZZED(1.7)), float(4827.1331), bool(true))), _GLF_IDENTITY(-9.2, (-9.2) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, sin(0.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, sin(0.0)), vec4(1.0, 0.0, 0.0, 0.0)))), -6.9, -1256.6479)))) * (injectionSwitch)).y, false, false, false)))))))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, clamp(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y, GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y))], _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, ~ (~ (0)))), 64, 0);
 GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.z = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))
  {
   GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.w = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.z, (true ? GLF_merged3_0_2_52_2_1_4_3_1_11GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_basereadsubgroup_id.z : _GLF_FUZZED(GLF_merged2_0_3_74_3_1_17GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizesubgroup_local_id.w)));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY((80413 & 0), 0 | ((80413 & _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), false || (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))) && true))), (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z = _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.w, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.w, (GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.w) | 0u)), uint(uvec3(~ (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.w, (GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizeread.w) | 0u)), 1u, 0u)))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false)))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(smoothstep(8873.4650, 32.16, injectionSwitch)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(-8.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9698.7230), _GLF_FUZZED(9.4)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(-72.75) : (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))[0])), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(-8.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(vec2(231.549, -53.92)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(vec2(-8.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9698.7230), _GLF_FUZZED(9.4)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(-72.75) : (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))[0])), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9698.7230), _GLF_FUZZED(9.4)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(-72.75) : (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))[0])), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9698.7230), _GLF_FUZZED(9.4)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(-72.75) : (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))[0])), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9698.7230), _GLF_FUZZED(9.4)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(-72.75) : (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))[0])), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))) + vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)))))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), ! (! (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))))), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), ! (! (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))))), true))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)), ! (! (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true)))), false || (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, true))))))))), true)))))))))), true, false)))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))), (_GLF_DEAD(false)) || false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-785.017)), bool(false))) > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) << 0)); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                        }
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(clamp(int(6), int(6), int(6)), (clamp(int(6), int(6), int(6))) | 0)))) / 1)) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) - _GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY((1) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) ^ 0), ((1) - _GLF_IDENTITY(0, (0) ^ 0)) / 1)) >> 0))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, (-21536 & 0), 0)), 0 | (int(ivec4(0, 1, (-21536 & 0), 0)))))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | int(_GLF_ZERO(0.0, injectionSwitch.x))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                              }
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                    barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.x + 1 < _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, (true ? _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), 0u)) ^ 1u) * _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z) | (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z))), uint(uvec4((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z, (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z) | (GLF_merged2_0_3_73_3_1_16GLF_merged3_0_1_11_1_1_17_2_1_13subgroup_idsubgroup_local_idsubgroup_sizenext_virtual_gid.xyz.z))), 1u, 1u, 0u)))) : _GLF_FUZZED(uint(-44811)))))
              {
               int i = 0;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), false, false))))
                    {
                    }
                   else
                    {
                     atomicStore(checker[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y], GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, 4, 64, 4);
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], min((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0])), _GLF_FUZZED(vec3(-9.7, 5.8, 27.02).z)), vec2(_GLF_FUZZED(-5.6), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)))).y))))), false, true)))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(6.1) : injectionSwitch[1])))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(6.1) : injectionSwitch[1])))).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(214.224)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(214.224)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))), true, false, false))))), true))))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       atomicStore(checker[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_sizenext_virtual_gid.xyz.y], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, 0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z)), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, min(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, max(GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z)), GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z))) | (GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z)), (GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z) - 0u), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) ^ 0));
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
}
