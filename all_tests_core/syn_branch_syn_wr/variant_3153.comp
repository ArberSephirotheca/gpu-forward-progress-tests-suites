#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), mat3(1.0) * (mat3(mat2(1.0))))), transpose(transpose(mat2(_GLF_IDENTITY(mat3(mat2(1.0)), mat3(1.0) * (mat3(mat2(1.0)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), true))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-952.999)), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (false)))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.0, -74.33)) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4108.2367)), bool(false))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, (false) && true)))))))) || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.5)), bvec2(true, false)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-41.25), _GLF_FUZZED(-51.70)), bvec2(false, false))))).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.y = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), (false ? _GLF_FUZZED(vec2(2.1, -74.15)) : vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.9), (_GLF_FUZZED(8.9)) + 0.0)), (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.9), (_GLF_FUZZED(_GLF_IDENTITY(8.9, max(_GLF_IDENTITY(8.9, mix(float(8.9), float(_GLF_FUZZED(-277.521)), bool(false))), 8.9)))) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))))) * vec2(1.0, 1.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, (false ? _GLF_FUZZED(-125.071) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.9), (_GLF_FUZZED(8.9)) + 0.0)), (true ? vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.9), (_GLF_FUZZED(8.9)) + 0.0)) : _GLF_FUZZED(vec2(-6.1, -4.7)))), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec3((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && true), (injectionSwitch.x < injectionSwitch.y)), false))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-860.328) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (false ? _GLF_FUZZED(vec2(-7.6, 726.080)) : vec2(vec2(injectionSwitch))))).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), _GLF_IDENTITY((vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22))) * mat2(1.0), ((vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22))) * mat2(1.0)) / vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(-7.2, -1576.7006)))), vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)))), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) / cos(0.0))) * (injectionSwitch))[1]), bvec2(true, true)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(656.206), _GLF_FUZZED(-56.22)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch))[1]), bvec2(true, true)))))).y))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), true && (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
      return;
     barrier();
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id))))), min(~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id))))), ~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id)))))))))), uint(uvec4(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), 0u ^ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)), 1u, 1u, 1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.w = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2085.2399)), bvec2(true, false))))).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7514.4803) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7514.4803) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7514.4803) : injectionSwitch.x))))), float(_GLF_FUZZED(-47.79)), bool(false))) > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.w + subgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.w + subgroup_base) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(42682u) : 0u), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(42682u) : 0u)) >> 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.w + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.z = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0), min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0), injectionSwitch[1])), mix(float(_GLF_FUZZED(7.0)), float(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], (injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(ivec2(86233, -97120)) : ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(ivec2(86233, -97120)) : ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))), (false ? _GLF_FUZZED(-1976) : int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(ivec2(86233, -97120)) : ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (false ? _GLF_FUZZED(ivec2(86233, -97120)) : ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(10289))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))))]) * 1.0), injectionSwitch[1]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])).x, 0.0)), mix(float(_GLF_FUZZED(7.7)), float(float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))])).x, 0.0))), bool(true)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.x], uint(1), _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> 0)), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), ((_GLF_IDENTITY(4, (4) >> 0))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), ((_GLF_IDENTITY(4, (4) >> 0))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), ((_GLF_IDENTITY(4, (4) >> 0))) << 0), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) >> 0)), ((_GLF_IDENTITY(4, (4) >> 0))) | 0)) << 0), 0)))) ^ _GLF_IDENTITY(0, (0) >> 0)))))))))))))) / 1), 4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.1)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.2) : injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(368.925)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false, true)))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))), true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-96612))), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(normalize(9.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0)), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(determinant(mat4(8.5, 38.07, 521.845, -5159.1527, 34.72, 4.3, -2613.2672, -21.13, 15.15, _GLF_IDENTITY(-898.045, mix(float(_GLF_FUZZED(8117.3941)), float(-898.045), bool(true))), -2.9, 5252.2383, 5088.5329, -57.12, 2.1, -9042.7171)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))), clamp(_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))), (false ? _GLF_FUZZED(packSnorm2x16(injectionSwitch)) : _GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))), (true ? _GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2))) : _GLF_FUZZED(virtual_gid)))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), determinant(mat3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), log(1.0), 0.0, 1.0))).y))))
    barrier();
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.z = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))))))), 4, 64, 2), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2)))), min(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(4, (4) | 0), 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2)))), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - (0u ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) - 0u, max((buf[virtual_gid]) - 0u, (buf[virtual_gid]) - 0u)))) - (0u ^ 0u), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - (0u ^ 0u)) << 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - (0u ^ 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) - 0u)), (clamp(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) - 0u, max((buf[virtual_gid]) - 0u, (buf[virtual_gid]) - 0u)))) - (0u ^ 0u), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - (0u ^ 0u)) << 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - (0u ^ 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) - _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) - 0u))) >> (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)))))), min(buf[virtual_gid], buf[virtual_gid])), 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) - vec2(0.0, 0.0))[1])).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(368.460)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
              return;
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + tan(vec2(0.0, 0.0))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              return;
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true)) && _GLF_IDENTITY(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))), ! (! (_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))))))))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(75.80))), injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), false, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(87.88), _GLF_FUZZED(1.1)), vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), bvec2(true, true))))) > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(87.88), _GLF_FUZZED(1.1)), _GLF_IDENTITY(vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), min(_GLF_IDENTITY(vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), clamp(vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))))), _GLF_IDENTITY(vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), (vec2((vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(float(_GLF_FUZZED(-1.5)), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true))))) / vec2(1.0, 1.0)))), bvec2(true, true))))) > injectionSwitch.y)))) || false, ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(87.88), _GLF_FUZZED(1.1)), vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), min(float(_GLF_FUZZED(-1.5)), float(_GLF_FUZZED(-1.5)))), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), bvec2(true, true)))), clamp(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, length(0.0), abs(1.0), cos(0.0), 1.0, 0.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(-7.3, -2.7, -2.3, 0.5, 65.25, 5824.9019, -606.765, -9170.8842, 2645.0617, 4.0, -5544.5947, -110.038)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, length(0.0), abs(1.0), cos(0.0), 1.0, 0.0, 1.0, 0.0)))), vec2(mat2(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, length(0.0), abs(1.0), cos(0.0), 1.0, 0.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x4(-7.3, -2.7, -2.3, 0.5, 65.25, 5824.9019, -606.765, -9170.8842, 2645.0617, 4.0, -5544.5947, -110.038)) : mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, length(0.0), abs(1.0), cos(0.0), 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0)))).x, 1.0), mix(vec2(_GLF_FUZZED(87.88), _GLF_FUZZED(1.1)), vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), min(float(_GLF_FUZZED(-1.5)), float(_GLF_FUZZED(-1.5)))), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), bvec2(true, true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(87.88), _GLF_FUZZED(_GLF_IDENTITY(1.1, float(vec3(1.1, 1.0, 1.0))))), vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), min(float(_GLF_FUZZED(-1.5)), float(_GLF_FUZZED(-1.5)))), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true))), (_GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), min(float(_GLF_FUZZED(-1.5)), float(_GLF_FUZZED(-1.5)))), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))) - 0.0)), bvec2(true, true)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(87.88, min(_GLF_IDENTITY(87.88, (true ? 87.88 : _GLF_FUZZED(asin(-0.0)))), 87.88))), _GLF_FUZZED(1.1)), vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), min(float(_GLF_FUZZED(-1.5)), _GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), max(float(_GLF_FUZZED(-1.5)), float(_GLF_FUZZED(-1.5)))), float(_GLF_FUZZED(-1.5)))))), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), bvec2(true, true))))) - 0.0), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(87.88), _GLF_FUZZED(1.1)), vec2((vec2(injectionSwitch.x, 1.0))[0], _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.5)), min(float(_GLF_IDENTITY(_GLF_FUZZED(-1.5), (_GLF_FUZZED(-1.5)) - 0.0)), float(_GLF_FUZZED(-1.5)))), float((vec2(injectionSwitch.x, 1.0))[1]), bool(true)))), bvec2(true, true))))))) > injectionSwitch.y)))) || false) && true)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))) || false), false || (true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))) || false))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), false, false, false)), false, true, false)))))))))), (bool(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.6), _GLF_FUZZED(-232.139)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), (injectionSwitch.x > injectionSwitch.y))))) || false))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(196.530), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(-9401.5074)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(196.530), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))[_GLF_IDENTITY(_GLF_IDENTITY(1, (68968 & 0) ^ (_GLF_IDENTITY(1, (1) | (1)))), max(_GLF_IDENTITY(1, (68968 & 0) ^ (_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (68968 & 0) ^ (_GLF_IDENTITY(1, (1) | (1))))))]), vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-9401.5074)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base.z = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), ((4)) - 0)))))) : _GLF_FUZZED((70737 & _GLF_IDENTITY(48134, (48134) | _GLF_IDENTITY(0, ~ (~ (0)))))))), 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), buf[virtual_gid])), 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) >> 0u)) | (atomicLoad(buf[virtual_gid], 4, 64, 2))))))) / 1u);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-98.45) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1235.4907))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, max(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base), clamp(~ (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base), _GLF_IDENTITY(~ (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base), uvec4(0u, 0u, 0u, 0u) + (~ (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))), ~ (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)))))))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, _GLF_IDENTITY(133480u, (133480u) << 0u))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) | uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(uvec4(156339u, 186351u, 93129u, 133480u)) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))))))) << (uvec4(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u + (uint(8u))))) + (0u)), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec2(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec2(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))), uvec4(8u)))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base), clamp(~ (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base), ~ (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base), ~ (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))))))), ~ (~ (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false))), true, true))))) ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) : GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_14next_virtual_gidnum_workgroupreadworkgroup_base)))))).z, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
