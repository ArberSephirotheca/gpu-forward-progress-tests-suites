#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), ((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false))) || false), ! (! (_GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (true)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), ((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))) || false))) || false)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), ((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))) || false))) || false), false), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false), ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), bvec2(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(_GLF_IDENTITY(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2((! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(857.647)), bool(false)))) - 0.0))))))), false, true))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(_GLF_IDENTITY(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2((! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(857.647)), bool(false)))) - 0.0))))))), false, true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, sqrt(1.0), 1.0, 0.0))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(26.40))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false, ! _GLF_IDENTITY((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(840.291)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true))), max(injectionSwitch.y, injectionSwitch.y))))) - 0.0)), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) && true))))))))) || false)), bool(_GLF_IDENTITY(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.03), _GLF_FUZZED(71.49)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))) || false), (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2((! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))), bvec2(bvec2(bvec2(bvec2((! _GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)))))))))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false))))))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false), ! (_GLF_IDENTITY(! (((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-89.67)), bool(false))) : _GLF_FUZZED(784.032))))).y)))))))) || false)), (! (((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true))))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))) / 1u, (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) / 1u) / 1u)) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(min(subgroup_size, subgroup_size)))) | (subgroup_base)), 0u + (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(min(subgroup_size, subgroup_size)))) | (subgroup_base)))), subgroup_base), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))) + (max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(min(subgroup_size, subgroup_size)))) | (subgroup_base)), subgroup_base))), min(max(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base), max(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), subgroup_base)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)), subgroup_local_id)))), ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))))) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u), 1u)))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))))))) + 1) % subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), ~ (~ ((workgroup_base + subgroup_base)))) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)) | (subgroup_local_id)), ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id))))) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), 0u | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u))), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u), 1u)), ~ (~ (uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u, clamp((_GLF_IDENTITY((~ (subgroup_local_id)), max((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec2(~ (subgroup_local_id), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), (~ (subgroup_local_id))))) >> 0u, (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u, (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u))), 1u))))))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))))))) + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u))), (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)))) >> 0u))) | (subgroup_local_id)), ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id))))) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u)), _GLF_IDENTITY(max((~ (subgroup_local_id)), (~ (subgroup_local_id))), uint(uvec3(max((~ (subgroup_local_id)), (~ (subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) >> 0u), 1u)))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ _GLF_IDENTITY((~ (uint(uint(subgroup_local_id)))), ~ (~ (_GLF_IDENTITY((~ (uint(uint(subgroup_local_id)))), ((~ (uint(uint(subgroup_local_id))))) ^ 0u)))))))))))))) + 1) % subgroup_size)) | 0u, ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)) | (subgroup_local_id)), ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), 0u | ((~ (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id)))), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id))))) | 0u)) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)))))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(uint(subgroup_local_id))), clamp((uint(uint(subgroup_local_id))), (uint(uint(subgroup_local_id))), (uint(uint(subgroup_local_id))))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))))))) + 1) % subgroup_size)) | 0u) | ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)) | (subgroup_local_id)), ~ _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id))))) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), 1u * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u), 1u)))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))))))) + 1) % subgroup_size)) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) * 1u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)) | (subgroup_local_id)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 0u, 0u, 0u)))))), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id))))) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) / 1u))) * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u), 1u)))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))), 0u | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))))))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)) | (subgroup_local_id)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 0u, 0u, 0u)))))), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), (~ (subgroup_local_id))))) >> 0u), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(subgroup_local_id)))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) / 1u))) * (_GLF_IDENTITY(~ (subgroup_local_id), uint(uint(~ (subgroup_local_id))))))), (_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (subgroup_local_id)), (~ (subgroup_local_id))))) >> 0u), 1u)))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))), 0u | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_local_id))), ~ (~ (~ (uint(uint(subgroup_local_id)))))))))))))))) + 1)) >> 0u) % subgroup_size)));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, 0u | (0u)))), 0u | (uint(uint(_GLF_IDENTITY(0u, 0u | (0u)))))))) ^ (_GLF_IDENTITY(0u | 0u, max(_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)), _GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(63998, 1 * (63998))) : _GLF_IDENTITY(64, 1 * (64)))), _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(uvec2(3u, _GLF_IDENTITY(0u, ~ (~ (0u))))))))) | (subgroup_local_id)) % 2), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), 0u ^ ((0u))))))))) | 0u) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 1u * (_GLF_IDENTITY(uint(3u), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) >> 0u), uint(uvec4(_GLF_IDENTITY(3u, (3u) >> 0u), 1u, 1u, 1u))), _GLF_IDENTITY(3u, (3u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) >> 0u), (_GLF_IDENTITY(3u, (3u) >> 0u)) * 1u)))), uint(3u))))), (uint(3u)) | _GLF_IDENTITY((uint(3u)), min((uint(3u)), _GLF_IDENTITY((uint(3u)), ((uint(3u))) | ((uint(3u))))))))) | (subgroup_local_id)) % 2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((0u ^ (0u)) * 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ ((0u ^ (0u)) * 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u))))))) | 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u))))))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u))))))) | 0u) | 0u)))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (true ? 1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_base)))))) | (1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), max(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (true ? 1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_base)))))) | (1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (true ? 1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_base)))))) | (1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))), (true ? 1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_base)))))) | (1u * (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))))))) + 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), 0u | (uint(3u)))) | (uint(3u)), uint(uint((_GLF_IDENTITY(uint(3u), 0u | (uint(3u)))) | (uint(3u)))))))) | (subgroup_local_id)) % 2)))) >> 0u) == _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (false ? _GLF_FUZZED(71815) : 0)) : _GLF_FUZZED(-4901))), 0)), ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (false ? _GLF_FUZZED(71815) : 0)) : _GLF_FUZZED(-4901))), 0))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, clamp(64, 64, 64)))), 2);
  }
 else
  {
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, ((virtual_gid) << 0u) << 0u))], 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read), clamp(uint(read), _GLF_IDENTITY(uint(read), (true ? uint(read) : _GLF_FUZZED(next_virtual_gid))), uint(read))), (uint(read)) | 0u)) / 1u)), min(uint(_GLF_IDENTITY(uint(read), (_GLF_IDENTITY(uint(read), (uint(read)) | 0u)) / 1u)), uint(_GLF_IDENTITY(uint(read), (_GLF_IDENTITY(uint(read), (uint(read)) | 0u)) / 1u)))))) | (read))) << (0u ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30420) : 4)), _GLF_IDENTITY((4), max((4), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), min((4), (4))))), int(ivec3(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), min((4), (4))))), 0, 0))), ((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) >> 0), 4, 4)))) - 0))) ^ (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - 0), int(5)))), 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false)), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (false) && true))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (false) && true))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (false) && true))), false, false, true))))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false))))))), (false) && true))))), true, false)))))) && true)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat3x2(59.14, -73.74, 9.0, -81.37, 5258.8066, 41.25)[2]) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-5322.7373, 910.205), (_GLF_IDENTITY(vec2(-5322.7373, 910.205), (true ? vec2(-5322.7373, 910.205) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0))))))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))
  return;
}
