#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, log(1.0), 1.0, 1.0, 0.0))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, log(1.0), 1.0, 1.0, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(151.420)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, log(1.0), 1.0, 1.0, 0.0))).x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)) + 0u)) | ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))))) + 0u), gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, false, false)))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) + 0.0), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) + 0.0)))))))), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-623.133, -953.271, -8.5)) : 0.0)))), 1.0, 1.0))) > injectionSwitch.y)))), true, true)))), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), true, false)))), true)))))))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-623.133, -953.271, -8.5)) : 0.0)))), 1.0, 1.0))) > injectionSwitch.y)))), true, true)))), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), true, false)))), true)))))))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(clamp(-623.133, -953.271, -8.5)) : 0.0)))), 1.0, 1.0))) > injectionSwitch.y)))), true, true)))), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(bvec3(true, false, false)), true, false)))), true))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))))), true, false)))), true)))))))))))))), false, _GLF_IDENTITY(false, ! (! (false)))))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 0.0, log(exp(0.0)), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(injectionSwitch.y, 0.0, log(exp(0.0)), 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2x3(injectionSwitch.y, 0.0, log(exp(0.0)), 1.0, 1.0, 0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true, true)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true)) && true) && true))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.1))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(919.345) : injectionSwitch.y))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))), false, false)), false)))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), (((injectionSwitch.x))) * 1.0) * 1.0)) * exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.0) : 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, exp(length(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(478.543)), bool(false))), 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0)))))), (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.0) : 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, exp(length(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(478.543)), bool(false))), 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, exp(length(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(478.543)), bool(false))), 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, exp(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, exp(length(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(478.543)), bool(false))), 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0))))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.0) : 0.0))))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) * exp(0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(log(1.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec4(log(1.0), 0.0, 0.0, 0.0), (vec4(log(1.0), 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (mat2(_GLF_IDENTITY(vec4(log(1.0), 0.0, 0.0, 0.0), (vec4(log(1.0), 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0))), (vec4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec4(log(1.0), 0.0, 0.0, 0.0), (vec4(log(1.0), 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (mat2(_GLF_IDENTITY(vec4(log(1.0), 0.0, 0.0, 0.0), (vec4(log(1.0), 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(exp(length(vec4(0.0, 0.0, 0.0, 0.0))), mix(float(exp(length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(890.930)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-0.1) : float(_GLF_FUZZED(890.930)))), bool(false))), 0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1.0 * _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), ((injectionSwitch.x)) * 1.0)) * _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0), 1.0, 1.0, 1.0), vec4(log(1.0), 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, exp(length(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(478.543)), bool(false))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-269.715) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0))))) : _GLF_FUZZED(-245.777))))) - 0.0)) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) - 0)), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), max(clamp(int(5), int(5), int(5)), clamp(int(5), int(5), int(5))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) - 0)), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), max(clamp(int(5), int(5), int(5)), clamp(int(5), int(5), int(5))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, min(5, 5))) - 0)), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), max(clamp(int(5), int(5), int(5)), clamp(int(5), int(5), int(5)))))) >> 0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0)))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), ! (! (true)))))
                {
                 do
                  {
                   do
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) << (0 | 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(3))), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, 1 * (3)), _GLF_IDENTITY(3, int(ivec2(3, 0))), 3)), _GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter))))), (false ? _GLF_FUZZED(-31211) : 3))))), int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), (int(3)) + 0)))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3), int(3))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), 1 * (_GLF_IDENTITY(clamp(int(3), int(3), int(3)), (true ? clamp(int(3), int(3), int(3)) : _GLF_FUZZED(9331))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, (3) / 1)), int(3), int(3))))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) ^ 0), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), ~ (~ (int(_GLF_IDENTITY(3, ~ (~ (3)))))))) | (int(_GLF_IDENTITY(3, ~ (~ (3)))))), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, int(ivec4(3, 0, 0, 0)))), int(3), int(3)))))))) + 0), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), (int(3)) ^ 0))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3)))))))) + 0), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) << 0), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, 0 | (3))))), max(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, 0 | (3))))), int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, 0 | (3)))))))))))))) + 0), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (int(3)))) ^ 0), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(3, clamp(3, 3, 3))))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) << 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3))), int(3))), int(3)))))))) + 0)))) << 0))), ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) << (0 | 0)), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(3))), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, 1 * (3)), _GLF_IDENTITY(3, int(ivec2(3, 0))), 3)), _GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(_injected_loop_counter))))), (false ? _GLF_FUZZED(-31211) : 3))))), int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), (int(3)) + 0)))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3), int(3))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), 1 * (_GLF_IDENTITY(clamp(int(3), int(3), int(3)), (true ? clamp(int(3), int(3), int(3)) : _GLF_FUZZED(9331))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, (3) / 1)), int(3), int(3))))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))) ^ 0), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), ~ (~ (int(_GLF_IDENTITY(3, ~ (~ (3)))))))) | (int(_GLF_IDENTITY(3, ~ (~ (3)))))), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, int(ivec4(3, 0, 0, 0)))), int(3), int(3)))))))) + 0), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), (int(3)) ^ 0))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3)))))))) + 0), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))) << 0), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, 0 | (3))))), max(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, 0 | (3))))), int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, 0 | (3)))))))))))))) + 0), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (int(3)))) ^ 0), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), clamp(max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), ~ (~ (int(_GLF_IDENTITY(3, clamp(3, 3, 3))))))))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), (_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))) << 0)), _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), clamp(int(_GLF_IDENTITY(3, min(3, 3))), int(3), int(3))))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3))), int(3))), int(3)))))))) + 0)))) << 0)))) / 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))))))) || false); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
                            barrier();
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
            barrier();
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.4)), vec2(_GLF_FUZZED(6.7), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 0.0, 1.0))), injectionSwitch.x)) : _GLF_FUZZED(determinant(mat2(mat4(-286.428, 3.1, -4.6, _GLF_IDENTITY(8.1, max(8.1, 8.1)), -165.411, -504.364, -8.5, 2629.5233, 0.3, -5827.8591, 6.6, 0.6, -667.901, 469.197, 3121.8157, -3.0)))))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x)) : _GLF_FUZZED(determinant(mat2(mat4(-286.428, 3.1, -4.6, 8.1, -165.411, -504.364, -8.5, 2629.5233, 0.3, -5827.8591, 6.6, 0.6, -667.901, 469.197, 3121.8157, -3.0)))))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || ((injectionSwitch.x > injectionSwitch.y))))))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (ivec3(52694, 81688, _GLF_IDENTITY(93206, int(ivec2(93206, 0)))).x & 0)); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))), false || (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))), (_GLF_IDENTITY(! ((! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true)) && true))), bool(bool((! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true)) && true))))))))))))))), (! ((! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true))))))))))))) || false)) && true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false))))))))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))), _GLF_IDENTITY(bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))), true && (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))) || (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((+ vec2(-5028.5087, -5.7))))).y)))), true && (bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((_GLF_IDENTITY(+ vec2(-5028.5087, -5.7), clamp(+ vec2(-5028.5087, -5.7), _GLF_IDENTITY(+ vec2(-5028.5087, -5.7), vec2(0.0, 0.0) + (+ vec2(-5028.5087, -5.7))), + vec2(-5028.5087, -5.7))))))).y)))), true && (bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)))))))))))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-1377.5840, -6.6, 50.26).x, (vec3(-1377.5840, -6.6, _GLF_IDENTITY(50.26, 1.0 * (50.26))).x) / 1.0)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]) / _GLF_IDENTITY(1.0, (1.0) / 1.0))), bvec2(false, true))).y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)), (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0))) | (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), bool(bvec4(bool(bool((! (false)))), true, false, true)))))), false, false, false))))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(sin(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(265.082), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.1)), bvec2(true, false))), (injectionSwitch) / vec2(1.0, 1.0)).y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, sin(0.0), 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)), true && ((! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, true))), true, true, true))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED((injectionSwitch / 5.4)) : _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0)))), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)), false || ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)))), true && (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y)), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))) || false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, false)), bool(bvec4(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true, false)), false, false, true)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (false ? _GLF_FUZZED(bitfieldInsert(73544, _injected_loop_counter, atomicOr(_injected_loop_counter, _injected_loop_counter), -87473)) : _GLF_IDENTITY(int(6), (int(6)) | (int(6))))))) >> _GLF_IDENTITY(int(6), int(6)))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0 | (_injected_loop_counter ++), (0 | (_injected_loop_counter ++)) >> 0)))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.2)))) + 0.0) > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))) || false))))), true)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, 0 | (0))) ^ (1 | 1)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), vec4(0.0, 0.0, 1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(5143.9494, min(5143.9494, _GLF_IDENTITY(_GLF_IDENTITY(5143.9494, (_GLF_IDENTITY(5143.9494, (_GLF_IDENTITY(5143.9494, clamp(5143.9494, 5143.9494, 5143.9494))) * 1.0)) / 1.0), clamp(5143.9494, 5143.9494, 5143.9494))))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-0.7) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(_GLF_FUZZED(-7.3)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), true && (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))), bool(bool(_GLF_DEAD(false)))))
          barrier();
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(0, (0) + 0) ^ (5))), int(5))), (_GLF_IDENTITY(true, ! (! (true))) ? (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), _GLF_IDENTITY(int(5), (int(5)) | 0))) : _GLF_FUZZED(1260))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (0 | 0) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), int(5))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))), (_GLF_IDENTITY(max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))), ~ (~ (max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))))))) | (max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), int(5))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))), (_GLF_IDENTITY(max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))), ~ (~ (max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))))))) | (max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), int(5))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))), (_GLF_IDENTITY(max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))), ~ (~ (max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1)))))))) | (max(int(_GLF_IDENTITY(5, ~ (~ (5)))), _GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, 1))))))))))), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, clamp(5, 5, 5)))) | (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ~ (~ ((_injected_loop_counter --)))) >> 0)) / 1))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(1.0))), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(1.0)))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
              {
               barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(687.804) : injectionSwitch.y))))))
              barrier();
            }
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size))))) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_local_id)) / (1u & 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | 0)) / 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec4(2311.2150, -7.7, 2118.0781, 0.1)[2])))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))
    {
     barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8016.8812)), vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8016.8812)), vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8016.8812)), vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))).x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(int(-3.7)))))
        {
         for(int _injected_loop_counter = (51586 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
                    barrier();
                   barrier();
                  }
                 for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), int(0))), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), min((0 >> _GLF_IDENTITY(int(0), int(0))), (0 >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), int(0))), int(0))), 0 | ((0 >> _GLF_IDENTITY(int(0), int(0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)))), int(0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))))
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0)), false)))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2) == 0)
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (0 << _GLF_IDENTITY(int(2), int(2))) ^ (int(4))), (int(4)) + 0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u | (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u | (virtual_gid))) << 0u), virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 0u | (virtual_gid)), virtual_gid))) + 0u)], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) + 0)), 2);
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.4))) > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))) != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) - 0)), _GLF_IDENTITY(int(7), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ _injected_loop_counter)) : _GLF_IDENTITY(int(7), 0 + (int(7))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 + (int(7))), int(7))), (((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) - 0)))) >> _GLF_IDENTITY(int(7), int(7)))) >> 0)); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
                        barrier();
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))) || false)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = ((1 ^ 0) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || false), false)), _GLF_IDENTITY((bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bool(bvec3((bool(bvec3(false, false, false))), true, true))), true, false))), true)), true && (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), bool(bvec3(_GLF_IDENTITY((bool(bvec3(false, false, false))), bool(bvec3((bool(bvec3(false, false, false))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false))), true))), true, false))), true))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-321.992) : 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-321.992) : 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-321.992) : 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-321.992) : 0.0))) / 1.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-48.74)), bool(false))), 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.4, -539.787)) : injectionSwitch)).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(_GLF_IDENTITY(false, true && (false))))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(vec4(3058.9781, -2.0, -8.5, 743.574).y), _GLF_FUZZED(vec2(17.28, 5395.4274).x)), vec2((max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], (max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), bvec2(true, true)))))))).y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), min(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-6490.5133) : float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))))))), 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(10.74))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7738.6810), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(69.59)), bvec2(true, false))), injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], clamp(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]))), vec2(_GLF_FUZZED(687.084), _GLF_FUZZED(6411.1782)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / vec2(1.0, 1.0))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0))), _GLF_IDENTITY((vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0), min((vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0), (vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) * 1.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(58.09)), bool(false))), 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06)), ((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))) / 1.0)), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-945.417) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-97.82))))), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0))))), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_FUZZED(50.80)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(_GLF_IDENTITY(false, (false) && true)))), 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY((float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(51.92)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), log(1.0), 1.0, 0.0))), ((float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(51.92)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), log(1.0), 1.0, 0.0)))) * 1.0) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0)))))))), 1.0))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, 0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), clamp(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), _GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), max(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-66.26, 889.143, -3.0, 153.323)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7549.4992, -6595.3442))))) + vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8785.8403), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(69.13)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))), sin(0.0)))), 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0)))), max(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3027.4839)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true)))), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(float(7623))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), abs(0.0)))))))).y, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * mat2(1.0)))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), mat2(1.0) * (min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, exp(abs(0.0)), 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.4, -539.787)) : injectionSwitch)).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(_GLF_IDENTITY(false, true && (false))))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(vec4(3058.9781, -2.0, -8.5, 743.574).y), _GLF_FUZZED(vec2(17.28, 5395.4274).x)), vec2((max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], (max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), bvec2(true, true)))))))).y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), min(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-6490.5133) : float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))))))), 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(10.74))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7738.6810), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(69.59)), bvec2(true, false))), injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], clamp(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]))), vec2(_GLF_FUZZED(687.084), _GLF_FUZZED(6411.1782)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / vec2(1.0, 1.0))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0))), _GLF_IDENTITY((vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0), min((vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0), (vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) * 1.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(58.09)), bool(false))), 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06)), ((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))) / 1.0)), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-945.417) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-97.82))))), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0))))), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_FUZZED(50.80)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(_GLF_IDENTITY(false, (false) && true)))), 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY((float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(51.92)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), log(1.0), 1.0, 0.0))), ((float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(51.92)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), log(1.0), 1.0, 0.0)))) * 1.0) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0)))))))), 1.0))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, 0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), clamp(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), _GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), max(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-66.26, 889.143, -3.0, 153.323)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7549.4992, -6595.3442))))) + vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8785.8403), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(69.13)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))), sin(0.0)))), 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0)))), max(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3027.4839)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true)))), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(float(7623))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), abs(0.0)))))))).y, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * mat2(1.0)))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), mat2(1.0) * (min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, exp(abs(0.0)), 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.4, -539.787)) : injectionSwitch)).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0), (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(_GLF_IDENTITY(false, true && (false))))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(vec4(3058.9781, -2.0, -8.5, 743.574).y), _GLF_FUZZED(vec2(17.28, 5395.4274).x)), vec2((max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], (max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), bvec2(true, true)))))))).y, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), min(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-6490.5133) : float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))))))), 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(10.74))))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7738.6810), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(69.59)), bvec2(true, false))), injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], clamp(((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1], ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]))), vec2(_GLF_FUZZED(687.084), _GLF_FUZZED(6411.1782)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / vec2(1.0, 1.0))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0))), _GLF_IDENTITY((vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0), min((vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0), (vec2(mat2(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), 1.0, sqrt(1.0)))) * mat2(1.0)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) * 1.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(58.09)), bool(false))), 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06)), ((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))) / 1.0)), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-945.417) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-97.82))))), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, sqrt(1.0), 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)), ((max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0))))), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_FUZZED(50.80)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(_GLF_IDENTITY(false, (false) && true)))), 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY((float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(51.92)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), log(1.0), 1.0, 0.0))), ((float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(51.92)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), log(1.0), 1.0, 0.0)))) * 1.0) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0), 0.0, 1.0, 1.0)))))))), 1.0))))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, 0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), clamp(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), _GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), max(true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-66.26, 889.143, -3.0, 153.323)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7549.4992, -6595.3442))))) + vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8785.8403), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(69.13)), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))), sin(0.0)))), 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) - 0.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), abs(1.0), 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0)))), max(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3027.4839)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true)))), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(injectionSwitch))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(float(7623))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), sin(0.0), 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * vec2(1.0, 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), abs(0.0)))))))).y, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), float(mat3x4(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)))), max((max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (max(injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) * mat2(1.0)))))).y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(1.0), bool(true))) : _GLF_FUZZED(-32.06))), 0.0, 1.0, log(1.0), 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)), mat2(1.0) * (min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(892.296)), bool(false))), 1.0, log(1.0), 1.0, 0.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), log(1.0), 1.0, 0.0))) + 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, 1.0)))))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, exp(abs(0.0)), 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0)))))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? -794.571 : 6.4))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))))), float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1965.3448)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? -794.571 : 6.4))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0), log(1.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(clamp(1.0, 1.0, 1.0)), float(_GLF_FUZZED(913.026)), bool(false))))), 0.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1965.3448)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / determinant(mat3(round(length(normalize(1.0))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0), 0.0)))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? -794.571 : 6.4))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1965.3448)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1965.3448)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))), true, false)))))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? -794.571 : 6.4))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, log(1.0), 1.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0), log(1.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1965.3448)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / determinant(mat3(round(length(normalize(1.0))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0), 0.0)))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0)) + 0.0), log(1.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0)), mix(float(_GLF_FUZZED(8114.9279)), float(float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) + 0.0)) + 0.0), log(1.0), _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0))), bool(true)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1965.3448)), bool(false))), 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, log(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / determinant(mat3(round(length(normalize(1.0))), sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0), 0.0)))))))) || false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-80.62) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6158.9849)), float(injectionSwitch.y), bool(true)))))))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) || false, ((_GLF_IDENTITY(true, false || (true))) || false) && true))))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 barrier();
                                }
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec3(int(0), 0, 1)))))); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ((_GLF_IDENTITY(! (false), true && (! (false))))) || false))));
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (_GLF_IDENTITY(~ (int(6)), ~ (~ (~ (int(6))))))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((true ? int(6) : _GLF_FUZZED(-63287)), max(_GLF_IDENTITY((true ? int(6) : _GLF_FUZZED(-63287)), 0 ^ ((true ? int(6) : _GLF_FUZZED(-63287)))), _GLF_IDENTITY((true ? int(6) : _GLF_FUZZED(-63287)), (_GLF_IDENTITY((true ? int(6) : _GLF_FUZZED(-63287)), ((true ? int(6) : _GLF_FUZZED(-63287))) << 0)) << 0)))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false)))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false), true))))))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 barrier();
                }
               barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, (0) | 0) + (_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1), 0 ^ (_injected_loop_counter ++))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.2), _GLF_FUZZED(4.6)), bvec2(false, false))).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) || false)), true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), false, false))), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false), false, false))), true, true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) || false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))) || false))))), false)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), false || ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true)))) || false)), ! (! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || _GLF_IDENTITY(false, false || (false)))))))))))))))))))))), bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), true))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))) || false)), true)))))), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0))), false, false, true))))), true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), abs(1.0)), (mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(1.0), abs(1.0))) * mat3(1.0)))).y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))) && true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       subgroupBarrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (true ? _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))).y))) - 0) : _GLF_FUZZED(_injected_loop_counter))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(56.86, -90.01), vec2(2984.1962, -5.3))) : injectionSwitch)).x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, int(int(2))))) + 0))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) && true); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (true), bool(bvec2(false || (true), true)))), (! (_GLF_IDENTITY(false || (true), bool(bvec2(false || (true), true))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-55762) : 4)), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(-30126), (_GLF_IDENTITY(_GLF_FUZZED(-30126), (_GLF_FUZZED(-30126)) | (_GLF_FUZZED(-30126)))) | (_GLF_FUZZED(-30126)))))) << 0))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(min(64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-30126)))) << 0)))), min(min(64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-30126)))) << 0)))), min(64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-30126)))) << 0)))))))) | (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-30126)))) << 0))))))), 4);
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   else
    {
    }
  }
}
