#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat2 _f2;
 mat4x2 _f3;
 vec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 mat3x2 _f1;
 uint next_virtual_gid;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 mat3x2 _f1;
 float _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
} ;

struct _GLF_struct_16 {
 float _f0;
 bvec2 _f1;
 vec4 _f2;
 float _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 vec2 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_25 {
 mat3x2 _f0;
 mat2x3 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uint _f1;
 int _f2;
 _GLF_struct_13 _f3;
 ivec2 _f4;
 uint workgroup_id;
} ;

struct _GLF_struct_10 {
 int _f0;
 int _f1;
 bool _f2;
} ;

struct _GLF_struct_9 {
 uint _f0;
 int _f1;
 ivec4 _f2;
 float _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat2x3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 vec4 _f1;
 vec3 _f2;
 ivec2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 ivec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 mat3 _f1;
 uvec4 _f2;
 bvec3 _f3;
 uvec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 mat2x3 _f1;
 vec2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 float _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 bvec2 _f1;
 ivec3 _f2;
 vec3 _f3;
 uvec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 uint _f1;
 bool _f2;
 ivec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec3 _f2;
 ivec2 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_15 {
 int _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_8 _f2;
 uvec4 _f3;
 _GLF_struct_11 _f4;
 bvec3 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(-6720.6526)), float(exp(0.0)), bool(true)))), transpose(_GLF_IDENTITY(transpose(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), exp(0.0))), (transpose(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)))) - mat2x4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0))))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), mix(float(_GLF_FUZZED(43.18)), float(exp(_GLF_IDENTITY(0.0, (0.0) / 1.0))), bool(true)))), transpose(_GLF_IDENTITY(transpose(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(3.2) : min(0.0, 0.0)))))), clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(3.2) : min(0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(3.2) : min(0.0, 0.0)))))), (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(3.2) : min(0.0, 0.0)))))))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(3.2) : min(0.0, 0.0)))))))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), (transpose(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0)), (float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 0.0))) * 1.0)))))))) * vec2(1.0, 1.0))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), clamp(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3622.5283)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))))), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) : _GLF_FUZZED(faceforward(_GLF_IDENTITY(352.979, _GLF_IDENTITY(_GLF_IDENTITY((352.979), mix(float((352.979)), float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), bool(false))) / 1.0, min(_GLF_IDENTITY((352.979), mix(float((352.979)), float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), bool(false))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((352.979), mix(float((352.979)), float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), bool(false))) / 1.0, clamp(_GLF_IDENTITY((352.979), mix(float((352.979)), float(_GLF_FUZZED(float(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))) || false)))), bool(false))) / 1.0, _GLF_IDENTITY((352.979), mix(float((352.979)), float(_GLF_FUZZED(float(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))), bool(false))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((352.979), float(_GLF_IDENTITY(mat4((352.979), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat2(abs(0.0), 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0), (true ? mat4((352.979), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, determinant(mat2(abs(0.0), 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), 0.0))), 0.0) : _GLF_FUZZED(mat4(-8307.8917, 8805.2564, -29.78, -5.0, 190.954, 7.3, -2.5, 43.46, 2.2, -7823.2425, -0.9, 7.4, 151.581, -2.0, 6.3, 3779.4714)))))), mix(float((352.979)), float(_GLF_FUZZED(float(_GLF_IDENTITY(false, (false) || false)))), bool(false))) / 1.0))))), _GLF_IDENTITY(0.1, (true ? 0.1 : _GLF_FUZZED(0.8))), _GLF_IDENTITY(-5.4, float(mat4x3(-5.4, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4712.7400)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(52.11) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-529.473, -3.0)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(-529.473, -3.0)) : injectionSwitch)[0], _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-529.473, -3.0)) : injectionSwitch)[1], mix(float((false ? _GLF_FUZZED(vec2(-529.473, -3.0)) : injectionSwitch)[1]), float(_GLF_FUZZED(-63.69)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(_GLF_FUZZED(-8212.4334), _GLF_FUZZED(7.6)), bvec2(false, false))))).y))), bool(_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(105472u))), vec2(_GLF_FUZZED(3.6), (injectionSwitch)[1]), bvec2(false, true))))).y), ! (! ((injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), false, true)))))), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, false, true)), (bool(bvec4(true, true, false, true))) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, false, true)), false || (bool(bvec4(true, true, false, true)))), (bool(bvec4(true, true, false, true))) || false), false)))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(true, true, false, true))) || false, true && ((bool(bvec4(true, true, false, true))) || false)), ((bool(bvec4(true, true, false, true))) || false) && true))))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))) < injectionSwitch.y)) && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (true))))))), ((bool(_GLF_IDENTITY(true, ! (! (true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x))), float(_GLF_FUZZED(1992.7038)), bool(false))) < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true))), true && (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true))))), ! (! (true))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (true))))))), ((bool(_GLF_IDENTITY(true, ! (! (true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x))), float(_GLF_FUZZED(1992.7038)), bool(false))) < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true))), true && (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true))))), ! (! (true))))))))))), (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))), ! (! (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))))))) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec4(bool(bool(! (true))), false, true, true))))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), (vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0)) - vec2(0.0, 0.0)), max(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0))))) > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))))))), ! (! ((injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))))))), false, true))), ! (! (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + 0.0, min((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + 0.0)))) - 0.0) < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, exp(0.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), bool(bvec4((bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), false, false, false)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y) / abs(1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))) && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), false, true)))) && true), ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))))), (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(95.46) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) * 1.0) < injectionSwitch.y)), false, true))), ! (! (true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(3643.7247))))).y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false, true, true))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y)), false)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), _GLF_IDENTITY(bvec2(bvec2(bvec2((true), false))), bvec2(bvec2(bvec2(bvec2(bvec2((true), false)))))))))), false || (! (! (true))))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true, true, false)))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))) || false))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true, false), false)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true, false), false))))))))))) && true, ((! (true)) && true) && true)))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) | ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(3), int(3))))]), bvec2(true, true))))).y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) | ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(3), int(3))))]), bvec2(true, true))))).y, float(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) | ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(3), int(3))))]), bvec2(true, true))))).y, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) | ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(3), int(3))))]), bvec2(true, true))))).y, float(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 0)))) | ((0 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(3), int(3))))]), bvec2(true, true))))).y, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0))))))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && ((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true)))))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false, true))), ! (! (true)))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), (! (true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true, true, false)))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))) || false))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), false || ((true)))) && true, ((! (true)) && true) && true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), bvec2(true, true))))).y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0))))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), true, true, false)))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))))) || false))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), false || ((true)))) && true, ((! (true)) && true) && true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(240.500), _GLF_FUZZED(129.302)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true))))), ! (! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true))))), (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))) && true))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false))))), true))))))))))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(floor(mod(vec2(3.3, 856.581), injectionSwitch))))).y))))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), _GLF_IDENTITY((uvec3(gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u), ((uvec3(gl_WorkGroupSize)) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 1u, 0u))))) - uvec3(0u, 0u, 0u))))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), 0 ^ (0 ^ (1)))), _GLF_struct_4(_GLF_struct_0(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(740.061)), bool(false)))))), 1.0))), 1u, true, ivec2(1), ivec3(1)), _GLF_struct_1(uvec3(1u)), bvec3(true), _GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0)), _GLF_struct_2(uvec2(1u), bvec2(_GLF_IDENTITY(true, ! (! (true)))), ivec3(1), vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 0u ^ (1u))), clamp(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u), uvec2(1u, 1u))))), _GLF_IDENTITY(uint(uvec2(1u, 1u)), (uint(uvec2(1u, 1u))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))))) + uvec2(0u, 0u))), _GLF_struct_3(uvec2(1u), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(_GLF_IDENTITY(1u, (1u) - 0u))) / uvec4(1u, 1u, 1u, 1u)), (uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) - uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id))) : _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u, 0u, 0u))))), _GLF_struct_8(_GLF_struct_5(bvec2(true), mat3(1.0), uvec4(1u), bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), mat3x4(1.0)), mat2x3(1.0), vec2(1.0), _GLF_struct_6(uvec3(1u), ivec2(1), bvec2(true)), _GLF_struct_7(bvec3(true), vec4(1.0), vec3(1.0), _GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) >> 0), 4)) : _GLF_FUZZED(abs(93157))))), clamp(_GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(4, (4) - 0)))), int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))))), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), max(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(-35420))), (false ? _GLF_FUZZED(-2051) : _GLF_IDENTITY(4, (4) - 0)))))))), int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))))))))))), vec3(1.0))), uvec4(1u), _GLF_struct_11(_GLF_struct_9(1u, 1, ivec4(1), 1.0), _GLF_struct_10(1, 1, true), mat2x3(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(min((~ (1u)), (~ (1u))), 0u ^ (min((~ (1u)), (~ (1u)))))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))) : _GLF_FUZZED(workgroup_size)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (min((~ (1u)), (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u)))))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))), max(~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))) / 1u)))) / 1u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1u)), 0u | (_GLF_IDENTITY((~ (1u)), clamp((~ (1u)), _GLF_IDENTITY((~ (1u)), uint(uvec3((~ (1u)), 0u, 0u))), (~ (1u)))))), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((min((~ (1u)), (~ (1u)))), 0u + ((min((~ (1u)), (~ (1u)))))), (true ? ~ (min((~ (1u)), (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (1u) << 0u))), min(_GLF_IDENTITY((~ (1u)), ((~ (1u))) | ((~ (1u)))), (~ (1u)))) | (_GLF_IDENTITY(~ (1u), max(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))), ~ (1u)))))))) : _GLF_FUZZED(subgroup_size))))))))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec3((1u), 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3((1u), 1u, 1u))))), (1u))))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))))))), (min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))))))) * 1u)), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1u)), uint(uvec3((~ (1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY((~ (1u)), ((~ (1u))) ^ 0u), (~ (1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (min((~ (1u)), (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))), ~ (~ (~ (min((~ (1u)), (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))))))), _GLF_IDENTITY((true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)), ((_GLF_IDENTITY(true, ! (! (true))) ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))) | 0u)))))))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) << 0u), 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_id) : (1u))))))), 1u)))), (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), (~ (1u)) << 0u), ~ (1u)))))) : _GLF_FUZZED(subgroup_size))))))))))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | 0u), _GLF_IDENTITY(1u, max(1u, 1u)))), 0u ^ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), _GLF_IDENTITY((true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_size)))), ~ (~ ((true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))))), (_GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), _GLF_IDENTITY((~ (1u)), 0u ^ ((~ (1u))))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))) * 1u)))), clamp(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), _GLF_IDENTITY((~ (1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((~ (1u)), ((~ (1u))) << 0u))))) : _GLF_FUZZED(subgroup_size)))), min((_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (~ (min((~ (1u)), (~ (1u))))) | (~ (min((~ (1u)), (~ (1u))))))) << 0u), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))), min((_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))), ~ (~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (min(_GLF_IDENTITY((~ (1u)), ~ (_GLF_IDENTITY(~ ((~ (1u))), (~ ((~ (1u)))) | 0u))), (~ (1u)))), _GLF_IDENTITY((true ? ~ (min(_GLF_IDENTITY((~ (1u)), ~ (~ ((~ (1u))))), (~ (1u)))) : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY((true ? ~ (min(_GLF_IDENTITY((~ (1u)), ~ (~ ((~ (1u))))), (~ (1u)))) : _GLF_FUZZED(subgroup_size)), ((true ? ~ (min(_GLF_IDENTITY((~ (1u)), ~ (~ ((~ (1u))))), (~ (1u)))) : _GLF_FUZZED(subgroup_size))) | (_GLF_IDENTITY((true ? ~ (min(_GLF_IDENTITY((~ (1u)), ~ (~ ((~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, min(1u, 1u))))))))), (~ (1u)))) : _GLF_FUZZED(subgroup_size)), ((true ? ~ (min(_GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(~ (~ ((~ (1u)))), min(~ (~ ((~ (1u)))), ~ (~ ((~ (1u))))))), (~ (1u)))) : _GLF_FUZZED(subgroup_size))) >> 0u)))) | 0u))), min((_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size))))))) + 0u)) + 0u)))))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1u), ((1u)) / 1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))) | 0u))))), 1u * (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1u), ((1u)) / 1u)), _GLF_IDENTITY(min((~ (1u)), (_GLF_IDENTITY(~ (1u), (~ (1u)) | 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(~ (min((~ (1u)), (~ (1u)))), (true ? ~ (min((~ (1u)), (~ (1u)))) : _GLF_FUZZED(subgroup_size)))) | 0u))))))))), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), _GLF_IDENTITY(min((~ (1u)), (~ (1u))), ~ (_GLF_IDENTITY(~ (min((~ (1u)), (~ _GLF_IDENTITY((1u), ((1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? ~ (min((~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_size) : (1u)))) ^ 0u)), (_GLF_IDENTITY(~ (1u), (true ? ~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u))) | (1u))) : _GLF_FUZZED(subgroup_local_id)))))) : _GLF_FUZZED(subgroup_size))))))))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u + (uint(3u))), uint(3u))), (0u | 0u), 1u))))))), bvec3(true), _GLF_struct_14(_GLF_struct_12(ivec4(1), bvec4(true)), 1u, 1, _GLF_struct_13(bvec3(true), uvec2(1u)), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * _GLF_IDENTITY(_GLF_struct_replacement_15._f6.workgroup_id, (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u))) | (_GLF_struct_replacement_15._f6.workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, uint(uvec4((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, 1u, 0u, 0u)))) | 0u)), uint(uint(max((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec2(subgroup_base, 1u)), (uint(uvec2(subgroup_base, 1u))) | (uint(uvec2(subgroup_base, 1u)))))) - 0u)) + 0u, uint(uvec4((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) - 0u)) + 0u, 1u, 0u, 0u)))) | 0u))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), false, true, false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(mat3x2(1.0), mat2x3(1.0), _GLF_struct_21(_GLF_struct_16(1.0, bvec2(true), vec4(1.0), 1.0, mat2x3(1.0)), _GLF_struct_17(ivec2(1)), vec2(1.0), _GLF_struct_18(mat3(1.0), ivec2(1), mat4x3(1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(-44318)) : 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(-44318)) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(float(-44318)) : 1.0))) / 1.0))))), _GLF_struct_19(ivec4(1), mat3x2(1.0), 1.0, ivec3(1)), _GLF_struct_20(ivec4(1), mat4x3(1.0), mat2x3(1.0), ivec2(1))), _GLF_struct_22(uvec3(1u), mat3x2(1.0), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))))))) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))))))) % subgroup_size)) | 0u)), _GLF_struct_24(_GLF_struct_23(mat2x4(1.0), mat4x3(1.0), mat2(1.0), mat4x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.7)), bool(false))), 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), vec3(1.0), uvec2(1u)), mat4(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
    return;
   return;
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(mat4x2(75.54, 62.59, 105.320, 7640.6550, 6.0, -17.16, 1951.0848, 6.3))) : mat2(1.0))) * (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(mat4x2(75.54, 62.59, 105.320, 7640.6550, 6.0, -17.16, 1951.0848, 6.3))) : mat2(1.0))) * (injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false)))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, true))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, true))), false, false)), true, false)))))) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.6)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))))), false, true)))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (true))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.9) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(7348.2281)), bool(false))))) > injectionSwitch.y)) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, cos(sin(vec2(0.0, 0.0))) * (injectionSwitch)).y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_25._f3.next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 1u * (0u))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) * vec2(1.0, 1.0)).y) * 1.0)) / 1.0), bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(17.00)), vec2(_GLF_FUZZED(173.873), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-469.001) : (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0)))))), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % 2))))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u)) | (subgroup_local_id % 2))) == 0)) || false))), ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (2))) == 0) || false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) + 0), (64) << 0), 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false))) || false)))) || false)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) / 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}
