#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-24.59) : injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-24.59) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-24.59) : injectionSwitch.x)) > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-24.59) : injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-24.59) : injectionSwitch.x)) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.1))) > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, 1u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x)), _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x), max(0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x), _GLF_IDENTITY(0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x), min(0u | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups) | (gl_NumWorkGroups))))).x), 0u | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x))))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x) - 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (gl_WorkGroupSize.x) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), min(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))))) << 0u)) - 0u), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)), max((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u)), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))), 1u, 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x, _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x))) - 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))).x) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), min(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))))) << 0u)) - 0u), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)), (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size) : (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), max((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u)), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))), 1u, 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x : _GLF_FUZZED(uaddCarry(subgroup_size, packUnorm2x16(injectionSwitch), subgroup_size)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x : _GLF_FUZZED(uaddCarry(subgroup_size, packUnorm2x16(injectionSwitch), subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) | (gl_WorkGroupSize)))) : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x) - 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u)).x) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))))))), min(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))))) << 0u)) - 0u), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)), max(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u)), ~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u))))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 1u))) << 0u), 0u))), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))), 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))))))) - 0u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (_GLF_IDENTITY((1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), max((1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))))) * 1u)))), 0u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x) - 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (gl_WorkGroupSize.x) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), min(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))))) << 0u)) - 0u), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)), max((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u)), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))), 1u, 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x, _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x))) - 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))))).x) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), min(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))))) << 0u)) - 0u), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)), (false ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size) : (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), max((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u)), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))), 1u, 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x : _GLF_FUZZED(uaddCarry(subgroup_size, packUnorm2x16(injectionSwitch), subgroup_size)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)).x : _GLF_FUZZED(uaddCarry(subgroup_size, packUnorm2x16(injectionSwitch), subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), (gl_WorkGroupSize) | (gl_WorkGroupSize)))) : _GLF_FUZZED(uvec3(subgroup_size, 31641u, num_workgroup)))).x) - 0u), 1u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (true ? _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, min((gl_WorkGroupSize.x) - 0u, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u)).x) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << 0u)) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u))))))), 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))))))), min(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))))) << 0u)) - 0u), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)), max(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u)), ~ (~ ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) | 0u)), 1u, 0u))))), (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec2((0u), 1u))) << 0u), 0u))), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))), 0u))) | uvec3(0u, 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), 1u, 0u)))))))) - 0u), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (_GLF_IDENTITY((1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), max((1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))), (1u) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))))))) * 1u)))), 0u)))));
 GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), false)))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.y = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3890.1871)), bool(false))), _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.w = GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.w;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.z = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), abs(vec2(1.0, 1.0)) * ((injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6510.2478)), float(injectionSwitch.y), bool(true))))))) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))))))) || false)))))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))), false, true, true))), ! (! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))), false, true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid, ~ (~ (GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid))))) ^ 0u) ^ 0u, ~ (~ (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid) ^ 0u, ((GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x = next_virtual_gid) ^ 0u) * 1u)))));
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.x = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x, max(GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x, GLF_merged3_0_1_16_1_1_12_2_1_14next_virtual_gidworkgroup_idworkgroup_size.x))) * uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))), 1u * (uint(1))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), (~ (_GLF_IDENTITY(4, (4) - 0))) << 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)), ((_GLF_IDENTITY(4, (4) - 0))) + 0)) * 1))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.y = read;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_12next_virtual_gidreadvirtual_gidworkgroup_id.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0))))), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0))))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.z + 1 < GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(checker[GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y : _GLF_FUZZED(num_workgroup)))) / 1u), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.w], GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_11next_virtual_gidreadsubgroup_local_idvirtual_gid.y, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
