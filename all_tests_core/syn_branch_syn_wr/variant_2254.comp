#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uvec2 _f0;
 ivec4 _f1;
 uvec3 _f2;
 uvec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 int _f1;
 mat2 _f2;
 ivec3 _f3;
 mat2x3 _f4;
 uvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 vec4 _f2;
 vec2 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uint subgroup_id;
 mat3x2 _f2;
 float _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(bvec3(true), _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) + 0), (1)))), mat2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), ivec3(1), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.3) : 1.0))), _GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u)))), vec2(1.0)), ivec4(1), vec4(1.0), _GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), _GLF_struct_1(mat3(1.0), mat2x3(1.0), mat3x4(1.0))), _GLF_struct_5(_GLF_struct_3(ivec4(1), _GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)))), mat3(mat4(_GLF_IDENTITY(mat3(mat3(1.0)), transpose(transpose(mat3(mat3(1.0)))))))))), mat3(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1005.6425))), 0.0) + (mat3(1.0)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))), _GLF_IDENTITY(mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat3(1.0))))), transpose(transpose(mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat3(1.0)))))))))) : _GLF_FUZZED(mat3(2.7, -23.60, -821.880, -3.0, 13.05, 3928.8185, -8.9, _GLF_IDENTITY(-6402.1674, (true ? -6402.1674 : _GLF_FUZZED(9.6))), -11.51))))))), mat3(mat4((_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), mat3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0)))), (true ? transpose(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0)))) : _GLF_FUZZED(mat3(2.7, -23.60, -821.880, -3.0, 13.05, 3928.8185, -8.9, -6402.1674, -11.51)))))))))))))), bvec3(true)), _GLF_struct_4(_GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), ivec4(1), uvec3(1u), uvec2(1u), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), gl_SubgroupID, mat3x2(1.0), 1.0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || (false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 | (5))), int(5))) & (false ? -82812 : 99819)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | int(_GLF_ZERO(0.0, injectionSwitch.x))) < (1 | 1)); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-61.06, _GLF_IDENTITY(740.613, mix(float(_GLF_FUZZED(float(92155u))), float(_GLF_IDENTITY(740.613, 1.0 * (740.613))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -1448.7426, 76.25).t), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-8550.9083))), _GLF_FUZZED(5.1)), bvec2(true, false))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(28144u, _GLF_IDENTITY(25516u, min(_GLF_IDENTITY(25516u, 0u | (25516u)), 25516u)), 10410u)))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) + (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID))) + (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))))).x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bvec2(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bool(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_id * subgroup_size, uint(uvec2(_GLF_struct_replacement_6.subgroup_id * subgroup_size, 0u)));
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_DEAD(false)), true, false, true))), (! (bool(bvec4((_GLF_DEAD(false)), true, false, true)))) || false)))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_DEAD(false)), true, false, true))), (! (_GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec4((_GLF_DEAD(false)), true, false, true)), true, true)), ! (! (bool(bvec3(bool(bvec4((_GLF_DEAD(false)), true, false, true)), true, true)))))))) || false)))))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) + 1) % subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) + 1) % subgroup_size)) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) + 1) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(_GLF_IDENTITY(sin(-96.32), mix(float(_GLF_FUZZED(236.270)), float(sin(-96.32)), bool(true)))))))), min((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u | (~ (workgroup_base))))) : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(_GLF_IDENTITY(-96.32, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1224.6505) : _GLF_IDENTITY(-96.32, (false ? _GLF_FUZZED(53.82) : _GLF_IDENTITY(-96.32, float(vec2(-96.32, 1.0))))))))), min(uint(sin(-96.32)), uint(sin(-96.32)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(true, (true) && true) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(_GLF_IDENTITY(-96.32, min(-96.32, -96.32)))), uint(sin(-96.32)))))) : _GLF_FUZZED(virtual_gid)))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), clamp((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), max(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u))))))))) % subgroup_size))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), max(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u))))))))) % subgroup_size))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), max(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u))))))))) % subgroup_size))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), max(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u))))))))) % subgroup_size))), max((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), max(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u))))))))) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), max(uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup))))), 0u))))))))) % subgroup_size))))))) ^ 0u), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size))), clamp(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), min(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), _GLF_IDENTITY(max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u)), uvec2(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u)), uvec2(uvec2(max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))))), 1u, 1u), (uvec4(_GLF_IDENTITY(max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u)), uvec2(uvec2(max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))))), 1u, 1u)) << uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2(uvec2(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))))))), (uint(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))), _GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2(uvec2(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (min(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))), _GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2(uvec2(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u)))))))))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u))), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * 1)) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + 1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))), uint(uint((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), max(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))))))) - (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))) | (((subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), ((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(105035u)))))), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % subgroup_size))) << 0u)))), ((subgroup_local_id + 1) % subgroup_size))), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size), 0u + _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (1u & _GLF_IDENTITY(1u, (1u) >> 0u)), 1u), min(uvec3((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)) & 1u), 1u), uvec3((workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), (1u & 1u), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))), (_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))), min(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))), _GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))))))))), min((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (true ? ~ ((workgroup_base)) : _GLF_FUZZED(atomicCompSwap(virtual_gid, num_workgroup, subgroup_size))))))))) : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(-96.32)), uint(sin(-96.32)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) : _GLF_FUZZED(_GLF_IDENTITY(uint(sin(-96.32)), min(uint(sin(_GLF_IDENTITY(_GLF_IDENTITY(-96.32, mix(float(-96.32), float(_GLF_FUZZED(-4761.2449)), bool(false))), _GLF_IDENTITY(min(-96.32, -96.32), min(_GLF_IDENTITY(min(-96.32, -96.32), max(min(-96.32, -96.32), min(-96.32, -96.32))), min(-96.32, -96.32)))))), uint(sin(-96.32)))))) : _GLF_FUZZED(virtual_gid)))))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size), clamp((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) % subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71295) : 1))) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(true, bool(bool(true))) ? (subgroup_local_id + 1) : _GLF_FUZZED((num_workgroup)))))) % subgroup_size))) ^ 0u), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size))), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), min(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), 0u))), _GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2(uvec2(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))))))), (uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size)))), 0u), min(_GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), max(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u))), _GLF_IDENTITY(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u), uvec2(uvec2(uvec2((((subgroup_local_id + 1) % subgroup_size)), 0u)))))))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u, 0u | (0u)) ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 0u, 1u)))))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), ((subgroup_local_id + 1) % subgroup_size)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), min(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) | 0u)))), uint(uint((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(clamp(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 0u))) + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(83625)))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size)))), min(clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))) & 77030u) | (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))) % subgroup_size)), clamp(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : ~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) + 0u))))))))))))))) - (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))) | (((subgroup_local_id + 1) % subgroup_size))) | (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) | (((subgroup_local_id + 1) % subgroup_size))) << 0u)))), ((subgroup_local_id + 1) % subgroup_size))), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size), 0u + _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))) + ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (1u & 1u), 1u), min(uvec3((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)))) & 1u), 1u), uvec3((_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u))), 0u, 1u, 0u))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (1u & 1u), 1u))))))))) | (144552u & 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true))))))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((false) || _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(35402))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 1, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 | 1), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(0 | 1, ~ (~ (0 | 1)))), 1), (ivec2((0 | 1), 1)) ^ ivec2(_GLF_IDENTITY(0, (0) / 1), 0))))); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), true, _GLF_IDENTITY(true, false || (true)), true))) ? 1 : _GLF_FUZZED(12837))) | 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))), true))) ? 1 : _GLF_FUZZED(12837))) | 1), (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))))), false || (true)), true))) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(12837), (_GLF_FUZZED(12837)) ^ 0))) | 1)) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71071) : 0)) & _GLF_IDENTITY(83419, (_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(9098, 571)[0]), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(9098, 571)[0]), (_GLF_FUZZED(ivec2(9098, 571)[0])) / 1)) << 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(83419, (83419) / 1), (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0])) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]), (_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]), (true ? true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]) : _GLF_FUZZED(_injected_loop_counter)))) >> 0), true ? _GLF_IDENTITY(83419, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | (_GLF_IDENTITY((1 ^ 1), 0 | (_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1)))))))) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(9098, 571)[0], max(_GLF_IDENTITY(ivec2(9098, 571)[0], (ivec2(9098, 571)[0]) * 1), ivec2(9098, 571)[0])))))))))), ! (! (_injected_loop_counter > (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(71071) : 0)) & _GLF_IDENTITY(83419, (_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(9098, 571)[0]), (_GLF_IDENTITY(_GLF_FUZZED(ivec2(9098, 571)[0]), (_GLF_FUZZED(ivec2(9098, 571)[0])) / 1)) << 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(83419, (83419) / 1), (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419)))), clamp(_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419)))), _GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419)))), _GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))))) : _GLF_FUZZED(ivec2(9098, 571)[0])), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(83419, (83419) / 1), (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419)))), clamp(_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419)))), _GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419)))), _GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]))) + int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, _GLF_IDENTITY(571, (571) << 0))[0]), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]), (_GLF_IDENTITY(true ? _GLF_IDENTITY(83419, (1 ^ _GLF_IDENTITY(1, (1) / 1)) | _GLF_IDENTITY(_GLF_IDENTITY((83419), 0 + ((83419))), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]), (true ? true ? _GLF_IDENTITY(83419, (1 ^ 1) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), min(~ ((83419)), ~ ((83419))))))) : _GLF_FUZZED(ivec2(9098, 571)[0]) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))), _GLF_FUZZED(_injected_loop_counter)))))) >> 0), true ? _GLF_IDENTITY(83419, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | (_GLF_IDENTITY((1 ^ 1), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1)) ^ 1), ~ (~ ((1 ^ 1)))))))) | _GLF_IDENTITY((83419), ~ (_GLF_IDENTITY(~ ((83419)), _GLF_IDENTITY(min(~ ((83419)), ~ ((83419))), (true ? min(~ ((83419)), ~ ((83419))) : _GLF_FUZZED(-68641))))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(9098, 571)[0], max(_GLF_IDENTITY(ivec2(9098, 571)[0], (ivec2(9098, 571)[0]) * 1), ivec2(9098, 571)[0])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(9098, 571)[0], max(_GLF_IDENTITY(ivec2(9098, 571)[0], (ivec2(9098, 571)[0]) * 1), ivec2(9098, 571)[0])), max(_GLF_IDENTITY(ivec2(9098, 571)[0], max(_GLF_IDENTITY(ivec2(9098, 571)[0], (ivec2(9098, 571)[0]) * 1), ivec2(9098, 571)[0])), _GLF_IDENTITY(ivec2(9098, 571)[0], max(_GLF_IDENTITY(ivec2(9098, 571)[0], (ivec2(9098, 571)[0]) * 1), ivec2(9098, 571)[0])))) : _GLF_FUZZED(_injected_loop_counter))))))))))))))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)), ~ (~ ((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))))) ^ 0))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ! (! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), _GLF_IDENTITY(! (! (false || _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), ! (! (_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))))) || false)))))), (! (_GLF_IDENTITY(! (false || (false)), bool(bool(_GLF_IDENTITY(! (false || (false)), (_GLF_IDENTITY(! (false || (false)), true && (! (false || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7383.1444), _GLF_FUZZED(-475.762)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)))), true && (bool(bvec2((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7383.1444), _GLF_FUZZED(-475.762)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)))))))), true))), true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), true))))), true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2);
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
           break;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))));
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1 ^ 1) + (1)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-80140), (_GLF_FUZZED(-80140)) << 0) : 1, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-80140) : 1, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(-80140) : 1, int(ivec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-80140) : 1, int(ivec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-80140) : 1, 1, 1, 0))), 1, 1, 0)))))))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
            continue;
           barrier();
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) || false)))
    return;
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64))))), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))), bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-5.2)), bvec2(false, false))))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-5.2)), bvec2(false, false))))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))) - vec2(0.0, 0.0)))) * mat2(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0)) / vec2(1.0, 1.0))))) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.0), _GLF_FUZZED(-5.2)), bvec2(false, false))))).x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (false) && true), _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     subgroupBarrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true)))), true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true)), false))), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
