#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 mat3x4 _f0;
 bvec2 _f1;
 mat3x4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 float _f1;
 _GLF_struct_27 _f2;
} ;

struct _GLF_struct_25 {
 mat2x4 _f0;
 mat2x3 _f1;
 vec3 _f2;
 mat2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_24 {
 uvec4 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_23 {
 uvec2 _f0;
 vec4 _f1;
 int _f2;
 vec3 _f3;
 mat4 _f4;
 mat2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 uvec3 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_25 _f3;
} ;

struct _GLF_struct_21 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_20 {
 mat4 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 uvec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 ivec2 _f2;
 _GLF_struct_20 _f3;
 int _f4;
 _GLF_struct_21 _f5;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_26 _f2;
 uint virtual_gid;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 mat3x4 _f1;
 bool _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 ivec3 _f1;
 ivec4 _f2;
 bool _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 uvec3 _f1;
 ivec3 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 ivec3 _f1;
 bool _f2;
 uint read;
 _GLF_struct_16 _f3;
 bvec2 _f4;
 uvec2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 mat2 _f1;
 bvec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
 bool _f3;
 uint subgroup_id;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 bvec3 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 vec4 _f1;
 bool _f2;
 bool _f3;
 mat3x4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 ivec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 vec4 _f1;
 ivec4 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 vec4 _f1;
 ivec4 _f2;
 bvec3 _f3;
 _GLF_struct_6 _f4;
 mat4x3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 _GLF_struct_7 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 vec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 float _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 vec2 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 float _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
 uint _f3;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) || false)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_IDENTITY(true, false || (true)))))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), (false ? _GLF_FUZZED(-48793) : _GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (int(2)) - 0))))))), 0 + ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            barrier();
          }
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), true, false), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (false)))) && true), true, false), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), true, false), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true && (false)))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true), true, false), false))))), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.2), _GLF_FUZZED(7.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(6529.3795) : (injectionSwitch)[0]))) + determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 2.2)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-71.55 * -1385.3696))), bvec2(true, false))).x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.8) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), 0 ^ (int(2))))))) | (int(2))), (int(2)) | 0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, false, true)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (1 ^ 0) ^ (0 ^ 0))), ~ (~ ((1 ^ 0))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)))))), _GLF_IDENTITY(true, bool(bool(true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), ! (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), ! (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), ! (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))) || false))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_11(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), bvec3(true), _GLF_struct_9(mat4(1.0), mat3x4(1.0), mat2x4(1.0), true, gl_SubgroupID), _GLF_struct_10(mat4x2(1.0), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0)), bvec2(true), mat4x3(1.0)), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), min((vec4(1.0)) * mat4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), vec4(mat4x2((vec4(1.0)) * mat4(1.0), 0.0, abs(1.0), 0.0, 0.0)))))), vec4(1.0))), true, true, mat3x4(1.0), bvec4(true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_12._f0._f2.subgroup_id, max(_GLF_struct_replacement_12._f0._f2.subgroup_id, _GLF_struct_replacement_12._f0._f2.subgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_12._f0._f2.subgroup_id, max(_GLF_struct_replacement_12._f0._f2.subgroup_id, _GLF_struct_replacement_12._f0._f2.subgroup_id))) >> (1u ^ 1u));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(max(477.390, 24.60)) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_FUZZED(4.2)), float((false ? _GLF_FUZZED(max(477.390, 24.60)) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), bool(true))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-26.40)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(477.390, 24.60)) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_FUZZED(4.2)), float((false ? _GLF_FUZZED(max(477.390, 24.60)) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(421.846)), float(1.0), bool(true))), 1.0)), injectionSwitch.y))))), bool(true))))) > injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.5)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-40.75) : injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat2(1.0), _GLF_struct_7(_GLF_struct_5(uvec3(1u), vec4(1.0), ivec4(1), mat4x3(1.0), mat4x3(1.0), mat3(1.0)), vec4(1.0), ivec4(1), bvec3(true), _GLF_struct_6(vec4(1.0), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | 0))), 1))), mat4x3(1.0)), mat4x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY((1.0) - 0.0, mix(float((1.0) - 0.0), float(_GLF_IDENTITY(_GLF_FUZZED(8.8), clamp(_GLF_FUZZED(8.8), _GLF_FUZZED(8.8), _GLF_IDENTITY(_GLF_FUZZED(8.8), (false ? _GLF_FUZZED(363.548) : _GLF_FUZZED(8.8)))))), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(104336u))), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true, true))))), 1.0, 1.0))) * 1.0 : _GLF_FUZZED(580.200))))))))), mat4x2(1.0)), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), _GLF_struct_1(_GLF_struct_0(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))))), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), mat4x3(1.0), 1.0)), _GLF_struct_3(_GLF_struct_2(vec4(1.0), vec4(1.0), mat2x4(1.0)), 1.0, mat4x3(1.0)), 1u, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((true ? uvec3(133404u, 45215u, 93286u) : uvec3(13662u, 155340u, 149717u))))).x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8544.6519), _GLF_FUZZED(49.80)), bvec2(false, false))).y))))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.w = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 else
  {
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.w * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(! ((false)), false)), ! (! (bool(bvec2(! ((false)), false)))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 do
  {
   GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_base = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.y * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(mat3x4(1.0), _GLF_struct_22(_GLF_struct_18(mat2x3(1.0), mat3(1.0)), _GLF_struct_19(ivec4(1), uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), vec4(1.0)), ivec2(1), _GLF_struct_20(mat4(1.0), ivec3(1), mat2x4(1.0), mat2x3(1.0), vec4(1.0)), _GLF_IDENTITY(1, (1) / 1), _GLF_struct_21(1u, mat2(1.0))), _GLF_struct_26(_GLF_struct_23(uvec2(1u), vec4(1.0), 1, vec3(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5090.1710)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false))))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5090.1710)), float(1.0), bool(_GLF_IDENTITY(true, (true) || false)))))))), mat2(1.0), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9360.1375, -43.24, 68.71, 153.058)) : mat2(1.0)))), uvec3(_GLF_IDENTITY(1u, (1u) * 1u)), _GLF_struct_24(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), ~ (~ (_GLF_IDENTITY(max(1u, 1u), _GLF_IDENTITY(uint(uint(max(1u, 1u))), 0u | (uint(uint(max(1u, 1u))))))))))) >> (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-357.578), _GLF_FUZZED(-360.619)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0] : _GLF_FUZZED(-61.39))), _GLF_FUZZED((_GLF_IDENTITY(35.77 * 99.44, mix(float(_GLF_FUZZED(-270.289)), float(35.77 * 99.44), bool(true)))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), vec2(mat4x3(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]))))), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))))))))))))).x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-357.578), _GLF_FUZZED(-360.619)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0] : _GLF_FUZZED(-61.39))), _GLF_FUZZED((_GLF_IDENTITY(35.77 * 99.44, mix(float(_GLF_FUZZED(-270.289)), float(35.77 * 99.44), bool(true)))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), vec2(mat4x3(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]))))), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))))))))))))).x)), (false ? _GLF_FUZZED(144288u) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-357.578), _GLF_FUZZED(-360.619)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0] : _GLF_FUZZED(-61.39))), _GLF_FUZZED((_GLF_IDENTITY(35.77 * 99.44, mix(float(_GLF_FUZZED(-270.289)), float(35.77 * 99.44), bool(true)))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), vec2(mat4x3(vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_FUZZED(4947.4727), (injectionSwitch)[1]))))), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-15.16), _GLF_FUZZED(-0.6)), bvec2(false, false))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))))))))))))).x))))) >> 0u) & 143303u))), mat4x2(1.0), mat3x2(1.0), ivec4(1), mat2x4(1.0), mat4x2(1.0)), _GLF_struct_25(mat2x4(1.0), mat2x3(1.0), vec3(1.0), mat2(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z + subgroup_base, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_size) : GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (_GLF_IDENTITY(0u, min(0u, 0u)) | _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u + ((subgroup_base)))) ^ 0u)) - (1u ^ _GLF_IDENTITY(1u, ~ (~ (1u))))))), (~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) ^ 0u))))) + _GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_28(mat2x3(1.0), 1.0, _GLF_struct_27(mat3x4(1.0), bvec2(true), mat3x4(1.0), ivec4(1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, true)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + ((_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(6), int(6))) + _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(ivec4(-15399, -61562, 58275, 28729).y))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (-280 & 0) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) < (0 | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x = next_virtual_gid) << 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(72.70))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   else
    {
    }
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(bvec3(true), ivec3(1), true, 0, _GLF_struct_16(_GLF_struct_13(mat2x4(1.0), ivec3(1), ivec4(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))), true, uvec2(1u)), uvec3(1u), ivec3(1), _GLF_struct_14(ivec3(1), mat3x4(1.0), true, bvec4(true)), _GLF_struct_15(mat3x4(1.0), mat2x4(_GLF_IDENTITY(1.0, float(float(1.0))))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(68.96)), float(1.0), bool(true)))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false || (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), (true) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u)), uvec2(1u))), mat2x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_14next_virtual_gidsubgroup_idworkgroup_baseworkgroup_size.x], uint(1), 4, 64, 4);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_DEAD(false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), 1u * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id)))) % 2) | (_GLF_struct_replacement_8.subgroup_local_id % 2)), _GLF_struct_replacement_8.subgroup_local_id % 2, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, clamp(_GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id) + 0u, min((_GLF_struct_replacement_8.subgroup_local_id) + 0u, (_GLF_struct_replacement_8.subgroup_local_id) + 0u))))) % 2))), (_GLF_IDENTITY(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), uint(_GLF_IDENTITY(uvec3(true ? (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) - 0u) % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) - 0u)) | (5u))))))), (true ? uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), _GLF_IDENTITY(1u, (1u) / (1u & 1u)), 0u), (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (0u | 0u) + (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u))))))))) : _GLF_FUZZED(uvec3(180047u, 6630u, 149483u)))))))))) * 1u)), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id)))) % 2) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, min(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, (_GLF_struct_replacement_8.subgroup_local_id % 2) / 1u), _GLF_struct_replacement_8.subgroup_local_id % 2)))), _GLF_struct_replacement_8.subgroup_local_id % 2, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, clamp(_GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id) + _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(packSnorm4x8(vec4(-3.0, -8270.2522, 7420.4102, -3.5))))))), min((_GLF_struct_replacement_8.subgroup_local_id) + 0u, (_GLF_struct_replacement_8.subgroup_local_id) + 0u))))) % _GLF_IDENTITY(2, int(int(2)))))), (_GLF_IDENTITY(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), uint(_GLF_IDENTITY(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (0u | 0u) + (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u)))))))) : _GLF_FUZZED(uvec3(180047u, 6630u, 149483u)))))))))) * 1u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(186803u, 166163u, 22877u)) : uvec3((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id)))) % 2) | (_GLF_struct_replacement_8.subgroup_local_id % 2)), _GLF_struct_replacement_8.subgroup_local_id % 2, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, clamp(_GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id) + 0u, min((_GLF_struct_replacement_8.subgroup_local_id) + 0u, (_GLF_struct_replacement_8.subgroup_local_id) + 0u))))) % 2))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), ((_GLF_struct_replacement_8.subgroup_local_id % 2)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), uint(_GLF_IDENTITY(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (0u | 0u) + _GLF_IDENTITY((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u)), ((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u))) | ((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u)))))))))) : _GLF_FUZZED(uvec3(180047u, 6630u, 149483u)))))))))) * 1u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), ((false ? _GLF_FUZZED(uvec3(186803u, 166163u, 22877u)) : uvec3((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id)))) % 2) | (_GLF_struct_replacement_8.subgroup_local_id % 2)), _GLF_struct_replacement_8.subgroup_local_id % 2, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, clamp(_GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id) + 0u, min((_GLF_struct_replacement_8.subgroup_local_id) + 0u, (_GLF_struct_replacement_8.subgroup_local_id) + 0u))))) % 2))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id % 2), ((_GLF_struct_replacement_8.subgroup_local_id % 2)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), uint(_GLF_IDENTITY(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? uvec3(uvec4(uvec3(true ? (_GLF_struct_replacement_8.subgroup_local_id % 2) : _GLF_FUZZED(_GLF_struct_replacement_29.virtual_gid), 1u, 0u), (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (0u | 0u) + _GLF_IDENTITY((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u)), ((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u))) | ((_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, 0u ^ (5u))) << 0u)))))))))) : _GLF_FUZZED(uvec3(180047u, 6630u, 149483u)))))))))) * 1u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))) | uvec3(0u, 0u, 0u)))))) == 0)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bvec3(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), (0 + (1)) >> 0)), false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_injected_loop_counter < _GLF_IDENTITY(1, 0 + (1)), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), (bool(bvec3(_injected_loop_counter < _GLF_IDENTITY(1, 0 + (1)), false, true))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec3((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 0))), (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   do
    {
     do
      {
       _GLF_struct_replacement_17.read = atomicLoad(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec3(4, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(4, (0 | 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 64, 2);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         _GLF_struct_replacement_17.read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), _GLF_IDENTITY((~ (2)) << 0, clamp((~ (2)) << 0, (~ (2)) << 0, _GLF_IDENTITY((~ (2)) << 0, min((~ (2)) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(61472))), _GLF_IDENTITY((~ (2)) << 0, int(_GLF_IDENTITY(ivec3((~ (2)) << 0, (0 ^ 0), 0), clamp(ivec3((~ (2)) << 0, (0 ^ 0), 0), ivec3((~ (2)) << 0, (0 ^ 0), 0), _GLF_IDENTITY(ivec3((~ (2)) << 0, (0 ^ 0), 0), (true ? ivec3((~ (2)) << 0, (0 ^ 0), 0) : _GLF_FUZZED(ivec3(25631, 36179, 11456)))))))))))))) - 0)))), 0u | (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) << 0u), (buf[_GLF_struct_replacement_29.virtual_gid]) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), 4, 64, 2), min(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) - 0))), 64, 2), atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2))), (atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, max(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid))]), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) - 0u)), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) - 0u)), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, max(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid))]) - 0u)), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))))))) / 1u))), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((buf[_GLF_struct_replacement_29.virtual_gid])))) / 1u) ^ 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2)) | _GLF_IDENTITY(0u, 0u | (0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_29.virtual_gid)), (~ (~ (_GLF_struct_replacement_29.virtual_gid))) / 1u))]) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> 0u), (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], clamp(buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid]))) - 0u), max(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], clamp(buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid]))) - 0u), _GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], clamp(buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid]))) - 0u)))), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u, (true ? ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u : _GLF_FUZZED((~ workgroup_id))))))), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], ~ (~ (buf[_GLF_struct_replacement_29.virtual_gid]))))) / 1u, clamp(((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], ~ (~ (buf[_GLF_struct_replacement_29.virtual_gid]))))) / 1u, clamp(((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))), ((_GLF_IDENTITY(((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], ~ (~ (buf[_GLF_struct_replacement_29.virtual_gid]))))) / 1u, clamp(((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u, ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u)))) | 0u))) - 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(54172) : 4)), 64, 2)) | 0u)), clamp((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) | ((1u ^ 1u) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (buf[_GLF_struct_replacement_29.virtual_gid]) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.0) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(pow(-0.3, 451.827)) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), cos(0.0), 0.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(-9.9, 2058.1496, 9109.1949, -341.562, 486.236, -5.5, -62.10, 2215.4086, 41.39)) : _GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), cos(0.0), 0.0, 1.0, determinant(mat4(0.0, abs(0.0), _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), log(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(945.086)), float(0.0), bool(true))), 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), cos(0.0), 0.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)))), ((false ? _GLF_FUZZED(mat3(-9.9, 2058.1496, 9109.1949, -341.562, 486.236, -5.5, -62.10, 2215.4086, 41.39)) : _GLF_IDENTITY(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(1.9) : _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))))), cos(0.0), 0.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true))), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), cos(0.0), cos(0.0), 0.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0)), 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x))))))), 4, 64, 2), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), (0u | 0u) ^ ((buf[_GLF_struct_replacement_29.virtual_gid])))))), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(clamp(_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) | (_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]))))))), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), (_GLF_IDENTITY(clamp((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_29.virtual_gid), (true ? ~ (_GLF_struct_replacement_29.virtual_gid) : _GLF_FUZZED(104199u)))))]), (buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) ^ 0u))), _GLF_struct_replacement_29.virtual_gid))]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), (clamp((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_29.virtual_gid), (true ? ~ (_GLF_struct_replacement_29.virtual_gid) : _GLF_FUZZED(104199u)))))]), (buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) ^ 0u))), _GLF_struct_replacement_29.virtual_gid))]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))) << 0u)) * 1u)), _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, max(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid))]), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2), ~ (~ (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (true ? _GLF_struct_replacement_29.virtual_gid : _GLF_FUZZED(workgroup_size)))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) / 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)], _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], max(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], clamp(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : buf[_GLF_struct_replacement_29.virtual_gid])), buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid]))))), _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, 0u ^ (_GLF_struct_replacement_29.virtual_gid))]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (buf[_GLF_struct_replacement_29.virtual_gid]))), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2))))) | 0u, ((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), (0u | 0u) ^ ((buf[_GLF_struct_replacement_29.virtual_gid])))))), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), (clamp((buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_29.virtual_gid), (true ? ~ (_GLF_struct_replacement_29.virtual_gid) : _GLF_FUZZED(104199u))))), (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_29.virtual_gid), (true ? ~ (_GLF_struct_replacement_29.virtual_gid) : _GLF_FUZZED(104199u)))))) | (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_29.virtual_gid), (true ? ~ (_GLF_struct_replacement_29.virtual_gid) : _GLF_FUZZED(104199u)))))))]), (buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) ^ 0u))), _GLF_struct_replacement_29.virtual_gid))]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))) * 1u)), _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, max(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid))]), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2), ~ (~ (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) | 0u)) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) << 0u)], _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], max(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], max(buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid])), clamp(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : buf[_GLF_struct_replacement_29.virtual_gid])), buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid]))))), _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, 0u ^ (_GLF_struct_replacement_29.virtual_gid))]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2))))) | 0u) | ((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ~ (~ (_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), (0u | 0u) ^ ((buf[_GLF_struct_replacement_29.virtual_gid])))))), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u, (((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u) - 0u))), (clamp((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_29.virtual_gid), (true ? ~ (_GLF_struct_replacement_29.virtual_gid) : _GLF_FUZZED(104199u)))))]), (buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) ^ 0u))), _GLF_struct_replacement_29.virtual_gid))]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))) * 1u)), _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, max(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid))]), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2), ~ (~ (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)], _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], max(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], clamp(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : buf[_GLF_struct_replacement_29.virtual_gid])), buf[_GLF_struct_replacement_29.virtual_gid], buf[_GLF_struct_replacement_29.virtual_gid]))))), _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, 0u ^ (_GLF_struct_replacement_29.virtual_gid))]), ((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, clamp(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid))])) ^ 0u))), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2))))) | 0u)))), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], 0u | (buf[_GLF_struct_replacement_29.virtual_gid]))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) | 0u)) | (_GLF_struct_replacement_29.virtual_gid))]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), clamp(_GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), min((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]))), (buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]))), ((buf[_GLF_struct_replacement_29.virtual_gid])) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 2)) | 0u)), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(subgroup_base)))), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], _GLF_IDENTITY((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, clamp(_GLF_struct_replacement_29.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, clamp(_GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid, _GLF_struct_replacement_29.virtual_gid)), _GLF_struct_replacement_29.virtual_gid))]), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY(clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), 0u | (_GLF_IDENTITY(clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), clamp(clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u)), clamp((buf[_GLF_struct_replacement_29.virtual_gid]), (buf[_GLF_struct_replacement_29.virtual_gid]), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_struct_replacement_29.virtual_gid])) ^ 0u))))))), _GLF_IDENTITY((buf[_GLF_struct_replacement_29.virtual_gid]), ((buf[_GLF_IDENTITY(_GLF_struct_replacement_29.virtual_gid, (_GLF_struct_replacement_29.virtual_gid) ^ 0u)])) / 1u))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)) ^ _GLF_IDENTITY(0u, (0u) | (0u)))), 4, 64, 2)) | 0u)))))) | (atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_29.virtual_gid], (buf[_GLF_struct_replacement_29.virtual_gid]) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), 4, 64, 2)))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((0 << _GLF_IDENTITY(int(6), int(6)))) >> 0), (0 << _GLF_IDENTITY(int(6), int(6))), (0 << _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true, false, true)))) || false)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-16692) : _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) < _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-72345) : 1, (false ? _GLF_FUZZED(-72345) : 1) >> 0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))))), 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (length(vec2(0.0, 0.0))) / determinant(mat4(1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(349.599), min(_GLF_FUZZED(349.599), _GLF_IDENTITY(_GLF_FUZZED(349.599), mix(float(_GLF_FUZZED(349.599)), float(_GLF_FUZZED(-2161.2703)), bool(false))))) : 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9350.0850)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - sqrt(0.0)), 0.0, 0.0))[0], _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0))[1], (_GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0))[1], clamp((vec4(0.0, 1.0, 0.0, 0.0))[1], (vec4(0.0, 1.0, 0.0, 0.0))[1], (vec4(0.0, 1.0, 0.0, 0.0))[1]))) + log(1.0)), _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)), max((vec4(0.0, 1.0, 0.0, 0.0)), (vec4(0.0, 1.0, 0.0, 0.0))))[3]), bvec4(false, false, true, true))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0))) + 0.0), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.4)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0))), length(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, exp(0.0)), _GLF_IDENTITY(mat2x4(mat4(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0))), length(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, exp(0.0)))), mat4(1.0) * (mat2x4(mat4(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 0.0))), length(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, exp(0.0))))))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-5.0)), 1.0 * ((true ? 1.0 : _GLF_FUZZED(-5.0))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (float(float(0.0))) - 0.0))) / 1.0), 0.0))))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), (vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547))) * mat2(1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)))))), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) / exp(0.0)), (length(vec2(0.0, 0.0))) / determinant(mat4(1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.7)), bool(false))), 1.0, 0.0))), sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(349.599) : 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9350.0850)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0))) + 0.0), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), vec4(0.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_IDENTITY(_GLF_FUZZED(-167.846), clamp(_GLF_FUZZED(-167.846), _GLF_FUZZED(-167.846), _GLF_FUZZED(-167.846))), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0))) + 0.0), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, float(mat4x2((0.0) / 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, length(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0.0), max(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0), 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(359.587)), bool(false))), 1.0, 0.0, 1.0))), 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))), _GLF_IDENTITY(length(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2979.6153) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0), max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (length(vec2(0.0, 0.0))) / determinant(mat4(1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(349.599) : 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9350.0850)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0))) + 0.0), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-4.4) : (injectionSwitch)[1])), (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)), vec2(mat4(injectionSwitch, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (length(vec2(0.0, 0.0))) / determinant(mat4(1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(349.599) : 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-9904.2444))), _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-9350.0850)), 1.0 * ((true ? 0.0 : _GLF_FUZZED(-9350.0850)))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0)), 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0))) + 0.0), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0), max(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0))).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(6.3)), vec2(_GLF_FUZZED(0.8), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6796.1547)), vec2(_GLF_FUZZED(-6807.8033), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))), mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), vec2(mat4(injectionSwitch, 1.0, sqrt(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (length(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-717.894)), bool(false)))))) / determinant(mat4(1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(349.599) : 0.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9350.0850)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), vec4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), min(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true)))))), mat2(1.0) * (mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), min(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true)))))))))), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(9.9), _GLF_FUZZED(-2.5)), vec4(_GLF_FUZZED(-4.3), _GLF_FUZZED(-167.846), (vec4(0.0, 1.0, 0.0, 0.0))[2], (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))))))), vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0))) + _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-1.2)), bool(false)))), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), max(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), clamp(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0))).y))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), int(6))) & _GLF_IDENTITY(-63290, int(ivec2(-63290, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       subgroupBarrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.4, -6.8)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))))).y))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) ^ 0), _injected_loop_counter, _injected_loop_counter)) > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 0.0 + (float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-0.9)), bool(false)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
              }
             for(int _injected_loop_counter = (1 & _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 ^ 0) ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 atomicStore(checker[_GLF_struct_replacement_29.virtual_gid], _GLF_struct_replacement_17.read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), true && (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
