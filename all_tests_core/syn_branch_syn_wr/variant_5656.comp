#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -5.4))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) + (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)) & uvec3(53688u, 9686u, 110914u))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true))) ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u)))), 0u, 0u) & uvec3(31492u, 163766u, _GLF_IDENTITY(161004u, (161004u) >> 0u))) ^ (gl_WorkGroupID)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) & uvec3(31492u, _GLF_IDENTITY(163766u, _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(_GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)), uint(uvec4(_GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, _GLF_IDENTITY((163766u), uint(uint(_GLF_IDENTITY((163766u), 0u | ((163766u)))))) / 1u), 163766u)), 1u, 1u, 0u)))), _GLF_IDENTITY(min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, clamp(163766u, _GLF_IDENTITY(163766u, 0u ^ (163766u)), 163766u))) | (163766u)), 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, (163766u) | (163766u))) / 1u), 163766u))), _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u))), (~ _GLF_IDENTITY((min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), bool(true))))))) - 0u))) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u))), clamp(_GLF_IDENTITY((min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u))), (_GLF_IDENTITY((min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(163766u, ~ (~ (163766u))), 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u))), ((min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u)))) >> 0u)) ^ 0u), (min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u))), (min(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u))), _GLF_IDENTITY(clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (_GLF_IDENTITY(163766u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(163766u, (163766u) * 1u), (0u & 98623u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u))) / 1u), 163766u))), (clamp(163766u, 163766u, _GLF_IDENTITY(163766u, min(_GLF_IDENTITY(163766u, (163766u) / 1u), 163766u)))) ^ 0u)))))) >> (51602u & 0u)))))), 161004u)) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), max(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)))))), (_GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) & uvec3(31492u, 163766u, 161004u)) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))))) << uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false), true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-499.865) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       continue;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false)))))), bool(bvec3(! (! (_GLF_WRAPPED_LOOP(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -86.70))), bool(false))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), clamp((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))) | 0u), (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) / _GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))))) << (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))))))], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false, false)))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), false, false))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), _GLF_IDENTITY(false, (false) || false), false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
      }
     else
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(((next_virtual_gid)) | 0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(((next_virtual_gid)) | 0u, (((next_virtual_gid)) | 0u) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(workgroup_id) : uint(uvec2(_GLF_IDENTITY(((next_virtual_gid)) | 0u, (((next_virtual_gid)) | 0u) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (0 ^ 0) ^ (1))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) ^ ivec4(0, 0, 0, 0))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0))) + 0)))) ^ 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_IDENTITY(_GLF_FUZZED(19933), (true ? _GLF_IDENTITY(_GLF_FUZZED(19933), (true ? _GLF_FUZZED(19933) : _GLF_FUZZED(findLSB(43745)))) : _GLF_FUZZED(mix(97356, 98296, true))))))) * _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(8794.6233)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, sqrt(1.0))), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, sqrt(1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-68.56)), float(injectionSwitch.y), bool(true))))), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))), max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) ? 0 : _GLF_FUZZED(19933)), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_FUZZED((+ -580.729))), float((0.0) - 0.0), bool(true)))), 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0)))), mix(float(_GLF_FUZZED(-4532.1342)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0))))), float(float(float(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0)))))))), bool(true)))), 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) ? 0 : _GLF_FUZZED(19933))) / 1))) * 1)) - 0)) | (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(_GLF_IDENTITY(19933, min(19933, 19933)), 19933, 19933)))), _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(19933, 19933, 19933))))), (((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(19933, 19933, 19933)))))) * 1) - 0))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0))), max(0 ^ 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), _GLF_IDENTITY((0 | (0)), ((0 | (0))) << 0) ^ 0)) ^ 0)), 0 ^ 0, 0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70563) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70563) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec3(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))))), clamp(0, 0, 0))))) >> 0)))))) - 0)) ^ (1)))), uint(uvec2(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) ^ ivec4(0, 0, 0, 0))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0))) + 0)))) ^ 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_IDENTITY(_GLF_FUZZED(19933), (true ? _GLF_IDENTITY(_GLF_FUZZED(19933), (true ? _GLF_FUZZED(19933) : _GLF_FUZZED(findLSB(43745)))) : _GLF_FUZZED(mix(97356, 98296, true))))))) * _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(8794.6233)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, sqrt(1.0))), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, sqrt(1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-68.56)), float(injectionSwitch.y), bool(true))))), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))), max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) ? 0 : _GLF_FUZZED(19933)), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_FUZZED((+ -580.729))), float((0.0) - 0.0), bool(true)))), 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0)))), mix(float(_GLF_FUZZED(-4532.1342)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0))))), float(float(float(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0)))))))), bool(true)))), 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) ? 0 : _GLF_FUZZED(19933))) / 1))) * 1)) - 0)) | (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(_GLF_IDENTITY(19933, min(19933, 19933)), 19933, 19933)))), _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(19933, 19933, 19933))))), (((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(19933, 19933, 19933)))))) * 1) - 0))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0))), max(0 ^ 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), _GLF_IDENTITY((0 | (0)), ((0 | (0))) << 0) ^ 0)) ^ 0)), 0 ^ 0, 0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70563) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70563) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec3(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))))), clamp(0, 0, 0))))) >> 0)))))) - 0)) ^ (1)))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) ^ ivec4(0, 0, 0, 0))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0))) : _GLF_FUZZED(19933)))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0))) + 0)))) ^ 0), (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_IDENTITY(_GLF_FUZZED(19933), (true ? _GLF_IDENTITY(_GLF_FUZZED(19933), (true ? _GLF_FUZZED(19933) : _GLF_FUZZED(findLSB(43745)))) : _GLF_FUZZED(mix(97356, 98296, true))))))) * _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(8794.6233)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, sqrt(1.0))), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, abs(1.0), 1.0, sqrt(1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-68.56)), float(injectionSwitch.y), bool(true))))), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0))), max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) ? 0 : _GLF_FUZZED(19933)), ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float(_GLF_FUZZED((+ -580.729))), float((0.0) - 0.0), bool(true)))), 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0)))), mix(float(_GLF_FUZZED(-4532.1342)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0))))), float(float(float(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, tan(0.0), 1.0)))))))), bool(true)))), 0.0, 0.0)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, log(1.0), 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(log(1.0), 1.0 * (_GLF_IDENTITY(log(1.0), 0.0 + (_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))))))), 0.0, sqrt(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) ? 0 : _GLF_FUZZED(19933))) / 1))) * 1)) - 0)) | (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(_GLF_IDENTITY(19933, min(19933, 19933)), 19933, 19933)))), _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(19933, 19933, 19933))))), (((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(_GLF_IDENTITY(19933, clamp(19933, 19933, 19933)))))) * 1) - 0))) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(19933)))) * 1)) - 0))), max(0 ^ 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), _GLF_IDENTITY((0 | (0)), ((0 | (0))) << 0) ^ 0)) ^ 0)), 0 ^ 0, 0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), ~ (~ (_GLF_IDENTITY(0, (0) | (0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70563) : _GLF_IDENTITY(0, clamp(0, 0, 0)))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-70563) : _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(ivec3(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))))), clamp(0, 0, 0))))) >> 0)))))) - 0)) ^ (1))))) >> 0u), 1u))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-36383))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bool(bool(bool(_GLF_IDENTITY(false, true && (false)))))))), true, false))), (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           break;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), true, true)))))))) && true))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) + determinant(mat3(0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
      break;
     continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(8.3)), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_DEAD(false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-21.34)), bool(false))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / abs(sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(2049.3751)), bvec2(false, false)))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2(_GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(9422.8248, -8361.6684)) : (injectionSwitch))) * mat2(1.0), 0.0, 1.0)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (false) && true), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, ! (! (true))), false))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1)) < subgroup_size, bool(bvec3(subgroup_local_id + 1 < subgroup_size, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   int i = _GLF_IDENTITY(0, int(ivec3(0, (1 ^ 1), 1)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3969.3220)), bool(false)))), float(_GLF_FUZZED(8.7)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3969.3220)), bool(false)))), float(_GLF_FUZZED(8.7)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) >> 0)) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, _GLF_IDENTITY(~ (~ ((4) + _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0))))))))), clamp(~ (~ ((4) + _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(4), int(4)))), 0)), 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0))))))))), ~ (~ ((4) + _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), _GLF_IDENTITY((_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0))), ~ (~ ((_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0)))))))))))), _GLF_IDENTITY(~ (~ ((4) + _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0)))))))) << 0))), ~ (~ (~ (~ ((4) + _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (_GLF_IDENTITY(ivec4((0) / 1, 0, 1, 1), (ivec4((0) / 1, 0, 1, 1)) << ivec4(0, 0, 0, 0))) << (ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0)))))))))))))))))), 64, 4);
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, sqrt(0.0), 0.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), float(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))) : _GLF_FUZZED(1.2), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), float(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))) : _GLF_FUZZED(1.2), max(true ? _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), float(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))) : _GLF_FUZZED(1.2), true ? _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), float(vec4(determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))) : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(vec2(-8009.9411, -9.7).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, sqrt(0.0), 0.0))) * 1.0)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false))))))));
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, ((bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false) || false)) || false)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) && true, true, true)))))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6921.9728) : 0.0))), transpose(transpose(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), sqrt(0.0), 0.0, 0.0))))), mix(vec2((vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, sin(0.0), 1.0, 1.0, 0.0))))), 0.0, cos(0.0), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), 0.0, cos(0.0), sqrt(0.0), 0.0, 0.0))))))[0], (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), sqrt(0.0), 0.0, 0.0), transpose(transpose(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(0.0), sqrt(0.0), 0.0, 0.0))))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.6), mix(float(_GLF_FUZZED(-1.6)), float(_GLF_FUZZED(-1.0)), bool(false))), _GLF_FUZZED(5.9)), bvec2(false, false)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), _GLF_IDENTITY(0.0 + (injectionSwitch.y), min(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y)))))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
