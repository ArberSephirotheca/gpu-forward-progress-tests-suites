#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_56 {
 mat3x2 _f0;
} ;

struct _GLF_struct_57 {
 _GLF_struct_56 _f0;
} ;

struct _GLF_struct_54 {
 mat3x4 _f0;
 mat3 _f1;
 vec2 _f2;
 uvec2 _f3;
 mat4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_55 {
 _GLF_struct_54 _f0;
} ;

struct _GLF_struct_52 {
 ivec2 _f0;
} ;

struct _GLF_struct_53 {
 mat4x3 _f0;
 mat2x4 _f1;
 _GLF_struct_52 _f2;
 uint subgroup_base;
} ;

struct _GLF_struct_58 {
 _GLF_struct_53 _f0;
 _GLF_struct_55 _f1;
 _GLF_struct_57 _f2;
} ;

struct _GLF_struct_49 {
 mat3 _f0;
 ivec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_48 {
 mat2x4 _f0;
 bvec2 _f1;
 uint _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_47 {
 ivec3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_46 {
 bool _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_50 {
 uvec2 _f0;
 mat2x3 _f1;
 _GLF_struct_46 _f2;
 _GLF_struct_47 _f3;
 _GLF_struct_48 _f4;
 mat2 _f5;
 _GLF_struct_49 _f6;
} ;

struct _GLF_struct_44 {
 ivec4 _f0;
 bvec3 _f1;
 uvec4 _f2;
 uint _f3;
 uint subgroup_size;
 ivec4 _f4;
 ivec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_43 {
 uvec4 _f0;
} ;

struct _GLF_struct_51 {
 bvec3 _f0;
 _GLF_struct_43 _f1;
 mat2x3 _f2;
 bool _f3;
 _GLF_struct_45 _f4;
 _GLF_struct_50 _f5;
} ;

struct _GLF_struct_40 {
 vec2 _f0;
} ;

struct _GLF_struct_41 {
 _GLF_struct_40 _f0;
 uint _f1;
 bool _f2;
} ;

struct _GLF_struct_38 {
 mat4 _f0;
} ;

struct _GLF_struct_37 {
 mat2x3 _f0;
 mat4x2 _f1;
 vec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_36 {
 mat2 _f0;
} ;

struct _GLF_struct_35 {
 uint _f0;
 mat4 _f1;
 uint _f2;
} ;

struct _GLF_struct_39 {
 uint subgroup_id;
 vec2 _f0;
 _GLF_struct_35 _f1;
 _GLF_struct_36 _f2;
 bvec4 _f3;
 _GLF_struct_37 _f4;
 _GLF_struct_38 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_33 {
 ivec2 _f0;
} ;

struct _GLF_struct_34 {
 vec4 _f0;
 _GLF_struct_33 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_42 {
 mat2 _f0;
 _GLF_struct_34 _f1;
 _GLF_struct_39 _f2;
 _GLF_struct_41 _f3;
} ;

struct _GLF_struct_30 {
 vec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 bvec4 _f1;
 mat4 _f2;
 mat4 _f3;
 mat2x4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_28 {
 vec3 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_27 {
 uint _f0;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_29 {
 float _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 int _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_23 {
 mat2x3 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_22 {
 int _f0;
 ivec2 _f1;
 bool _f2;
 int _f3;
 vec4 _f4;
 mat4x3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_21 {
 bvec4 _f0;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 ivec3 _f3;
 bvec4 _f4;
 mat4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 float _f3;
 uint _f4;
 vec3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_19 _f0;
 ivec3 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 vec4 _f1;
 float _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 uint _f1;
 bvec4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 mat3 _f1;
 mat4x2 _f2;
 uint _f3;
 _GLF_struct_15 _f4;
} ;

struct _GLF_struct_32 {
 uint subgroup_local_id;
 _GLF_struct_16 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_24 _f2;
 vec2 _f3;
 _GLF_struct_29 _f4;
 _GLF_struct_31 _f5;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 mat4x3 _f1;
 uint _f2;
 bvec2 _f3;
 vec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 bool _f4;
 int _f5;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 float _f1;
 mat4x3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 vec3 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 mat3x4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat2 _f1;
 uvec4 _f2;
 vec2 _f3;
 bvec3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat3x2 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 uvec3 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 bool _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_12 _f4;
 uint next_virtual_gid;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 uint _f0;
 bool _f1;
 _GLF_struct_0 _f2;
 mat4x2 _f3;
 uint num_workgroup;
 float _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_42 _GLF_struct_replacement_42 = _GLF_struct_42(mat2(1.0), _GLF_struct_34(vec4(1.0), _GLF_struct_33(ivec2(1)), bvec4(true)), _GLF_struct_39(gl_SubgroupID, vec2(1.0), _GLF_struct_35(1u, mat4(1.0), 1u), _GLF_struct_36(mat2(1.0)), bvec4(true), _GLF_struct_37(mat2x3(1.0), mat4x2(1.0), vec2(1.0), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) ^ 0u))), _GLF_struct_38(mat4(1.0)), mat2x3(1.0)), _GLF_struct_41(_GLF_struct_40(vec2(1.0)), 1u, true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(bvec3(true), _GLF_struct_43(uvec4(1u)), mat2x3(1.0), true, _GLF_struct_45(_GLF_struct_44(ivec4(1), bvec3(true), uvec4(1u), 1u, gl_SubgroupSize, ivec4(1), ivec3(1), vec4(1.0)), mat4x3(1.0), mat2x3(1.0)), _GLF_struct_50(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u)), mat2x3(1.0), _GLF_struct_46(true, mat3x4(1.0)), _GLF_struct_47(ivec3(1), mat4x2(1.0), mat2(1.0), ivec3(1)), _GLF_struct_48(mat2x4(1.0), bvec2(true), 1u, bvec4(true)), mat2(1.0), _GLF_struct_49(mat3(1.0), ivec2(1), uvec3(1u))));
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(gl_SubgroupInvocationID, _GLF_struct_16(_GLF_struct_14(mat4x3(1.0), 1u, bvec4(true), uvec3(1u)), _GLF_IDENTITY(mat3(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-1968.1579, 7.1, -25.49, -4212.0864, -3633.9055, -2797.1765, -4483.7453, -3458.8425, 779.189)) : mat3(1.0))), mat4x2(1.0), 1u, _GLF_struct_15(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, 1u))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, 1u))), (~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, 1u))), ~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, 1u))))))), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1u), (uvec4(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))))), uvec2(1u))), _GLF_struct_18(_GLF_struct_17(ivec3(1), vec4(1.0), 1.0)), _GLF_struct_24(_GLF_struct_19(ivec2(1), mat2x3(1.0), bvec3(true), 1.0, 1u, vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.4))), mix(float(_GLF_FUZZED(0.5)), float(1.0), bool(true)))) / 1.0)), mat4x3(1.0)), ivec3(1), _GLF_struct_20(bvec4(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(1, 1) * (ivec2(1))), (true ? _GLF_IDENTITY(ivec2(1), ivec2(1, 1) * (ivec2(1))) : _GLF_FUZZED((ivec2(-85228, 74996) | ivec2(-56064, -40357))))), mat4x3(1.0), ivec3(1), bvec4(true), mat4(1.0), mat3x4(1.0)), _GLF_struct_21(bvec4(true)), _GLF_struct_22(1, ivec2(1), true, 1, vec4(1.0), mat4x3(1.0), vec4(1.0)), _GLF_struct_23(mat2x3(1.0), mat3x4(1.0), bvec4(_GLF_IDENTITY(true, ! (! (true)))), ivec3(_GLF_IDENTITY(1, (1) >> 0)))), vec2(1.0), _GLF_struct_29(1.0, _GLF_struct_25(vec4(1.0), vec2(1.0)), _GLF_struct_26(bvec2(true)), _GLF_struct_27(1u), 1, _GLF_struct_28(vec3(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))) | ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))))) + 0), min(_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) << 0))) * 1), _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (true ? (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) : _GLF_FUZZED(19142)))))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))) | ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))))) + 0), min(_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) << 0))) * 1), _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (true ? (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) : _GLF_FUZZED(19142)))))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))) | ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))))) + 0), min(_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) << 0))) * 1), _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (true ? (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) : _GLF_FUZZED(19142)))))))))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))) | ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))))) + 0), min(_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) << 0))) * 1), _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (true ? (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) : _GLF_FUZZED(19142))))))))))))) | (ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))) | ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))))))) + 0), min(_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) << 0))) * 1), _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))), (true ? (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-99189)))) : _GLF_FUZZED(19142))))))))))))) * ivec2(1, 1)), mat4x2(1.0), bvec2(true), _GLF_IDENTITY(true, ! (! (true))))), _GLF_struct_31(_GLF_struct_30(vec2(1.0), ivec2(1)), bvec4(true), mat4(1.0), mat4(1.0), mat2x4(1.0), ivec2(1)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))))))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(1u, true, _GLF_struct_0(mat2x3(1.0), vec2(1.0)), mat4x2(1.0), gl_NumWorkGroups.x, 1.0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, 0u, 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(-2891.8432)), bool(false))), float(_GLF_FUZZED(((-19.88 + -6.7)))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (false ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(-5.5)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (false ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(-5.5)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), min(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (false ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(-5.5)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), (false ? _GLF_FUZZED(-4.6) : _GLF_FUZZED(-5.5)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), bool(true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))), true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true, false), bvec3(bvec3(bvec3(false, true, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)) && (bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))))))), bool(bvec2(bool(bvec2(false, false)), true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))) && true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sin(sqrt(0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (bool(bvec2(false, false)))))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sin(sqrt(0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (bool(bvec2(false, false)))))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))))))), ! (! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sin(sqrt(0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (bool(bvec2(false, false)))))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), true)), false || (bool(bvec2(bool(bvec2(false, false)), true)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))))))))))))), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))) || false)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))))), true && (_GLF_IDENTITY(((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))) || false)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))))), bool(bool(((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))) || false)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))))))))))))), false)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))) && true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sin(sqrt(0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (bool(bvec2(false, false)))))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sin(sqrt(0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (bool(bvec2(false, false)))))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))))))), ! (! (! ((_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, sin(sqrt(0.0)), 1.0, 0.0))).x < injectionSwitch.y)) && (bool(bvec2(false, false)))))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), true)), false || (bool(bvec2(bool(bvec2(false, false)), true)))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))))))))))))), ! (! _GLF_IDENTITY(((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))) || false)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))))), true && (_GLF_IDENTITY(((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))) || false)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))))), bool(bool(((! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), bool(bvec2(bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))), false, true)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))) || false)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true)))))), false || ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false)))), bool(bvec2(bool(bvec2(false, false)), true))))))))))))))))))))))))), false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_58 _GLF_struct_replacement_58 = _GLF_struct_58(_GLF_struct_53(mat4x3(1.0), mat2x4(1.0), _GLF_struct_52(ivec2(1)), _GLF_struct_replacement_42._f2.subgroup_id * _GLF_struct_replacement_51._f4._f0.subgroup_size), _GLF_struct_55(_GLF_struct_54(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat3(1.0), vec2(1.0), uvec2(1u), mat4(1.0), mat4x2(1.0))), _GLF_struct_57(_GLF_struct_56(mat3x2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_58._f0.subgroup_base + _GLF_struct_replacement_32.subgroup_local_id;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat2x3(1.0), true, _GLF_struct_7(_GLF_struct_2(1u), _GLF_struct_3(bvec3(true), mat2x3(1.0)), _GLF_struct_4(mat3(1.0), mat3x2(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2587.5619) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.4))), bool(false)))), max(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2587.5619) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.4))), bool(false)))), clamp(clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2587.5619) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.4))), bool(false)))), clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2587.5619) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.4))), bool(false)))), clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2587.5619) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.4))), bool(false)))))), clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2587.5619) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.4))), bool(false)))))))), mat3x4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2x4(1.0), bvec2(true)), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (1u))), _GLF_struct_5(mat4x3(1.0), mat2(1.0), uvec4(1u), vec2(1.0), bvec3(true), uvec2(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))))), _GLF_struct_6(uvec3(1u), mat3x4(1.0), bvec3(true)), mat4(1.0)), _GLF_struct_8(mat4(1.0), mat3x4(1.0)), _GLF_struct_12(uvec4(1u), vec3(1.0), _GLF_struct_9(ivec2(1), 1.0, mat4x3(1.0), mat2x4(1.0)), _GLF_struct_10(mat4x3(1.0), mat4x2(1.0), mat3x2(1.0), mat3x4(1.0), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, false, false)))))))), 1), _GLF_struct_11(ivec3(1), mat4x3(1.0), 1u, bvec2(true), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), uvec2(1u))), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_58._f0.subgroup_base + ((_GLF_struct_replacement_32.subgroup_local_id + 1) % _GLF_struct_replacement_51._f4._f0.subgroup_size), clamp(workgroup_base + _GLF_struct_replacement_58._f0.subgroup_base + ((_GLF_struct_replacement_32.subgroup_local_id + 1) % _GLF_struct_replacement_51._f4._f0.subgroup_size), workgroup_base + _GLF_struct_replacement_58._f0.subgroup_base + ((_GLF_struct_replacement_32.subgroup_local_id + 1) % _GLF_struct_replacement_51._f4._f0.subgroup_size), workgroup_base + _GLF_struct_replacement_58._f0.subgroup_base + ((_GLF_struct_replacement_32.subgroup_local_id + 1) % _GLF_struct_replacement_51._f4._f0.subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_13.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_local_id % 2, (_GLF_struct_replacement_32.subgroup_local_id % 2) ^ 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (_GLF_struct_replacement_32.subgroup_local_id % 2))) == 0, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-55156) : 0)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == _GLF_IDENTITY(0, (false ? _GLF_FUZZED(83869) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-13922))))))))), ((! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == _GLF_IDENTITY(0, (false ? _GLF_FUZZED(83869) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-13922))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == _GLF_IDENTITY(0, (false ? _GLF_FUZZED(83869) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-13922)))))))), true && (! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, ~ (~ (2)))), min(~ (_GLF_IDENTITY(2, ~ (~ (2)))), ~ (_GLF_IDENTITY(2, ~ (~ (2))))))))) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == _GLF_IDENTITY(0, (false ? _GLF_FUZZED(83869) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-13922)))))))))))))), ((! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))))) && true)))) || false))), ! (! (! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_local_id, (true ? _GLF_struct_replacement_32.subgroup_local_id : _GLF_FUZZED(read))) % 2) == 0), bool(bvec2(_GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_local_id, (true ? _GLF_struct_replacement_32.subgroup_local_id : _GLF_FUZZED(read))) % 2) == 0), true && (true && ((_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_local_id, (true ? _GLF_struct_replacement_32.subgroup_local_id : _GLF_FUZZED(read))) % 2) == 0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) >> (0 << _GLF_IDENTITY(int(5), int(5))))) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))) && true, _GLF_IDENTITY(! (! ((_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))) && true)), ! (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, bool(bvec4(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, false || ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)), true, true, false))), true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))) && true))))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, ! (! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, _GLF_IDENTITY(true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0), ! (! (true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0), ! (! (true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))))))), (bool(bool(bool(_GLF_IDENTITY(true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0), ! (! (true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)))))))) || false))))))))), ! (! (! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, ! (! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, _GLF_IDENTITY(true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0), ! (! (true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)))))), bool(bool(bool(bool(_GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_struct_replacement_32.subgroup_local_id % 2, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_32.subgroup_local_id % 2))) == _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(findMSB(-10865)) : 0))), ! (! (true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)))))))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, bool(bvec4(_GLF_IDENTITY((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0, ! (! ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false))), true && ((_GLF_struct_replacement_32.subgroup_local_id % 2) == 0))) && true)))))))))))))
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(true, ! (! (true))) ? atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2) : _GLF_FUZZED(workgroup_base))), 0u ^ (read = atomicLoad(buf[virtual_gid], 4, 64, 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6845.5589)), vec2(_GLF_FUZZED(-8.0), (injectionSwitch)[1]), bvec2(false, true))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6845.5589)), vec2(_GLF_FUZZED(-8.0), (injectionSwitch)[1]), bvec2(false, true))))).y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
