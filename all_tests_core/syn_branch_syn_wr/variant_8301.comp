#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | (_GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(0), int(0)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec2((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true)))) && true))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-738.484), (true ? injectionSwitch.y : _GLF_FUZZED(-738.484)) - sqrt(tan(0.0))))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-738.484))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-738.484))), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), length(0.0), 1.0))), 0.0, 1.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((gl_WorkGroupID.x), (false ? _GLF_FUZZED(subgroup_size) : (gl_WorkGroupID.x)))))) | ((gl_WorkGroupID.x))), max(_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((gl_WorkGroupID.x), (false ? _GLF_FUZZED(subgroup_size) : (gl_WorkGroupID.x)))))) | ((gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((gl_WorkGroupID.x), (false ? _GLF_FUZZED(subgroup_size) : (gl_WorkGroupID.x)))))) | ((gl_WorkGroupID.x))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_IDENTITY(0 ^ 1, max(0 ^ 1, 0 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(((0 ^ 1)), max(((0 ^ _GLF_IDENTITY(1, ~ (~ (1))))), ((0 ^ 1)))), _GLF_IDENTITY(max(_GLF_IDENTITY(((0 ^ 1)), max(((0 ^ 1)), ((0 ^ 1)))), _GLF_IDENTITY(((0 ^ 1)), max(((0 ^ 1)), ((0 ^ 1))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(((0 ^ 1)), int(ivec2(((0 ^ 1)), _GLF_IDENTITY(0, 0 | (0))))), max(((0 ^ 1)), ((0 ^ 1)))), _GLF_IDENTITY(((0 ^ 1)), max(((0 ^ 1)), ((0 ^ 1)))))) - 0)) << 0) * (_injected_loop_counter --)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), ! (! ((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat2(float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, sin(_GLF_IDENTITY(0.0, float(mat4(0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), sqrt(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0)))), 0.0)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6984.9186)), bvec2(true, false))).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), bool(bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true)))), false || (_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true)))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && true))))))))))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) || false, ! (! (((injectionSwitch.x < injectionSwitch.y)) || false)))) || false)))), (bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), ((injectionSwitch.x < injectionSwitch.y)) || false)))) || false), (_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0) < injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))) < injectionSwitch.y)) || false, ! (! (((injectionSwitch.x < injectionSwitch.y)) || false)))) || false)))), (bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, true))), ((injectionSwitch.x < injectionSwitch.y)) || false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)), vec2(_GLF_FUZZED(7697.1399), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(7533.6972)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-60.17)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))), injectionSwitch)).y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true)))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && _GLF_IDENTITY(true, bool(bool(true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), true))) && true)))), false, true), true))))), false, _GLF_IDENTITY(true, false || (true)), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && _GLF_IDENTITY(true, bool(bool(true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), true))) && true)))), false, true), true))))), false, _GLF_IDENTITY(true, false || (true)), false))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), false, true), true))))), false, _GLF_IDENTITY(true, false || (true)), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), false, true), true))))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false)))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))) && true)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true)), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, (true) || false), false, true))) && true)), false, true), true))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (true)), false))))) && true)) || false)))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))), true && (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          break;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))) || false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    break;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(subgroup_size))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id : _GLF_FUZZED(subgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (true ? workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(91238u) : subgroup_id * subgroup_size)) + subgroup_local_id : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (true ? workgroup_base + subgroup_id * subgroup_size + subgroup_local_id : _GLF_FUZZED(subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec2(~ ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))), 1u)), uint(_GLF_IDENTITY(uint(uint(uvec2(~ ((subgroup_local_id + 1)), 1u))), (uint(uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))) << 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))), _GLF_IDENTITY(1u, 0u + (1u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) - 0u)) - 0u), (0u | 0u), (0u | 0u), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) - 0u)) - 0u), (0u | 0u), (0u | 0u), 1u), ~ (~ (uvec4(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) - 0u)) - 0u), (0u | 0u), (0u | 0u), 1u)))), uvec4(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) - 0u)) - 0u), (0u | 0u), (0u | 0u), 1u))))), uint(uvec2(~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)), 1u))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1)), (true ? ((subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(((subgroup_local_id + 1)), (true ? ((subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_base))))) << 0u) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(~ ((subgroup_local_id + 1)), 1u), (_GLF_IDENTITY(uvec2(~ ((subgroup_local_id + 1)), 1u), (uvec2(~ ((subgroup_local_id + 1)), 1u)) ^ uvec2(0u, 0u))) | (uvec2(~ ((subgroup_local_id + 1)), 1u)))), (uint(uvec2(~ ((subgroup_local_id + 1)), 1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), clamp((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) ^ 0u))), ~ (~ (((subgroup_local_id + 1))))))), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ _GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))))), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec2(~ ((subgroup_local_id + 1)), 1u), (uvec2(~ ((subgroup_local_id + 1)), 1u)) | (uvec2(~ ((subgroup_local_id + 1)), 1u))))), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))) ^ 0u)), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u ^ (((subgroup_local_id + 1)))), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, (1) + 0))), uint(uvec2(~ ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), 1u))))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), max((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), uint(uint(subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) / 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1))))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 0u, 1u)))) - (0u | 0u)), 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1))), max(~ (((subgroup_local_id + 1))), ~ (((subgroup_local_id + 1))))))), ((subgroup_local_id + 1)))), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))))))))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))))), ((_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), uint(uint(subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) / 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1))))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 0u, 1u)))) - (0u | 0u)), 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1))), max(~ (((subgroup_local_id + 1))), ~ (((subgroup_local_id + 1))))))), ((subgroup_local_id + 1)))), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))))))))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), uint(uint(subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) / 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1))))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 0u, 1u)))) - (0u | 0u)), 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1))), max(~ (((subgroup_local_id + 1))), ~ (((subgroup_local_id + 1))))))), ((subgroup_local_id + 1)))), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))))))))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), uint(uint(subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) / 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1))))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 0u, 1u)))) - (0u | 0u)), 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1))), max(~ (((subgroup_local_id + 1))), ~ (((subgroup_local_id + 1))))))), ((subgroup_local_id + 1)))), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))))))))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))))), 1u)), uint(uvec4(uint(uvec2((_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))), uint(uint(subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) / 1u)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), ~ (~ (~ ((subgroup_local_id + 1))))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec4(~ ((subgroup_local_id + 1)), 1u, 0u, 1u)))) - (0u | 0u)), 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1))), max(~ (((subgroup_local_id + 1))), ~ (((subgroup_local_id + 1))))))), ((subgroup_local_id + 1)))), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) * 1u))))))))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))))), 1u)), 1u, 0u, 0u))))))))) | (162564u & 0u))) % subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u)), (min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u))) >> 0u)) << 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec2(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u & 55805u)))), 1u), (uvec2(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (0u & 55805u)))), 1u)) + uvec2(0u, 0u)))))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec2(~ ((subgroup_local_id + 1)), 1u), max(uvec2(~ ((subgroup_local_id + 1)), 1u), _GLF_IDENTITY(uvec2(~ ((subgroup_local_id + 1)), 1u), (uvec2(~ ((subgroup_local_id + 1)), 1u)) ^ uvec2(0u, 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))))), (7893u & (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) * 1u), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ~ (~ (~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> (0u & 130599u))), 1u)))))))))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))))) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), (~ ((subgroup_local_id + 1))) - 0u))), 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-86570))))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))), 1u))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(uvec2(~ ((subgroup_local_id + 1)), 1u))))))))))) % subgroup_size)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)), max(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0))))).x)));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), uint(uvec4(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), 1u, 0u, 1u))) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), (true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(29097) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) - 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(7), int(7))) | (4))) ^ 0), (_GLF_IDENTITY(4, (4) ^ 0)) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))))), min(int(int(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))))), int(int(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6)))))))))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), min(0 >> _GLF_IDENTITY(int(6), int(6)), 0 >> _GLF_IDENTITY(int(6), int(6))))))))) - 0)) + 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))))))), ~ (~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))))))))))) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) >> 0)), int(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 1, 1, 0)))) >> 0))))))))), 0)), (false ? _GLF_FUZZED(96934) : _GLF_IDENTITY(0, min(0, 0))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0, ! (! (_injected_loop_counter != 0)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-117.329)), bool(false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      continue;
     break;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), 0u ^ (0u ^ (subgroup_local_id))))) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ ((subgroup_local_id)))))) | 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), max((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), uint(uvec3(0u ^ (subgroup_local_id), 0u, 0u))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), ~ (~ (0u ^ (subgroup_local_id))))))) | 0u))) >> 0u)) - 0u), (false ? _GLF_FUZZED((~ next_virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), 0u ^ (0u ^ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) / 1u)), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ ((subgroup_local_id)))))) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), max((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))))), max((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), max((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), 0u ^ (((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), max((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, max(((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) | 0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), _GLF_IDENTITY(uint(uvec3(0u ^ (subgroup_local_id), 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(0u ^ (subgroup_local_id), 0u, 0u)), (uint(uvec3(0u ^ (subgroup_local_id), 0u, 0u))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), ~ (~ _GLF_IDENTITY((0u ^ (subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((0u ^ (subgroup_local_id)), 0u + ((0u ^ (subgroup_local_id))))))))))) | 0u))) >> 0u)) - 0u))) + 1 < subgroup_size)
    {
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))), true && (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), true))), false, true)))), true && (! (false)))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))), true && (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), true && (! (false)))))))))))) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       break;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(44563))), bvec2(true, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(44563))), bvec2(true, false))).x > injectionSwitch.y)))))))
      continue;
     atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(read, max(read, read)))), 0u | (_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(read, max(read, read)))), ((true ? virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(read, max(read, read))))) | 0u)))), 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), false, true, true)))) ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u))))) << 0u)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (min(virtual_gid, _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (true ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(read))), 0u, 1u, 0u))))) << 0u))) >> 0u)], read, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), 1 * ((4))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(i))))))), ((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(i)))))))) * ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))))), _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(4, (4) ^ 0));
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        continue;
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), max(int(ivec4(0, 0, 1, 0)), int(ivec4(0, 0, 1, 0)))), clamp(_GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), (true ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(48733))), int(_GLF_IDENTITY(ivec4(0, 0, 1, 0), min(ivec4(0, 0, 1, 0), _GLF_IDENTITY(ivec4(0, 0, 1, 0), (false ? _GLF_FUZZED(ivec4(87251, 77082, 97459, 94555)) : ivec4(0, 0, 1, 0)))))), int(ivec4(0, _GLF_IDENTITY(0, (0) ^ 0), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), 0 + (int(_GLF_IDENTITY(0, min(0, 0))))))))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), 0 + (int(_GLF_IDENTITY(0, min(0, 0)))))))))) ^ 0)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(bitfieldExtract(_injected_loop_counter, -62430, _injected_loop_counter)) : (4))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 0, 1, 0)), clamp(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(0, 1, 0), ~ (_GLF_IDENTITY(~ (ivec3(0, 1, 0)), ivec3(ivec4(~ (ivec3(0, 1, 0)), 1))))), 1)))), (int(_GLF_IDENTITY(ivec3(0, 1, 0), ivec3(ivec4(ivec3(0, 1, 0), 1))))) / 1)), 0, 1, 0)), (true ? int(ivec4(0, 0, 1, 0)) : _GLF_FUZZED(48733))), int(ivec4(0, 0, 1, 0)), int(ivec4(0, _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))), 1, _GLF_IDENTITY(0, min(0, 0)))))))) : _GLF_FUZZED(-43596))), 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((- 69599)))));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))), false, false, true))))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
  return;
}
