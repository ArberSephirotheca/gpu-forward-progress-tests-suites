#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)), min(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, true && (true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)))))))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), sin(0.0), 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-836.291) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(0.2, -958.061).y), _GLF_FUZZED(-2.1)), bvec2(false, _GLF_IDENTITY(false, bool(bool(false)))))))).x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))) && true))))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))) && true))))))))))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), true))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), true, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((false)))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))), false))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true))))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(458.678) : injectionSwitch[1])))).x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, true))))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(458.678) : injectionSwitch[1])))).x < injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && true))), false)), (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), ! _GLF_IDENTITY((! (false)), true && ((! (false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), ! (! _GLF_IDENTITY((false), true && ((false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), ! (! _GLF_IDENTITY((false), true && ((false))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), ! (! _GLF_IDENTITY((false), true && ((false)))))))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)), (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))), ! (! _GLF_IDENTITY((false), true && ((false)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), (vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 1.0))) * vec2(1.0, 1.0))).y)))))))))))))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.4))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))), false, false)))), true, _GLF_IDENTITY(true, (true) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(sign(vec4(99.35, -2962.5831, -612.771, 2.6)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)) : _GLF_FUZZED(vec4(-5.8, -98.29, -7.9, -90.60))))) + vec4(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.2)), bool(false))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.5)), bool(false))), 0.0, 0.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(sign(vec4(99.35, -2962.5831, -612.771, 2.6)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (true ? vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)) : _GLF_FUZZED(vec4(-5.8, -98.29, -7.9, -90.60))))) + vec4(0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.2)), bool(false))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, log(1.0)), (vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, log(1.0))) + vec4(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.5)), bool(false))), 0.0, 0.0)))))) > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), false, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), false, false))))), true, true, false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(11954)))])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false)))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))))))))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))))))))) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0))))))))) || false))))))) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-79.73))) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(96450u))), _GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u))))))), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))) || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (true))) && true) && (false)), false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) && true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), true, false)), true && (bool(bvec3(bool((false)), true, false))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2(! (_GLF_IDENTITY(! (false), true && (! (false)))), false)))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), exp(0.0), sqrt(1.0))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), clamp(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), 1.0 * (clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, length(tan(vec2(0.0, 0.0))), 1.0)), min(float(mat3x2(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), clamp(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), 1.0 * (clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, length(tan(vec2(0.0, 0.0))), 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), clamp(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), 1.0 * (clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, length(tan(vec2(0.0, 0.0))), 1.0)), (float(mat3x2(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), clamp(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))), 1.0 * (clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26)))))), float(float(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), (true ? (vec2(1.0, 1.0)) * mat2(1.0) : _GLF_FUZZED(vec2(4.3, -39.26))))))))))))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, length(tan(vec2(0.0, 0.0))), 1.0))) / 1.0))))), 1.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0))), 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3875.8602) : 1.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), 0.0, 0.0, 1.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 1.0) : _GLF_FUZZED(mat4(-5.2, -7529.8891, -6904.1326, -9.5, -1424.2499, -0.0, 6.4, -17.87, -88.30, _GLF_IDENTITY(-8915.8205, 0.0 + _GLF_IDENTITY((-8915.8205), clamp((-8915.8205), (-8915.8205), (-8915.8205)))), -0.4, 5.6, -598.797, -17.78, -6.1, -8.8))))) * mat4(1.0))), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(2.3, 5.8, 24.96, 1962.5789, -220.296, -721.370, 74.29, 174.921, 411.232, 3091.1595, 0.7, -1.0, -3.3, _GLF_IDENTITY(-60.50, max(-60.50, -60.50)), -1.7, 206.115)) : mat4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0)), 1.0))), 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(determinant(mat4(1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED((- (67.28)))), bool(false))), 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && true), true && ((false) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_id))) + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_id))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) << 0u)) - 0u)))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (0u | 0u)), (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (1u << _GLF_IDENTITY(uint(4u), uint(4u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1, 1u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(clamp(workgroup_size, workgroup_base, subgroup_id)) : uint(4u))), uint(4u))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1, max(_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1, _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1)), 1u))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 1u, ((0u ^ 0u) ^ 0u)))))) * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))) + 1, 1u)))))) << 0u))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u) - _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))), _GLF_IDENTITY(max(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | 0u)), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | 0u))))))), 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))))), (subgroup_size) * 1u), 1u), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u))))), (uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u)))))) | (uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u))))))))))))), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))))) >> (0u & 140185u)) - 0u)), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, _GLF_IDENTITY(1u, (1u) | (1u)) * ((subgroup_size) - 0u))))), max(_GLF_IDENTITY(max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) - 0u), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) - _GLF_IDENTITY(0u, 0u | (0u)))) * 1u)), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), _GLF_IDENTITY((max(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | 0u) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u)), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))) << 0u)) / 1u)), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, min((subgroup_size) - 0u, (subgroup_size) - 0u))) / _GLF_IDENTITY(1u, (1u) / 1u)))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) - 0u, min((max(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) - 0u)), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u, 1u, 1u))))), _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) - 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 0u, max(false ? _GLF_FUZZED(workgroup_id) : 0u, false ? _GLF_FUZZED(workgroup_id) : 0u)))))) - 0u)))) - 0u, (max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) - 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), min(((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) >> 0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), 1u * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) + 0u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, workgroup_base)) : 0u)) ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), 0u)))) - 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_local_id))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u))), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), subgroup_size)), (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), 0u)))) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) | uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 1u * (0u)))))) / 1u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), 0u))))))) - 0u)), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size)), (subgroup_size) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u)))))))), subgroup_size, subgroup_size)), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u)))))))), subgroup_size, subgroup_size)), 0u)) << uvec2(0u, 0u), ~ (~ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_local_id))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u), (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u)) | 0u)))))))), subgroup_size, subgroup_size)), 0u)) << uvec2(0u, 0u)))))))), uint(uvec3((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u), _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u)))))))), subgroup_size, subgroup_size)), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u)))))))), subgroup_size, subgroup_size)), 0u)) << uvec2(0u, 0u), ~ (~ ((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_local_id))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (false ? _GLF_FUZZED(workgroup_base) : ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u), (_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) ^ 0u)) | 0u)))))))), subgroup_size, subgroup_size)), 0u)) << uvec2(0u, 0u)))))))), 0u, 1u))) - 0u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, (_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))) * 1u)), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, (((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), min((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) - 0u)))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) >> 0u))) ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size))) - 0u))))) << 0u), 0u)))) - 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, (194975u & (0u ^ 0u)) + (_GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) >> 0u)))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uvec3(uint(5u), 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(uint(5u), 0u, 0u)), (uint(uvec3(uint(5u), 0u, 0u))) - 0u)))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u))))))), subgroup_size, subgroup_size)), 0u)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) * 1u), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec2(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (1u << _GLF_IDENTITY(uint(5u), uint(5u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), 0u)))) - 0u)), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), _GLF_IDENTITY((0u ^ (0u)), clamp((0u ^ (0u)), (0u ^ (0u)), _GLF_IDENTITY((0u ^ (0u)), uint(uvec3((0u ^ (0u)), 1u, 1u))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))))) | 0u))))))), subgroup_size, subgroup_size)), 0u)))) - 0u))))) + 0u)) / 1u), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uaddCarry(uint(78.72), subgroup_id, workgroup_base)) : 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | (5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (subgroup_size) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))))), 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))))), subgroup_size, subgroup_size)), 0u)))) - 0u)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) * 1u), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, (((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), 0u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (~ (5u)))), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u | (uint(5u)))) | 0u)) - (0u | 0u)))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))))), subgroup_size, subgroup_size)), 0u)))) - 0u)))) / 1u)), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) - 0u))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) - 0u)), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), _GLF_IDENTITY((true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))))) - 0u, 0u ^ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u)), 1u, 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u, 0u ^ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u, 0u ^ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u))) ^ 0u), 1u, 0u, 1u)))))), max(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? (subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(virtual_gid), (true ? (subgroup_size) : _GLF_FUZZED(virtual_gid)) / 1u))) - 0u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(1), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.3) : injectionSwitch.x)))) > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), mix(vec2(_GLF_FUZZED((4.1)), (min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))[1]), vec2(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))[0], mix(float((min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))[0]), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_FUZZED(-694.530)), bvec2(true, false)))), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0)), min(float(mat2x3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0)), float(mat2x3(1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0)))))) / 1.0), 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | 0, int(ivec4(_GLF_IDENTITY((64) | 0, ((64) | 0) << 0), 0, 1, 0)))), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), sin(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(tan(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec2(1.0, 1.0))), 1.0, 1.0, cos(0.0), 1.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-29.77)), bool(false)))), bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-4.7, 0.8, 1.5, 16.63, 548.469, -5.5, -23.68, -531.232, 589.076)) : _GLF_IDENTITY(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0), (mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9015.0008)), float(1.0), bool(true))))) * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(1.8)), bool(false)))) / abs(1.0))))))) / round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 0.0, 1.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, log(1.0))), _GLF_IDENTITY(vec4(mat4x3(vec4(mat4(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec3(7.9, 606.959, -906.681), vec3(0.3, 1800.5463, -5.9))) : 1.0)), 1.0, 1.0, 1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, log(1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.0)), bool(false))), 1.0, 0.0)), (vec4(mat4x3(vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-104.278) : 0.0)), 1.0, 1.0, log(1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0)))))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(111.417)), float(injectionSwitch.y), bool(true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(55.49)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))).x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), (true ? max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(-1.0))), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.8) : injectionSwitch.x))) - 0.0))), injectionSwitch.x))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(55.49)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))).x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), (true ? max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(-1.0))), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.8) : injectionSwitch.x))) - 0.0))), injectionSwitch.x))))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(55.49)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))).x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), (true ? max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(-1.0))), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.8) : injectionSwitch.x))) - 0.0))), injectionSwitch.x)))))))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)), false)))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y)), false))))) && true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true), false))))), _GLF_IDENTITY((bool(bool(false))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bool(false))) && true), ! (! (bool((bool(bool(false))) && true))))), (bool(_GLF_IDENTITY(bool((bool(bool(false))) && true), ! (! (bool((bool(bool(false))) && true)))))) || false))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true, true))))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))), true, false, false))))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u)))), 4, 64, 2);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, false, true)), ! (! (bool(bvec4(bool(bool(false)), false, false, true)))))) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch, injectionSwitch))))) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false))) && true), false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) + 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(28.52)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}
