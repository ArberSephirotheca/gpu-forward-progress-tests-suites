#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.x = num_workgroup;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | 0u, ((gl_WorkGroupSize.x) | 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)) / 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) && true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
        }
       else
        {
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, max(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base, GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base)).y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u), (false ? _GLF_FUZZED(125156u) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) << 0u))))) * (subgroup_size))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u), 0u))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u ^ 0u) * (subgroup_size))) + 0u)) >> 0u))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))) >> 0u) << 0u) - 0u, 0u ^ (((GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) << 0u) - 0u)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) * 1u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) * (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), uint(uvec2(subgroup_base, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))), ~ (~ ((_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))))), (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))))) - 0u) | (subgroup_base)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))))) % subgroup_size), (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) << 0u)))));
 uint read = 0;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(4828))))), (_GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), _GLF_IDENTITY((true ? (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))) ^ (0 | 0))) : _GLF_FUZZED(-94312)), max((_GLF_IDENTITY(true, (true) && true) ? (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))) ^ (0 | 0))) : _GLF_FUZZED(-94312)), (true ? (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))) ^ (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-47325))))))) | 0))) : _GLF_FUZZED(-94312)))))), 0)))) ^ 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) | _GLF_IDENTITY(0, min(0, 0)))) ^ 0)) * (1 | 0))) - 0), 64, 4);
  }
 for(int _injected_loop_counter = (0 & 5161); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if((subgroup_local_id % 2) == 0)
    {
     read = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec4((4), (1 ^ 1), 1, 0), (ivec4((4), (1 ^ 1), 1, 0)) | (ivec4((4), (1 ^ 1), 1, 0))))))), 64, 2);
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH((33000 & _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)))))
            {
             case 71:
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(true)
                      {
                       ivec3 _GLF_SWITCH_0_0v[8];
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           mat2x4(978.837, -39.48, -9695.2276, 219.313, 1.3, -21.23, 716.606, 99.66);
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.07)), float(injectionSwitch.y), bool(true)))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.07)), float(injectionSwitch.y), bool(true)))))))))
                        {
                        }
                       else
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               while(_GLF_IDENTITY((vec2(_GLF_IDENTITY(3934.2338, mix(float(_GLF_IDENTITY(3934.2338, min(3934.2338, 3934.2338))), float(_GLF_FUZZED(7.7)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))), -3.1) != vec2(6.0, -0.9)), ! (! ((vec2(_GLF_IDENTITY(3934.2338, mix(float(_GLF_IDENTITY(3934.2338, min(3934.2338, 3934.2338))), float(_GLF_FUZZED(7.7)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))), -3.1) != vec2(6.0, -0.9))))))
                                {
                                 uvec2 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
                                 (mat4x2(vec2(-6406.5136, 8972.2893), _GLF_IDENTITY(vec2(2966.0671, 6.2), min(vec2(_GLF_IDENTITY(2966.0671, (2966.0671) / 1.0), 6.2), _GLF_IDENTITY(vec2(2966.0671, 6.2), mix(vec2((vec2(2966.0671, 6.2))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) ^ (0 & -21245))], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(2966.0671, 6.2), max(vec2(2966.0671, 6.2), vec2(2966.0671, 6.2))))[1], ((_GLF_IDENTITY(vec2(2966.0671, 6.2), max(vec2(2966.0671, 6.2), vec2(2966.0671, 6.2))))[1]) + determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0))), clamp((vec2(2966.0671, 6.2))[1], (vec2(2966.0671, 6.2))[1], (vec2(2966.0671, 6.2))[1]))), vec2(_GLF_FUZZED(6.4), _GLF_FUZZED(38.78)), bvec2(false, false))))), (vec2(14.95, 61.28) / _GLF_IDENTITY(2.1, float(vec2(_GLF_IDENTITY(2.1, float(mat2x4(2.1, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-506.333)), float(0.0), bool(true))))))), vec2(-2.2, _GLF_IDENTITY(-9.7, (true ? -9.7 : _GLF_FUZZED(-507.253))))) + 566.195);
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ _GLF_IDENTITY((1 | 1), 0 ^ (_GLF_IDENTITY((1 | 1), ((1 | 1)) | (0 & -82794))))), clamp((1 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) * 1) | 1), 0 ^ ((1 | 1)))), (1 ^ _GLF_IDENTITY((1 | 1), 0 ^ ((1 | 1)))), (1 ^ _GLF_IDENTITY((1 | 1), 0 ^ ((1 | 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                                        {
                                         for(                                         vec3(-74.53, -661.335, -9647.4109);
 _GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), _GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) || false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), false)))))))), false))))), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false)))))))), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), false))), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), false))), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0], true && (mix(bvec3(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true), bvec3(true, _GLF_IDENTITY(false, (false) || false), false), bvec3(_GLF_IDENTITY(false, (false) && true), true, false))[0])), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))))); bvec2(bvec3(false, false, true)))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 do
                                                  {
                                                   do
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                          {
                                                           do
                                                            {
                                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                                              {
                                                               (mat3x4(328.015, _GLF_IDENTITY(1.9, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))) ? 1.9 : _GLF_FUZZED(-89.08))), 560.798, 297.116, _GLF_IDENTITY(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), _GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3))), bool(true)))), mix(float(_GLF_FUZZED(8.3)), float(clamp(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), _GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), _GLF_IDENTITY(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : 5.3)), mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(5.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7594.9604) : _GLF_IDENTITY(5.3, 1.0 * (5.3))))), bool(true))))), bool(true)))), 4.2, 5561.2747, 476.108, 0.2, 9946.9066, 5.9, -9740.5950) + -0.1);
                                                              }
                                                            }
                                                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))));
                                                }
                                              }
                                            }
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               bvec4(false, true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, true && (false)), true)), false || (bool(bvec4(true, false, false, true))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), _GLF_IDENTITY(false || (bool(bvec4(true, false, false, true))), (false || (bool(bvec4(true, false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true);
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(327.545)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0)))))))
                                                  {
                                                   ;
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 packSnorm2x16(fma(fma(vec2(-5379.3251, 6521.2147), vec2(-9910.4623, 228.690), _GLF_IDENTITY(vec2(7.3, 4.6), max(_GLF_IDENTITY(vec2(7.3, 4.6), (vec2(7.3, 4.6)) * vec2(1.0, 1.0)), vec2(7.3, 4.6)))), vec2(2757.5058, 1.3), vec2(752.249, 7.9)));
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                           else
                                            {
                                            }
                                           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7))), ~ (~ (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))) | 0)))), true && (_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), int(7)))))))); _injected_loop_counter --)
                                            {
                                             for(int _injected_loop_counter = (-8150 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                              {
                                               ;
                                              }
                                            }
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                            {
                                             do
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((193.505)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.6)), bvec2(true, false))).x < injectionSwitch.y))))
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(0.0)) < injectionSwitch.y))))
                                                        {
                                                         mat3(_GLF_IDENTITY(6.3, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6.3, (_GLF_IDENTITY(6.3, mix(_GLF_IDENTITY(float(6.3), max(_GLF_IDENTITY(float(6.3), max(float(6.3), float(6.3))), float(6.3))), float(_GLF_FUZZED(-27.04)), _GLF_IDENTITY(bool(false), (bool(false)) || false)))) / _GLF_IDENTITY(1.0, 1.0 * (1.0))), (true ? _GLF_IDENTITY(6.3, (_GLF_IDENTITY(_GLF_IDENTITY(6.3, 0.0 + (6.3)), mix(float(6.3), float(_GLF_FUZZED(-27.04)), bool(false)))) / 1.0) : _GLF_FUZZED(6.1))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(6.3, (_GLF_IDENTITY(6.3, mix(float(_GLF_IDENTITY(6.3, mix(float(6.3), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-27.04)), bool(false)))) / 1.0), (true ? _GLF_IDENTITY(6.3, (_GLF_IDENTITY(_GLF_IDENTITY(6.3, 0.0 + (6.3)), mix(float(_GLF_IDENTITY(6.3, float(mat2(6.3, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(-27.04)), mix(float(float(_GLF_FUZZED(-27.04))), float(_GLF_FUZZED((1933.0178))), bool(false))), bool(false)))) / 1.0) : _GLF_FUZZED(6.1)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(894.184, -6.9, -3505.6830), (vec3(894.184, -6.9, -3505.6830)) * _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat3(_GLF_ONE(1.0, injectionSwitch.y)))))).g)), bool(false))), 8183.2079, -621.610, 69.98, _GLF_IDENTITY(8891.5799, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(8891.5799, (false ? _GLF_FUZZED(5876.0950) : 8891.5799))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))), 242.176, -3.8, -358.376, -3885.1481);
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) || false) || (false))));
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                 mat4 _GLF_SWITCH_0_3v[36], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                              {
                                               mat2(mat4x2(-8.7, -25.28, 8.9, -229.728, 97.82, -7.9, 4.6, 250.266));
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 do
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       ivec2(96966, 58515);
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 mat3(-128.435, _GLF_IDENTITY(_GLF_IDENTITY(9783.2764, (9783.2764) + 0.0), (_GLF_IDENTITY(9783.2764, (9783.2764) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), (0.0) + 0.0))) - abs(0.0)), -58.66, 1.1, 6.4, -5350.7895, 7.5, 78.04, 16.09);
                                 mat3x2(mat4x3(7.5, _GLF_IDENTITY(-51.30, 1.0 * (-51.30)), 357.304, 92.12, -2.2, -4.0, -8.7, -8963.5132, -9634.7964, 2.2, -44.33, 4.1));
                                 mat4x3 _GLF_SWITCH_0_6v;
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                       for(int _injected_loop_counter = (0 | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         for(                         clamp(ivec3(14426, _GLF_IDENTITY(38572, (38572) + 0), 99863), -33169, -52116);
 true; mat4x2(1123.0865, -1678.1177, -7.6, 5.6, -3.1, -4.9, -2750.8317, -6372.1067))
                          {
                           uint _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
                            {
                             do
                              {
                               do
                                {
                                 mat3 _GLF_SWITCH_0_10v[39], _GLF_SWITCH_0_11v[57];
                                 do
                                  {
                                   for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0 & 98525, (0 & 98525) >> 0), int(ivec2(_GLF_IDENTITY(0 & 98525, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 & 98525)), 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (_GLF_IDENTITY(! (! ((true))), (! (! ((true)))) && true))))), (! _GLF_IDENTITY((true), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((true)), ! (_GLF_IDENTITY(! (! ((true))), (! (! ((true)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((true)), ! (_GLF_IDENTITY(! (! ((true))), (! (! ((true)))) && true)))), ((_GLF_IDENTITY(! ((true)), ! (_GLF_IDENTITY(! (! ((true))), (! (! ((true)))) && true))))) && true))))) && true)))))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           bvec2(false, true);
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 bvec4 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                                }
                               while((_GLF_SWITCH_0_7v < _GLF_IDENTITY(_GLF_SWITCH_0_8v, (_GLF_SWITCH_0_8v) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ (_GLF_IDENTITY((0u), ((0u)) | 0u) ^ 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u), clamp(uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u), uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u), uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u))), uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u), uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u))), uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(~ ((0u) ^ 0u), ~ ((0u) ^ 0u), ~ ((0u) ^ 0u))), 0u))), uvec2(uvec2(uvec2(_GLF_IDENTITY(~ ((0u) ^ 0u), clamp(_GLF_IDENTITY(~ ((0u) ^ 0u), (~ ((0u) ^ 0u)) >> 0u), ~ ((0u) ^ 0u), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))))) ^ 0u))), 0u))))))))))))));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           else
                            {
                            }
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true);
                                }
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(false)
                            {
                             mat2x3(-129.940, _GLF_IDENTITY(-9.5, mix(float(_GLF_FUZZED(-211.087)), float(_GLF_IDENTITY(-9.5, float(mat2x3(-9.5, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0)))), bool(true))), 6136.4491, _GLF_IDENTITY(_GLF_IDENTITY(83.67, mix(_GLF_IDENTITY(float(_GLF_FUZZED(3.7)), min(float(_GLF_FUZZED(3.7)), float(_GLF_FUZZED(3.7)))), float(_GLF_IDENTITY(83.67, (83.67) / 1.0)), bool(true))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(83.67, float(mat2x4(83.67, 0.0, log(1.0), 1.0, abs(1.0), 1.0, sqrt(0.0), 1.0))), mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY(83.67, (83.67) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(ldexp(-1461.0729, 50521), (ldexp(_GLF_IDENTITY(-1461.0729, clamp(-1461.0729, -1461.0729, _GLF_IDENTITY(-1461.0729, (-1461.0729) * sqrt(1.0)))), 50521)) / 1.0)))), 343.197, -497.596);
                            }
                           for(                           (bitfieldReverse(uvec3(179734u, 34547u, _GLF_IDENTITY(182921u, (182921u) | 0u))) | uvec3(176254u, 128241u, 15253u));
 false; refract(vec4(102.148, 5.4, -4.4, 57.10), vec4(99.53, -3.0, -6130.3442, -1.7), 3.3))
                            {
                             mat2 _GLF_SWITCH_0_14v;
                             bvec3 _GLF_SWITCH_0_15v;
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               uvec2(85373u, 63220u);
                              }
                             mat2x3 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
                             mat3x2 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[64];
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               do
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                  {
                                   next_virtual_gid;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             vec2 _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v[85];
                            }
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             ;
                            }
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 >> _GLF_IDENTITY(int(3), int(3))) | 0)) | 0))); _injected_loop_counter --)
                                      {
                                       uvec3(119757u, 175619u, 119936u);
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                                }
                              }
                             else
                              {
                              }
                            }
                           vec2 _GLF_SWITCH_0_24v;
                           ivec3 _GLF_SWITCH_0_25v;
                          }
                        }
                       float _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[34], _GLF_SWITCH_0_28v;
                       uvec3 _GLF_SWITCH_0_29v[60];
                       do
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(int(int((1 ^ 0))), (int(int((1 ^ 0)))) ^ 0))); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY((_injected_loop_counter / _injected_loop_counter), int(ivec3((_injected_loop_counter / _injected_loop_counter), (0 | 0), 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) * (1 & 1)) & 1, min(_GLF_IDENTITY(1 & 1, (1 & 1) - 0), 1 & 1)))); _injected_loop_counter ++)
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = (1 ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(true, (true) || false) && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), true), bvec2(bvec2(bvec2(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), true))))))))); _injected_loop_counter --)
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           if(true)
                                            {
                                             mat2x3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[97];
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               do
                                                {
                                                 bvec4(false, true, false, false);
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             else
                                              {
                                              }
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                    {
                                                     bvec2(true, false);
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                              }
                                             else
                                              {
                                              }
                                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | 0)), (~ (_GLF_IDENTITY(1, (1) | 0))) / 1))))); _injected_loop_counter ++)
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
                                                {
                                                 _GLF_SWITCH_0_30v[0];
                                                }
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0))))) != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (_GLF_IDENTITY(~ (_injected_loop_counter --), (~ (_injected_loop_counter --)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))
                                {
                                 mat4x2(328.950, -5612.6723, -3.7, 8883.4253, -6.8, -9.4, -88.52, 3.2);
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                         float _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             (_GLF_SWITCH_0_26v / mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(-0.4, mix(float(-0.4), float(_GLF_FUZZED(495.926)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0 * (_GLF_IDENTITY(-0.4, mix(float(-0.4), float(_GLF_FUZZED(495.926)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(-58.58, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(-58.58, max(-58.58, -58.58)), sqrt(1.0) * (-58.58)), 0.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(-58.58, sqrt(1.0) * (-58.58)), 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(358.188)), bool(false))))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 0.0, 0.0, 1.0)), float(mat3x2(determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))), determinant(mat4(1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.3)), float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, exp(0.0), 0.0, 1.0)))), bool(true)))), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))))), min(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)))) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(734.259))), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(exp(0.0)), 1.0, 1.0, abs(0.0), 1.0)), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(734.259))), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(exp(0.0)), 1.0, 1.0, abs(0.0), 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(734.259))), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(exp(0.0)), 1.0, 1.0, abs(0.0), 1.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(734.259))), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(exp(0.0)), 1.0, 1.0, abs(0.0), 1.0)), max(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(734.259))), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(exp(0.0)), 1.0, 1.0, abs(0.0), 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(734.259))), 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), log(exp(0.0)), 1.0, 1.0, abs(0.0), 1.0)))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))), _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))))), 0.0))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-58.58, sqrt(1.0) * (-58.58)), 0.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(-58.58, sqrt(1.0) * (-58.58)), 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.4)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(true))), sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, abs(0.0), 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), float(mat3x2(determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))), determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))))), min(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), (_GLF_IDENTITY(0.0, (0.0) / determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(7270.2925, -454.712, -696.881, -2587.8620, -2670.1028, -3.0, -193.082, 83.61, 0.2, -723.654, -5.1, -4290.5914, -3.6, 2137.8977, -1605.1997, -2.1), (_GLF_IDENTITY(mat4(7270.2925, -454.712, -696.881, -2587.8620, -2670.1028, -3.0, -193.082, 83.61, 0.2, -723.654, -5.1, -4290.5914, -3.6, 2137.8977, -1605.1997, -2.1), transpose(transpose(mat4(7270.2925, -454.712, -696.881, -2587.8620, -2670.1028, -3.0, -193.082, 83.61, 0.2, -723.654, -5.1, -4290.5914, -3.6, 2137.8977, -1605.1997, -2.1))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), abs(0.0), 0.0, 0.0, 1.0)))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0), (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))), _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 1.0, sqrt(1.0), 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0))))), 0.0)))), float(_GLF_FUZZED(63.03)), bool(false)))), _GLF_IDENTITY(3931.0118, float(mat3(3931.0118, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, log(1.0), determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))))), clamp(max(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(_GLF_IDENTITY(roundEven(_GLF_SWITCH_0_26v), float(mat2x4(roundEven(_GLF_SWITCH_0_26v), 1.0, 1.0, determinant(mat3(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(1.0), 0.0)))) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))))), (max(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)))))) / 1.0), max(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(_GLF_IDENTITY(roundEven(_GLF_SWITCH_0_26v), 1.0 * (roundEven(_GLF_SWITCH_0_26v)))) : _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat2x4((0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-6.1)), bool(false))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0))), max(float(mat2x4((0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0))), float(mat2x4((0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0))))))), ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(_GLF_IDENTITY(roundEven(_GLF_SWITCH_0_26v), 1.0 * (roundEven(_GLF_SWITCH_0_26v)))) : _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(mat2x4((0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0))), max(float(mat2x4((0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0))), float(mat2x4((0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))), 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, log(1.0)))))))) - 0.0), _GLF_IDENTITY(min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))), float(_GLF_IDENTITY(vec3(min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))), 1.0, 0.0), _GLF_IDENTITY(vec3(mat2x4(vec3(min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))), 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0)), mix(vec3(_GLF_FUZZED(-4226.1657), _GLF_FUZZED(1.8), (vec3(mat2x4(vec3(min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))), 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))[2]), vec3((vec3(mat2x4(vec3(min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))), 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))[0], (vec3(mat2x4(vec3(min((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_FUZZED(roundEven(_GLF_SWITCH_0_26v)) : (0.0))), 1.0, 0.0), 1.0, 1.0, 0.0, 1.0, 0.0)))[1], _GLF_FUZZED(856.282)), bvec3(true, true, false))))))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6082.3169) : 0.0)))), 0.0)), 1.0))), -4.3, -8.5, -9.5, 3.6, 0.2));
                            }
                           else
                            {
                            }
                          }
                         do
                          {
                          }
                         while(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), max((ivec4(32010, -60971, -77283, -43726)), _GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), ((ivec4(32010, -60971, -77283, -43726))) << ivec4(0, 0, 0, 0)))))) != ivec4(-50503, -67866, 95242, -75214), ((ivec4(32010, -60971, -77283, -43726)) != ivec4(-50503, -67866, 95242, -75214)) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), max((ivec4(32010, -60971, -77283, -43726)), _GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), ((ivec4(32010, -60971, -77283, -43726))) << ivec4(0, 0, 0, 0)))))) != ivec4(-50503, -67866, 95242, -75214), ((ivec4(32010, -60971, -77283, -43726)) != ivec4(-50503, -67866, 95242, -75214)) && true)))), false || (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), max((ivec4(32010, -60971, -77283, -43726)), _GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY((ivec4(32010, -60971, -77283, -43726)), ((ivec4(32010, -60971, -77283, -43726))) << ivec4(0, 0, 0, 0)))))) != ivec4(-50503, -67866, 95242, -75214), ((ivec4(32010, -60971, -77283, -43726)) != ivec4(-50503, -67866, 95242, -75214)) && true))))))));
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             determinant(outerProduct(vec4(937.935, _GLF_IDENTITY(28.36, min(28.36, _GLF_IDENTITY(28.36, mix(float(28.36), float(_GLF_FUZZED(5458.5890)), bool(false))))), -92.45, -769.392), (mat3x4(-898.377, -4.8, 5.5, -9.4, -10.16, 7128.7138, 865.160, 99.92, 9.6, -934.953, 9.5, 7855.3610) * vec3(8.9, 3891.9302, -7696.8043))));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))));
                          }
                         else
                          {
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                          {
                          }
                         else
                          {
                           mat2x4 _GLF_SWITCH_0_35v[83], _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
                           do
                            {
                             bvec2(false, false);
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(7.6, -6.7).y)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (int(5)) + (1 ^ 1)) : _GLF_FUZZED(-87433))))), ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (int(5)) + (1 ^ 1)) : _GLF_FUZZED(-87433)))))) | ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? _GLF_IDENTITY(int(5), (int(5)) + (1 ^ 1)) : _GLF_FUZZED(-87433)))))))); _injected_loop_counter --)
                              {
                               true;
                              }
                            }
                           else
                            {
                            }
                           mat2x3 _GLF_SWITCH_0_38v;
                           ivec3 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
                           mat3x2 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v[64];
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bool(bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bool(bool(bvec4(false, true, false, false)))))) && true))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), true, true, false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(bvec3(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(true)), false), bvec2(bvec2(bvec2(bool(bool(true)), false))))))) && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), true, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, false))), bool(bool((false)))), true, true, false))))))))))))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                                      {
                                       _GLF_IDENTITY(uvec3(80399u, _GLF_IDENTITY(_GLF_IDENTITY(169660u, (169660u) * 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(169660u, (169660u) * 1u), min(_GLF_IDENTITY(169660u, (169660u) * 1u), _GLF_IDENTITY(169660u, (169660u) * 1u))), _GLF_IDENTITY(169660u, (169660u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(169660u, (169660u) * 1u), max(_GLF_IDENTITY(169660u, (169660u) * 1u), _GLF_IDENTITY(169660u, (169660u) * 1u))))), 28840u), (true ? uvec3(80399u, 169660u, 28840u) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(162940u, 0u ^ (162940u)), _GLF_IDENTITY(_GLF_IDENTITY(63438u, min(63438u, 63438u)), max(_GLF_IDENTITY(63438u, min(63438u, 63438u)), _GLF_IDENTITY(63438u, min(63438u, 63438u)))), 6297u))));
                                      }
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             false;
                            }
                           else
                            {
                            }
                           mat3 _GLF_SWITCH_0_44v[36];
                          }
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                          {
                           do
                            {
                             do
                              {
                               do
                                {
                                 (uvec4(153979u, _GLF_IDENTITY(66305u, min(_GLF_IDENTITY(66305u, (false ? _GLF_FUZZED((true ? subgroup_id : subgroup_local_id)) : 66305u)), 66305u)), 176442u, _GLF_IDENTITY(89795u, min(_GLF_IDENTITY(89795u, (89795u) | 0u), 89795u))) - next_virtual_gid);
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           ;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       vec4 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
                       ivec4 _GLF_SWITCH_0_47v[82], _GLF_SWITCH_0_48v, _GLF_SWITCH_0_49v;
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             for(vec2 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v; false; mat3(-9.9, 59.10, -789.945, -2.9, 833.104, -98.19, _GLF_IDENTITY(284.048, (true ? 284.048 : _GLF_FUZZED(_GLF_SWITCH_0_26v))), 2.1, 72.38))
                              {
                               uvec4 _GLF_SWITCH_0_53v, _GLF_SWITCH_0_54v[70];
                               if(_GLF_IDENTITY((mat4x2(-8.5, 5607.9427, -1.9, _GLF_IDENTITY(-7060.1110, (_GLF_IDENTITY(-7060.1110, (false ? _GLF_FUZZED(_GLF_SWITCH_0_26v) : -7060.1110))) - 0.0), 281.358, -2.3, 84.77, 5.3) != mat4x2(-373.673, -7.0, -6487.6697, 5092.5055, _GLF_IDENTITY(-8224.9543, (-8224.9543) - 0.0), 9.5, 8056.2269, -1.6)), ! (! ((mat4x2(-8.5, _GLF_IDENTITY(5607.9427, max(5607.9427, 5607.9427)), -1.9, -7060.1110, 281.358, -2.3, 84.77, 5.3) != mat4x2(_GLF_IDENTITY(-373.673, _GLF_IDENTITY(float(mat3x4(-373.673, 1.0, 0.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), max(float(mat3x4(-373.673, 1.0, 0.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat3x4(-373.673, 1.0, 0.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), -7.0, -6487.6697, 5092.5055, _GLF_IDENTITY(-8224.9543, (-8224.9543) - 0.0), 9.5, 8056.2269, -1.6))))))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       do
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             do
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                {
                                                 _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-17186, (-17186) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY(0, clamp(0, 0, 0)) + (0)), 0, 0, 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0)))), max((~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, _GLF_IDENTITY(0, (0) + 0), 0, 0)))), (~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0))))))) | ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, 0))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0)))), max((~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, _GLF_IDENTITY(-73509, (true ? -73509 : _GLF_FUZZED(_injected_loop_counter))), -97459, 85031)) + ivec4(0, 0, 0, 0)))), (~ (_GLF_IDENTITY(ivec4(-17186, -73509, -97459, 85031), (ivec4(-17186, -73509, -97459, 85031)) + ivec4(0, 0, 0, 0))))))) | ivec4(0, 0, 0, 0)) ^ ivec4(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, ~ (~ (0))))), 0, 0)))) | (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(ivec4(5), _GLF_IDENTITY(ivec4(5), (ivec4(5)) + ivec4(0, 0, 0, 0))))));
                                                }
                                               else
                                                {
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                 vec4 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v[26];
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                  {
                                   (mat2x4(-3505.5058, 83.55, 1.0, 96.88, _GLF_IDENTITY(-719.786, 0.0 + (-719.786)), 2.7, 83.54, -603.909) * mat3x2(215.431, -5.7, -5956.1940, -2.4, 4751.2087, 9478.7156));
                                  }
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))))) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0)).y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     clamp(66053, -66407, (48687));
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                 mat3 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v[30], _GLF_SWITCH_0_59v;
                                 mat2x3(_GLF_IDENTITY(5.6, mix(float(_GLF_FUZZED(-2.6)), float(5.6), _GLF_IDENTITY(bool(true), (bool(_GLF_IDENTITY(true, bool(bool(true))))) || false))), _GLF_SWITCH_0_26v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_26v);
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   ;
                                  }
                                }
                               mat4x3(_GLF_IDENTITY(_GLF_SWITCH_0_28v, (_GLF_IDENTITY(_GLF_SWITCH_0_28v, (_GLF_SWITCH_0_28v) / 1.0)) - 0.0));
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ 3.3))), float(injectionSwitch.y), bool(true)))))))
                                {
                                 while(false)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) | 0)), min(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, min(int(_GLF_ONE(1.0, injectionSwitch.y)) | 0, int(_GLF_ONE(1.0, injectionSwitch.y)) | 0)))))); _injected_loop_counter ++)
                                      {
                                       uvec3(37675u, 95017u, _GLF_IDENTITY(38530u, (38530u) | 0u));
                                      }
                                    }
                                   uvec2 _GLF_SWITCH_0_60v, _GLF_SWITCH_0_61v, _GLF_SWITCH_0_62v;
                                   mat3x2 _GLF_SWITCH_0_63v;
                                   ivec2 _GLF_SWITCH_0_64v[60], _GLF_SWITCH_0_65v[17];
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) || false), true, true);
                                            }
                                           else
                                            {
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)));
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     do
                                      {
                                       ivec2(-42256, _GLF_IDENTITY(69433, _GLF_IDENTITY(max(_GLF_IDENTITY(69433, (69433) / _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(69433, max(_GLF_IDENTITY(69433, (69433) ^ 0), _GLF_IDENTITY(69433, (69433) / 1)))), max(_GLF_IDENTITY(max(69433, _GLF_IDENTITY(69433, max(_GLF_IDENTITY(69433, (69433) ^ 0), _GLF_IDENTITY(69433, (69433) / 1)))), (max(69433, _GLF_IDENTITY(69433, max(_GLF_IDENTITY(69433, (69433) ^ 0), _GLF_IDENTITY(69433, (69433) / 1))))) >> 0), max(69433, _GLF_IDENTITY(69433, max(_GLF_IDENTITY(69433, (69433) ^ 0), _GLF_IDENTITY(69433, (69433) / 1))))))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! (_GLF_IDENTITY(false, false || (false)))))));
                                    }
                                   else
                                    {
                                    }
                                   bvec2 _GLF_SWITCH_0_66v;
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     mat4x2(_GLF_SWITCH_0_26v);
                                    }
                                  }
                                }
                               else
                                {
                                }
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               (mat2x4(-11.28, -5571.0235, 95.79, 2.0, 8.0, -6.0, -49.30, 9135.6725) * mat2(6.2, 377.488, 7.8, 8687.7383));
                                              }
                                             else
                                              {
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               mat4x3 _GLF_SWITCH_0_67v;
                               vec3 _GLF_SWITCH_0_68v[38];
                               mat4x3 _GLF_SWITCH_0_69v[70], _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v;
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                        }
                       float _GLF_SWITCH_0_72v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if((bvec4(true, bvec3(false, false, true)) != lessThanEqual(vec4(-471.535, 6.5, -6540.5801, -2.7), vec4(-17.16, -517.564, 1.5, -5.8))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       bvec3(false, false, true);
                                      }
                                    }
                                   else
                                    {
                                    }
                                   uvec4 _GLF_SWITCH_0_73v, _GLF_SWITCH_0_74v[91];
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       mat3x2(3.1, -72.99, 7.2, _GLF_IDENTITY(_GLF_IDENTITY(8.5, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(8.5, (false ? _GLF_FUZZED(-4.3) : 8.5)), _GLF_IDENTITY((true ? _GLF_IDENTITY(8.5, max(8.5, 8.5)) : _GLF_FUZZED(-59.65)), float(_GLF_IDENTITY(float((true ? _GLF_IDENTITY(8.5, max(8.5, 8.5)) : _GLF_FUZZED(-59.65))), mix(float(float((true ? _GLF_IDENTITY(8.5, _GLF_IDENTITY(max(8.5, 8.5), (false ? _GLF_FUZZED(_GLF_SWITCH_0_72v) : max(8.5, 8.5)))) : _GLF_FUZZED(-59.65)))), float(_GLF_FUZZED(-1.7)), bool(false)))))), 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(8.5, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(8.5, (false ? _GLF_FUZZED(-4.3) : 8.5)), _GLF_IDENTITY((true ? _GLF_IDENTITY(8.5, max(8.5, 8.5)) : _GLF_FUZZED(-59.65)), float(_GLF_IDENTITY(float((true ? _GLF_IDENTITY(8.5, max(8.5, 8.5)) : _GLF_FUZZED(-59.65))), mix(float(float((true ? _GLF_IDENTITY(8.5, _GLF_IDENTITY(max(8.5, 8.5), (false ? _GLF_FUZZED(_GLF_SWITCH_0_72v) : max(8.5, 8.5)))) : _GLF_IDENTITY(_GLF_FUZZED(-59.65), min(_GLF_FUZZED(-59.65), _GLF_FUZZED(-59.65)))))), float(_GLF_FUZZED(-1.7)), bool(false)))))), 1.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0), 419.996, -124.778);
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   bvec3 _GLF_SWITCH_0_75v;
                                   do
                                    {
                                     faceforward(_GLF_SWITCH_0_72v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_26v);
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 else
                                  {
                                   uvec2 _GLF_SWITCH_0_76v;
                                   mat2x4 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v[92], _GLF_SWITCH_0_79v;
                                   do
                                    {
                                     ivec4(-34035, -19349, 8589, 43320);
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                             else
                              {
                              }
                             for(                             ((mat3x2(271.579, 122.835, 6.7, -5.9, 2.8, -0.2) / mat3x2(-0.9, 1.8, _GLF_IDENTITY(9101.9205, min(9101.9205, 9101.9205)), -168.571, -585.285, -436.438)) * mat4x3(-3.6, -408.765, -2.9, 78.85, 4100.6772, 5576.5724, _GLF_IDENTITY(-5.4, mix(float(-5.4), float(_GLF_FUZZED(_GLF_IDENTITY(44.26, (_GLF_IDENTITY(44.26, (44.26) - log(1.0))) / 1.0))), bool(false))), 6.4, 97.09, -5.7, 61.70, -5.0));
 false; bvec3(false, bvec2(false, false)))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       do
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           ;
                                          }
                                         else
                                          {
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                    }
                                  }
                                }
                               else
                                {
                                }
                               mat2 _GLF_SWITCH_0_80v, _GLF_SWITCH_0_81v[16];
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - log(1.0))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       (ivec4(58219, 93896, -18724, -76564) == (_GLF_SWITCH_0_49v / _GLF_IDENTITY(27887, (27887) + 0)));
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & 1), ((1 & 1)) | 0)); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   _GLF_SWITCH_0_28v;
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               mat4x2(1.5, _GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, min(-9.8, -9.8)))), -9168.6146, -4.5, -291.297, _GLF_IDENTITY(339.247, mix(float(_GLF_FUZZED(6.0)), float(339.247), bool(true))), 900.453, 5.9);
                               do
                                {
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)) || false))
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))))), ((_GLF_IDENTITY(! (bool(false)), ! (_GLF_IDENTITY(! (! (bool(false))), ! _GLF_IDENTITY((! (! (! (bool(false))))), bool(bvec2((! (! (! (bool(false))))), true)))))))) && true)), true, false, true))), false, false)))))))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                              {
                                              }
                                             else
                                              {
                                               bvec3(true, false, false);
                                              }
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
                              }
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
             case 0:
             case 89:
             case 96:
             case 5:
             case 51:
             case 50:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)) | uvec2(0u, 0u)))) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)) | uvec2(0u, 0u)))) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)) << uvec2(0u, 0u))))).x], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x))], 4, 64, 2), (true ? _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], clamp(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], (buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x]) / 1u), buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x])), 4, 64, 2), clamp(atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(4, (4) * ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), 64, 2), atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, ((0 & 44766) << _GLF_IDENTITY(int(0), int(0))), 0)), (int(ivec4(2, 0, ((0 & 44766) << _GLF_IDENTITY(int(0), int(0))), 0))) ^ 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, ((0 & 44766) << _GLF_IDENTITY(int(0), int(0))), 0)), (int(ivec4(2, 0, ((0 & 44766) << _GLF_IDENTITY(int(0), int(0))), 0))) ^ 0)), 0 | (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 0, ((0 & 44766) << _GLF_IDENTITY(int(0), int(0))), 0)), (int(ivec4(2, 0, ((0 & 44766) << _GLF_IDENTITY(int(0), int(0))), 0))) ^ 0)))))))), atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) ^ uvec2(0u, 0u)), uvec2(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base), ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)) - (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))) ^ uvec2(0u, 0u)), uvec2(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) ^ uvec2(0u, 0u)), uvec2(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[1])).x) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) ^ uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0])), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[1])).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base)), (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) ^ uvec2(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))))), uvec2(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) ^ uvec2(0u, 0u)), uvec2(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[1])).x))], 4, 64, 2))), (atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], 4, 64, 2)) | 0u) : _GLF_FUZZED(next_virtual_gid)))) >> 0u);
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
             break;
             default:
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   1;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   subgroupBarrier();
  }
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true)))))), true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true), true)))))))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, 0u | (1u)) * (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x) << 0u), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base) | uvec2(0u, 0u)).x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))), ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))))) || false)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, clamp(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x)), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))) / 1u)))], read, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4), clamp(clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4), clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4), clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)))), 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
}
