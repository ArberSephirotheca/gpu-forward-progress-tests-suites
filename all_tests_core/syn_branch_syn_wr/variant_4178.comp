#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || false))) || false), true, true))) || (_GLF_DEAD(false)))))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))) - 0), 0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)), 0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u)))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u)))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u)))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u) * (1u))) + 0u)) << 0u))).x), ((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u)) << 0u)), max((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u)) << 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) + 0u)) << 0u))))).x)) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), min(int(_GLF_IDENTITY(5, int(ivec4(5, 0, 0, 0)))), int(5))), int(5))), (_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) - 0), max(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), (0 ^ (0 >> _GLF_IDENTITY(int(6), int(6)))) + (_GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-92726) : _GLF_IDENTITY(int(5), int(ivec4(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-65302))), 0, 1, 0)))))))))))))), int(5)))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
    }
   barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ (1 | 1), (_GLF_IDENTITY(1 ^ (1 | 1), min(1 ^ (1 | 1), 1 ^ (1 | 1)))) >> (_GLF_IDENTITY(-60185 & 0, (-60185 & 0) * 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 ^ 0) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 1 * (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + 1)), 0u | (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, max(1, 1)), 1))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + 1)), 0u | (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) ^ 0u))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, max(1, 1)), 1)))))))))) / 1u) | (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)) | 0u))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], uint(1), 4, 64, _GLF_IDENTITY(4, 0 + (4)));
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, false || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), _GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(workgroup_size)))))))) == 0, bool(bool(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) | (2))) == 0, ! (! (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | 0u))) == 0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   do
    {
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), false))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 ^ 1) | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       for(int _injected_loop_counter = ((0 & -21040) | (0 & -57597)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.5)), _GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))) - (0 & -20943))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch.x))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch.x)))), true && (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(57.50) : 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(log(1.0), (log(1.0)) + 0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x4(float(mat4x3(0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(7013.8308) : _GLF_ONE(1.0, injectionSwitch.y))), log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), injectionSwitch.x)))))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false)))), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), false))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), true)))), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))))))), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), true)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))), true)))), false)))), false)))))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y), false), true))))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y), false), true))))), false)), true, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y), false), true))))), false)), true, false))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y), false), true))))), false)), true, false))), true, false)))))))), true))), true))))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(72.09, _GLF_IDENTITY(7.5, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(7.5, (7.5) - 0.0), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(7.5, (7.5) - 0.0), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), transpose(transpose(mat4(_GLF_IDENTITY(7.5, (7.5) - 0.0), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))))))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec2(72.09, _GLF_IDENTITY(7.5, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(7.5, (7.5) - 0.0), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(7.5, (7.5) - 0.0), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), transpose(transpose(mat4(_GLF_IDENTITY(7.5, (7.5) - 0.0), 0.0, exp(0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))))))))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(round(-5443.7282))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.4, 536.928, 1.4)) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0)))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.4, 536.928, 1.4)) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.4, 536.928, 1.4)) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0)))))[0], _GLF_FUZZED(-1441.1792)), vec2(_GLF_FUZZED(3.8), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.4, 536.928, 1.4)) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0)))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.4, 536.928, 1.4)) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.4, 536.928, 1.4)) : vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(-72.47), _GLF_FUZZED(56.42)), bvec2(false, false))), 1.0))))))))).y))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))), injectionSwitch))[1]), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))), injectionSwitch))[1])), clamp(mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))), injectionSwitch))[1])), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))), injectionSwitch))[1])), mat2(1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, cos(0.0), 1.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))), injectionSwitch))[1])))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])))), injectionSwitch))[1])))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), injectionSwitch))[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(78194) : 1))])).y : _GLF_FUZZED(-0.1)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])).y)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1]) - 0.0))).y : _GLF_FUZZED(_GLF_IDENTITY(-0.1, clamp(-0.1, _GLF_IDENTITY(-0.1, float(vec3(-0.1, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.3)), bool(false)))))))), _GLF_IDENTITY(-0.1, (-0.1) - 0.0))))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(847.149), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), bvec2(true, false))), injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), injectionSwitch))[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1])).y)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))))), injectionSwitch))[1]) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true)))) / abs(_GLF_ONE(1.0, injectionSwitch.y)))))).y : _GLF_FUZZED(_GLF_IDENTITY(-0.1, clamp(-0.1, _GLF_IDENTITY(-0.1, float(vec3(-0.1, 1.0, 0.0))), -0.1)))), (true ? (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))[1], (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))))), injectionSwitch))[1]) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.4)), float(0.0), bool(true)))) / abs(_GLF_ONE(1.0, injectionSwitch.y)))))).y : _GLF_FUZZED(_GLF_IDENTITY(-0.1, clamp(-0.1, _GLF_IDENTITY(-0.1, float(vec3(-0.1, 1.0, 0.0))), -0.1)))) : _GLF_FUZZED(step(3.9, -97.99)))))), false), false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - abs(vec2(0.0, 0.0))), 1.0, 1.0)))))).y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]))), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(! (true))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && true)), ((! _GLF_IDENTITY((true), ((true)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool((! _GLF_IDENTITY((true), ! (! ((true))))))))) || false)) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) | (0))))], (injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) | (0))))]) - 0.0), min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch))[0], injectionSwitch[1])))).y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) | (0))))], (injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) | (_GLF_IDENTITY(0, (0) | (0))))]) - 0.0), min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch))[0], injectionSwitch[1])))).y : _GLF_FUZZED(3497.1434)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), max(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), clamp(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))))))).y)))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY((_GLF_IDENTITY((! (true)), bool(bool((! (true)))))) || false, ! (! ((_GLF_IDENTITY((! (true)), bool(bool((! (true)))))) || false))))) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch))[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | (0))], min(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(23760)))) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-349.369), _GLF_FUZZED(1460.5596)), bvec2(false, false)))))[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-349.369), _GLF_FUZZED(1460.5596)), bvec2(false, false)))))[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y))))) || false), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), (bool(bool((! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))) && _GLF_IDENTITY(true, ! (! (true)))))) || false)) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), max(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])))), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), max(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])))), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false, false, true)))), bool(bvec3((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), max(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])))), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), max(min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), min(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[_GLF_IDENTITY(0, (0) | (0))])))), injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false, false, true)))), false, false)))))))))))) || false)) && true)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
}
