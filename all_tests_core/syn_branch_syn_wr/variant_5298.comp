#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-2.8)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))), ! (! (! (! (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY((! (bool(bvec2(false, true)))), false || ((! (bool(bvec2(false, true))))))))), (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))) && true))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)), bool(bvec4(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), true))), false))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.3)), bool(false))) < injectionSwitch.y)), true), false)), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))), false)))))))), bool(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), false))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), false || (((false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), false || (_GLF_IDENTITY(true, false || (true)) && (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, true && (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), false || (_GLF_IDENTITY(true, false || (true)) && (false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, false)), false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))), subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) << 0u)) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1)))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) >> 0u, clamp((_GLF_FUZZED(workgroup_base)) >> 0u, (_GLF_FUZZED(workgroup_base)) >> 0u, _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) >> 0u, clamp((_GLF_FUZZED(workgroup_base)) >> 0u, _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) >> 0u, max((_GLF_FUZZED(workgroup_base)) >> 0u, (_GLF_FUZZED(workgroup_base)) >> 0u)), (_GLF_FUZZED(workgroup_base)) >> 0u))))))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) >> 0u)) : subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u))) : _GLF_FUZZED(subgroup_size))), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)) ^ uvec4(0u, 0u, 0u, 0u)), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))))))), 1u)) * uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), (103712u & 0u) ^ (_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u))))))))), uint(5u))))), 1u), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u ^ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u)), _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))) ^ 0u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))))))), 1u), _GLF_IDENTITY((uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)))))) | 0u), _GLF_IDENTITY(1u, (1u) | 0u))), ((uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), uint(uint(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u))))))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))))), uint(5u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), _GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (~ (uint(5u))) | (~ (uint(5u)))))), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), vec2(mat3(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0)))))).y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(8.8) : exp(0.0)))), float(_GLF_FUZZED(-9.0)), bool(false))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)) | 0u), 1u))) + uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))), min(uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u))) : _GLF_FUZZED(subgroup_size))), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)) ^ uvec4(0u, 0u, 0u, 0u)), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))))))), 1u)) * uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), (103712u & 0u) ^ (_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u))))))))), uint(5u))))), 1u), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u ^ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u)), _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))) ^ 0u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))))))), 1u), _GLF_IDENTITY((uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)))))) | 0u), _GLF_IDENTITY(1u, (1u) | 0u))), ((uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), uint(uint(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u))))))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))))), uint(5u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), _GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (~ (uint(5u))) | (~ (uint(5u)))))), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), vec2(mat3(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0)))))).y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(8.8) : exp(0.0)))), float(_GLF_FUZZED(-9.0)), bool(false))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)) | 0u), 1u))) + uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))), uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u))) : _GLF_FUZZED(subgroup_size))), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)) ^ uvec4(0u, 0u, 0u, 0u)), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))))))), 1u)) * uvec4(1u, 1u, 1u, 1u))) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), (103712u & 0u) ^ (_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u))))))))), uint(5u))))), 1u), (uvec4(subgroup_size, 1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 1u)) | (_GLF_IDENTITY(uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), 0u ^ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, max(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u)), _GLF_IDENTITY(5u, clamp(5u, 5u, 5u))))) ^ 0u))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))))))), 1u), _GLF_IDENTITY((uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)) >> 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)))))) | 0u), _GLF_IDENTITY(1u, (1u) | 0u))), ((uvec4(subgroup_size, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), uint(uint(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u))))))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_size)))))), uint(5u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / exp(0.0))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), clamp(uint(5u), _GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), (~ (uint(5u))) | (~ (uint(5u)))))), uint(5u)))) | 0u), uint(5u)), (1u << _GLF_IDENTITY(uint(5u), uint(5u))) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), vec2(mat3(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0)))))).y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(8.8) : exp(0.0)))), float(_GLF_FUZZED(-9.0)), bool(false))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))) >> 0u)) | 0u), 1u))) + uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))))), 0u | (uint(uvec4(subgroup_size, 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((_GLF_IDENTITY(uint(5u), uint(5u)))))) / 1u)) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), 1u, 0u, 1u))))), subgroup_size)), ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-72761) : 1))), clamp(0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-72761) : 1))), 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-72761) : 1))), 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-72761) : 1))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), clamp(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size)))))), 1u, 0u)))) ^ (0u ^ 0u)), (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-40702))), 4)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (64) | (64)), 0);
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false)))))), true && (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | (64)))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2)))), max(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2)))), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.2)))))), bool(true)))), float(_GLF_FUZZED(6731.5934)), bool(false))), float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)))))), sqrt(0.0))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(_GLF_IDENTITY(uvec4(read, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))).x) - 0.0))), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))) ^ 0u))), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))) ^ 0u))), 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(read, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(25.81)) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x)), 1u))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-653.316)), bool(false)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-653.316)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), true, true)), (bool(bvec3(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), true, true))) && true))))))), false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_IDENTITY(true, bool(bool(true))), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((_GLF_IDENTITY(false || (false), ! (! (false || (false))))), ! (! ((_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, cos(0.0))), _GLF_IDENTITY(vec2(vec4(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, cos(0.0))), 0.0, 0.0)), mat2(1.0) * (vec2(vec4(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, cos(0.0))), 0.0, 0.0))))))[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-954.371) : injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-954.371) : injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-954.371) : injectionSwitch[1])), mix(float(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-954.371) : injectionSwitch[1]))), float(_GLF_FUZZED(7.6)), bool(false)))))), _GLF_IDENTITY(float(_GLF_FUZZED(83.62)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(83.62)), mix(float(_GLF_FUZZED(-9.5)), float(_GLF_IDENTITY(float(_GLF_FUZZED(83.62)), max(float(_GLF_FUZZED(83.62)), float(_GLF_FUZZED(83.62))))), bool(true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(false, (false) || false))), (true && (bool(_GLF_IDENTITY(false, (false) || false)))) && true)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), clamp((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec2(0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[0]))))) / 1.0), injectionSwitch[1])), 0.0, abs(1.0), 1.0, cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ _GLF_IDENTITY(2944.4852, _GLF_IDENTITY(min(_GLF_IDENTITY(2944.4852, max(2944.4852, 2944.4852)), 2944.4852), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(2944.4852, max(2944.4852, 2944.4852)), 2944.4852), max(min(_GLF_IDENTITY(2944.4852, max(2944.4852, 2944.4852)), 2944.4852), min(_GLF_IDENTITY(2944.4852, max(2944.4852, 2944.4852)), 2944.4852))), min(_GLF_IDENTITY(2944.4852, max(2944.4852, 2944.4852)), 2944.4852), min(_GLF_IDENTITY(2944.4852, max(2944.4852, 2944.4852)), 2944.4852))))))))), tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-61.57)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) - 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat4x2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-61.57)), bool(false))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0))) - 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-8125.4195)), 0.0 + ((true ? 0.0 : _GLF_FUZZED(-8125.4195))))), 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], min(injectionSwitch[0], injectionSwitch[0]))))) / 1.0), injectionSwitch[1])), 0.0, abs(1.0), 1.0, cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ 2944.4852))))), _GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), (tan(0.0)) + 0.0), tan(0.0), tan(0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8125.4195))), 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(572.679, 45.35, 65.93)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
