#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec4 _f0;
 bvec4 _f1;
 bvec3 _f2;
 uvec3 _f3;
 mat4 _f4;
 mat4 _f5;
 float _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 mat4x2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 vec4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 mat3x4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 int _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 uint _f1;
 uvec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_7 _f3;
 uint next_virtual_gid;
 int _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(14.53))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(cos(830.596)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) && true))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) && true)) || false, ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), false, _GLF_IDENTITY(true, true && (true)))), false || (bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), false, _GLF_IDENTITY(true, true && (true))))))) && true)) || false) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-50456, -6099))) : injectionSwitch)).x > injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, true))))), true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0), (false ? _GLF_FUZZED(vec2(-56.98, 366.597)) : vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, false)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true)))), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true)), true)))), (! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))) || false)) && true)) || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false)))) || false)) && true))))))))))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true)))), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true)), true)))), (! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))) || false)) && true)) || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false)))) || false)) && true))))))))))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))), true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat4x3(1.0), _GLF_struct_1(_GLF_struct_0(bvec4(true), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))), uvec3(1u), mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-43.92)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.3)), bool(false)))), bool(true)))))))), _GLF_struct_3(mat4(1.0), 1, _GLF_struct_2(uvec4(1u), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-84.49) : 1.0))), bvec3(true)), vec2(1.0)), _GLF_struct_7(_GLF_struct_4(vec4(1.0)), vec4(1.0), _GLF_struct_5(mat2x3(1.0), mat2x4(1.0), mat3x2(1.0)), _GLF_struct_6(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 1.0 * ((1.0))) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), mat3(_GLF_IDENTITY(mat4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 1.0 * ((1.0))) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))))))), (false ? _GLF_FUZZED(mat4(5.7, 88.43, 87.43, 7.4, -1.6, 8958.3263, -0.4, -8.9, -42.27, 5864.4174, -964.027, -68.68, -9.3, -87.71, -4501.7918, -8.1)) : mat4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 1.0 * ((1.0))) - 0.0), min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))))))))))), mat4x2(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-643.285)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (1.0) - 0.0)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) + 0u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)) - 0u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), 1u, 1u))) << 0u)))) | uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), float(float(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), (false ? _GLF_FUZZED(3599.1423) : _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))))), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x) : _GLF_FUZZED(0.2)))))))) | (subgroup_size)))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) + 0u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << _GLF_IDENTITY(0u, max(0u, 0u))), 1u, 1u))) << 0u)))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))) | (subgroup_size)))), subgroup_size))) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), _GLF_IDENTITY(1, (1) >> 0), 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))), 0, 0, 0)))), 1, 1))))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size))), max(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size), min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size) << 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(91499))))))), 1, 1))))) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(_GLF_IDENTITY(0, min(0, 0)), 0, 0, 0)))), 1, 1))))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1)), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1)))))))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size))), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec4(52002, 49707, 96954, 78013)) : (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), (~ (_GLF_IDENTITY(1, max(1, 1)))) / 1)))) >> 0), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))))), 1, 1))))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | 0), (1 ^ 1), 1, 0)) >> ivec4(0, 0, 0, 0)))), 1, 1))))) % subgroup_size))))))), 1, _GLF_struct_9(_GLF_struct_8(vec4(1.0), bvec4(true), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(true))))))), false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true)))))), true)))))))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))), false)))))), true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), false)))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), true)))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), false || (bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false))))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), false)))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), true)))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), false || (bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false))))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), false)))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), true)))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), false || (bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false))))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))))))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)), false)))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), true)))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false)), false || (bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), false))))))))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false))))))), false)))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), true))), true)), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), false)), false)))))), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), _GLF_IDENTITY(true, bool(bool(true)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false)))))), true))))))), false)))))))))), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))))))))), _GLF_IDENTITY(false, false || (false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))))))))), _GLF_IDENTITY(false, false || (false))))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))))))))), _GLF_IDENTITY(false, false || (false))))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), false))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))))))))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), _GLF_IDENTITY(false, false || (false))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), false))))), false))))))))))))), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), transpose(transpose(_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0)), (true ? _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(((51.67 - 12.71)))), bool(false)))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(((51.67 - 12.71)))), bool(false)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(((51.67 - 12.71)))), bool(false))))))))) : _GLF_FUZZED(mat4(9382.2909, -76.94, -6.9, -8873.7059, -223.114, -4.5, -0.5, -97.33, -0.2, -209.104, _GLF_IDENTITY(946.795, (true ? 946.795 : _GLF_FUZZED(smoothstep(-9.1, -2.2, -338.775)))), 6.7, 711.480, -5547.1191, 443.961, 83.36)))), mat4(1.0), 1.0)));
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_10.next_virtual_gid, (_GLF_struct_replacement_10.next_virtual_gid) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), (mat2(injectionSwitch.x, 0.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0]))) - 0.0), _GLF_FUZZED(503.774)), vec2(_GLF_FUZZED(float(26044u)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)))))), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))))))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ ((subgroup_local_id + 1))) / 1u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) / _GLF_IDENTITY(1u, (1u) << 0u)))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u)))))))))) < subgroup_size) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(false, true && (false))) && true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(false, true && (false))) && true))), false || (((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), (_GLF_IDENTITY(false, true && (false))) && true))))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false))))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((false)))))) && true))))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false))) && true), bool(bvec4(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, true && (false))) && true), bool(bvec4(bool((_GLF_IDENTITY(false, true && (false))) && true), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true)))))))), ! (! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   int i = _GLF_IDENTITY(0, 1 * (0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_DEAD(false), true, true, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), bool(bvec4(_GLF_DEAD(false), true, true, true)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), bool(bvec4(_GLF_DEAD(false), true, true, true)))), false))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) - 0u), (virtual_gid)))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(148313u, 113012u)) : uvec2(1u, 1u)))))) / 1u), 0u)))) >> 0u)], _GLF_IDENTITY(read, _GLF_IDENTITY((read) + 0u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, min(read, read))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (false ? _GLF_FUZZED(81852u) : (read) + 0u)), clamp(_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), _GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), (_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u))) / 1u), _GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)))), (false ? _GLF_FUZZED(atomicMin(num_workgroup, subgroup_local_id)) : _GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)))))), clamp((read) + _GLF_IDENTITY(0u, max(0u, 0u)), (read) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(uvec3(153456u, 36566u, 118100u).t) : read)), _GLF_IDENTITY(read, ~ (~ (read)))))), clamp(_GLF_IDENTITY((read), max((read), _GLF_IDENTITY((read), uint(uvec4((read), 0u, 1u, 1u))))), (read), (read))) + 0u, (_GLF_IDENTITY((read) + 0u, max(_GLF_IDENTITY((read) + 0u, (_GLF_IDENTITY((read) + 0u, uint(uvec3((read) + 0u, 0u, 0u)))) << 0u), (read) + 0u))) | 0u)))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, min(read, read))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), (false ? _GLF_FUZZED(81852u) : (read) + 0u)), clamp(_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), _GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)), (_GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u))) / 1u), _GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)))), (false ? _GLF_FUZZED(atomicMin(num_workgroup, subgroup_local_id)) : _GLF_IDENTITY((read) + 0u, (false ? _GLF_FUZZED(81852u) : (read) + 0u)))))), clamp((read) + _GLF_IDENTITY(0u, max(0u, 0u)), (read) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(uvec3(153456u, 36566u, 118100u).t) : read)), _GLF_IDENTITY(read, ~ (~ (read)))))), clamp(_GLF_IDENTITY((read), max((read), _GLF_IDENTITY((read), uint(uvec4((read), 0u, 1u, 1u))))), (read), (read))) + 0u, (_GLF_IDENTITY((read) + 0u, max(_GLF_IDENTITY((read) + 0u, (_GLF_IDENTITY((read) + 0u, uint(uvec3((read) + 0u, 0u, 0u)))) << 0u), (read) + 0u))) | 0u))))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) ^ _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0)), (mat2x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 1.0, tan(0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((ldexp(873.770, 95866) - 93.96)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((ldexp(873.770, 95866) - 93.96)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(5847.7103, -3.3, -8.1, -5779.3498, -3.8, 404.008, 25.71, -4.9) * vec4(1198.1866, 824.485, 8513.2216, 45.19))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true, false, false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))).y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true), false))))))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, false))), true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y))), float(_GLF_FUZZED(43.45)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bool(true && (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch))) + log(vec2(1.0, 1.0))).y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))) || false)), false || ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((false), false, false, false)))) || false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
