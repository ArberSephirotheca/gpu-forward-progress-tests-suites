#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ! (! ((! (_GLF_IDENTITY(true, (true) && true))))))))) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-197.274) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false)))))))) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), false, false, false)))) || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true))))) && true), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false)))))))) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), false, false, false)))) || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true))))) && true)), false || (! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! _GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)))))))) && true)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false)))))))) && true))) || false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y), false, false, false)))) || ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) && true))))) && true))))))))
      {
       do
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 ^ 0) ^ 1)); _injected_loop_counter ++)
                      {
                       return;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        continue;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(5.8, clamp(_GLF_IDENTITY(5.8, mix(float(5.8), float(_GLF_FUZZED((+ -3.5))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 5.8, 5.8)), -219.669)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(5.8, clamp(_GLF_IDENTITY(5.8, mix(float(5.8), float(_GLF_FUZZED((+ -3.5))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 5.8, 5.8)), -219.669)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(5.8, clamp(_GLF_IDENTITY(5.8, mix(float(5.8), float(_GLF_FUZZED((+ -3.5))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 5.8, 5.8)), -219.669)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x)) > injectionSwitch.y))));
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat4x2(-9.9, -1.5, -89.42, 666.794, -0.2, 1.1, -29.59, _GLF_IDENTITY(52.28, 0.0 + (52.28)))[1]))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), false, true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))))))) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(77501))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(77501))), (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(77501)))) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.9))) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.9))) < injectionSwitch.y))) && true))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           for(int _injected_loop_counter = (-65876 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
     return;
    }
  }
 else
  {
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 1u, 1u), _GLF_IDENTITY((uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(0u, 0u, 0u), ((uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | ((uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(gl_WorkGroupSize.x, 1u, 1u)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((uvec3(gl_WorkGroupSize.x, 1u, 1u)), ((uvec3(gl_WorkGroupSize.x, 1u, 1u))) >> uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 0u)), (uint(uvec2(gl_WorkGroupSize.x, 0u))) | (uint(uvec2(gl_WorkGroupSize.x, 0u))))), 1u, 1u)) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(0u, 0u, 0u), max((uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(0u, 0u, 0u), (uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(0u, 0u, 0u)))))))) / 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | 0u), 0u, 0u)))), _GLF_IDENTITY((uvec3(gl_WorkGroupSize.x, 1u, 1u)) * uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((uvec3(gl_WorkGroupSize.x, 1u, 1u)) * uvec3(1u, 1u, 1u)))), (uvec3(gl_WorkGroupSize.x, 1u, 1u)) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(clamp(subgroup_id, num_workgroup, subgroup_local_id)) : uint(0u)))), ~ (~ _GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) ^ 0u)))), 0u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) - 0)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))))); _injected_loop_counter ++)
          {
           return;
          }
        }
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))) : _GLF_FUZZED(_GLF_IDENTITY((92230 - 26636), ~ (~ ((92230 - 26636)))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), (false ? _GLF_FUZZED(-16184) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))) : _GLF_FUZZED((92230 - 26636))))), max(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, ~ (~ (0)))), max(~ (_GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, ~ (~ (0)))), (~ (_GLF_IDENTITY(0, ~ (~ (0))))) / 1))))), (false ? _GLF_FUZZED(-16184) : _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))), max(~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))), ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))))) + 0)))) : _GLF_FUZZED((92230 - 26636))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) ? _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-16184) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-16184) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))), ~ (~ ((false ? _GLF_FUZZED(-16184) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0))))))))))) | 0)) : _GLF_FUZZED((92230 - 26636))))), int(ivec2(int(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), (false ? _GLF_FUZZED(-16184) : _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 1, 1, 1)))), int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 1, 1, 1)))), 0))))))) : _GLF_FUZZED((92230 - 26636))))), 0)))))))) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (-72811 & (0 >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (-72811 & (0 >> _GLF_IDENTITY(int(3), int(3))))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != (-72811 & (0 >> _GLF_IDENTITY(int(3), int(3)))))))) || false); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)), false || (bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)))))) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), (true && (_GLF_IDENTITY(false, ! (! (false))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))) && true))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))) && true)) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-4.2, -6305.4421, 0.4).x), _GLF_FUZZED(4.4)), bvec2(false, false))))))).x), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false))) > injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || false)))) || false, false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || false)))) || false))))) && true)), _GLF_IDENTITY(true, (true) || false) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) || false) || _GLF_IDENTITY(false, (false) && true)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))) || false))) && true))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.5, -664.580)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))))), false, false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))) && true)) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-4.2, -6305.4421, 0.4).x), _GLF_FUZZED(4.4)), bvec2(false, false))))))).x), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false))) > injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || false)))) || false, false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || false)))) || false))))) && true)), _GLF_IDENTITY(true, (true) || false) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) || false) || _GLF_IDENTITY(false, (false) && true)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))) || false))) && true))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.5, -664.580)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))))), false, false, false))))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, false || ((bool(false)) || false)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))).x, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / 1.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) || false))) && true)) && true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-4.2, -6305.4421, 0.4).x), _GLF_FUZZED(4.4)), bvec2(false, false))))))).x), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false))) > injectionSwitch.y)), true))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || false)))) || false, false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || false)))) || false))))) && true)), _GLF_IDENTITY(true, (true) || false) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))) || false) || _GLF_IDENTITY(false, (false) && true)))), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), true && (_GLF_IDENTITY((bool(false)), bool(bvec3((bool(false)), false, false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))) || false))) && true))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-1.5, -664.580)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))))), false, false, false))))), false, true)), true, false)))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | (subgroup_id))) ^ _GLF_IDENTITY(0u, min(0u, 0u))) * subgroup_size + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | (subgroup_id))) ^ _GLF_IDENTITY(0u, min(0u, 0u))) * subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))))) | (subgroup_id))) ^ _GLF_IDENTITY(0u, min(0u, 0u))) * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) % subgroup_size))), uint(uint(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, exp(0.0))), (float(vec3(injectionSwitch.x, 1.0, exp(0.0)))) - 0.0)) < injectionSwitch.y)) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(52140), (_GLF_IDENTITY(_GLF_FUZZED(52140), (_GLF_FUZZED(52140)) | (_GLF_IDENTITY(_GLF_FUZZED(52140), max(_GLF_FUZZED(52140), _GLF_FUZZED(52140)))))) / 1))))), _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)) | 0), 0)), int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) | (ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-97154))))), 1, 0, 0))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), 0, 0)), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-36941)))) ^ 0), 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), _GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))) | (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), ~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), min(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, _GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, max(0, 0)))))) - 0))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> 0), 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))) % subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), 1u * (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))) % subgroup_size))), uint(uint(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(52140))))), _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) | (ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(15119) : 1)), 1, 0, 0))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, 0 ^ (1)), 1, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), min(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), ~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) * 1))), int(ivec4(1, 1, 0, 0))), ~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((-86234 | (12338 / 78534))) : 0)), 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))) % subgroup_size))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) % subgroup_size))), uint(_GLF_IDENTITY(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) ^ 0), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(52140))))), _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec3(1, 1, 1)))) << 0), 0, 0)), clamp(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(1, min(1, 1)), 0, 0)), _GLF_IDENTITY(int(int(int(ivec4(1, _GLF_IDENTITY(1, min(1, 1)), 0, 0)))), ~ (~ (int(int(int(ivec4(1, _GLF_IDENTITY(1, min(1, 1)), 0, 0)))))))), int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) << 0), 0, 0), (ivec4(1, 1, 0, 0)) | (ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(81514)))) | (1)), 0, 0))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / 1), clamp(1, 1, 1)), 0, 0)), clamp(_GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0)), (int(ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0))) / 1), int(ivec4(_GLF_IDENTITY(1, (1) >> 0), 1, _GLF_IDENTITY(0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.5) : injectionSwitch.x)) : _GLF_FUZZED(9.9))) > injectionSwitch.y)) ? _GLF_FUZZED(-79318) : _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (~ (min(0, _GLF_IDENTITY(0, (0) + (0 & -76285))))))))))), 0)), int(ivec4(1, 1, 0, 0))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) - ivec4(0, 0, 0, 0))) | (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, min(0, 0))))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) - ivec4(0, 0, 0, 0))) | (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, min(0, 0))))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) - ivec4(0, 0, 0, 0))) | (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, min(0, 0)))))) + 0))), ~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0))), ~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, min(0, 0)))), int(ivec4(1, 1, _GLF_IDENTITY(0, ~ (~ (0))), 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0))))))))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), (false ? _GLF_FUZZED(ivec4(68153, 73983, 28217, 315).xxxx[2]) : int(ivec4(1, 1, 0, 0)))), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), max(0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))), 0 ^ (0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))))))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), ~ (~ (uint(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? 1 : _GLF_FUZZED(52140))))), _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, (1) - 0), 1)))) << 0), 0, 0)), clamp(_GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), clamp(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), 0 + (int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)))), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)))), int(ivec4(1, _GLF_IDENTITY(1, min(1, 1)), 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) | (ivec4(1, 1, 0, 0))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(1, 1)))), 0, 0)), clamp(int(ivec4(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0)), int(ivec4(_GLF_IDENTITY(1, (1) >> 0), 1, _GLF_IDENTITY(0, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-79318, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(-79318, 0), clamp(ivec2(-79318, 0), ivec2(-79318, 0), ivec2(-79318, 0)))), int(int(int(_GLF_IDENTITY(ivec2(-79318, 0), clamp(ivec2(-79318, 0), ivec2(-79318, 0), ivec2(-79318, 0))))))))) : _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0)))))), 0)), int(ivec4(1, 1, 0, 0))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), _GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) - ivec4(0, 0, 0, 0))) | (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, min(0, 0))))), ~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ~ (~ (ivec4(1, 1, 0, 0)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0))), (~ (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))) >> 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))))))), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))), 0 | (_GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))))) - 0)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (false ? _GLF_FUZZED(154163u) : ~ (subgroup_local_id))))))) + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))) % subgroup_size))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), ~ (~ (_GLF_IDENTITY(1, int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))) % subgroup_size))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(52140))))), _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 0), _GLF_IDENTITY((ivec4(1, 1, 0, 0)), ((ivec4(1, 1, 0, 0))) + (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0)))) | (ivec4(1, 1, 0, 0))), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) | (ivec4(1, 1, 0, 0)))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | 0), 0))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, int(ivec2(0, 1))))), _GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(46312) : 1)))), 1, 0, 0)), int(ivec4(1, 1, 0, 0))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), max((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), (false ? _GLF_FUZZED(-59548) : (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0))))))))))))) ^ 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) / (1 & 1)), 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))), (false ? _GLF_FUZZED(51821u) : (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(52140))))), _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) | 0), 0)), int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 1, 0, 0), _GLF_IDENTITY((ivec4(1, 1, 0, 0)), ((ivec4(1, 1, 0, 0))) + (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0)))) | (ivec4(1, 1, 0, 0))), (_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) | (ivec4(1, 1, 0, 0)))) ^ ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))))))), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | 0), 0))))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, int(ivec2(0, 1))))), _GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(46312) : 1)))), 1, 0, 0)), int(ivec4(1, 1, 0, 0))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), max((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)))))))), (false ? _GLF_FUZZED(-59548) : (~ (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(_GLF_IDENTITY(1, 0 + (1)), 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), 0 + (int(ivec3(0, 1, 0)))))), ~ (~ (ivec4(1, 1, 0, 0)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 1, 0, 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, _GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(_GLF_IDENTITY(ivec4(1, 1, 0, 0), (ivec4(1, 1, 0, 0)) >> ivec4(0, 0, 0, 0))), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0), (_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0)) | 0))) | ((_GLF_IDENTITY(clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0))), (clamp(int(ivec4(1, 1, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-79855) : 0)))), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, _GLF_IDENTITY(0, max(0, 0)))))) - 0))))))))))))) ^ 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, _GLF_IDENTITY(0, (0) / (1 & 1)), 0)), clamp(int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)), int(ivec4(1, 1, 0, 0)))))))))) % subgroup_size))))) | 0u)) - 0u);
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) | 0), 1 * (~ (1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (false))))))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), min((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ (0)))), max(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)), (_GLF_IDENTITY((int(0)), min((int(0)), _GLF_IDENTITY((int(0)), ~ (~ ((int(0)))))))) | ((int(0)))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
      }
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
    }
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))], _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) * 1)), 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) + 0.0))), injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch))))[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false)))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(0 ^ (int(5)), (0 ^ (int(5))) | 0)))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(59.50)), float(injectionSwitch.y), bool(true)))) - determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) & 1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.87), _GLF_FUZZED((- 32.48))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id)))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(_GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(subgroup_local_id)), _GLF_IDENTITY(uint(uint(subgroup_local_id)), (_GLF_IDENTITY(uint(uint(subgroup_local_id)), (uint(uint(subgroup_local_id))) * 1u)) - 0u), _GLF_IDENTITY(uint(uint(subgroup_local_id)), (uint(uint(subgroup_local_id))) | (uint(uint(subgroup_local_id)))))), uint(uint(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))), ~ (~ (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))), (uint(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)))) | 0u)))), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), min(uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))))) + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))) < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, true, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).x) / abs(1.0))))); _injected_loop_counter --)
        {
         return;
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(-76.25)), bool(false))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) ^ 0, min((int(1)) ^ 0, (int(1)) ^ 0))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), clamp(~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), ~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2)))), (~ (_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))) >> 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
    }
   else
    {
    }
   int i = 0;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))) || false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) + 0)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
        continue;
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, (3) >> 0)))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
}
