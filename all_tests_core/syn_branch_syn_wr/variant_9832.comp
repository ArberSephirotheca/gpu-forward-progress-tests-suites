#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.9) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(390.002, clamp(_GLF_IDENTITY(390.002, (390.002) / 1.0), 390.002, 390.002)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-8.9) : injectionSwitch.y, mix(float(false ? _GLF_FUZZED(-8.9) : injectionSwitch.y), float(_GLF_FUZZED(16.80)), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-8.9) : injectionSwitch.y, mix(float(false ? _GLF_FUZZED(-8.9) : injectionSwitch.y), float(_GLF_FUZZED(16.80)), bool(false)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0)))))) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(390.002, clamp(390.002, 390.002, 390.002)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + determinant(mat4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3807.6298)), float(1.0), bool(true))), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)))))), ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0))))))) && true)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / determinant(mat4(1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))))), clamp(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), (false ? _GLF_FUZZED(mat3(-2.1, 1.5, 9.0, 9559.1878, 1.3, 8.9, -7.5, -905.770, -3590.5572)) : mat3(1.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), max(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), dot(vec2(0.0, 1.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(900.485), _GLF_FUZZED(-140.835)), bvec2(false, false))), injectionSwitch)).y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(900.485), _GLF_FUZZED(-140.835)), bvec2(false, false))), injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(900.485), _GLF_FUZZED(-140.835)), bvec2(false, false))), injectionSwitch)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(900.485), _GLF_FUZZED(-140.835)), bvec2(false, false))), injectionSwitch)).y))), 0.0))))), abs(log(1.0)), 1.0, 1.0, 0.0)))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, 1u * (0u))) / 1u)), (clamp(0u, 0u, 0u)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.8)), bool(false)))), _GLF_ONE(1.0, injectionSwitch.y)))))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))), (injectionSwitch.x), (injectionSwitch.x)))))) < injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 51295)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(763.899, -5969.0277)) : injectionSwitch)).x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(257.820, -2.2)) : injectionSwitch))), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(257.820, -2.2)) : injectionSwitch))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(257.820, -2.2)) : injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(257.820, -2.2)) : injectionSwitch)))))) + vec2(0.0, 0.0))).y)))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y, _GLF_IDENTITY(true, true && (true)), false, false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-634.832), _GLF_FUZZED(-2860.1151)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED(-82.86)), float(_GLF_IDENTITY(((injectionSwitch))[1], float(mat3(((injectionSwitch))[1], 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), bool(true)))), bvec2(true, true)))[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) < injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.67), _GLF_FUZZED(726.752)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)))), true))))))))))), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (_GLF_IDENTITY(true, true && (true))) && true))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (false)), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false))))))))), false))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false)))))))))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((2738.1944)), _GLF_FUZZED(1675.7086)), bvec2(false, false))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((2738.1944)), _GLF_FUZZED(1675.7086)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))).x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((2738.1944)), _GLF_FUZZED(1675.7086)), bvec2(false, false))).x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((2738.1944)), _GLF_FUZZED(1675.7086)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))).x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
          {
           barrier();
          }
         for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(4)))))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) | 0)))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : subgroup_id), max((false ? _GLF_FUZZED(subgroup_size) : subgroup_id), (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))) * (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY((35593u & 0u), ~ (~ (_GLF_IDENTITY((35593u & 0u), (false ? _GLF_FUZZED(workgroup_size) : (35593u & 0u)))))))), 0u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)), max((uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)), (uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)))), (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)), max((uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)), (uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u))))) | (uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)), max((uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u)), (uvec3(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> (35593u & 0u))))))), 0u, 1u))))))))))), (_GLF_IDENTITY(true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(63760u), (_GLF_IDENTITY(true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(63760u), 0u | (true ? (1u << _GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(63760u)))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))))), 0u, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (false ? _GLF_FUZZED(uvec3(23220u, 185837u, 192254u)) : uvec3(0u, 0u, 1u)))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u))))))))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))), uint(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u))))))))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))))), 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 1u)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), uint(uvec4(uint(uint(1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u))))))))) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u))))))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), max(uvec3(0u, 0u, 1u), uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 1u)))) | (_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u)), ~ (~ (uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 1u), 1u))))))))) ^ uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u)))))), 1u, 0u)))), uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), mix(vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.0)), bool(false)))) - sqrt(0.0)), 1.0)), max((vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.0)), bool(false)))) - sqrt(0.0)), 1.0)), (vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.0)), bool(false)))) - sqrt(0.0)), 1.0))))[0], mix(float(_GLF_FUZZED(3648.7887)), float((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0]), bool(true))), _GLF_FUZZED(-1749.8460), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[2], (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED((8193.6000 / 863.794)), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[1], _GLF_FUZZED(8.2), _GLF_FUZZED(7.2)), bvec4(false, true, false, false))))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0], mix(float(_GLF_FUZZED(3648.7887)), float((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0]), bool(true))), _GLF_FUZZED(-1749.8460), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[2], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(179.203), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.3) : (injectionSwitch)[0])), _GLF_FUZZED(3.0)), bvec2(true, false))).x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), max(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0))))))[3]), vec4(_GLF_FUZZED((8193.6000 / 863.794)), (_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), _GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, 0.0, 1.0)) * mat4(1.0), (_GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, 0.0, 1.0)) * mat4(1.0), ((vec4(injectionSwitch.x, 0.0, 0.0, 1.0)) * mat4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))) * vec4(1.0, 1.0, 1.0, 1.0))))[1], _GLF_FUZZED(8.2), _GLF_FUZZED(7.2)), bvec4(false, true, false, false))))) < injectionSwitch.y)))) && (false)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0], mix(float(_GLF_FUZZED(3648.7887)), float((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0]), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_FUZZED(-1749.8460), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[2], (vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-89.39)), bool(false))), 0.0, 0.0)), 1.0))[_GLF_IDENTITY(3, ~ (~ (3)))]), vec4(_GLF_FUZZED((8193.6000 / 863.794)), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[1], _GLF_FUZZED(8.2), _GLF_FUZZED(7.2)), bvec4(false, true, false, false))))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 1.0), mix(vec4(_GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0], mix(float(_GLF_FUZZED(3648.7887)), float((vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[0]), bool(true))), _GLF_FUZZED(-1749.8460), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[2], (_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), max(vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), 0.0, 0.0, 1.0))))))[3]), vec4(_GLF_FUZZED((8193.6000 / 863.794)), (vec4(injectionSwitch.x, 0.0, 0.0, 1.0))[1], _GLF_FUZZED(8.2), _GLF_FUZZED(7.2)), bvec4(false, true, false, false))))) < injectionSwitch.y)))) && (false)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)) ^ 0u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (uint(uvec2(1u, 0u))) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))), uint(1u))))), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicAdd(num_workgroup, packUnorm2x16(injectionSwitch)), (atomicAdd(num_workgroup, packUnorm2x16(injectionSwitch))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) : 0u | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, (1u & 1u), 1u))), 1u, 1u)))))))), (uint(uint(_GLF_IDENTITY(1u, 0u | (1u))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_FUZZED(workgroup_size))))))), _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (1u))))))))))), 0u)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), uint(uint(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u))))) << 0u)) | 0u) | (workgroup_base)) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || _GLF_IDENTITY(false, false || (false))))) ? subgroup_base : _GLF_FUZZED(workgroup_size))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, (true ? (1) - 0 : _GLF_FUZZED(58754))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? 8328.0156 : 98.65)), _GLF_FUZZED(617.606)), bvec2(false, false))).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint read = _GLF_IDENTITY(0, 0 + (0));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-47.62)), bool(false))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), float(mat2x4(length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))).y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))), false || (_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y))), ! (! (bool(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.2) : 0.0)), 0.0)), 1.0, 0.0, 0.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))).y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       do
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(5, clamp(5, 5, 5)), 0 + (_GLF_IDENTITY(5, clamp(5, 5, 5))))))) >> _GLF_IDENTITY(int(5), int(5)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))), ((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(1.4)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(1.4)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(clamp(-5751.8771, ceil(271.951), -91.50)))), 0.0, 0.0, 1.0))) : _GLF_FUZZED(1.4))))) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false), false))))))))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((-94402 & 0), (false ? _GLF_FUZZED(abs(21320)) : (-94402 & 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) ? _GLF_FUZZED(19325) : _GLF_IDENTITY(0, min(0, 0)))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.106)), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), bool(true))) > injectionSwitch.y)) || (true))))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (true ? _GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), ~ (1))) : _GLF_FUZZED(55969))), min(~ (1), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) + 0.0))))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - sqrt(sin(0.0))) - 0.0), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(2449.0976), _GLF_FUZZED(vec2(60.08, 17.89).r)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))[0], (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))[1]), bvec2(true, true))))), mix(vec2(_GLF_FUZZED(92.85), _GLF_FUZZED(45.63)), vec2(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))) * mat2(1.0)).x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true)))), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / abs(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.1, 6.5)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true)))), false))))))), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true))))))))))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true)))), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), clamp(vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))))).y), true)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true))))))))))))))), false, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true)))), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true)))), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), (false ? _GLF_FUZZED((vec4(-55.15, -2.7, -38.26, -2953.4205) * (- mat2x4(-7.2, 9938.1329, -1.8, 0.2, -1.0, -8.4, -3841.6405, -9.3)))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.2, 5.0)) : injectionSwitch)), vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))))).y), true)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true)))))))))))))))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), _GLF_IDENTITY(true, true && (true)))))), bvec3(bvec3(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0))).y), true)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(43.17)), bool(false))), 1.0))).y), true))))))))))))))), false, false)))))) && true)))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) + 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 + (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-851.650 * (-9.7 / 8.6)))), vec2(_GLF_FUZZED((83.68)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), true && ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))) || false)), true && (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), true && ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(641.396, 3.0)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))) || false))))))))))) && true) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9.9))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0 + (float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), clamp(0.0 + (float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), 0.0 + (float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), 0.0 + (float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0)))))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED(-13.84))), 0.0))) * determinant(mat3(1.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, abs(0.0), 0.0, 1.0)))))), _GLF_IDENTITY(float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(2271.1065) : float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))), _GLF_IDENTITY(float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), clamp(float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))), float(mat4(min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7196.2897))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(0.7) : max(1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(1.0), 0.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(446.969) : float(mat2(0.0, sqrt(1.0), 1.0, 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(0.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               read = atomicLoad(buf[virtual_gid], 4, 64, 2);
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))) && true); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2107.3323) : _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true)), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true)))) && true)), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)))))))
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))))))), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))))))) || false)))) && true))))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u);
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         subgroupBarrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(read, read)), 4, 64, 4);
}
