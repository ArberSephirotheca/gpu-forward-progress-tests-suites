#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat3x2 _f0;
 ivec3 _f1;
 uvec3 _f2;
 mat3x2 _f3;
 uint _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 int _f1;
 vec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 bvec4 _f1;
 mat2 _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 uint _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 vec4 _f3;
 mat4x2 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat4 _f1;
 uint subgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)))))) && true)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true, false)), bool(bool(bool(bvec4(false, true, true, false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (gl_NumWorkGroups.x)))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups.x)), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (gl_NumWorkGroups.x))))))))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, (1.0) / 1.0)), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sqrt(0.0)), 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED((-28.22)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0), 0.0, determinant(mat2(determinant(mat4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))), 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), 0.0, determinant(mat2(determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(vec4(-7639.9149, 247.796, 14.87, -6.5).p)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0)), log(1.0), 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) - 0.0), 0.0)), _GLF_IDENTITY(clamp(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) * 1.0), 1.0, 0.0)))))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8852.4668))), 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x))) / 1.0), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-775.102, (_GLF_IDENTITY(-775.102, mix(float(_GLF_FUZZED(81.21)), float(-775.102), bool(true)))) / 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0))), max(clamp(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) * 1.0), 1.0, 0.0)))))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8852.4668))), 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x))) / 1.0), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-775.102, (_GLF_IDENTITY(-775.102, mix(float(_GLF_FUZZED(81.21)), float(-775.102), bool(true)))) / 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0))), clamp(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, max((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) * 1.0), 1.0, 0.0)))))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8852.4668))), 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x))) / 1.0), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-775.102, (_GLF_IDENTITY(-775.102, mix(float(_GLF_FUZZED(81.21)), float(-775.102), bool(true)))) / 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, determinant(mat2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0), 0.0, 0.0)), 1.0, 1.0, 0.0)))))))))) / 1.0) > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(135.610)), bool(false))))), float(_GLF_FUZZED(-5.1)), bool(false)))))) / 1.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x) - 0.0))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6)))))))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), float(_GLF_FUZZED(-5.1)), bool(false)))))) / 1.0) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-454.138)), vec2(_GLF_FUZZED(float(8710)), (injectionSwitch)[1]), bvec2(false, true))), 0.0, 1.0, log(1.0), 1.0, 1.0, 1.0))).x) - 0.0))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6)))))))) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), float(_GLF_FUZZED(-5.1)), bool(false)))))) / 1.0) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sin(0.0)))), (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, _GLF_IDENTITY((gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) >> 0u)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_WorkGroupID.x), min((gl_WorkGroupID.x), (gl_WorkGroupID.x)))), 0u | (uint((gl_WorkGroupID.x)))))))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), uint(uvec2(uint((gl_WorkGroupID.x)), 0u)))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x))))), (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))).x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(gl_WorkGroupID.x)))))) * 1u)))) | (~ (_GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (_GLF_IDENTITY(uint((gl_WorkGroupID.x)), (uint((gl_WorkGroupID.x))) << 0u)) ^ 0u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)) - 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) >> uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), 0u, 0u)) << uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), max(_GLF_IDENTITY(~ (gl_WorkGroupID), max(~ (gl_WorkGroupID), ~ (gl_WorkGroupID))), ~ (gl_WorkGroupID))))))))).x) * 1u)) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)))), 0.0), vec4(mat2(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), max(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), 0.0))))))), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(1u, _GLF_struct_0(mat2(1.0), bvec4(true), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(64.63)), float(1.0), bool(true)))), 1u), _GLF_struct_1(vec3(1.0), 1, vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, cos(0.0), 0.0, sqrt(1.0), length(vec3(0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), uvec4(1u)), _GLF_IDENTITY(vec4(1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0))), mat4x2(1.0), _GLF_struct_2(mat3x2(1.0), ivec3(1), uvec3(1u), mat3x2(1.0), 1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | 0u))))), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(22513))), bool(false)))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((true ? (subgroup_size) : _GLF_FUZZED(122733u)), (false ? _GLF_FUZZED(mix((subgroup_id ++), workgroup_id, false)) : (true ? (subgroup_size) : _GLF_FUZZED(122733u)))), clamp((_GLF_IDENTITY(true, ! (! (true))) ? (subgroup_size) : _GLF_FUZZED(122733u)), (true ? (subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(122733u), (true ? _GLF_FUZZED(122733u) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) : _GLF_FUZZED(122733u), ~ (~ (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) >> 0u)) : _GLF_FUZZED(122733u), max(_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(122733u), uint(uvec4(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec4((subgroup_size), 0u, _GLF_IDENTITY(1u, 0u + (1u)), 1u)), (uint(uvec4((subgroup_size), 0u, _GLF_IDENTITY(1u, 0u + (1u)), 1u))) << 0u)) : _GLF_FUZZED(num_workgroup))))) : _GLF_FUZZED(_GLF_IDENTITY(122733u, _GLF_IDENTITY(uint(uvec2(122733u, 0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(122733u, 0u)), min(uint(uvec2(122733u, 0u)), uint(uvec2(122733u, 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(122733u, 0u)), min(uint(uvec2(_GLF_IDENTITY(122733u, (_GLF_IDENTITY(122733u, ~ (~ (122733u)))) | 0u), 0u)), uint(uvec2(122733u, 0u))))), ((_GLF_IDENTITY(uint(uvec2(122733u, 0u)), min(uint(uvec2(122733u, 0u)), uint(uvec2(122733u, 0u)))))) - 0u), (_GLF_IDENTITY(uint(uvec2(122733u, 0u)), min(uint(uvec2(122733u, 0u)), uint(uvec2(122733u, 0u))))), (_GLF_IDENTITY(uint(uvec2(122733u, 0u)), min(uint(uvec2(122733u, 0u)), uint(uvec2(122733u, 0u)))))))))), 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), true ? (subgroup_size) : _GLF_FUZZED(122733u)))))))))), clamp((subgroup_size), (subgroup_size), (subgroup_size))) + (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) & uint(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(122733u))), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)))) : _GLF_FUZZED(122733u))), clamp((subgroup_size), (subgroup_size), (subgroup_size))))) + (0u & uint(true))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (true ? (subgroup_size) : _GLF_FUZZED(122733u))), clamp((subgroup_size), (subgroup_size), (subgroup_size))) + (0u & uint(true))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)) : _GLF_FUZZED(4.3))), abs(1.0), 1.0, sqrt(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(181.411))), _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))), 1.0), mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) : _GLF_FUZZED(4.3))), abs(1.0), 1.0, sqrt(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)) : _GLF_FUZZED(4.3))), abs(1.0), 1.0, sqrt(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), vec4(0.0, 0.0, 1.0, 1.0))), 1.0)))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) || ((! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))))) / 1u))) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u, (0u ^ 0u) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1)))) / 1u))) % subgroup_size))) / 1u))))) ^ 0u));
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_IDENTITY(false, ! (! (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))))), true && (bool((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)) + ivec3(0, 0, 0))))), 4, 64, 4);
 if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u), (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id % 2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2, uint(uint(subgroup_local_id % 2)))) >> 0u)), uint(uvec2(~ (subgroup_local_id % 2), 0u))))) : _GLF_FUZZED((num_workgroup % 64841u))))) / 1u)) | (_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2) / 1u, (_GLF_IDENTITY((subgroup_local_id % 2) / 1u, (_GLF_IDENTITY((subgroup_local_id % 2) / 1u, max((subgroup_local_id % 2) / 1u, (subgroup_local_id % 2) / 1u))) << 0u)) | ((subgroup_local_id % 2) / 1u)))))) == 0, true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)) / 1u), (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)))) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)) / 1u), (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)))) == 0), true && (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))) / 1u)) / 1u), (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) / 1u)) | (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)))) == 0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), true, false, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(vec2(768.752, 2.2))))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(vec2(768.752, 2.2))))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(vec2(768.752, 2.2))))), injectionSwitch)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-77.87)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), sqrt(1.0), 0.0, 0.0, 1.0)), 1.0, abs(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), mat4x3(mat4(mat3(1.0) * (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0)), 0.0, 1.0)), 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (_GLF_IDENTITY(~ ((virtual_gid) / 1u), (_GLF_IDENTITY(~ ((virtual_gid) / 1u), _GLF_IDENTITY(0u, 0u | (0u)) ^ (~ ((virtual_gid) / 1u)))) - 0u))))), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) / 1u, ((virtual_gid) / 1u) * 1u), ~ (_GLF_IDENTITY(~ ((virtual_gid) / 1u), (_GLF_IDENTITY(~ ((virtual_gid) / 1u), 0u ^ (~ ((virtual_gid) / 1u)))) - 0u)))))) << _GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))]) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u), (_GLF_IDENTITY((buf[virtual_gid]) << 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(163066u, (163066u) ^ 0u), 152211u, 118446u).p) : (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) + 0u, ((virtual_gid) + 0u) * 1u))]) << 0u, min(false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(163066u, (163066u) ^ 0u), 152211u, 118446u).p) : (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) + 0u, ((virtual_gid) + 0u) * 1u))]) << 0u, false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(163066u, (163066u) ^ 0u), 152211u, 118446u).p) : (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) + 0u, ((virtual_gid) + 0u) * 1u))]) << 0u))))) >> 0u), clamp(_GLF_IDENTITY((buf[virtual_gid]) << 0u, (_GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(163066u, 152211u, 118446u).p), 0u | (_GLF_FUZZED(uvec3(163066u, 152211u, 118446u).p))) : _GLF_IDENTITY((buf[virtual_gid]), (true ? _GLF_IDENTITY((buf[virtual_gid]), _GLF_IDENTITY(~ (~ ((buf[virtual_gid]))), (~ (~ ((buf[virtual_gid])))) | 0u)) : _GLF_FUZZED((subgroup_local_id ++)))) << 0u))) >> 0u), _GLF_IDENTITY((buf[virtual_gid]) << 0u, (_GLF_IDENTITY((buf[virtual_gid]) << 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u), ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, _GLF_IDENTITY(152211u, max(_GLF_IDENTITY(152211u, ~ (~ (152211u))), 152211u)), 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : _GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(165270u) : (buf[virtual_gid]) << 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, _GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, uint(uvec2(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (uvec3(163066u, 152211u, 118446u).p))), uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)), 1u))), uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u)))))) : _GLF_FUZZED(workgroup_id), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, _GLF_IDENTITY(118446u, min(118446u, _GLF_IDENTITY(118446u, uint(uvec3(118446u, 0u, 0u)))))).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u), ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, _GLF_IDENTITY(152211u, max(_GLF_IDENTITY(152211u, ~ (~ (152211u))), 152211u)), 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : _GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(165270u) : (buf[virtual_gid]) << 0u)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(_GLF_IDENTITY(163066u, (163066u) << 0u), 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u)))))) : _GLF_FUZZED(workgroup_id), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u), (uvec3(163066u, 152211u, 118446u)) >> uvec3(0u, 0u, 0u)).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, _GLF_IDENTITY(118446u, min(_GLF_IDENTITY(118446u, (118446u) | (118446u)), 118446u))).p)))))) : (buf[virtual_gid]) << 0u), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, _GLF_IDENTITY(152211u, max(_GLF_IDENTITY(152211u, ~ (~ (152211u))), 152211u)), 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : _GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(165270u) : (buf[virtual_gid]) << 0u))), 0u + ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, _GLF_IDENTITY(152211u, max(_GLF_IDENTITY(152211u, ~ (~ (152211u))), 152211u)), 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : _GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(165270u) : (buf[virtual_gid]) << 0u)))))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, min(uvec3(163066u, 152211u, 118446u).p, _GLF_IDENTITY(uvec3(163066u, 152211u, 118446u).p, min(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))), clamp(uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p, uvec3(163066u, 152211u, 118446u).p)))))) : (buf[virtual_gid]) << 0u)))))) : _GLF_FUZZED(workgroup_id))))))) >> 0u), _GLF_IDENTITY((buf[virtual_gid]) << 0u, (_GLF_IDENTITY((buf[virtual_gid]) << 0u, (false ? _GLF_FUZZED(uvec3(163066u, 152211u, 118446u).p) : (buf[virtual_gid]) << 0u))) >> 0u)))))), 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), false || ((false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY((false), false || ((false))))), false), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY((false), false || ((false))))), false), true, false)))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) | _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, _GLF_IDENTITY(1u, (1u) + 0u), 1u))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), clamp((64), (64), (64)))), 4);
 if(_GLF_DEAD(false))
  barrier();
}
