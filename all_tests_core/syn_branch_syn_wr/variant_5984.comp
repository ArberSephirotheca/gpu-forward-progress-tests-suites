#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat3(1.0) * (mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-8.2, -33.79, 4855.1714, 8.5, -74.40, 410.692)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-29.69)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(35.37)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(35.37)), float(injectionSwitch.y), bool(true))) - 0.0))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))), false)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(float(mat2x4(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0)), float(vec3(float(mat2x4(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)))))))))))), ((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(false, (false) || false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(float(mat2x4(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0)), float(vec3(float(mat2x4(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)))))))))))), ((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(false, (false) || false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0), (mat2x3(_GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0)), mix(float(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(49.97)), bool(false))), 0.0, 1.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(float(mat2x4(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0)), float(vec3(float(mat2x4(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 0.0))), injectionSwitch.y)))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)))))))))))), ((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(false, (false) || false))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true))))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), true))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), bvec2(bvec2(bvec2(false, false)))), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, _GLF_IDENTITY(true, (true) || false)))))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, false))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, false))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, false))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, false))), false))))), true)))), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), false, false)))))))))), false, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, true))))), false, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))))))))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec3(bvec3(bvec2(false, true), false)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.3))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))), (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))) || false)))))), false, false)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), false))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), max(~ (uint(1)), ~ (uint(1)))))), uint(1), uint(1))), uint(1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((64)), min(((64)), _GLF_IDENTITY(((64)), int(int((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), 0 ^ ((64)))) - 0))))))), max(_GLF_IDENTITY(((64)), (36061 & 0) | (((64)))), ((64)))))) ^ 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (4)))), _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, int(ivec3(64, 0, 0))), _GLF_IDENTITY(64, ~ (~ (64))), 64)) : _GLF_FUZZED(-14547))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), sqrt(0.0))), 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.8, (_GLF_IDENTITY(5.8, (5.8) + 0.0)) * 1.0))), float(injectionSwitch.x), bool(true))), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.3)), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250)))).x, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY((61.11 / -49.10), ((61.11 / -49.10)) - 0.0))), bool(false)))))), 0.0, 0.0))))) > injectionSwitch.y))) && true))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0), (mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat4(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0), (mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), 0.0)), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0), (mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat4(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0), (mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0), (mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat4(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0), (mat3x2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(1.0))), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), 0.0)))), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) * vec2(1.0, 1.0)))).x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250)))))).x, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((61.11 / -49.10))), bool(false)))))), 0.0, 0.0))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.9, 170.250)))))).x, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((61.11 / -49.10))), bool(false)))))), 0.0, 0.0))))) > injectionSwitch.y))))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(0.0, 0.0, 1.0))), 0.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3(injectionSwitch, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9920.8704))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-2.2) : dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0)), (false ? _GLF_FUZZED(mat4x3(6.5, -616.032, -79.80, -72.18, 3.6, -640.112, -5.7, -736.132, -2.8, -296.825, 476.330, 1106.7134)) : mat3(1.0) * (mat4x3(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0), mat4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat4(-7089.7957, -53.13, 99.77, -2.0, -1829.7392, -4146.0569, 89.35, -4.4, 6.3, -0.0, -6540.4262, -8171.7444, 3.8, -5013.0387, 365.407, -96.15)) : mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), mat4(1.0) * (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.7)), float(0.0), bool(true))), 0.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))))))).x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
