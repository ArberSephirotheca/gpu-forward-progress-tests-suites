#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) : _GLF_FUZZED(-93.99))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.x)) < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-36.38), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], mix(float(_GLF_FUZZED(2287.5073)), float((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2((max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], _GLF_FUZZED(1850.6721)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0))))), vec2(0.0, 0.0) + (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))))))))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.9) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false, true), true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false, true), true))))))), true, true, false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true), true))))), bool(bvec4(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false)))) || false), false, true), true))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(uint(22696)) : _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec3(bvec3(bool(false), true, false)))), true))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, false || (false)))))), ! (! (false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, false || (false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4099.6771) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 9.9))), bool(false))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(floatBitsToUint(-3.5)) : workgroup_id)), clamp(workgroup_id, workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(mat2(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.6), min(_GLF_FUZZED(7.6), _GLF_FUZZED(7.6)))), float(0.0), bool(true))), 0.0)))).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.4)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(7.4)), max(float(_GLF_FUZZED(7.4)), float(_GLF_FUZZED(7.4)))), float(_GLF_FUZZED(7.4)), _GLF_IDENTITY(float(_GLF_FUZZED(7.4)), clamp(float(_GLF_FUZZED(7.4)), float(_GLF_FUZZED(7.4)), float(_GLF_FUZZED(7.4)))))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.6, (7.6) / 1.0))), float(0.0), bool(true))), 0.0)))).y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false)))))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-44.43))) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))))), _GLF_IDENTITY(false, true && (false)), false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))))), true, true))), _GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), 0.0 + (true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))))), _GLF_IDENTITY(false, true && (false)), false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))), _GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), mix(float(uintBitsToFloat(subgroup_base)), float(_GLF_FUZZED(8712.5095)), bool(false)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false)))), false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), _GLF_IDENTITY(float(vec2(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 1.0)), 1.0 * (float(vec2(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))))))), _GLF_IDENTITY(false, true && (false)), false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))))))))), _GLF_IDENTITY(false, true && (false)), false, false)))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0 * (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))), float(_GLF_FUZZED(-0.3)), bool(false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0 * (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))), float(_GLF_FUZZED(-0.3)), bool(false))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0 * (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))), float(_GLF_FUZZED(-0.3)), bool(false))))))))))), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0 * (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))), float(_GLF_FUZZED(-0.3)), bool(false))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0 * (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), mix(float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))))), float(_GLF_FUZZED(-0.3)), bool(false))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && (false)), false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), float(mat4x3(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), abs(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, _GLF_IDENTITY(log(1.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(log(1.0), max(log(1.0), _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(9.8)), bool(false))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-716.719) : 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, sqrt(1.0), 1.0, 0.0), (mat4x3(_GLF_IDENTITY(log(1.0), max(log(1.0), _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(9.8)), bool(false))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-716.719) : 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, sqrt(1.0), 1.0, 0.0)) * mat4(1.0)))), 0.0, 0.0)), clamp(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)))), 1.0, 1.0, 1.0, tan(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), float(mat4x3(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), abs(0.0), exp(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), clamp(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)))), 1.0, 1.0, 1.0, tan(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), float(mat4x3(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), abs(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))), 0.0, _GLF_IDENTITY(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), clamp(determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)), determinant(mat2(0.0, log(1.0), 0.0, 0.0)))), 1.0, 1.0, 1.0, tan(0.0), cos(0.0), 0.0, 0.0, 1.0, 0.0)))), max(float(mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-9447.7632)), float(float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))), bool(true)))) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.3) : _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(_GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_base))))), float(mat4x3(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), abs(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat2(0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), cos(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.7)), float(0.0), bool(true)))) / 1.0), 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), float(mat4x3(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), abs(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat2(0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0))))))))))), _GLF_IDENTITY(false, true && (false)), false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(subgroup_base)), (false ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(subgroup_base)), clamp(_GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), _GLF_IDENTITY((max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), min(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY((max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), mix(float(_GLF_FUZZED(92.08)), float(uintBitsToFloat(subgroup_base)), bool(true)))), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), float(mat2((max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0, 1.0, 0.0))), 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY((max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), float(mat2((max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), float(_GLF_IDENTITY(mat2x3(max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2x3(max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), 1.0, 0.0, 0.0, 1.0, 1.0), (mat2x3(max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), _GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base))), 1.0, 0.0, 0.0, 1.0, 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))), true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), 1.0, 1.0, 0.0))), 0.0, 0.0))))) - 0.0))))))), _GLF_IDENTITY(false, true && (false)), false, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), min(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), mix(float(_GLF_FUZZED((float(false)))), float(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), 0.0 + (uintBitsToFloat(subgroup_base)))), bool(true)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(950.940) : clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), (true ? true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)) : _GLF_FUZZED(8.4))))))))))))))), _GLF_IDENTITY(false, true && (false)), false, false))), false || (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), mix(float(_GLF_FUZZED((float(false)))), float(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), 0.0 + (uintBitsToFloat(subgroup_base)))), bool(true)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), (true ? true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(subgroup_base)), 0.0 + (_GLF_FUZZED(uintBitsToFloat(subgroup_base)))) : _GLF_FUZZED(8.4))))))))))))))), _GLF_IDENTITY(false, true && (false)), false, false))), true && ((bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), mix(float(_GLF_FUZZED((float(false)))), float(_GLF_IDENTITY(uintBitsToFloat(subgroup_base), 0.0 + (uintBitsToFloat(subgroup_base)))), bool(true)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), max(true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), true ? injectionSwitch.y : _GLF_FUZZED(uintBitsToFloat(subgroup_base)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)), (true ? true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(uintBitsToFloat(subgroup_base)) : _GLF_FUZZED(8.4))))))))))))))), _GLF_IDENTITY(false, true && (false)), false, false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), true, false, false)))) || false)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-96.53)), bool(false))) > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, (false ? _GLF_FUZZED(packSnorm4x8(normalize(vec4(-1.0, -4.8, -875.195, -73.04)))) : _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, max((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)) ^ 0u, _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) >> 0u) ^ 0u))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size);
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), _GLF_IDENTITY((bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false, true))) || false, ! (! ((bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true, true, true))), false, true))) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)))), clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u), next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709)))), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709)))), bool(false)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709)))), bool(false)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709)))), bool(false)))), false, true, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709)))), bool(false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709))), (_GLF_IDENTITY(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709))), float(mat3(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0)), bool(false)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((- (false ? -4980.3667 : -5259.9709)))), bool(false))))))))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), float(_GLF_IDENTITY(vec2(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), 1.0), min(vec2(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), 1.0), _GLF_IDENTITY(vec2(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), 1.0), clamp(vec2(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), 1.0), vec2(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), 1.0), vec2(mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)), 1.0)))))))))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false))))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) || false))))) ? -4980.3667 : -5259.9709)))))))), bool(false))))))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(_GLF_IDENTITY((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? _GLF_IDENTITY(-4980.3667, (-4980.3667) * 1.0) : -5259.9709)), false ? -4980.3667 : -5259.9709)))), 0.0 + ((- (_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, max(_GLF_IDENTITY(false ? -4980.3667 : -5259.9709, 1.0 * (false ? -4980.3667 : -5259.9709)), false ? -4980.3667 : -5259.9709)))))))), bool(false)))))))) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id % 2, 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)), false || (bool(bvec3(false, true, true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.2)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), ! (! (true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || false)));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch)).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(435.271) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(435.271) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y)) ? _GLF_FUZZED(435.271) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(435.271) : injectionSwitch.x)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
