#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8337.2443), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-7.1 - _GLF_IDENTITY((6515.8393 / 2187.0489), mix(float((6515.8393 / 2187.0489)), float(_GLF_FUZZED(8105.0763)), bool(false)))))), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))), false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, false))))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, min(_GLF_IDENTITY((subgroup_size) << 0u, min((subgroup_size) << 0u, (subgroup_size) << 0u)), (subgroup_size) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, min(_GLF_IDENTITY((subgroup_size) << 0u, min((subgroup_size) << 0u, (subgroup_size) << 0u)), (subgroup_size) << 0u))), (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, min(_GLF_IDENTITY((subgroup_size) << 0u, min((subgroup_size) << 0u, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), (subgroup_size) << 0u))) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, min(_GLF_IDENTITY((subgroup_size) << 0u, _GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u)) | uvec2(0u, 0u))) ^ uvec2(0u, 0u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u)) | uvec2(0u, 0u))) ^ uvec2(0u, 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u)) | uvec2(0u, 0u))) ^ uvec2(0u, 0u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u)) | uvec2(0u, 0u))) ^ uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u), (uvec2(_GLF_IDENTITY(min((subgroup_size) << 0u, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min((subgroup_size) << 0u, (subgroup_size) << 0u) : _GLF_FUZZED(subgroup_id))), 0u)) | uvec2(0u, 0u))) ^ uvec2(0u, 0u))))))))), (subgroup_size) << 0u)))))), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ~ (~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))))));
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, 1.0, 1.0), (true ? vec4(injectionSwitch.x, 1.0, 1.0, 1.0) : _GLF_FUZZED(vec4(58.49, -2.8, 2986.6669, -7.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.3) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)), mix(float(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), float(_GLF_FUZZED(-8.7)), bool(false)))), min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, sin(0.0), 1.0))) * (1.0)), abs(1.0), 0.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * _GLF_IDENTITY((0.0), float(mat2((0.0), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))), (1.0 * (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))), max(float(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), float(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))))) * 1.0))), 0.0)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)) ? float(mat2x3(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(abs(1.0), (abs(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)))) - 0.0), 0.0, cos(0.0), 0.0)) : _GLF_FUZZED(6.5))))) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(71.88)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0)))))), max(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(71.88)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(71.88)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0)))))), mix(vec2(_GLF_FUZZED(-377.698), _GLF_FUZZED(9483.3700)), vec2((vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(71.88)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0)))))))[0], (vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(71.88)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0)))))))[1]), bvec2(true, true)))))).x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0, cos(0.0), 0.0)), (true ? float(mat2x3(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(sinh(46.64)) : _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(-97.44) : _GLF_IDENTITY(abs(1.0), float(mat3x4(abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), 0.0, cos(0.0), 0.0)) : _GLF_FUZZED(6.5))))) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(1.0), 0.0, cos(0.0), 0.0)), (true ? float(mat2x3(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(5.2))), max(_GLF_IDENTITY((1.0), ((1.0)) / abs(1.0)), (1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-3.9)))), max(_GLF_IDENTITY((1.0), ((1.0)) / abs(1.0)), (1.0))), (false ? _GLF_FUZZED(3.8) : _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), ((1.0)) / abs(1.0)), (1.0)))))) - 0.0)), abs(1.0), 0.0, cos(0.0), 0.0)) : _GLF_FUZZED(6.5))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - length(0.0))) - 0.0, 0.0 + ((injectionSwitch.x) - 0.0))), injectionSwitch.x))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-82.16)), float(0.0), bool(true))), 0.0, 1.0))) * (-6.3)), _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(abs(1.0), 1.0 * (abs(1.0))), 0.0, cos(0.0), 0.0)), (true ? float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0)))), float(float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, sin(0.0), 0.0))) * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0)))))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * _GLF_IDENTITY((-6.3), max((-6.3), (-6.3)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), clamp(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(_GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, float(vec3(1.7, 1.0, 1.0)))) / 1.0)))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * _GLF_IDENTITY((-6.3), float(mat2x3((-6.3), 1.0, sqrt(1.0), 1.0, 1.0, tan(0.0))))), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0)))), float(float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY((true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(-6.3, 1.0 * (_GLF_IDENTITY(-6.3, min(-6.3, -6.3)))) : _GLF_FUZZED(1.7)), float(mat3x4((true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7)), _GLF_IDENTITY((true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7)), (false ? _GLF_FUZZED(2972.2553) : (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))))))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-85.04, -54.63, -664.917, -9.3, -7.8, -6.2)) : mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-85.04, -54.63, -664.917, -9.3, -7.8, -6.2)) : mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-85.04, -54.63, -664.917, -9.3, -7.8, -6.2)) : mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0)))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-85.04, -54.63, -664.917, -9.3, -7.8, -6.2)) : mat3x2(_GLF_IDENTITY(-6.3, _GLF_IDENTITY(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), float(mat4x3(float(mat2x3(-6.3, 1.0, 0.0, tan(0.0), 1.0, exp(0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec4(cos(0.0), 0.0, 0.0, 1.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 0.0))))))), 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(3.5)), float(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-86.51)), min(float(_GLF_FUZZED(-86.51)), float(_GLF_FUZZED(-86.51)))), float(1.0), bool(true))), 1.0)) * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_IDENTITY(_GLF_FUZZED(1.7), clamp(_GLF_IDENTITY(_GLF_FUZZED(1.7), max(_GLF_FUZZED(1.7), _GLF_FUZZED(1.7))), _GLF_FUZZED(1.7), _GLF_FUZZED(1.7))))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) * 1.0)), 0.0, sin(0.0), 0.0)))), float(float(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, 1.0 * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), max(_GLF_IDENTITY(_GLF_IDENTITY(-6.3, 1.0 * (-6.3)), (true ? _GLF_IDENTITY(-6.3, 1.0 * (-6.3)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(-6.3, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (-6.3)))), 0.0, log(1.0), 0.0, sin(0.0), 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 1.0))), bool(true)))), _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))), (1.0)))), abs(1.0), 0.0, cos(0.0), 0.0)) : _GLF_FUZZED(6.5))))) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2113.2954)))) - 0.0)))), injectionSwitch.x), clamp(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) - 0.0), injectionSwitch.x), _GLF_IDENTITY((true ? min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(70.04, (_GLF_IDENTITY(70.04, min(_GLF_IDENTITY(70.04, (true ? 70.04 : _GLF_FUZZED(682.123))), _GLF_IDENTITY(70.04, float(float(70.04)))))) + 0.0)), mix(float(_GLF_FUZZED((81.60 / 5.8))), float(_GLF_FUZZED(70.04)), bool(true)))), max((true ? min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x) : _GLF_IDENTITY(_GLF_FUZZED(70.04), mix(float(_GLF_FUZZED((81.60 / 5.8))), float(_GLF_FUZZED(70.04)), bool(true)))), (true ? min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x) : _GLF_IDENTITY(_GLF_FUZZED(70.04), mix(float(_GLF_FUZZED(_GLF_IDENTITY((81.60 / 5.8), float(_GLF_IDENTITY(mat3x2((81.60 / 5.8), 0.0, sqrt(0.0), 0.0, 1.0, 0.0), (true ? mat3x2((81.60 / 5.8), 0.0, sqrt(0.0), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(5.2, 1.1, 411.581, -353.521, 7780.1346, -0.0)))))))), float(_GLF_FUZZED(70.04)), bool(true))))))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))))))) * exp(0.0))), float(vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mat3(1.0) * (vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3088.2148)), float(1.0), bool(true))), 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3088.2148)), float(1.0), bool(true))), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3088.2148)), float(1.0), bool(true))), 1.0, 1.0))))))), vec3(0.0, 0.0, 1.0)))), dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) / exp(vec3(0.0, 0.0, 0.0)))) + _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? (vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)) : _GLF_FUZZED(vec3(-9.4, 3191.1535, 2.7))))), vec3(0.0, 0.0, 1.0))), 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((448.467 / -1.3))), float(0.0), bool(true))), (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((448.467 / -1.3))), float(0.0), bool(true))) : _GLF_FUZZED(-1931.7461)))))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, true && ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))) == 0, ! (! ((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(31.15) : 0.0))) * 1.0)), float(_GLF_FUZZED((-0.4))), bool(false))), injectionSwitch.x))) | ((subgroup_local_id % 2))) >> 0u), subgroup_local_id % 2, subgroup_local_id % 2))) == 0))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? virtual_gid : _GLF_FUZZED(max(read, subgroup_local_id)))), (false ? _GLF_FUZZED(num_workgroup) : virtual_gid)))), virtual_gid))], 4, 64, 2);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(5.0)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(4290.4394, 7.8, 465.730, -9.6).s)), bool(false))) > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), bvec2(true, false))).y, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-39.74)), max((true ? 1.0 : _GLF_FUZZED(-39.74)), (true ? 1.0 : _GLF_FUZZED(-39.74))))), cos(0.0))) * mat4(1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(2.6)), bvec2(true, false))).y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))))), cos(0.0))) * mat4(1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((7.9 - -6205.2155)) : float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_FUZZED(2.6)), bvec2(true, false))).y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))))), cos(0.0))) * mat4(1.0))))), _GLF_IDENTITY((float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(2.6, max(2.6, 2.6)))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))))).y, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), cos(0.0))) * mat4(1.0)))) + 0.0, clamp((float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[_GLF_IDENTITY(1, int(int(1)))]), vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))))[0], _GLF_FUZZED(_GLF_IDENTITY(2.6, max(2.6, 2.6)))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false))))))).y, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), cos(0.0))) * mat4(1.0)))) + 0.0, (float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(2.6, max(2.6, 2.6)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), true, false))))))))).y, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), cos(0.0))) * mat4(1.0)))) + 0.0, (float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), (vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(2.6, max(2.6, 2.6)))), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))), true, false)))))).y, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-39.74))), cos(0.0))) * mat4(1.0)))) + 0.0)))), float(_GLF_FUZZED(-9.5)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(92882) : 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.3, -8612.2611)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
