#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((4.8 - 82.35))), vec2(_GLF_FUZZED(-0.6), (injectionSwitch)[1]), bvec2(false, true))).y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec2(bool(bvec4(false, true, true, true)), true)))) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(85.12, 0.3, -3.9)) : 1.0))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, abs(tan(0.0)) + (_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((float(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) * (+ -5.2)))), vec2(_GLF_FUZZED(-277.049), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - sqrt(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-5.4), clamp(_GLF_FUZZED(-5.4), _GLF_IDENTITY(_GLF_FUZZED(-5.4), mix(float(_GLF_FUZZED(-5.4)), float(_GLF_FUZZED(726.409)), bool(false))), _GLF_FUZZED(-5.4)))), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true))))))))) : _GLF_FUZZED(vec2(-53.83, -8109.5654)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))))).y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-5.4, min(_GLF_IDENTITY(-5.4, (-5.4) - 0.0), -5.4)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9706.8647), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]))))), clamp((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]))))), (true ? (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) / 1)]))))) : _GLF_FUZZED(injectionSwitch)))))[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-9706.8647), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[1]))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, length(0.0), abs(1.0)))))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5.4), min(_GLF_IDENTITY(_GLF_FUZZED(-5.4), clamp(_GLF_FUZZED(-5.4), _GLF_FUZZED(-5.4), _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_FUZZED(-5.4), (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(_GLF_FUZZED(-5.4), (false ? _GLF_FUZZED(-7.6) : _GLF_FUZZED(-5.4))))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-5.4), clamp(_GLF_FUZZED(-5.4), _GLF_FUZZED(-5.4), _GLF_IDENTITY(_GLF_FUZZED(-5.4), (true ? _GLF_FUZZED(-5.4) : _GLF_FUZZED(-9.2))))), _GLF_IDENTITY(_GLF_FUZZED(-5.4), (_GLF_FUZZED(-5.4)) - 0.0), _GLF_FUZZED(-5.4)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), _GLF_IDENTITY((vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1])), (false ? _GLF_FUZZED(injectionSwitch) : (vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1])))) + tan(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.6)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(false, true))) : _GLF_FUZZED(vec2(-53.83, -8109.5654)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.4)), vec2(_GLF_FUZZED(-9706.8647), (injectionSwitch)[1]), bvec2(false, true))))).y))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 1u)), clamp(uint(uvec2(gl_WorkGroupID.x, 1u)), uint(uvec2(gl_WorkGroupID.x, 1u)), uint(uvec2(gl_WorkGroupID.x, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true ? workgroup_base + subgroup_base : _GLF_FUZZED(virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : true ? workgroup_base + subgroup_base : _GLF_FUZZED(virtual_gid))))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((false ? _GLF_FUZZED((~ _GLF_IDENTITY(44516u, uint(uvec2(44516u, 0u))))) : (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED((~ 44516u)) : (subgroup_local_id + 1)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((~ 44516u)) : (subgroup_local_id + 1)), ((false ? _GLF_FUZZED((~ 44516u)) : (subgroup_local_id + 1))) * 1u) : _GLF_FUZZED(workgroup_base))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u))))) | (next_virtual_gid)), max(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), min(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) | (uint(next_virtual_gid)))))))), min((next_virtual_gid), (next_virtual_gid)))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), (uint(next_virtual_gid)) | (uint(next_virtual_gid)))))))), min((next_virtual_gid), (next_virtual_gid))))) / 1u)) << 0u)], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), uint(uvec3(~ (uint(1)), 0u, 0u))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(4.0)), mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(float(_GLF_FUZZED(4.0)), float(float(float(_GLF_FUZZED(4.0)))))), bool(true))), bool(false))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true)))) || false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), (0 | (2)) / 1))) == _GLF_IDENTITY(0, (0) * 1), true, true), bvec3(bvec3(bvec3((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), 0 ^ (0 | (_GLF_IDENTITY(2, min(2, 2))))))) == 0, true, true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) >> 0), 2)), 0 | (2))) == 0, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! _GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bvec2(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! _GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bvec2(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), false))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! _GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bvec2(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), false))))))), false, true, true)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! _GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bvec2(((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), false))))))), false, true, true)), false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, 2)), 0 | _GLF_IDENTITY((2), max((2), (2))))) == 0), bool(bool(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 0u + ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 0 | (2))))) == 0)))))), bool(bvec4(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) == 0)))))), false, true, true)))) || false), true, true)))))), (! (bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 ^ (1)) : _GLF_FUZZED((- 75661)))), int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))) == 0, true, true))))))) || false)))), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (2)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0), (ivec4(_GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), (_GLF_IDENTITY((2), ((2)) / 1)) - 0)), 0, 1, 0)) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0)), (true ? _GLF_IDENTITY((ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0)), max(_GLF_IDENTITY((ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0)), ((ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0))) | ((ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0)))), (ivec4(_GLF_IDENTITY(2, 0 | (2)), 0, 1, 0)))) : _GLF_FUZZED(findMSB((-9372 / ivec4(-50618, 42865, 828, 16311)))))))))) == 0, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) ^ 0u))) / (0u ^ 1u)) == 0, true, true), bvec3(bvec3(bvec3((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), 0 ^ (_GLF_IDENTITY(0 | (2), (_GLF_IDENTITY(0 | (2), 1 * (0 | (2)))) | (0 | (2))))))) == 0, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) ^ 0u))) / (0u ^ 1u)) == 0, true, true), bvec3(bvec3(bvec3((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), 0 ^ (_GLF_IDENTITY(0 | (2), (_GLF_IDENTITY(0 | (2), 1 * (0 | (2)))) | (0 | (2))))))) == 0, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) ^ 0u)), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) ^ 0u))) / (0u ^ 1u)) == 0, true, true), bvec3(bvec3(bvec3((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), 0 ^ (_GLF_IDENTITY(0 | (2), (_GLF_IDENTITY(0 | (2), 1 * (0 | (2)))) | (0 | (2))))))) == 0, true, true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0) && true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) - 0)))) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), false || (! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), ((2)) | ((2))))) == 0)))))))))), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) == 0), ((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) == 0)) || false))))))) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) - 0)))) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), false || (! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), ((2)) | ((2))))) == 0)))))))))), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) == 0), ((_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))), 0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) == 0)) || false))))))) || false), true, true), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) % _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(2, 0)))) | (2)), 0 | (2))) == 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0, ! (! ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (2)), (false ? _GLF_FUZZED(38849) : _GLF_IDENTITY(2, 0 | (2))))) == 0)))), bool(bool(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), clamp(0 | (2), 0 | (2), 0 | (2))))), ((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), clamp(0 | (_GLF_IDENTITY(2, ~ (~ (2)))), 0 | (2), 0 | (2)))))) | ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(0 | (2), clamp(0 | (2), 0 | (2), 0 | (2))))))) == 0)))))), (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), 0 | (2))) == 0, ! (_GLF_IDENTITY(! ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) / 1)))), _GLF_IDENTITY(0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)))), (0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) | (0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))))) == 0)), false || (bool(! (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (2) / 1)))), _GLF_IDENTITY(0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)))), (0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))) | (0u + ((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))))))) == 0))))))))) || false), true, true))))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)) | 0)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))))) == 0, true, true)))))), false || ((bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)) | 0)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))))) == 0, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)) | 0)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))))) == 0, true, true)))))), false || ((bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)) | 0)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))))) == 0, true, true))))))))), ! (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)) | 0)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))))) == 0, true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)) | 0)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))))) == 0, true, true))))))))), false || ((bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | 0)), max((2), (2))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), max(0 << _GLF_IDENTITY(int(6), int(6)), 0 << _GLF_IDENTITY(int(6), int(6))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))) == 0, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0))) | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | 0), 0)))) | 0)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), max(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))), ~ (~ (((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))))), ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0))))))))), (~ ((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))))) | (~ (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id % _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), int(ivec3((2), 0, (0 | 0)))))) : _GLF_FUZZED(subgroup_size)))))))) == 0, true, true))))))))))))))) || false))))) || _GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-20.73)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-20.73)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-20.73)), float(injectionSwitch.y), bool(true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) | 0));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), false, false, true)))), (false) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), bool(bvec4(bool(bvec3(false, false, false)), false, false, true)))), (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, true)))), ! (! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, true))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, true)))) || false))) || false))), false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || false)) && true))) && true))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), false, false, true)))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), false, false, true)))), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), false, false, true)))), (false) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (bool(bool(_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-78.40) : injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-80.81), _GLF_FUZZED(-761.271)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-78.40) : injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-78.40) : injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (true ? atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (1 & 1) * (4)), max(_GLF_IDENTITY(4, (1 & 1) * (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (1 & 1) * (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (1 & 1) * (4)), clamp(_GLF_IDENTITY(4, (1 & 1) * (4)), _GLF_IDENTITY(4, (1 & 1) * (4)), _GLF_IDENTITY(4, (1 & 1) * (4))))) ^ 0))), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), max((64), (64))))), 64)), 2) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) || false)) && true) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.0)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], _GLF_IDENTITY(read, (read) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) - 0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0)))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(412.596)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2438.1913)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-23.10) : injectionSwitch.x)) > injectionSwitch.y))))), ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(37.28) : float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.5)), bool(false))), 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(37.28), min(_GLF_IDENTITY(_GLF_FUZZED(37.28), float(mat3(_GLF_FUZZED(37.28), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_FUZZED(37.28))) : float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-387.562) : (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(37.28) : float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), float(_GLF_FUZZED(-3.8)), bool(false)))))), bool(_GLF_IDENTITY(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(37.28) : float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), false, true), bvec3(bvec4(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(37.28) : float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) - 0.0))), false, true), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
