#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 vec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 int _f0;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-63.18), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0)), vec4(vec4(vec4((injectionSwitch)[0], round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0))))))), _GLF_FUZZED(-8.6)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), (max(injectionSwitch[1], injectionSwitch[1])) - 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.3)), clamp(float(_GLF_FUZZED(8.3)), float(_GLF_FUZZED(8.3)), float(_GLF_FUZZED(8.3)))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), (_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y)))) - 0.0), bool(true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(uvec4(1u)), _GLF_struct_1(1), _GLF_struct_2(vec3(1.0), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-5.4)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)) | (_GLF_IDENTITY(clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize), (clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))).x);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))) / 1u), gl_WorkGroupID.x))) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, false || (false))))), true)), true && (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))))), bool(bvec4(false, true, true, false))), true)), true && (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), bool(bvec4(false, true, true, false)))) && true), true))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))))), true && _GLF_IDENTITY((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true)))))), ((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true))))))) || false)))) && true, true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))))), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true)))))), ((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true))))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true)))))), ((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true))))))) || false), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true)))))), ((bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), true))))), true, false))), _GLF_IDENTITY(true, ! (! (true))))))) || false), false, false, false)))))))) && true)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)), true && (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, true, false))), _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, true, false))), _GLF_IDENTITY(true, (true) || false)), true))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), true)))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), true))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), true))))), false)), false)))))), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))))), true && (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), false))))), true, false))), true)))))) && true)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)), true && (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), false, true))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), true, false)))) && true)), true, true, false))), true)), true && (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, true, false))), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))))), true && (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))), false))))), true, false))), true)))))) && true)) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size * workgroup_id, (_GLF_struct_replacement_4.workgroup_size * workgroup_id) - 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size, ~ (~ (_GLF_struct_replacement_4.workgroup_size))) * workgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size, ~ (~ (_GLF_struct_replacement_4.workgroup_size))) * workgroup_id)))));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u) : _GLF_FUZZED(99144u)))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) : _GLF_FUZZED(workgroup_base))), 1u, (7780u & 0u))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, max(3u, _GLF_IDENTITY(3u, (3u) >> 0u)))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) >> 0u) : _GLF_FUZZED(subgroup_base))))))))), 0u + (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u)))) - 0u), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))))))) | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))))) / 1u)) - (1u ^ 1u)), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(107368u) : subgroup_base)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(subgroup_id) : uint(8u))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (0u ^ 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u) + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (_GLF_IDENTITY(~ (uint(8u)), min(_GLF_IDENTITY(~ (uint(8u)), clamp(~ (uint(8u)), ~ (uint(8u)), ~ (uint(8u)))), ~ (uint(8u)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)) / 1u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (0u ^ 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u) + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (_GLF_IDENTITY(~ (uint(8u)), min(_GLF_IDENTITY(~ (uint(8u)), clamp(~ (uint(8u)), ~ (uint(8u)), ~ (uint(8u)))), ~ (uint(8u)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (0u ^ 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u) + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (_GLF_IDENTITY(~ (uint(8u)), min(_GLF_IDENTITY(~ (uint(8u)), clamp(~ (uint(8u)), ~ (uint(8u)), ~ (uint(8u)))), ~ (uint(8u)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)) / 1u) * (0u | 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (0u ^ 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u) + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))))))) | (workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (_GLF_IDENTITY(~ (uint(8u)), min(_GLF_IDENTITY(~ (uint(8u)), clamp(~ (uint(8u)), ~ (uint(8u)), ~ (uint(8u)))), ~ (uint(8u)))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))))) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u)) / 1u)));
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (64) ^ 0), 1, 1))), 64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-660.300) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) && true)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), vec2(vec4(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0))))) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), vec2(vec4(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), vec2(vec4(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), vec2(vec4(vec2(_GLF_IDENTITY(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), vec3(mat2x4(vec3(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))), 0.0, 0.0))))) * vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))) - vec2(0.0, 0.0))[1]) / 1.0)), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0)))))), bvec2(true, true)), mix(vec2(_GLF_FUZZED((538.919)), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0)))))), bvec2(true, true)))[1], float(_GLF_IDENTITY(mat3x4((mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0)))))), bvec2(true, true)))[1], 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0), (false ? _GLF_FUZZED(mat3x4(-1.9, 7.0, 891.745, -536.723, -4409.1103, -4.4, -323.581, -7991.1945, -8.9, -1783.6843, -35.34, -835.126)) : mat3x4((mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0)))))), bvec2(true, true)))[1], 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0)))))), vec2((mix(vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(18.93)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0, (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]) / 1.0)))))), bvec2(true, true)))[0], _GLF_FUZZED(-9.8)), bvec2(true, false))))) * mat2(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), max(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]))), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(float((28850 - 96339)))), bvec2(false, false))).x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) || false))))
      return;
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) - 0u), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), true, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), true, true))))))), (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), true, true)))))))) || false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), float(float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)))))))), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / exp(0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), clamp(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.4)), bool(false)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1799.1001))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3645.7618))))), 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), 1.0)), float(float(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0)))))))))), min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / exp(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / exp(0.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / exp(0.0)), 0.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / exp(0.0)), 0.0, sqrt(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec3(0.0, 0.0, 1.0))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(953.437))))), 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0))) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(504.679)), float(injectionSwitch.x), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.2))), sqrt(1.0), 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) / exp(_GLF_IDENTITY(0.0, 0.0 + (0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED((false ? 6.8 : -3460.7733))), float(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-8.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5467.0968) : injectionSwitch.y)))))))), bool(true))) / cos(0.0)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9301.4801), _GLF_FUZZED(25.88)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, sqrt(0.0))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
