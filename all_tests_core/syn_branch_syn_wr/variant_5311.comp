#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))), (_GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))), mix(vec2(_GLF_FUZZED(-975.584), _GLF_FUZZED(-67.70)), vec2(((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))[0], ((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) - vec2(0.0, 0.0)))) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat3(mat3x4(mat3(1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(clamp(vec2(4.2, -457.890), injectionSwitch, injectionSwitch)) : mat2(1.0) * (vec2(0.0, 0.0))))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat2x4(7.6, -242.601, -6.4, 670.717, -8.1, -7.8, 352.199, -8.9))))), clamp(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat2x4(7.6, -242.601, -6.4, 670.717, -8.1, -7.8, 352.199, -8.9))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat2x4(7.6, -242.601, -6.4, 670.717, -8.1, -7.8, 352.199, -8.9))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))), 0.0, 0.0, 0.0, determinant(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat2x4(7.6, -242.601, -6.4, 670.717, -8.1, -7.8, 352.199, -8.9)))))))))))) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0))), (clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(float(-4204)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-3.6)), bvec2(true, false))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : _GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0)))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat4x3((_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0)))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0)))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(9347.2156, -3019.2199)) : mat2(1.0) * (vec2(0.0, 0.0))))))))) * vec2(1.0, 1.0)))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))))), cos(0.0), 0.0)), clamp(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))))), cos(0.0), 0.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))))), cos(0.0), 0.0)), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))))), cos(0.0), 0.0))))), 1.0)), (_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-21.54, length(vec4(0.0, 0.0, 0.0, 0.0)) + (-21.54)))), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.0) : 1.0)), _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (1.0) / 1.0)))))), bool(true))), 1.0)), min(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.7) : 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))))), bool(true))), 1.0)), mix(float(_GLF_FUZZED(vec2(-6.8, 7396.6091).r)), float(float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(53.69)), bvec2(true, false))).y, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-21.54)), float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), bool(true))), 1.0))), bool(true)))))) + length(0.0))), true, false, true)))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) || false); _injected_loop_counter ++)
            {
             do
              {
               do
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bvec2(bool(bvec4(true, false, true, true)), true))))), true)))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
                    {
                     return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)), injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(287.628)), vec2(_GLF_FUZZED(-273.037), (injectionSwitch)[1]), bvec2(false, true))).y) - 0.0), injectionSwitch.y)), injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED((8.5 + 6.4))), bool(false))), injectionSwitch.y)), injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-73.79)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).y, (injectionSwitch.y) * 1.0), injectionSwitch.y) : _GLF_FUZZED(-614.325)))), injectionSwitch.y))))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) || (false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false)))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(4364.9706)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))) < injectionSwitch.y)), false, true)), false)))))))))))))), false || ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(4364.9706)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))) < injectionSwitch.y)), false, true)), false)))))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) || false) && (true))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-999.374)), bool(false))))), mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(9.2, min(9.2, 9.2))) : injectionSwitch.y), mix(float(_GLF_FUZZED(-39.89)), float((false ? _GLF_FUZZED(_GLF_IDENTITY(9.2, min(9.2, 9.2))) : injectionSwitch.y)), bool(true)))), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(9.2) : injectionSwitch.y, float(mat4(false ? _GLF_FUZZED(9.2) : injectionSwitch.y, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, cos(log(1.0)), 1.0, tan(0.0), 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0))))))))))))) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)))) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(9.2), clamp(_GLF_FUZZED(9.2), _GLF_IDENTITY(_GLF_FUZZED(9.2), min(_GLF_FUZZED(9.2), _GLF_FUZZED(9.2))), _GLF_FUZZED(9.2))) : injectionSwitch.y, (false ? _GLF_FUZZED(log2(ceil(5.9))) : false ? _GLF_IDENTITY(_GLF_FUZZED(9.2), clamp(_GLF_FUZZED(9.2), _GLF_IDENTITY(_GLF_FUZZED(9.2), min(_GLF_FUZZED(9.2), _GLF_FUZZED(9.2))), _GLF_FUZZED(9.2))) : injectionSwitch.y)))))))))))) < injectionSwitch.y)), true)))), false)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(9.2) : injectionSwitch.y), ((false ? _GLF_FUZZED(9.2) : injectionSwitch.y)) / 1.0)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(9.2) : injectionSwitch.y, mix(float(_GLF_FUZZED(-11.96)), float(false ? _GLF_FUZZED(9.2) : injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)))))))))) < injectionSwitch.y)), true)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(9.2) : injectionSwitch.y), ((false ? _GLF_FUZZED(9.2) : injectionSwitch.y)) / 1.0)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(9.2) : injectionSwitch.y, mix(float(_GLF_FUZZED(-11.96)), float(false ? _GLF_FUZZED(9.2) : injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)))))))))) < injectionSwitch.y)), true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(9.2) : injectionSwitch.y), ((false ? _GLF_FUZZED(9.2) : injectionSwitch.y)) / 1.0)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(9.2) : injectionSwitch.y, mix(float(_GLF_FUZZED(-11.96)), float(false ? _GLF_FUZZED(9.2) : injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-287.875)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)))))))))) < injectionSwitch.y)), true)))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))), (bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0))))))))) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && true)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false)), true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))), (bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0))))))))) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && true)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false)), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))), (bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0))))))))) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && true)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false)), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0))).y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y))), bool(bool((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x < injectionSwitch.y)))))))), (bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), mat3x2(mat3x4(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0))))))))) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true), false, true)), true, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && true)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), false)), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(max(-4.4, 8.9)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(true, true && (true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7809.6914)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)), 0.0 + (float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0)))))), bool(true))))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false, false))))))) && (false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.93), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((- -1706.2847))), bvec2(true, false))), injectionSwitch)).y)), bool(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.93), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((- -1706.2847))), bvec2(true, false))), injectionSwitch)).y)), false || (_GLF_IDENTITY(false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.93), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((- -1706.2847))), bvec2(true, false))), injectionSwitch)).y)), (false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.93), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((- -1706.2847))), bvec2(true, false))), injectionSwitch)).y))) || false))), false, true))))), true), false)), true))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED((-41.25 * 7.7)) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.5)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED((-41.25 * 7.7)) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)))))))))))) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), false, false))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u)) | ((gl_WorkGroupSize.x))) / 1u), gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), (_GLF_IDENTITY((workgroup_id) | (workgroup_id), max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id)))) ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id))))), 1u, 1u), (uvec3(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), ~ (_GLF_IDENTITY(~ ((workgroup_id) | (workgroup_id)), max(_GLF_IDENTITY(~ ((workgroup_id) | (workgroup_id)), (true ? ~ ((workgroup_id) | (workgroup_id)) : _GLF_FUZZED(_GLF_IDENTITY(145412u, clamp(145412u, 145412u, 145412u))))), ~ ((workgroup_id) | (workgroup_id)))))))), 1u, 1u)) << _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) - uvec3(0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))), 0u ^ (clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))), 1u, 1u), (uvec3(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) | (workgroup_id))), 1u, 1u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3.7)), bool(false)))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0u))), workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec4((true), false, false, true)))) && true) && _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false || ((true) && true), (false || ((true) && true)) || false))) ? subgroup_base : _GLF_FUZZED(174390u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) / 1u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(_GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> (0u & 88214u)) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), ~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((num_workgroup + workgroup_id))))) - 0u)), (_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_size)))) / 1u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(3u)), 0u + (uint(uint(3u))))), ~ (~ (3u))))) - 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))), uint(uint(uint(_GLF_IDENTITY(3u, 1u * (_GLF_IDENTITY(3u, max(3u, 3u))))))))), 1u, 0u), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), min(uint(uint(uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), clamp(uint(uint(uint(3u))), uint(uint(uint(3u))), uint(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) / 1u)))))))), 1u, 0u))), uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(3u)), clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))), (_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u))))) ^ 0u) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u))) | (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)))), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))), 0u | (uint(_GLF_IDENTITY(uint(uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), ~ (~ (clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))))) | (0u | 0u)))))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))) >> 0u))))))))) + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) / 1u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(_GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> (0u & 88214u)) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), ~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((num_workgroup + workgroup_id))))) - 0u)), (_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_size)))) / 1u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(3u)), 0u + (uint(uint(3u))))), ~ (~ (3u))))) - 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))), uint(uint(uint(_GLF_IDENTITY(3u, 1u * (_GLF_IDENTITY(3u, max(3u, 3u))))))))), 1u, 0u), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), min(uint(uint(uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), clamp(uint(uint(uint(3u))), uint(uint(uint(3u))), uint(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) / 1u)))))))), 1u, 0u))), uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(3u)), clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))), (_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u))))) ^ 0u) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u))) | (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)))), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))), 0u | (uint(_GLF_IDENTITY(uint(uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), ~ (~ (clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))))) | (0u | 0u)))))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))) >> 0u))))))))) + 1) % subgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) / 1u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(_GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> (0u & 88214u)) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), ~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((num_workgroup + workgroup_id))))) - 0u)), (_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_size)))) / 1u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(3u)), 0u + (uint(uint(3u))))), ~ (~ (3u))))) - 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))), uint(uint(uint(_GLF_IDENTITY(3u, 1u * (_GLF_IDENTITY(3u, max(3u, 3u))))))))), 1u, 0u), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), min(uint(uint(uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), clamp(uint(uint(uint(3u))), uint(uint(uint(3u))), uint(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) / 1u)))))))), 1u, 0u))), uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(3u)), clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))), (_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u))))) ^ 0u) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u))) | (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)))), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))), 0u | (uint(_GLF_IDENTITY(uint(uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), ~ (~ (clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))))) | (0u | 0u)))))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))) >> 0u))))))))) + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) / 1u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(_GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> (0u & 88214u)) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), ~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((num_workgroup + workgroup_id))))) - 0u)), (_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_size)))) / 1u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(3u)), 0u + (uint(uint(3u))))), ~ (~ (3u))))) - 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))), uint(uint(uint(_GLF_IDENTITY(3u, 1u * (_GLF_IDENTITY(3u, max(3u, 3u))))))))), 1u, 0u), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), min(uint(uint(uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), clamp(uint(uint(uint(3u))), uint(uint(uint(3u))), uint(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) / 1u)))))))), 1u, 0u))), uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(3u)), clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))), (_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u))))) ^ 0u) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u))) | (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)))), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))), 0u | (uint(_GLF_IDENTITY(uint(uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), ~ (~ (clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))))) | (0u | 0u)))))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))) >> 0u))))))))) + 1) % subgroup_size)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) / 1u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), uint(uint(_GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(0u, ~ (~ (0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> (0u & 88214u)) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), ~ (~ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), ~ (~ (~ (subgroup_local_id)))), ~ (subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) / 1u)))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((num_workgroup + workgroup_id))))) - 0u)), (_GLF_IDENTITY(uint(3u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))) < injectionSwitch.y)) ? uint(3u) : _GLF_FUZZED(subgroup_size)))) / 1u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uint(3u)), 0u + (uint(uint(3u))))), ~ (~ (3u))))) - 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))), uint(uint(uint(_GLF_IDENTITY(3u, 1u * (_GLF_IDENTITY(3u, max(3u, 3u))))))))), 1u, 0u), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (3u)))), (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))) | (uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))) - 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), min(uint(uint(uint(3u))), _GLF_IDENTITY(uint(uint(uint(3u))), clamp(uint(uint(uint(3u))), uint(uint(uint(3u))), uint(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) / 1u)))))))), 1u, 0u))), uvec3(uvec3(uvec3((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(3u)), clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))), (_GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u))))) ^ 0u) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u))) | (_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)))), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))), 0u | (uint(_GLF_IDENTITY(uint(uint(3u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)), ~ (~ (clamp(_GLF_IDENTITY(uint(uint(3u)), (true ? _GLF_IDENTITY(uint(uint(3u)), 0u | (uint(uint(3u)))) : _GLF_FUZZED(subgroup_size))), uint(uint(3u)), _GLF_IDENTITY(uint(uint(3u)), (_GLF_IDENTITY(uint(uint(3u)), max(_GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) | (0u | 0u)), _GLF_IDENTITY(uint(uint(3u)), (uint(uint(3u))) << 0u)))) >> 0u)))))) | (0u | 0u)))))))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u))) >> 0u))))))))) + 1) % subgroup_size))))));
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((11.07)), _GLF_FUZZED(5666.7205)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((11.07)), _GLF_FUZZED(5666.7205)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((11.07)), _GLF_FUZZED(5666.7205)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))).x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-185.136)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-16.96)), bool(false))), _GLF_FUZZED(-272.016)), vec2(_GLF_FUZZED(6360.5732), (injectionSwitch)[1]), bvec2(false, true))).y)))) ? _GLF_FUZZED(51104) : int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * round(length(normalize(vec4(_GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 1.0, 1.0))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y), mix(float(_GLF_FUZZED(6.6)), float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).y)), bool(true)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-91.56)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true))))), 0.0, 0.0))), injectionSwitch.y))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))) ? _GLF_FUZZED(51104) : int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true))), 0.0, 0.0))), injectionSwitch.y))))))), ((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))) ? _GLF_FUZZED(51104) : int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true))), 0.0, 0.0))), injectionSwitch.y)))))))) | 0), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)))) ? _GLF_FUZZED(51104) : int(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))) ? _GLF_IDENTITY(_GLF_FUZZED(51104), max(_GLF_IDENTITY(_GLF_FUZZED(51104), ~ (~ (_GLF_FUZZED(51104)))), _GLF_FUZZED(51104))) : int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9651.6080)), bool(false))))))))), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51104) : int(_GLF_ONE(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true)), float(mat2x4(mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-58.39)), float(1.0), bool(true))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0))), injectionSwitch.y)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)) + 0.0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, false)))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, true, false))))))))), (_injected_loop_counter != 1) || false)); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  return;
                 return;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
            return;
          }
         do
          {
           atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-80173))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), false || (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(float(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(float(false)) : _GLF_FUZZED(-5834.1823)))), vec2(_GLF_FUZZED(90.91), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), true))).y, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(90.91), (injectionSwitch)[1]), bvec2(false, true))).y), float(_GLF_FUZZED((-7245.4022 / -8962.2806))), bool(false))))), true, _GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < _GLF_IDENTITY(1, int(ivec3(1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0)))) && true)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false)))) && true))))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(2.8)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_injected_loop_counter != 1, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), false))))), true)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], _GLF_IDENTITY(buf[virtual_gid], uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) ^ 0u, min((buf[virtual_gid]) ^ 0u, (buf[virtual_gid]) ^ 0u))), buf[virtual_gid])), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((11.71 - 3.4), clamp((11.71 - 3.4), _GLF_IDENTITY(_GLF_IDENTITY((11.71 - 3.4), (false ? _GLF_FUZZED(-9.5) : (11.71 - 3.4))), max((11.71 - 3.4), _GLF_IDENTITY((11.71 - 3.4), mix(float(_GLF_FUZZED(-93.12)), float((11.71 - 3.4)), bool(true))))), (11.71 - 3.4))))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), max(mix(float(_GLF_FUZZED((11.71 - 3.4))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((11.71 - 3.4), min((11.71 - 3.4), (11.71 - 3.4))))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))), float(mat2(mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(11.71 - 3.4, (_GLF_IDENTITY(11.71 - 3.4, float(mat3(11.71 - 3.4, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) * 1.0))), (_GLF_FUZZED((_GLF_IDENTITY(11.71 - 3.4, (_GLF_IDENTITY(11.71 - 3.4, float(mat3(11.71 - 3.4, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) * 1.0)))) - 0.0)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), 1.0, 1.0, 1.0)))))), injectionSwitch.y)), 1u, 0u))))), 4, 64, 2);
  }
 else
  {
   do
    {
     read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))));
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))))), (bool(bool(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))) && true), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), ! (! ((! (_GLF_WRAPPED_LOOP(false)))))))), (bool(bool(_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(false))), ! (! ((! (_GLF_WRAPPED_LOOP(false))))))))) && true)))))))));
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mod(588.366, 9.9)) : injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))), (clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))) | (_GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))), 0 | (clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))))))) / 1)); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++) / 1, 0 ^ (_GLF_IDENTITY((_injected_loop_counter ++) / 1, ((_injected_loop_counter ++) / 1) >> 0)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
}
