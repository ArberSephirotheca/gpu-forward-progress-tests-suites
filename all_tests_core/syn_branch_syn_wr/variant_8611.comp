#version 460
struct _GLF_struct_31 {
 ivec3 _f0;
 bvec4 _f1;
 uvec3 _f2;
 uvec4 _f3;
 uvec4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_32 {
 _GLF_struct_31 _f0;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
 mat4 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_30 {
 _GLF_struct_29 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_27 {
 mat3x4 _f0;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
} ;

struct _GLF_struct_33 {
 _GLF_struct_28 _f0;
 _GLF_struct_30 _f1;
 uint virtual_gid;
 mat2 _f2;
 vec2 _f3;
 _GLF_struct_32 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
 bvec4 _f1;
 mat4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_23 {
 vec3 _f0;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 uvec4 _f1;
 vec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
 int _f1;
 bool _f2;
 ivec2 _f3;
 uvec3 _f4;
 mat4x3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_20 _f0;
 vec3 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_18 {
 float _f0;
 vec3 _f1;
 bool _f2;
 uint workgroup_base;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
} ;

struct _GLF_struct_26 {
 float _f0;
 _GLF_struct_19 _f1;
 uvec2 _f2;
 mat4x3 _f3;
 vec3 _f4;
 _GLF_struct_25 _f5;
} ;

struct _GLF_struct_17 {
 mat3 _f0;
 uint workgroup_id;
 ivec2 _f1;
 vec3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 float _f1;
 vec4 _f2;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 bool _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_11 {
 bvec2 _f0;
 mat2 _f1;
 int _f2;
 uvec2 _f3;
 ivec3 _f4;
 ivec4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 mat2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 vec3 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 ivec2 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_8 {
 uint _f0;
} ;

struct _GLF_struct_7 {
 ivec4 _f0;
 bvec4 _f1;
 float _f2;
 vec2 _f3;
 uvec3 _f4;
 int _f5;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 float _f3;
 mat3 _f4;
 float _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 ivec4 _f2;
 _GLF_struct_8 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_5 {
 bool _f0;
 vec3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat4 _f1;
 mat3x2 _f2;
 uvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 vec4 _f1;
 ivec4 _f2;
 uvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 mat4x3 _f1;
 _GLF_struct_1 _f2;
 vec3 _f3;
 _GLF_struct_2 _f4;
 bvec2 _f5;
 uint num_workgroup;
 ivec4 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_15 _f3;
 mat2x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat4 _f1;
 ivec3 _f2;
 uint _f3;
 uint workgroup_size;
 vec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_3(bvec2(true), mat4x3(1.0), _GLF_struct_1(ivec2(1), vec4(1.0), ivec4(1), uvec3(1u), vec2(1.0)), vec3(1.0), _GLF_struct_2(true, mat4(1.0), mat3x2(1.0), uvec3(1u), bvec2(true)), bvec2(true), gl_NumWorkGroups.x, ivec4(1)), _GLF_struct_5(true, vec3(1.0), _GLF_struct_4(ivec4(1), mat3x2(1.0), mat2x4(1.0), mat4x2(1.0))), _GLF_struct_9(_GLF_struct_6(mat3x2(1.0), mat4x2(1.0), mat3x2(1.0), 1.0, mat3(1.0), 1.0, ivec2(1)), _GLF_struct_7(ivec4(1), bvec4(true), 1.0, vec2(1.0), uvec3(1u), 1), ivec4(1), _GLF_struct_8(1u), mat4(1.0)), _GLF_struct_15(_GLF_struct_10(uvec3(1u), mat2(1.0), mat3x4(1.0)), vec3(1.0), _GLF_struct_11(bvec2(true), mat2(1.0), 1, uvec2(1u), ivec3(1), ivec4(1), mat2x4(1.0)), _GLF_struct_12(vec2(1.0), mat3(1.0)), _GLF_struct_13(bvec2(true), ivec4(1), mat4x2(1.0), true, bvec4(true)), ivec2(1), _GLF_struct_14(mat2x3(1.0), 1.0, vec4(1.0))), mat2x4(1.0), vec2(1.0));
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec2(1u), mat4(1.0), ivec3(1), 1u, gl_WorkGroupSize.x, vec4(1.0));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat3(1.0), gl_WorkGroupID.x, ivec2(1), vec3(1.0), uvec3(1u));
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(1.0, _GLF_struct_19(_GLF_struct_18(1.0, vec3(1.0), true, _GLF_struct_replacement_0.workgroup_size * _GLF_struct_replacement_17.workgroup_id)), uvec2(1u), mat4x3(1.0), vec3(1.0), _GLF_struct_25(_GLF_struct_20(mat3(1.0), 1, true, ivec2(1), uvec3(1u), mat4x3(1.0), bvec2(true)), vec3(1.0), _GLF_struct_21(mat4x2(1.0)), _GLF_struct_22(uvec3(1u), uvec4(1u), vec4(1.0), 1u), _GLF_struct_23(vec3(1.0)), _GLF_struct_24(uvec3(1u), bvec4(true), mat4(1.0), vec2(1.0))));
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(_GLF_struct_28(_GLF_struct_27(mat3x4(1.0))), _GLF_struct_30(_GLF_struct_29(mat2x3(1.0), mat4(1.0), ivec2(1), mat4x2(1.0), uvec4(1u)), mat2x4(1.0), mat3x4(1.0), mat4(1.0)), _GLF_struct_replacement_26._f1._f0.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, mat2(1.0), vec2(1.0), _GLF_struct_32(_GLF_struct_31(ivec3(1), bvec4(true), uvec3(1u), uvec4(1u), uvec4(1u), mat2(1.0))), bvec4(true));
 uint next_virtual_gid = _GLF_struct_replacement_26._f1._f0.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_33.virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(checker[_GLF_struct_replacement_33.virtual_gid], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[_GLF_struct_replacement_33.virtual_gid], read, 4, 64, 4);
  }
}
