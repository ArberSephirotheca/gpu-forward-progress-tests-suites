#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, length(0.0), 1.0))) > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, min(0, 0)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), ! (! (false)))))) && true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))))))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, true, true)), bool(bvec4(bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, true, true)), true, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, true, true)), bool(bvec4(bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, true, true)), true, true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, true, true)), bool(bvec4(bool(bvec4(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), true, true, true)), true, true, false)))), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, sqrt(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, sqrt(0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(cos(0.0), 0.0, 1.0, 1.0))))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, sqrt(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, sqrt(0.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(cos(0.0), 0.0, 1.0, 1.0))))))).x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
            }
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), true, true, false))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))
          return;
         barrier();
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id;
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, _GLF_IDENTITY(0u, (0u) * 1u) ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base))))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, 0u ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base))))))))) / 1u))), ((~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, _GLF_IDENTITY(0u, (0u) * 1u) ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base))))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base, 0u ^ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base))))))))) / 1u)))) / 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), uvec2(1u, 1u) * (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), min(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))))))).x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), uvec2(1u, 1u) * (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), min(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))))))).x) | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), uvec2(1u, 1u) * (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), min(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base), (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)) + uvec2(0u, 0u)))))))).x)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6766.1849, -0.5)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))))), false || (_GLF_IDENTITY((! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6766.1849, -0.5)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))))), bool(bool((! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6766.1849, -0.5)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))))))))))), _GLF_IDENTITY(false, (false) || false), false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (false))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.6)), bool(false)))))));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 1), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1)))))), (_injected_loop_counter != (1 ^ _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(false)) : _GLF_IDENTITY(1, (1) | (1)))))) && true))), (bool(bool(_GLF_IDENTITY(_injected_loop_counter != (1 ^ 1), (_injected_loop_counter != (1 ^ 1)) && true)))) || false))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(380.009)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.3) : injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))))
        continue;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), true))))))))
          barrier();
         break;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, min(64, 64))), 1 * (~ (_GLF_IDENTITY(64, min(64, 64))))))), 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0), (false ? _GLF_FUZZED(-8293) : _GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)) | (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)))))) >> 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED((-89120 - 4146)) : 2))))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(_GLF_IDENTITY(int(int(2)), (int(int(2))) << 0)), int(int(int(2))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), min(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))))), 0 + (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), int(ivec4(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), 1, 0, 0))))) : _GLF_FUZZED(-76042)))), min(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) | 0), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))))))))))) ^ 0)) >> 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) | (2))))))))))) ^ 0)) >> 0))), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1))))) * (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)) >> 0))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)) >> 0, ~ (~ ((_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))), 0 | (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))))) ^ 0)) >> 0)))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)) >> 0)))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) ^ 0))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) / 1))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (int(_GLF_IDENTITY(int(int(2)), 1 * (int(int(2)))))) << 0), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)) >> 0))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 1 * (_GLF_IDENTITY(int(2), (int(2)) << 0))))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, int(ivec4(2, 1, 0, 0)))))))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))) ^ 0)) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))), (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))) | 0))))) ^ 0)) >> 0), 0 ^ (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED((16012 >> -65976)))))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))) + 0)))) ^ 0)) >> 0))))))), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY(int(2), min(int(2), int(2))))), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) * 1)))))), (true ? int(int(_GLF_IDENTITY(int(2), max(int(2), int(2))))) : _GLF_FUZZED(58649))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) | (int(int(int(2)))))) | 0), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))) : _GLF_FUZZED(91169)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), 0 ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), max(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))))))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), (~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))) | 0))))), 0 ^ ((_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) | (int(int(int(2)))))) | 0), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))) : _GLF_FUZZED(91169)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), 0 ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), max(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))))))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), (~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))) | 0))))))) ^ 0)) >> 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (int(int(2))) / 1)), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))), ((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))), ((_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), max(int(2), int(2))), int(2), int(2))), int(2))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) << ivec2(0, 0))))))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0))))))), int(int(int(2)))))))))) | ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))))))))) ^ 0)) >> 0))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))))))), int(int(int(2)))))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(int(int(2))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED((vec4(6896.6892, -90.49, -4.6, 210.375) , mix(-16098, 73713, true))) : int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(_GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(2))))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(int(int(2)))))))))) | ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))))))))) ^ 0)) >> 0))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2))))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))) >> 0))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max((_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))), ((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) + (0 | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))) | 0)), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))))), int(int(int(2)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0)))))) | ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0))))))))))))) ^ 0)) >> 0))))))))), ~ (~ (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (0 << _GLF_IDENTITY(int(3), int(3))) - 0)) ^ 0)) ^ (_GLF_IDENTITY(int(2), min(int(2), int(2))))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-12814) : 2)), (_GLF_IDENTITY(2, 0 | (2))) * 1)))))), min(int(int(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (0 << _GLF_IDENTITY(int(3), int(3))) - 0)) ^ 0)) ^ (_GLF_IDENTITY(int(2), min(int(2), int(2))))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-12814) : 2)), (_GLF_IDENTITY(2, 0 | (2))) * 1)))))), int(int(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), (0 << _GLF_IDENTITY(int(3), int(3))) - 0)) ^ 0)) ^ (_GLF_IDENTITY(int(2), min(int(2), int(2))))), int(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-12814) : 2)), (_GLF_IDENTITY(2, 0 | (2))) * 1)))))))), (true ? int(int(_GLF_IDENTITY(int(2), max(int(2), int(2))))) : _GLF_FUZZED(58649))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) | (int(int(int(2)))))) | 0), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), int(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) | (int(int(int(2)))))) | 0), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), 0))) : _GLF_FUZZED(91169)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), 0 ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), max(~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(int(int(int(2))), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), _GLF_IDENTITY(int(int(int(2))), 0 ^ (int(int(int(2))))))), int(_GLF_IDENTITY(int(int(2)), 0 + (int(int(2)))))) : _GLF_FUZZED(-2435)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))), _GLF_IDENTITY(int(ivec4(~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))), 1, 0, 0)), (int(ivec4(~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))))), 1, 0, 0))) * 1))) ^ 0)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), (~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), clamp(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))))) | 0))))), 0 ^ ((_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) | (int(int(int(2)))))) | _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(0, (0) / 1)))), clamp(int(int(int(_GLF_IDENTITY(2, 0 + (2))))), int(int(int(2))), int(int(int(2)))))) : _GLF_FUZZED(91169)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), 0 ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), max(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))) | (clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))))))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2))))))), (~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(2))), int(int(int(2)))))))) | 0))))))) ^ 0)) >> 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (int(int(2))) / 1)), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1)) >> 0)), int(int(int(2))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))), ((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))), ((_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), (max(int(2), int(2))) | (max(int(2), int(2))))), int(2), int(2))), int(2))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))))), (int(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))))), int(_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, clamp(2, 2, 2))))))), (int(int(int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))) | 0)))))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 | (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0))), int(int(int(2))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))), (true ? _GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) : _GLF_FUZZED(29827)))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) << ivec2(0, 0))))))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))), (clamp(int(int(int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) << ivec2(0, 0))))))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))) >> (0 >> _GLF_IDENTITY(int(2), int(2))))))))), ((_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0))))))), int(int(int(2))))))), clamp(~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0))))))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0))))))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0))))))), int(int(int(2)))))))))))) | ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))))))))) ^ 0)) >> 0))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))), (false ? _GLF_FUZZED(-62590) : ~ (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, (2) ^ 0)))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(_GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(72221))), ~ (_GLF_IDENTITY(~ ((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (~ ((2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, sqrt(0.0), log(cos(0.0))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(22.62)), float(injectionSwitch.x), bool(true))))))) ^ 0))))))), int(int(int(2)))))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))))), 0 + (int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)))))))), int(int(int(2))))))))), max((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(int(int(2))))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (false ? _GLF_FUZZED((vec4(_GLF_IDENTITY(6896.6892, (true ? 6896.6892 : _GLF_FUZZED((8138.3574)))), -90.49, -4.6, 210.375) , mix(-16098, 73713, true))) : int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(_GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(2))))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0, 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0))), 0 ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0, 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0)))))))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x))), _GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(int(int(2)))))))))) | ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))))))))) ^ 0)) >> 0))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))), (~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) / 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2))))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY(clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))), int(int(int(2)))), (clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))) >> 0))))))) | 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))))) >> 0)), max((_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_IDENTITY(int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0), _GLF_IDENTITY(int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0), int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0), _GLF_IDENTITY(int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0), int((2) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0)))))), int(int(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << (0 << _GLF_IDENTITY(int(0), int(0))))) >> 0)))))))), ((~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(int(int(2))), (int(int(int(2)))) * (1 & 1))))))) + (0 | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(80353) : 2))))))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))))), int(int(int(2))))))))) | 0)), ((_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) ^ 0))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) / (0 | 1)))))), clamp(int(int(int(2))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))))))), int(int(int(2))))))), clamp((~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) / (0 | 1)))))), clamp(int(int(int(2))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))))))), int(int(int(2))))))), (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) / (0 | 1)))))), clamp(int(int(int(2))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))))))), int(int(int(2))))))), (~ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) / (0 | 1)))))), clamp(int(int(int(2))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-17.84)), bool(false))))), injectionSwitch.x)))))))), int(int(int(2)))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0))))))), ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(log(1.0))))))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.2))), injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(_GLF_IDENTITY(2, (2) - 0)))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0)))))) | ((_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 | (int(2))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0))), int(ivec3(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), min(_GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2))))), _GLF_IDENTITY(int(int(int(2))), clamp(int(int(int(2))), int(int(int(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(int(int(2)))))))) - 0))), 1, 1))))))))))))) ^ 0)) >> 0)))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))) : _GLF_FUZZED(sign(-3978.9517))))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(90826))), (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) - 0))), 0, 0), ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), 0, 0)), (false ? _GLF_FUZZED(ivec3(-49121, 62770, -27400)) : ivec3(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), 0, 0))))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), 0, 0), ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) / 1))))), clamp(0, 0, _GLF_IDENTITY(0, (0) << 0))), 0)), (false ? _GLF_FUZZED(ivec3(-49121, 62770, -27400)) : ivec3(ivec3(_GLF_IDENTITY(1, 0 ^ (1)), 0, 0)))))))) ^ 0), (true ? int(ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)), 0), (_GLF_IDENTITY(min(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)), 0), (min(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)), 0)) - 0)) - 0)) + (1)))), 0, _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(0, 0)))) : _GLF_FUZZED(22161)))) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, ~ (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))))), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base))) - uvec2(0u, 0u))) + uvec2(0u, 0u)).x)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       int i = 0;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uint(4u)))), max(uint(_GLF_IDENTITY(4u, uint(uint(4u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uint(4u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uint(4u)))), (uint(_GLF_IDENTITY(4u, uint(uint(4u))))) << 0u)) | 0u))))) * (read)), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(read, (read) | (read))))))))))), read), min(_GLF_IDENTITY(max(read, read), 0u + (_GLF_IDENTITY(max(read, read), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((max(read, read)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ ((max(read, read))))), ~ (~ (_GLF_IDENTITY(~ (~ (max(read, read))), ~ (~ (~ (~ (max(read, read)))))))))))), max(read, read)))), 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 return;
                }
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, max(5, 5)), 5)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(int(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec3((0), 0, 1)), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(ivec3((0), 0, 1), min(_GLF_IDENTITY(ivec3((0), 0, 1), (ivec3((0), 0, 1)) << ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3((0), 0, 1), ~ (~ (ivec3((0), 0, 1))))))), 0), min(ivec2(int(ivec3((0), 0, 1)), 0), ivec2(int(ivec3(_GLF_IDENTITY((0), 0 + ((0))), 0, 1)), 0))))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, clamp(5, 5, 5)))), (_GLF_IDENTITY(int(5), int(5))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 + (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / (1 | 1)))), _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)))))) : _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec2((0), 0), max(ivec2((0), 0), ivec2((0), 0))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))))))))) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (_GLF_IDENTITY(int(5), int(ivec4(int(5), 1, 0, 0))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 + (4))))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-55971))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, (false ? _GLF_FUZZED(74295) : 5)), 5))), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), min(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (_GLF_IDENTITY(int(5), int(ivec4(int(5), 1, 0, 0))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 + (4))))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-55971))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, (false ? _GLF_FUZZED(74295) : 5)), 5))), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), min(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (_GLF_IDENTITY(int(5), int(ivec4(int(5), 1, 0, 0))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 + (4))))))))) | (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-55971))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, (false ? _GLF_FUZZED(74295) : 5)), 5))), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), min(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))))))), 0), ivec2(0, 0) | (ivec2(int(int(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) * 1)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), (true ? 0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), 1 * (_GLF_IDENTITY(int(5), (int(5)) - 0))), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) * 1)) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (0 | 0) ^ (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))) : _GLF_FUZZED(_injected_loop_counter))))), 0)))), 0 ^ (int(_GLF_IDENTITY(ivec2(int(int(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))).x)) | (int(5)))), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), clamp(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), int(_GLF_IDENTITY(int(1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)), min(_GLF_IDENTITY(int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)), (int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0))) | (int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)))), int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)))))))))) >> _GLF_IDENTITY(int(4), int(4))), max((_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))).x)) | (int(5)))), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), clamp(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), int(_GLF_IDENTITY(int(1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)), min(_GLF_IDENTITY(int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)), (int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0))) | (int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)))), int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)))))))))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))).x)) | (int(5)))), (_GLF_IDENTITY(int(5), int(5))) - 0)) * ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), clamp(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), int(_GLF_IDENTITY(int(1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)), min(_GLF_IDENTITY(int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)), (int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0))) | (int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)))), int(ivec3(int(1 << _GLF_IDENTITY(int(4), int(4))), 1, 0)))))))))) >> _GLF_IDENTITY(int(4), int(4)))))))), 0), ivec2(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), 0))) | (ivec2(int(int(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) / 1))) - 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6859.9681)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6859.9681)), bool(_GLF_IDENTITY(false, ! (! (false)))))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, false))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true))))))) || false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               break;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(3567.9971)), bool(false))), (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_IDENTITY(true, true && (true)))))) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), false, true)))))) && true)) && true)), false))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) >> (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(182.174)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
           break;
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), false, false, false))))
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_IDENTITY(false, false || (false))))
              {
               atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))), clamp(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))))));
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) - length(vec2(0.0, 0.0)))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))))), (injectionSwitch.x < injectionSwitch.y)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
                  barrier();
                 break;
                }
               return;
              }
             if(_GLF_DEAD(false))
              continue;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))))))) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         break;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), ~ (~ (_GLF_IDENTITY(1, int(ivec3(1, 1, 0))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (0) ^ 0) ^ 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), mix(float(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]))), float(_GLF_FUZZED(-6572.9128)), bool(_GLF_IDENTITY(false, true && (false)))))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, int(ivec2(1, 1)))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-6572.9128)), bool(false)))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-6572.9128)), clamp(float(_GLF_FUZZED(-6572.9128)), float(_GLF_FUZZED(-6572.9128)), _GLF_IDENTITY(float(_GLF_FUZZED(-6572.9128)), (float(_GLF_FUZZED(-6572.9128))) / 1.0))), bool(false)))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y, true, true, true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, int(ivec2(1, 1)))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-6572.9128)), bool(false)))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-6572.9128)), clamp(float(_GLF_FUZZED(-6572.9128)), float(_GLF_FUZZED(-6572.9128)), _GLF_IDENTITY(float(_GLF_FUZZED(-6572.9128)), (float(_GLF_FUZZED(-6572.9128))) / 1.0))), bool(false)))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y, true, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, int(ivec2(1, 1)))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-6572.9128)), bool(false)))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-6572.9128)), clamp(float(_GLF_FUZZED(-6572.9128)), float(_GLF_FUZZED(-6572.9128)), _GLF_IDENTITY(float(_GLF_FUZZED(-6572.9128)), (float(_GLF_FUZZED(-6572.9128))) / 1.0))), bool(false)))))), vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(8019.1604)), bvec2(false, false))).x > injectionSwitch.y, true, true, true))))))), false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(45999) : int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0)))))), ((_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), max(int(0), int(0))))))) << (0 | 0)) / 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, 4)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (0 ^ 0) | (4)), _GLF_IDENTITY(4, (4) ^ 0), 4))), int(_GLF_IDENTITY(4, min(4, 4))))) / 1))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) && true)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
}
