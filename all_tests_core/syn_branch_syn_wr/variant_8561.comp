#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && ((false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) && (true && _GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))), bool(bvec2(bool(bool(((false)))), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))) && true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))) && true)), true))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(_GLF_IDENTITY(bool(bool(((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(((false)))), (_GLF_IDENTITY(bool(bool(((false)))), bool(bvec4(bool(bool(((false)))), true, true, false)))) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(bool(((false)))), (_GLF_IDENTITY(bool(bool(((false)))), bool(bvec4(bool(bool(((false)))), true, true, false)))) || false)), false))))), false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((_GLF_IDENTITY(false, (false) || false))))), false))))) && true)), true)))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(_GLF_IDENTITY(bool(bool(((false)))), bool(_GLF_IDENTITY(bvec2(bool(bool(((false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(((false)))), false), true), bvec3(bvec4(bvec3(bvec2(bool(bool(((false)))), false), true), true))))))), false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))) && true)), true)))))), bool(bvec2(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))), (_GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false)))) && true))) && true)), true)))))), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(true && ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))))) || false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0))) < injectionSwitch.y)), false, false))) && (_GLF_IDENTITY((_GLF_IDENTITY(true && ((false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(true && ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(bool(bool(((false)))), false))))))) || false, ! (! ((_GLF_IDENTITY(true && ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), bool(bvec2(bool(bool(((false)))), false))))))) || false))), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, false))), true && ((false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))))))), (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))))) || false), true, true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))), ! (! ((false)))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && ((false)))), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(_GLF_IDENTITY(bool(bool((false))), _GLF_IDENTITY(bool(bvec2(bool(bool((false))), true)), (bool(bvec2(bool(bool((false))), true))) && true)), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? 62.34 : -29.03)), _GLF_FUZZED((true ? 956.504 : 7.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? 62.34 : -29.03)), _GLF_FUZZED((true ? 956.504 : 7.2))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y)) && true)), _GLF_IDENTITY(true, (true) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))), true)), (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3305.7431)), bool(false))) < injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))))), true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3305.7431)), bool(false))) < injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))))), true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3305.7431)), bool(false))) < injectionSwitch.y)), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))))), true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))) && true))))))), true))) && true), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))))))) || false), (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || _GLF_IDENTITY((false), true && ((false)))))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || _GLF_IDENTITY((false), true && ((false)))))))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, (1u & 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, max(5u, 5u)), 5u))), 0u ^ (uint(5u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) * 1u)))), (workgroup_size) | 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-51.98), _GLF_FUZZED(-2.0)), bvec2(false, false))).y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_size) ^ 0u))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_size) ^ 0u), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))))) - 0u), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), ~ (~ (uint(uvec2(subgroup_size, 0u))))))) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(num_workgroup)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(num_workgroup))) - 0u)) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(num_workgroup))))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) | (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))), (subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), min(min(1u, 1u), min(1u, 1u)))))))), 0u + (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))), 1u)), 0u | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u))))))))) | 0u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u))))))), 0u | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (subgroup_size) ^ 0u), 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u))), (subgroup_size) ^ 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))) ^ 0u), _GLF_IDENTITY(min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)), max(min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))) ^ 0u), _GLF_IDENTITY(min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)), max(min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)), min(~ ((subgroup_size) ^ 0u), ~ ((subgroup_size) ^ 0u)))))) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), _GLF_IDENTITY(0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u))), (0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)))) | (0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ 0u), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ 0u), 0u + (~ ((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ 0u)))) >> 0u)))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((subgroup_size))))) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 0u : _GLF_FUZZED(num_workgroup))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))), _GLF_IDENTITY(1u, min(1u, 1u))))), (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 0u : _GLF_FUZZED(num_workgroup))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))), _GLF_IDENTITY(1u, min(1u, 1u)))))) ^ 0u)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)), 0u | _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u))), (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u))), ((uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)))) ^ 0u)) / 1u))))), 1u * (0u + (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), 1u)), 0u | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u))))))))))) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) - 0u), 0u)) | (uvec3(0u, 0u, 0u)))))))))));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(7.1)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))) || _GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % _GLF_IDENTITY(subgroup_size, (1u | 0u) * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) | ((subgroup_size) ^ 0u))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))) | ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))), (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))))) ^ 0u)))))) ^ 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(2), int(2))))))) / 1), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, false))), true)))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, false))), true)))), true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))) && true), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true)))), true))), false, true)))), (bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))))))) && true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(! (false), false, false))), true)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), true)))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))), true)))), true)), true)), false))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false)))))))) && true), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bvec3(! (false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (bool(bvec3(! (false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) || false))), true)))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), true), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) || false))), true)))), true), true))))), false, true)))), (bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bvec2(bvec2(bvec2(! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false))) && true))))))) && true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, subgroup_local_id % 2))) == 0))))
  {
   _GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 2), (_GLF_IDENTITY(read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) << 0u)], (buf[virtual_gid]) << 0u), 4, 64, 2), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) << 0u)], (buf[virtual_gid]) << 0u), 4, 64, 2), (atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))) << 0u)], (buf[virtual_gid]) << 0u), 4, 64, 2)) + 0u))), clamp(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid]))) << 0u), 4, _GLF_IDENTITY(64, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))))) - 0)), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(64))), clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))))) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) >> 0))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)), 1 * (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)), 1 * (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))) * 1))))))))) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), min(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(64, 64, 64)))))) << 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), min(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(64, 64, 64))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)), clamp(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))), (false ? _GLF_FUZZED(7625) : _GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))), (max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64))))) | (max(~ (_GLF_IDENTITY(64, clamp(64, 64, 64))), ~ (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, max(64, 64)), 64)), 64, 64)))))))))) - 0))))), 2), atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), (buf[virtual_gid]) << 0u), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], (buf[virtual_gid]) << 0u), 4, 64, 2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), max(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u))))), (buf[virtual_gid]) << 0u), 4, 64, 2), ~ (~ _GLF_IDENTITY((read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 2)), 0u + ((read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 2))))))), (~ (_GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), max(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), max(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], 1u)), max(uint(uvec2(buf[virtual_gid], 1u)), uint(uvec2(buf[virtual_gid], 1u)))) : _GLF_FUZZED(workgroup_size)))))), (buf[virtual_gid]) << 0u), 4, 64, 2), ~ (~ _GLF_IDENTITY((read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 2)), 0u + ((read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, 2)))))))) / 1u)))) >> _GLF_IDENTITY(0u, ~ (~ (0u))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(4681.6196)), bool(false))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(4681.6196)), bool(false))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true, true)))), ! (! (bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))))))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_IDENTITY(_GLF_FUZZED(33275), clamp(_GLF_FUZZED(33275), _GLF_FUZZED(33275), _GLF_IDENTITY(_GLF_FUZZED(33275), min(_GLF_IDENTITY(_GLF_FUZZED(33275), (_GLF_FUZZED(33275)) | 0), _GLF_IDENTITY(_GLF_FUZZED(33275), int(ivec4(_GLF_FUZZED(33275), 1, 0, 1))))))) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) | 0, (((64)) | 0) | (((64)) | 0))), ((64)) | ((64))), (64)))))))))) / 1), max(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1, clamp(_GLF_IDENTITY((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1, 0 ^ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1, max((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1)), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))) / 1))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64))))))), min(_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64))))))), _GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(41102) : _GLF_IDENTITY(_GLF_IDENTITY(~ (64), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-55002) : ~ (64))), (false ? _GLF_FUZZED(33275) : ~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | 0), ((64)) | ((64))), (64)))))))))))) / 1))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
