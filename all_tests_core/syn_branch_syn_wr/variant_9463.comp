#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid;
 uvec4 GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec3 GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroup;
 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz = GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroup;
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.xy = GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy = GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.xy;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.z = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.w = workgroup_size;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.w;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy.y = workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y * GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy.y;
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x;
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy.x;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy.x + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x);
 GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.w = next_virtual_gid;
 uint read = 0;
 GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.z = read;
 atomicStore(buf[GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.w], uint(1), 4, 64, 4);
 if((GLF_merged2_0_3_92_3_1_16GLF_merged2_0_2_54_2_1_13GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idnum_workgroupnext_virtual_gid.xyz.xy.x % 2) == 0)
  {
   GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.z = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.z = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   atomicStore(checker[virtual_gid], GLF_merged3_0_2_54_2_1_4_3_1_14GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_idreadworkgroup_size.z, 4, 64, 4);
  }
}
