#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), false, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-39.87)), bool(false))), (injectionSwitch[0]) - 0.0), injectionSwitch[1]))[1]))), (true ? _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-39.87)), bool(false))), (injectionSwitch[0]) - 0.0), injectionSwitch[1]))[1]))), (false ? _GLF_FUZZED(tan(injectionSwitch)) : max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-39.87)), bool(false))), (injectionSwitch[0]) - 0.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1]))[1]))))) : _GLF_FUZZED(vec2(453.631, 132.338))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1]))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1]))[1]))) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0)).y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), true)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), true)))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), false)))))), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(338.638)), bool(false)))))) && true)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8466.0482), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(-40.09)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? 4833.3596 : -8311.9245)), _GLF_FUZZED(2.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))), (injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)), ! (! (bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true, true))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))))), 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))))))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true)))))) && true)), false), bvec3(bvec4(bvec3(false, true, false), true))))))))))), false)), false || (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), true, true)))))) && true)), false), bvec3(bvec4(bvec3(false, true, false), true))))))))))), false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), false, false))), false)))), true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec4(bvec2(false, true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), false, false))), false)))), true), true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(40.12, -1.5)))), injectionSwitch, injectionSwitch)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(bvec2(false || (bool(false)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false || (bool(false)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(bool(bvec2(false || (bool(false)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size) | 0u)))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), clamp(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, min(0u, 0u))))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), 0u ^ (0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), (0u | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (false ? _GLF_FUZZED((workgroup_size | subgroup_id)) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) ^ 0u) + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))))), 0u ^ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((0u | 0u)))) ^ (149249u & 0u)) + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), min((_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))))))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), clamp(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))))), uint(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(53811u) : 0u))))), (0u | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), 1u * (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (false ? _GLF_FUZZED(min(workgroup_size, workgroup_id)) : (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), clamp(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(45078u) : 0u)) + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), max(_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), clamp(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), _GLF_IDENTITY(clamp(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))), (clamp(~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), ~ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))) | 0u))))))), (0u | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u))), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) | 0u) + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, 0u | (0u)), ((subgroup_size) + _GLF_IDENTITY(0u, 0u | (0u))) + (0u | 0u))))), (0u | 0u) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))) + (_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))))) - 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + subgroup_base + subgroup_local_id))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_local_id))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (true ? (workgroup_base + subgroup_base) : _GLF_FUZZED(atomicAnd(subgroup_local_id, virtual_gid)))) >> 0u), workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size))) * 1u) + 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size)), ((_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), (true ? (workgroup_base + subgroup_base) : _GLF_FUZZED(atomicAnd(subgroup_local_id, virtual_gid)))) >> 0u), workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size))) * 1u) + 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, max((1) - 0, _GLF_IDENTITY((1) - 0, ((1) - 0) * 1))))), (uint(_GLF_IDENTITY(1, (1) - 0))) - 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2) == 0, false || ((subgroup_local_id % 2) == 0))) && true), ((subgroup_local_id % 2) == 0) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) ^ 0u)) == 0) || false)), (true && (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) ^ 0u)) == 0) || false))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2) == 0, false || ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) + 0)))))) && true), ((subgroup_local_id % 2) == 0) || false), true && (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) * 1)) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) ^ 0u)) == 0) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2) == 0, false || ((subgroup_local_id % 2) == 0))) && true), ((subgroup_local_id % 2) == 0) || false), true && (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) ^ 0u)) == 0) || false))))), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) | (2)))))), _GLF_IDENTITY((2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-99088) : (2))) ^ 0)), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), (clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))) | 0u))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)), (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0))) + 0)))), (64) << _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-69550) : 0))), _GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(211.581)), bool(false)))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(-99088) : (2))) ^ _GLF_IDENTITY(0, (0) | (0 & 26591))))) * 1u), _GLF_IDENTITY(0u | _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, (_GLF_IDENTITY(9483, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? 9483 : _GLF_FUZZED(-29608)))) >> (0 ^ _GLF_IDENTITY(0, min(0, 0))))) : 64)), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) / 1)))))))))) | _GLF_IDENTITY(0, min(0, 0))), 2)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) >> 0u), min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true)))) : _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(9483), (_GLF_IDENTITY(_GLF_FUZZED(9483), max(_GLF_FUZZED(9483), _GLF_FUZZED(9483)))) | (_GLF_FUZZED(9483))) : 64), 0 | ((false ? _GLF_IDENTITY(_GLF_FUZZED(9483), (_GLF_IDENTITY(_GLF_FUZZED(9483), max(_GLF_FUZZED(9483), _GLF_FUZZED(9483)))) | (_GLF_FUZZED(9483))) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1))), ~ (~ (_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, _GLF_IDENTITY((9483) * 1, 0 ^ ((9483) * 1))))))))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : _GLF_IDENTITY(64, min(64, 64))), min((false ? _GLF_FUZZED(9483) : _GLF_IDENTITY(64, min(64, 64))), (false ? _GLF_FUZZED(9483) : _GLF_IDENTITY(64, min(64, 64)))))))))) | 0), 2))) | 0u))), (false ? _GLF_FUZZED((~ workgroup_base)) : _GLF_IDENTITY(0u | _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, (_GLF_IDENTITY(9483, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? 9483 : _GLF_FUZZED(-29608)))) >> (0 ^ _GLF_IDENTITY(0, min(0, 0))))) : 64)), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)))))) | 0), 2)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true)))) : _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << (0 << _GLF_IDENTITY(int(8), int(8)))), (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : _GLF_IDENTITY(64, (false ? _GLF_FUZZED(33946) : 64))))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(9483), (0 ^ 1) * (_GLF_IDENTITY(_GLF_FUZZED(9483), (false ? _GLF_FUZZED(94072) : _GLF_FUZZED(9483))))) : 64)))))) | 0), 2))) | 0u))), (0u | _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(9483, (_GLF_IDENTITY(9483, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? 9483 : _GLF_FUZZED(-29608)))) >> (_GLF_IDENTITY(0, 0 ^ (0)) ^ _GLF_IDENTITY(0, min(0, 0))))) : 64, (false ? _GLF_FUZZED(-87160) : false ? _GLF_FUZZED(_GLF_IDENTITY(9483, (_GLF_IDENTITY(9483, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? 9483 : _GLF_FUZZED(-29608)))) >> (_GLF_IDENTITY(0, 0 ^ (0)) ^ _GLF_IDENTITY(0, min(0, 0))))) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)))))) | 0), 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), (_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), clamp(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true)))))) << 0u)) : _GLF_IDENTITY(_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u)))))), (_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u))))))) ^ 0u), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), (_GLF_IDENTITY(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), clamp(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true))), mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true)))))) << 0u)) : _GLF_IDENTITY(_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u)))))), (_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u))))))) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true)))) : _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(9483, (false ? _GLF_FUZZED(-52919) : 9483))) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY(0, (0) >> 0) + ((false ? _GLF_IDENTITY(_GLF_FUZZED(9483), 1 * (_GLF_IDENTITY(_GLF_FUZZED(9483), clamp(_GLF_FUZZED(9483), _GLF_FUZZED(9483), _GLF_FUZZED(9483))))) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1))), (_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) << (0 | 0))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 + (4)), 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : _GLF_IDENTITY(64, 0 | (64))) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u)))))), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))), any(bvec4(false, true, false, true)))) : _GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))) | 0), 2)), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u))))))), ~ (~ ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(mix(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), 0u)))), any(bvec4(false, true, false, true)))) : _GLF_IDENTITY(_GLF_IDENTITY((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64)))))))) | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))))) | 0), 2)), ~ (~ ((read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(9483) : 64)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64)))))))) | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), clamp((false ? _GLF_FUZZED(9483) : 64), _GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(9483) : 64), 0 + ((false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64))), (false ? _GLF_FUZZED(9483) : 64)))), ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(9483, min(9483, _GLF_IDENTITY(9483, (9483) * 1)))) : 64))))))))))) | 0), 2))))), ((read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0), 0 | (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) - 0))) << 0)), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64))), (_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, max(_GLF_IDENTITY(false ? _GLF_FUZZED(9483) : 64, (false ? _GLF_FUZZED(9483) : 64) >> 0), false ? _GLF_FUZZED(9483) : 64)))))))))))) | 0), 2))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(min(next_virtual_gid, workgroup_id)) : ~ (0u)))))))))))))) - 0u))) - 0u))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), (4) / 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), (4) / 1))))), ~ (~ (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4))), ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))) + 0)), (4) / 1))))))))) * 1), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec4(bvec3(false, false, false), true))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), true))))))))))), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), bvec3(bvec4(bvec3(false, false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))))))))), (_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec4(! (! (false)), false, true, true))), true && (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), false, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), false, false))))) || false))), false, true, true)))))) && true)))) && true))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, determinant(mat3(1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, tan(0.0), 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, tan(0.0), 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0)), float(mat2(float(mat4(injectionSwitch.x, 1.0, 0.0, determinant(mat3(1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, tan(0.0), 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, tan(0.0), 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(699.694)), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)))) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)))), false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(670.489)), vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false, true)), (bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false, true))) || false))), false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), 1u * ((virtual_gid))) | 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) << 0u), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u))))), _GLF_IDENTITY(0u, (0u) - 0u))))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, _GLF_IDENTITY(false, (false) && true)))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false))))))) && true)), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.3) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false) || false))))))) && true))) && true))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(false, true && (false)), false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false))))) && true)), false, false)))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))), true, false)), true && _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true)))))))))), false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.4, 1.0 * (-7.4))), _GLF_FUZZED(3.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))), true, false))), true && ((bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), true)))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_IDENTITY(true, bool(bvec2(true, true))))))), false))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, false))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(3.6)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), false, true, true)), true, true)))))
    barrier();
  }
}
