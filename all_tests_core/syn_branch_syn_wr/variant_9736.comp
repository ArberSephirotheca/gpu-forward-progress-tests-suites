#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 mat3x4 _f0;
 uint read;
} ;

struct _GLF_struct_14 {
 int _f0;
 vec2 _f1;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 vec3 _f1;
 vec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 ivec3 _f1;
 uvec3 _f2;
 uint _f3;
 mat4 _f4;
} ;

struct _GLF_struct_13 {
 int _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 vec2 _f1;
 int _f2;
 mat2x4 _f3;
 bool _f4;
} ;

struct _GLF_struct_8 {
 float _f0;
 mat2 _f1;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 bool _f1;
 mat2 _f2;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 bool _f1;
 int _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 bvec2 _f1;
 mat3x4 _f2;
 vec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 bvec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_15 {
 uint subgroup_local_id;
 uvec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(4870.1827), min(_GLF_FUZZED(4870.1827), _GLF_FUZZED(4870.1827)))), bool(false))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(gl_SubgroupInvocationID, uvec2(1u), _GLF_struct_1(mat4x3(1.0), _GLF_struct_0(1, mat2x4(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec4(true), vec4(1.0))), _GLF_struct_4(ivec3(1), _GLF_struct_2(1u), _GLF_struct_3(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), (uvec2(1u)))) | (uvec2(1u))))), _GLF_struct_10(_GLF_struct_5(mat4x3(1.0), bvec2(true), mat3x4(1.0), vec3(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, tan(0.0), determinant(mat4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), clamp(float(mat2x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(562.279) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), mix(float(_GLF_FUZZED(-4.5)), float(false ? _GLF_FUZZED(562.279) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), bool(true))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-814.147 - -99.84)))), 1.0, length(vec2(0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(ceil(-939.671))) : 1.0)), 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.2)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mix(float(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-7.1)), _GLF_IDENTITY(bool(false), false || (bool(false)))), min(mix(float(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-7.1)), _GLF_IDENTITY(bool(false), false || (bool(false)))), _GLF_IDENTITY(mix(float(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-7.1)), _GLF_IDENTITY(bool(false), false || (bool(false)))), max(mix(float(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-7.1)), _GLF_IDENTITY(bool(false), false || (bool(false)))), mix(float(float(mat4x2(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-7.1)), _GLF_IDENTITY(bool(false), false || (bool(false))))))))), float(mat4x2(float(mat2x4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0), (true ? mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0) : _GLF_FUZZED(mat3x4(-27.47, -0.2, -2.6, 61.91, 0.4, 7.0, 8.8, 224.928, -42.55, 820.773, 8.4, -647.370)))))))), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_IDENTITY(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), clamp(float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), float(mat2x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-950.803)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))), float(mat2x4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0))))))), float(_GLF_FUZZED(732.656)), bool(false))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)))))))), _GLF_IDENTITY(0.0, float(mat2x4(0.0, sqrt(0.0), 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 0.0))), (false ? _GLF_FUZZED(44.84) : _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 1.0, 1.0, 0.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0)), 0.0, 0.0, 1.0, abs(0.0)))), 1.0))))))))), bvec2(true), _GLF_struct_6(mat4x2(1.0), true, 1, bvec2(true)), _GLF_struct_7(uvec3(1u), true, mat2(1.0)), _GLF_struct_8(1.0, mat2(1.0)), _GLF_struct_9(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), false, true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), false, true)))), false, false, false)))))), (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), false, true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(! (_GLF_IDENTITY(true, (true) && true)), false, true)))), false, false, false)))))), (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), vec2(mat4(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0), (true ? vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0)), (vec2(1.0)) * mat2(1.0)), vec2(mat4(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))), 0.0) : _GLF_FUZZED(vec3(-6.5, 8214.4467, 3.0)))))), 1, mat2x4(1.0), true)), _GLF_struct_13(1, _GLF_struct_11(ivec4(_GLF_IDENTITY(1, (1) << 0)), ivec3(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-4.2)), clamp((true ? 0.0 : _GLF_FUZZED(-4.2)), (true ? 0.0 : _GLF_FUZZED(-4.2)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false) ? 0.0 : _GLF_FUZZED(-4.2))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), 1u, mat4(1.0)), _GLF_struct_12(mat3(1.0), vec3(1.0), vec4(1.0), vec2(1.0))), _GLF_struct_14(1, vec2(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, (0.0) + 0.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2010.6087)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-6.1) : float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2010.6087, mix(float(_GLF_FUZZED(-5.6)), float(2010.6087), bool(true))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(-549.122)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), false))), true)))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), max(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), sqrt(0.0), round(length(normalize(1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, sqrt(0.0), round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) / 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, sqrt(0.0), round(length(normalize(1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, sqrt(0.0), round(length(normalize(1.0))))))), float(_GLF_FUZZED((5.5 / _GLF_IDENTITY(60.62, max(60.62, 60.62))))), bool(false)))) * 1.0)) / _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), 0.0)), dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, abs(0.0), 0.0)))), _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)))), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y)))), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), mat2x3(mat4(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))))))))))))), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true)))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true)))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) && true))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, cos(0.0), 1.0, 0.0), mat3x2(mat3x2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, cos(0.0), 1.0, 0.0)))))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))) || false))))))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, (false) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) && true)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), float(_GLF_IDENTITY(_GLF_FUZZED(-964.042), _GLF_IDENTITY((false ? _GLF_FUZZED(74.34) : _GLF_FUZZED(-964.042)), ((false ? _GLF_FUZZED(74.34) : _GLF_FUZZED(-964.042))) / 1.0))), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.8)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0, length(0.0), 1.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_15.subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_15.subgroup_local_id + 1, (_GLF_struct_replacement_15.subgroup_local_id + 1) + 0u)) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_DEAD(false))), false, true, _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec4(bool(bool(_GLF_DEAD(false))), false, true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec3(-781.585, 70.43, 6.4).y / 6717.8201)), _GLF_FUZZED(-477.554)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 1.0, 1.0, 0.0))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat3x4(1.0), _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | 0)))), 4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4231.0731)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), 1.0)))), max(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4231.0731)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), 1.0)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4231.0731)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), 1.0))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1]) - 0.0), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), bool(true))))).y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), bool(true))))).y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-2.4) : (injectionSwitch[1]))) - 0.0), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-2.4) : (_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0), injectionSwitch[1]))))) - 0.0), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), bool(true)))) / 1.0))).y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.5)), float(1.0), bool(true))), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(float(false))), min(float(_GLF_FUZZED(float(false))), float(_GLF_FUZZED(float(false))))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x4(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]) - 0.0, mix(float((injectionSwitch[1]) - 0.0), float(_GLF_FUZZED(72.00)), bool(false)))), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), bool(true))))).y, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(318.161))), (false ? _GLF_FUZZED(7.3) : 1.0)))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8909.8141))), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), float(mat2(float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.3) : 1.0))), (min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.3) : 1.0)))) + 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)), 0.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(faceforward(-6.1, 9.6, -4.9)) : 0.0)), 0.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), cos(0.0), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.2)))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0)), 0.0, 1.0, 0.0)), max(determinant(mat3(0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) + 0.0) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.7) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15.subgroup_local_id % 2, (_GLF_struct_replacement_15.subgroup_local_id % 2) >> 0u)) == 0, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15.subgroup_local_id, 1u * (_GLF_struct_replacement_15.subgroup_local_id)) % 2), ((_GLF_struct_replacement_15.subgroup_local_id % 2)) * 1u) == 0, true, true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_replacement_16.read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) >> (57036 & 0)), 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), (float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-4.1), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-4.1), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-4.1)) / 1.0), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-4.1), mix(float(_GLF_FUZZED((false ? -207.549 : -7393.9984))), float(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(-4.1)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(_GLF_IDENTITY(-4.1, (true ? -4.1 : _GLF_FUZZED(-488.814)))), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(_GLF_IDENTITY(-4.1, (true ? -4.1 : _GLF_FUZZED(-488.814))))) / 1.0))) > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   _GLF_struct_replacement_16.read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, clamp(2, 2, 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_16.read, 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)))), ((~ (4))) << 0))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), false), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), true && (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))), 1, 1)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || false))))), false))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))), 1, 1)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || false))))), false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))), 1, 1)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || false))))), false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))), 1, 1)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || false))))), false))))).x > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + ((0 | 0)))), 1, 1)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || false))))), false))).x > injectionSwitch.y), false), true, true)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_IDENTITY(_GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + (_GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)))), 1, 1))))), min(_GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + (_GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)))), 1, 1))))), _GLF_IDENTITY(_GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + (_GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)))), 1, 1))))), (_GLF_IDENTITY(_GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + (_GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)))), 1, 1))))), mix(float(_GLF_FUZZED(2630.2984)), float(_GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + (_GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)))), 1, 1)))))), bool(true)))) / 1.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))))))), false))).x > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(float(_GLF_IDENTITY(-23924, int(ivec3(_GLF_IDENTITY(-23924, (-23924) ^ _GLF_IDENTITY((0 | 0), 0 + ((_GLF_IDENTITY(0, clamp(0, 0, 0)) | 0)))), 1, 1)))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || false))))), false))).x > injectionSwitch.y), false), true, true))))) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))) || false), false || (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))), false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))) || false))))))), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), bool(bvec4(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false, true, true))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), bool(bvec4(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false, true, true))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), bool(bvec4(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false, true, true))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), bool(bvec4(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false, true, true))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))))))))))), false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), bool(bvec4(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), true)))))))))), false || ((false))), false, true, true))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)))))))))), (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), false || (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || ((false))), bool(bvec4(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false)))))), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))), false, true, true))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))))))))))) && true)) && true), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), true)))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, ! (! (false))), true), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true)) && true), false, _GLF_IDENTITY(true, bool(bvec2(true, true)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, false || (false))), false, true), false))), true))))))))))))))))), ! (! ((! (_GLF_IDENTITY(false, false || (false)))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, min((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) || false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, true && (false))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((_GLF_IDENTITY(false, true && (false))), false)), false, false, false)), bool(bvec4(bool(bvec4(bool(bvec2((_GLF_IDENTITY(false, true && (false))), false)), false, false, false)), false, false, false)))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bool((_GLF_DEAD(false)) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, true))), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
