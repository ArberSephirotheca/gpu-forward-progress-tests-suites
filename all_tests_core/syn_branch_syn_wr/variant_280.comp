#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), (bool(bool(! (! (false))))) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false, false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false, _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false, true)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), abs(0.0), 1.0))), injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(normalize(injectionSwitch)) : injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false), true, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, sinh(vec2(8149.9164, 9.9)))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(9018.2359)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, _GLF_IDENTITY(1.0, exp(0.0) * (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), clamp(_GLF_FUZZED(-5.5), _GLF_IDENTITY(_GLF_FUZZED(-5.5), 1.0 * (_GLF_FUZZED(-5.5))), _GLF_FUZZED(-5.5))), _GLF_FUZZED(9018.2359)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]))), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, sinh(vec2(8149.9164, 9.9)))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(9018.2359)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), mat2(1.0) * _GLF_IDENTITY((vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), clamp(_GLF_FUZZED(-5.5), _GLF_IDENTITY(_GLF_FUZZED(-5.5), 1.0 * (_GLF_FUZZED(-5.5))), _GLF_FUZZED(-5.5))), _GLF_FUZZED(9018.2359)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]))), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), min((vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), clamp(_GLF_FUZZED(-5.5), _GLF_IDENTITY(_GLF_FUZZED(-5.5), 1.0 * (_GLF_FUZZED(-5.5))), _GLF_FUZZED(-5.5))), _GLF_FUZZED(9018.2359)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]))), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), clamp(_GLF_FUZZED(-5.5), _GLF_IDENTITY(_GLF_FUZZED(-5.5), 1.0 * (_GLF_FUZZED(-5.5))), _GLF_FUZZED(-5.5))), _GLF_FUZZED(9018.2359)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]))), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))), injectionSwitch)).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, sinh(vec2(8149.9164, 9.9)))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), _GLF_FUZZED(9018.2359)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.5), clamp(_GLF_FUZZED(-5.5), _GLF_IDENTITY(_GLF_FUZZED(-5.5), 1.0 * (_GLF_FUZZED(-5.5))), _GLF_FUZZED(-5.5))), _GLF_FUZZED(9018.2359)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) >> 0)]), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(48.34)), bvec2(true, false))))[_GLF_IDENTITY(1, (1) >> 0)]))), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), injectionSwitch)).y)))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec4(bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false)), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false)))))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9365.5951))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), tan(0.0)), clamp(vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), tan(0.0)), vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), tan(0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(0.7), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(0.7), (false ? _GLF_FUZZED(-9.9) : _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(0.7), max(true ? injectionSwitch.y : _GLF_FUZZED(0.7), true ? injectionSwitch.y : _GLF_FUZZED(0.7)))))) / 1.0))), tan(0.0)), mix(vec2(_GLF_FUZZED(331.854), (vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), tan(0.0)))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), tan(0.0)))[0], _GLF_FUZZED(5085.6333)), bvec2(true, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (0u & _GLF_IDENTITY((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), max(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(false, ! (! (false))) ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u), 1u * (_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u)))), (_GLF_IDENTITY(min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u), 1u * (_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u)))), max(min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u), 1u * (_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u)))), min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u), 1u * (_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))))))) ^ 0u)), 1u))))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), clamp(uint((_GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), _GLF_IDENTITY(1u, (0u & (114740u ^ 161718u)) ^ (1u))))))))), uint(_GLF_IDENTITY((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_IDENTITY(119782u, (false ? _GLF_FUZZED(workgroup_base) : 119782u)) : 66655u) / 1u))), 1u)))))), 0u ^ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(119782u, 0u | (119782u)) : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)))))))))))))), (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), max(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : _GLF_IDENTITY(66655u, clamp(66655u, 66655u, _GLF_IDENTITY(_GLF_IDENTITY(66655u, min(66655u, 66655u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(66655u, min(66655u, 66655u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(66655u, min(66655u, 66655u)), (_GLF_IDENTITY(66655u, min(66655u, 66655u))) << 0u))), _GLF_IDENTITY(66655u, min(66655u, 66655u)), _GLF_IDENTITY(_GLF_IDENTITY(66655u, min(66655u, 66655u)), 0u | (_GLF_IDENTITY(66655u, min(66655u, 66655u)))))))), _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), (uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : _GLF_IDENTITY(66655u, clamp(66655u, 66655u, _GLF_IDENTITY(66655u, min(66655u, 66655u)))), _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)))))))) / 1u), clamp(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(false ? 119782u : 66655u, 1u), uvec2(0u, 0u) + (uvec2(false ? 119782u : 66655u, 1u)))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u), (_GLF_IDENTITY(false ? 119782u : 66655u, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? 119782u : 66655u) / 1u)) + 0u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? _GLF_IDENTITY(119782u, (119782u) * 1u) : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))))))))) | (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(false ? 119782u : 66655u, 1u), (_GLF_IDENTITY(uvec2(false ? 119782u : 66655u, 1u), clamp(uvec2(false ? 119782u : 66655u, 1u), uvec2(false ? 119782u : 66655u, 1u), uvec2(false ? 119782u : 66655u, 1u)))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), max(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uint(1u)))) | (_GLF_IDENTITY(1u, (1u) - 0u))))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? 119782u : 66655u) / 1u))), 1u))))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(false ? 119782u : 66655u, false ? 119782u : 66655u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(false, false || (false)) ? 119782u : 66655u, 1u)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u), (uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u)) >> uvec2(0u, 0u))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u), (uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u)) >> uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u), (uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u)) >> uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u), (uvec2(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, max(_GLF_IDENTITY(false ? 119782u : 66655u, 0u ^ (false ? 119782u : 66655u)), false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))), 1u)) >> uvec2(0u, 0u))))))))))), clamp(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? _GLF_IDENTITY(119782u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 119782u)) : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_IDENTITY(119782u, 0u | (119782u)) : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)))))))))))))))) ^ (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, (0u & _GLF_IDENTITY((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) - (0u ^ 0u)), min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))) ? 119782u : 66655u) / 1u))), 1u))))))), max(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(_GLF_IDENTITY(false ? 119782u : 66655u, clamp(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, ~ (~ (false ? 119782u : 66655u))), false ? 119782u : 66655u)), _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(_GLF_IDENTITY(false ? 119782u : 66655u, clamp(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, ~ (~ (false ? 119782u : 66655u))), false ? 119782u : 66655u)), _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))), uint(uvec2((false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(_GLF_IDENTITY(false ? 119782u : 66655u, clamp(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, ~ (~ (false ? 119782u : 66655u))), false ? 119782u : 66655u)), _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))), 0u)))) / 1u))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | 0u)))))), 1u))))))), clamp(uint((_GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_FUZZED(50537u) : false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))))), max(_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_FUZZED(50537u) : false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_FUZZED(50537u) : false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))))), ~ (~ (_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_FUZZED(50537u) : false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)))))))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(false ? 119782u : 66655u, 1u), (_GLF_IDENTITY(uvec2(false ? 119782u : 66655u, 1u), (uvec2(false ? 119782u : 66655u, 1u)) << uvec2(0u, 0u))) | (uvec2(false ? 119782u : 66655u, 1u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : _GLF_IDENTITY(66655u, max(66655u, 66655u)), (false ? 119782u : 66655u) / 1u))), 1u)), uint(uvec2(uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY((false ? 119782u : 66655u), uint(uvec4((false ? 119782u : 66655u), 0u, 1u, 1u))) / 1u))), 1u)))))))))))), (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), max(uint((_GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : _GLF_IDENTITY(66655u, (_GLF_IDENTITY(66655u, (66655u) / (0u ^ 1u))) + 0u), _GLF_IDENTITY(min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u)), (_GLF_IDENTITY(min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u)), (min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))) / 1u)) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)))))), ((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))) + 0u) | 0u))), _GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), clamp(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : _GLF_IDENTITY(66655u, (66655u) / 1u), 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))))))))) | (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), max(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), _GLF_IDENTITY(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(_GLF_IDENTITY(false ? 119782u : 66655u, (false ? _GLF_FUZZED(workgroup_base) : false ? 119782u : 66655u)), (false ? 119782u : 66655u) / 1u))), 1u))))))), clamp(uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY((false ? 119782u : 66655u) / 1u, 0u | ((false ? 119782u : 66655u) / 1u))))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : _GLF_IDENTITY(66655u, min(_GLF_IDENTITY(66655u, max(66655u, 66655u)), _GLF_IDENTITY(66655u, 0u | (66655u)))), 1u)), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u))))))), uint((_GLF_IDENTITY(false ? 119782u : 66655u, _GLF_IDENTITY(uint(uvec2(false ? 119782u : 66655u, 1u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY(false ? 119782u : 66655u, min(false ? 119782u : 66655u, _GLF_IDENTITY(false ? 119782u : 66655u, (false ? 119782u : 66655u) / 1u))), 1u)), 0u, 0u, 1u))))))))))))))))) ^ (workgroup_base)) + subgroup_base) << 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), _GLF_IDENTITY(0 + (~ (64)), (0 + (~ (64))) | (_GLF_IDENTITY(0 + (~ (64)), min(0 + (~ (64)), 0 + (~ (64))))))))), 4);
 if((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)), min(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)), clamp(subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)), subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2)), (subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2))) ^ 0u))), subgroup_local_id % _GLF_IDENTITY(2, 0 ^ (2))))) == 0)
  {
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8914.0904)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, log(1.0), 1.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (0 ^ 1), (true ? (4) / (0 ^ 1) : _GLF_FUZZED(99988)))), _GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4)))), 64, _GLF_IDENTITY(2, 0 | (2))), max(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / (0 ^ 1)), _GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) ^ 0), 4), (min(_GLF_IDENTITY(4, (4) ^ 0), 4)) - 0)))), 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / (0 ^ 1)), _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4)))), 64, 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))))).x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))).x)), mix(float(_GLF_FUZZED(405.174)), float(float(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0))).x))), bool(true)))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, true && (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true)))) || (bool(false)))) && true)), true && (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false, true)))) || (bool(false)))) && true)))), (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch[1])).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
