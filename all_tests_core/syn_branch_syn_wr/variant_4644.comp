#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))) || false)), _GLF_IDENTITY((true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), false, false, false)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))))), false, false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), false, false, false))))))), true, true, true))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true, bool(bvec4((true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), false || ((_GLF_IDENTITY(! (false), false || (! (false)))))))))) && true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), false, false, false)))), true && ((_GLF_IDENTITY(false, ! (! (false))))))) && true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max(_GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))))))).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(false, false || (false)), true))), bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true))), true, true)))) && true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true, false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true, false))))))))), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true), (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))))) && true))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(756.515, -5.1)))).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.2 * 183.343))), vec2(_GLF_FUZZED(835.772), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.2 * 183.343))), vec2(_GLF_FUZZED(835.772), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.2 * 183.343))), vec2(_GLF_FUZZED(835.772), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.2 * 183.343))), vec2(_GLF_FUZZED(835.772), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))))))))), ! (! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.2 * 183.343))), vec2(_GLF_FUZZED(835.772), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.2 * 183.343))), vec2(_GLF_FUZZED(835.772), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))))), (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))), false))))))))))) && true), (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))))), false))))))) && true)))))) || false)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED((-7.4)), _GLF_IDENTITY((_GLF_FUZZED((-7.4))), mix(float((_GLF_FUZZED((-7.4)))), float(_GLF_FUZZED(-41.87)), bool(false))) - 0.0)), vec2(_GLF_FUZZED(-4.5), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true))), (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), false))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), min((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-13.78, 729.810))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, exp(0.0)))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, round(length(normalize(exp(0.0)))), length(vec2(0.0, 0.0)), 0.0, 1.0, tan(0.0)), transpose(transpose(mat4x3(injectionSwitch, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(-4232.8441, 3.7, -2.7, 2.4)))), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-68.13)), float(0.0), bool(true))), 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 1.0, round(length(normalize(exp(0.0)))), length(vec2(0.0, 0.0)), 0.0, 1.0, tan(0.0))))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.9))), 1.0, tan(0.0)))), (injectionSwitch) - vec2(0.0, 0.0)).y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0)))), (injectionSwitch) - vec2(0.0, 0.0)).y))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0)))), (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-72.84)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, sqrt(1.0), 1.0, 0.0, sin(0.0)))), 1.0, 0.0, tan(0.0), length(log(1.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-881.674) : injectionSwitch.y))))))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u | ((workgroup_base + subgroup_base))))), (workgroup_base + subgroup_base))) << 0u)) ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u + (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(subgroup_base, 1u), ~ (~ (uvec2(subgroup_base, 1u)))))))))), max(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ _GLF_IDENTITY(((workgroup_base + subgroup_base)), max(((workgroup_base + subgroup_base)), _GLF_IDENTITY(((workgroup_base + subgroup_base)), ~ (~ (((workgroup_base + subgroup_base)))))))), (workgroup_base + subgroup_base))) << 0u)) ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, max(0u, 0u)))))), clamp(uint(uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (0u) | 0u))))))), uint(uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << 0u)))), uint(uint(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (0u) << 0u))))))))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base))) << 0u)) ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), (0u) | 0u)))))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 1u, 1u)), clamp(uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base))) << 0u)) ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) + 0u) ^ (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 1u, 1u)), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + subgroup_base), max(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base))) << 0u)) ^ (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))), ((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) >> 0u)) ^ 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))), ((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) >> 0u)) ^ 0u)))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), 0u ^ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))), ((uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) >> 0u)) ^ 0u))))) ^ 0u)) - 0u) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 1u, 1u)), uint(uvec4((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), max(_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))), (workgroup_base + subgroup_base))) << 0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u ^ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 1u, 0u)))))), (0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) | (0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))), ~ (~ ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u ^ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 1u, 0u)))))), (0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u))))) | (0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) | 0u)))))))), 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u, 1u, 1u))))) * 1u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-507.316)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-507.316))) + abs(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(vec3(-7.8, _GLF_IDENTITY(-6523.4678, mix(float(-6523.4678), float(_GLF_FUZZED((-7.7 - vec2(15.63, -279.355).r))), bool(false))), -5331.6859).x), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.9)))) / 1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.6)), bool(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | 0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY(max(_GLF_IDENTITY(2, (2) | 0), 2), 0 | (_GLF_IDENTITY(max(_GLF_IDENTITY(2, (2) | 0), 2), (max(_GLF_IDENTITY(2, (2) | 0), 2)) - 0))))), 0 | (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2))), 0 | (0 ^ (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2))))))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))), false || (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1447.2435), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6954.8413)), bool(false))), 0.0))[0], max(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))) - vec2(0.0, 0.0))[0])), _GLF_FUZZED(-7095.3867)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, determinant(mat3(1.0, cos(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, determinant(mat3(1.0, cos(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, determinant(mat3(1.0, cos(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec2(7.7, 5.2)[1]))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, 1.0 * (0.0)), determinant(mat3(1.0, cos(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))) * mat2(1.0), ((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, determinant(mat3(1.0, cos(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-347.330) : 0.0)) : _GLF_FUZZED(-12.29)))), float(_GLF_FUZZED(231.545)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 0.0, determinant(mat3(1.0, cos(0.0), 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))) * mat2(1.0)) + vec2(0.0, 0.0)))).y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))), true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(4901.7862) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(false ? _GLF_FUZZED(4901.7862) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(false ? _GLF_FUZZED(4901.7862) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), false ? _GLF_FUZZED(4901.7862) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), false ? _GLF_FUZZED(4901.7862) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0)))) + 0.0), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.5)), bool(false)))), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(446.405))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(sqrt(-77.47), (_GLF_IDENTITY(sqrt(-77.47), float(_GLF_IDENTITY(vec2(sqrt(-77.47), cos(0.0)), (vec2(sqrt(-77.47), cos(0.0))) / vec2(1.0, 1.0))))) * 1.0)))), (0.0) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-86.88)), float(0.0), bool(true))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3129.9235) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0)))))), bool(true))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(446.405))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(sqrt(-77.47))), ((true ? 0.0 : _GLF_FUZZED(sqrt(-77.47)))) - determinant(mat3(0.0, 0.0, 0.0, 0.0, length(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)))), _GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(-3.0)), bool(false)))), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-274.757)))), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(446.405))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sqrt(-77.47)))), (0.0) - 0.0), 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(322.870) : _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(446.482)), float(0.0), bool(true))) : _GLF_FUZZED(7.6))))), 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y) / 1.0), tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))) - 0.0), 0.0, 0.0)))))), bool(true)))))), float(_GLF_FUZZED(2.1)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false)))))))))))))), min(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) + 0.0), injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-53.32, 1.4))))))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.3))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.3))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.3))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) - vec2(0.0, 0.0))))).y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(38.71) : 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.9))), 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(_GLF_IDENTITY(false, (false) && true))))) * 1.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), bool(true)))), float(_GLF_IDENTITY(mat3(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(sqrt(1.0), float(mat3x2(sqrt(1.0), 1.0, 1.0, 1.0, abs(1.0), 0.0))))))), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.1)), min(float(_GLF_FUZZED(-1.1)), float(_GLF_FUZZED(-1.1)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.91) : injectionSwitch.y)), _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false))), (_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false)))) + abs(0.0))) * 1.0), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(79.57))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), (true ? float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.91) : injectionSwitch.y)), _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false))), (_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false)))) + abs(0.0))) * 1.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(79.57))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(-89.13))), bool(true)))), sqrt(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.5)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(sqrt(1.0), float(mat3x2(sqrt(1.0), 1.0, 1.0, 1.0, abs(1.0), 0.0))))))), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.1)), min(float(_GLF_FUZZED(-1.1)), float(_GLF_FUZZED(-1.1)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.91) : injectionSwitch.y)), _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false))), (_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false)))) + abs(0.0))) * 1.0), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(79.57))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), (true ? float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(41.91) : injectionSwitch.y)), _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false))), (_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(852.531)), bool(false)))) + abs(0.0))) * 1.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(79.57))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(-89.13))), bool(true)))), sqrt(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0), vec2(0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ 918.267)))), _GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), clamp(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), (_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))) - 0.0), _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), clamp(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), (_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))) - 0.0), _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)))) : _GLF_FUZZED(0.8)))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(-69.18), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-69.18), (_GLF_FUZZED(-69.18)) / 1.0)), float(_GLF_FUZZED(vec3(6453.0302, -31.33, -68.27).p)), bool(false)))), bool(false))), 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, tan(0.0), sin(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.7))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-38.89))), 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.6)), float(1.0), bool(true))))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0))) + 0.0), 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), bool(true)))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), bool(true)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), bool(true))))), (min(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-915.800))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), mix(float(_GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), (true ? (false ? _GLF_FUZZED(1.1) : 0.0) : _GLF_FUZZED(-8.5)))), float(_GLF_FUZZED(5.3)), bool(_GLF_IDENTITY(false, (false) && true))))), 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), bool(true)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), bool(true)))))) * 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(2.1, mix(float(2.1), float(_GLF_FUZZED(198.586)), bool(false))))), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3))), mat2(1.0) * ((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4132.2034, 7.3)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(4132.2034, 7.3)), mix(vec2(_GLF_FUZZED(-232.389), (_GLF_FUZZED(vec2(4132.2034, 7.3)))[1]), vec2((_GLF_FUZZED(vec2(4132.2034, 7.3)))[0], _GLF_FUZZED(80.79)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), _GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(length(20.82)) : sin(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-51.73) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(vec2(0.0, 0.0)))))), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(984.697) : 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y) * 1.0)) - 0.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)))))) / 1.0))))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1348.6868))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.3)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED((mat3x2(-410.737, 8072.6156, 0.4, -4.1, -41.86, -461.114) * mat4x3(3.9, -673.341, -3.0, -6.9, -3823.4219, -74.09, -91.25, -8.2, 84.89, 709.846, 67.17, -4.0))) : mat4x2(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(false, (false) || false) ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(728.600)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, log(1.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, log(1.0), 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.1), (false ? _GLF_FUZZED(360.951) : _GLF_FUZZED(-1.1)))), float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), min((false ? _GLF_FUZZED(1.1) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), ((false ? _GLF_FUZZED(1.1) : 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))))), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.7, -54.79)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), ((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) - 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1348.6868))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.3)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED((mat3x2(-410.737, 8072.6156, 0.4, -4.1, -41.86, -461.114) * mat4x3(3.9, -673.341, -3.0, -6.9, -3823.4219, -74.09, -91.25, -8.2, 84.89, 709.846, 67.17, -4.0))) : mat4x2(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(false, (false) || false) ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(728.600)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, log(1.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, log(1.0), 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.1), (false ? _GLF_FUZZED(360.951) : _GLF_FUZZED(-1.1)))), float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), min((false ? _GLF_FUZZED(1.1) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), ((false ? _GLF_FUZZED(1.1) : 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))))), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.7, -54.79)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), ((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) - 0.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat3(float(mat4x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1348.6868))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(-1.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.1) : 0.0)), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.3)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.8)), bool(false)))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED((mat3x2(-410.737, 8072.6156, 0.4, -4.1, -41.86, -461.114) * mat4x3(3.9, -673.341, -3.0, -6.9, _GLF_IDENTITY(-3823.4219, min(-3823.4219, -3823.4219)), -74.09, -91.25, -8.2, 84.89, 709.846, 67.17, -4.0))) : mat4x2(_GLF_IDENTITY(sin(0.0), float(mat4x2(sin(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0))))), 1.0, 0.0, 0.0, 0.0))))), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(false, (false) || false) ? -47.08 : -4.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(728.600)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, log(1.0), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0))), log(1.0), 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))), 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + determinant(mat2(0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0))), 0.0, 0.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.1), (false ? _GLF_FUZZED(360.951) : _GLF_FUZZED(-1.1)))), float(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).y, tan(0.0), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.y, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), min((false ? _GLF_FUZZED(1.1) : 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(1.1) : 0.0), ((false ? _GLF_FUZZED(_GLF_IDENTITY(1.1, _GLF_IDENTITY(float(mat2x3(1.1, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(1.1, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0)), 1.0 * (float(mat2x3(1.1, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0)))), float(mat2x3(1.1, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0)), float(mat2x3(1.1, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0), 0.0)))))) : 0.0)) * _GLF_ONE(1.0, injectionSwitch.y))))), 0.0 + (0.0)))))))), bool(true)))), float(_GLF_FUZZED(2.1)), bool(false))))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.7, -54.79)) : injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(4132.2034, 7.3)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))))), vec2(0.0, 0.0))), ((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))), vec2(0.0, 0.0)))))).y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) - 0.0))) : _GLF_FUZZED(-698.970))))))) && _GLF_IDENTITY(true, bool(bool(true)))))) && true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) && true), false, true, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))), 2), uint(_GLF_IDENTITY(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))), 2), 0u, 1u), clamp(uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))), 2), 0u, 1u), uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))), 2), 0u, 1u), uvec3(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, 0 | (64)))), 2), 0u, 1u)))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), ~ (~ (virtual_gid))))))), max(_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))) | (_GLF_FUZZED(subgroup_size))) : _GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), ~ (~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), (false ? _GLF_FUZZED(workgroup_base) : ~ ((virtual_gid)))))))))))))), _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (virtual_gid), uint(_GLF_IDENTITY(uvec2(~ (virtual_gid), 0u), uvec2(uvec2(uvec2(~ (virtual_gid), 0u))))))), (~ (~ (virtual_gid))) | (~ (~ (virtual_gid))))))))))), (virtual_gid) | _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(((virtual_gid)), ~ (~ (((virtual_gid))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (false ? _GLF_FUZZED(read) : (virtual_gid))) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(1.2)), bool(false))))), (virtual_gid) | (virtual_gid)), virtual_gid))], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-52926))), _GLF_IDENTITY(64, (64) - (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (0))) | (0)) | 0)), _GLF_IDENTITY(2, 0 + (2)));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || (false))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || (false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))) && true)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(64, int(int(64))))), _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
