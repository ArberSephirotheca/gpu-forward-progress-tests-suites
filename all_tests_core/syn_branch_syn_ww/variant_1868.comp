#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 uint _f0;
 bool _f1;
 uvec3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 uvec3 _f1;
 int _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 bvec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat3x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 uint workgroup_base;
 _GLF_struct_4 _f3;
 vec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false)))) && true))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) / 1.0), 0.0)) * (injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)), 0.0, sin(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))).y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))))).x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u))))))), (uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)))))))) | (uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)), min(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) / 1u)) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (1u ^ 1u))))))))) * (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize[1]), (~ (gl_WorkGroupSize[1])) ^ 0u))), gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(subgroup_size)))) / 1u);
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat2x4(1.0), mat2x4(1.0), _GLF_struct_1(_GLF_struct_0(bvec4(true), mat3x2(1.0), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uint(1u))), _GLF_IDENTITY(1u, (1u) ^ 0u)))))), workgroup_size * workgroup_id, _GLF_struct_4(_GLF_struct_2(mat2(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ uvec3(0u, 0u, 0u)), 1, mat3x4(1.0)), _GLF_struct_3(1u, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), uvec3(1u), uvec3(1u)), bvec2(_GLF_IDENTITY(true, false || (true))), mat3x2(1.0)), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), float(float(clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), max(1.0, 1.0))), mix(vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(670.060)), mix(float(_GLF_FUZZED(-1.1)), float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(670.060))), bool(true)))), max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(abs(_GLF_IDENTITY(59.92, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(59.92, max(_GLF_IDENTITY(59.92, float(mat2x3(59.92, 1.0, 0.0, 1.0, 0.0, 0.0))), 59.92)), 0.0), clamp(vec2(_GLF_IDENTITY(59.92, max(_GLF_IDENTITY(59.92, float(mat2x3(59.92, 1.0, 0.0, 1.0, 0.0, 0.0))), 59.92)), 0.0), vec2(_GLF_IDENTITY(59.92, max(_GLF_IDENTITY(59.92, float(mat2x3(59.92, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0))), 59.92)), 0.0), vec2(_GLF_IDENTITY(59.92, max(_GLF_IDENTITY(59.92, float(mat2x3(59.92, 1.0, 0.0, 1.0, 0.0, 0.0))), 59.92)), 0.0))))))))), 1.0, 1.0, 1.0))[0], _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.8) : 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0], float(float(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0]))), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0], float(vec2(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0], 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0], (_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) / _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(abs(59.92)))), 1.0, 1.0, 1.0))))[0]) / 1.0))))), (vec4(1.0))[1], _GLF_FUZZED(71.55), _GLF_FUZZED(46.46)), vec4(_GLF_FUZZED(_GLF_IDENTITY(-9963.5106, _GLF_IDENTITY(min(_GLF_IDENTITY(-9963.5106, (-9963.5106) * 1.0), -9963.5106), max(_GLF_IDENTITY(min(_GLF_IDENTITY(-9963.5106, (-9963.5106) * 1.0), -9963.5106), float(mat3x2(min(_GLF_IDENTITY(-9963.5106, (-9963.5106) * 1.0), -9963.5106), 0.0, 1.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(-9963.5106, (-9963.5106) * 1.0), -9963.5106))))), _GLF_FUZZED((-49.20 - -40.27)), _GLF_IDENTITY((vec4(1.0)), min((vec4(1.0)), (vec4(1.0))))[2], (vec4(1.0))[_GLF_IDENTITY(3, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) >> 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), 0 ^ ((3)))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), int(ivec3((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), 0, 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(6.7, _GLF_IDENTITY(-5.7, min(-5.7, -5.7)), 8546.7322, -61.83).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-991.306), min(_GLF_FUZZED(-991.306), _GLF_FUZZED(-991.306)))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (_GLF_IDENTITY(3, int(int(3))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) | 0))))))), max(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), 0 ^ ((3)))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), int(ivec3((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), 0, 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(6.7, _GLF_IDENTITY(-5.7, min(-5.7, -5.7)), 8546.7322, -61.83).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-991.306), min(_GLF_FUZZED(-991.306), _GLF_FUZZED(-991.306)))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (_GLF_IDENTITY(3, int(int(3))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) | 0))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), 0 ^ ((3)))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), int(ivec3((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), 0, 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(6.7, _GLF_IDENTITY(-5.7, min(-5.7, -5.7)), 8546.7322, -61.83).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-991.306), min(_GLF_FUZZED(-991.306), _GLF_FUZZED(-991.306)))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (_GLF_IDENTITY(3, int(int(3))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) | 0))))))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), 0 ^ ((3)))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), int(ivec3((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), 0, 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(6.7, _GLF_IDENTITY(-5.7, min(-5.7, -5.7)), 8546.7322, -61.83).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-991.306), min(_GLF_FUZZED(-991.306), _GLF_FUZZED(-991.306)))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (_GLF_IDENTITY(3, int(int(3))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) | 0))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), 0 ^ ((3)))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), int(ivec3((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), 0, 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(6.7, _GLF_IDENTITY(-5.7, min(-5.7, -5.7)), 8546.7322, -61.83).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-991.306), min(_GLF_FUZZED(-991.306), _GLF_FUZZED(-991.306)))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (_GLF_IDENTITY(3, int(int(3))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) | 0)))))))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), 0 ^ ((3)))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), int(ivec3((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), 0, 0)))) << (0 >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(6.7, _GLF_IDENTITY(-5.7, min(-5.7, -5.7)), 8546.7322, -61.83).a), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-991.306), min(_GLF_FUZZED(-991.306), _GLF_FUZZED(-991.306)))), bvec2(true, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (_GLF_IDENTITY(3, int(int(3))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) | 0)))))))))))), 0 ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((3), clamp((3), _GLF_IDENTITY((3), _GLF_IDENTITY(min((3), _GLF_IDENTITY((3), ((3)) >> 0)), (_GLF_IDENTITY(min((3), _GLF_IDENTITY((3), ((3)) >> 0)), (min((3), _GLF_IDENTITY((3), ((3)) >> 0))) | (min((3), _GLF_IDENTITY((3), ((3)) >> 0))))) ^ 0)), (3))), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), false, true)))))))) || false))) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ _GLF_IDENTITY((3), int(ivec2((3), 0))), (~ _GLF_IDENTITY(_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0))), (_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) | (_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ _GLF_IDENTITY(0, (0) / (0 ^ 1)))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ _GLF_IDENTITY(0, (0) / (0 ^ 1)))))), min(_GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ _GLF_IDENTITY(0, (0) / (0 ^ 1)))))), min(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ _GLF_IDENTITY(0, (0) / (0 ^ 1)))))), int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ _GLF_IDENTITY(0, (0) / (0 ^ 1)))))))), int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ _GLF_IDENTITY(0, (0) / (0 ^ 1))))))))) + 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (_GLF_IDENTITY(3, _GLF_IDENTITY(int(int(3)), (int(int(3))) << 0)))) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp(_GLF_IDENTITY((~ (3)) ^ 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (3)) ^ 0, 0 + ((~ (3)) ^ 0))), ~ (~ (~ (_GLF_IDENTITY((~ (3)) ^ 0, 0 + ((~ (3)) ^ 0)))))))), (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, 1)), (int(ivec2(3, 1))) - 0))), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, (_GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) - 0)) / 1), (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0)))), 0 | (int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0)))), 0 | (int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0)))), 0 | (int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1)))), max(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, (_GLF_IDENTITY((~ (3)) ^ 0, ~ (~ ((~ (3)) ^ 0)))) | ((~ (3)) ^ 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ _GLF_IDENTITY((3), ((3)) << 0), _GLF_IDENTITY((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, (_GLF_IDENTITY((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, ((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0) | (_GLF_IDENTITY((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, clamp((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0))))) << 0))))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY(_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0))), ~ (~ (_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), (_GLF_IDENTITY((3), ((3)) >> 0)) << 0))))))) ^ 0)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((3), (false ? _GLF_FUZZED(-24893) : _GLF_IDENTITY((3), ((3)) / 1))), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (_GLF_IDENTITY(3, 1 * (3)))) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (1 & 1))), (int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (1 & 1)))) ^ (1 ^ 1)))), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) << 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ _GLF_IDENTITY((3), ~ (~ ((3))))) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.9)), vec2(_GLF_FUZZED(277.937), (injectionSwitch)[1]), bvec2(false, true))).x)))))))))))), 0 ^ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, min(0, 0)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (_GLF_IDENTITY(3, _GLF_IDENTITY(int(int(3)), (int(int(3))) << 0)))) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp(_GLF_IDENTITY((~ (3)) ^ 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (3)) ^ 0, 0 + ((~ (3)) ^ 0))), ~ (~ (~ (_GLF_IDENTITY((~ (3)) ^ 0, 0 + ((~ (3)) ^ 0)))))))), (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec2(3, 1)), (int(ivec2(3, 1))) - 0))), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, (_GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) - 0)) / 1), (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0)))), 0 | (int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0)))), 0 | (int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0)))), 0 | (int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ _GLF_IDENTITY(0, (0) / 1), (~ (3)) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-12341))), (~ (3)) ^ 0))))))))))), (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) - 0), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, _GLF_IDENTITY((~ (3)) ^ 0, ((~ (3)) ^ 0) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1)))), max(~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, (_GLF_IDENTITY((~ (3)) ^ 0, ~ (~ ((~ (3)) ^ 0)))) | ((~ (3)) ^ 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ _GLF_IDENTITY((3), ((3)) << 0), _GLF_IDENTITY((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, (_GLF_IDENTITY((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, ((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0) | (_GLF_IDENTITY((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, clamp((~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0, (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0))))) << 0))))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY(_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0))), ~ (~ (_GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), (_GLF_IDENTITY((3), ((3)) >> 0)) << 0))))))) ^ 0)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((3), (false ? _GLF_FUZZED(-24893) : _GLF_IDENTITY((3), ((3)) / 1))), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (_GLF_IDENTITY(3, 1 * (3)))) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (int(ivec2(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((_GLF_IDENTITY(3, _GLF_IDENTITY(int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (1 & 1))), (int(ivec4(3, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, (1 & 1)))) ^ (1 ^ 1)))), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ (3)) ^ 0, (~ (3)) ^ 0))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0)), ((_GLF_IDENTITY(~ (3), (~ (3)) ^ 0))) << 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10489) : (_GLF_IDENTITY(~ (3), (~ _GLF_IDENTITY((3), clamp((3), (3), _GLF_IDENTITY((3), ((3)) << 0)))) ^ 0)))), (_GLF_IDENTITY(~ (3), _GLF_IDENTITY((~ (3)) ^ 0, int(int(_GLF_IDENTITY((~ (3)) ^ 0, clamp((~ (3)) ^ 0, (~ _GLF_IDENTITY((3), ~ (~ ((3))))) ^ 0, (~ (3)) ^ 0)))))))))) ^ 0), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.9)), vec2(_GLF_FUZZED(277.937), (injectionSwitch)[1]), bvec2(false, true))).x))))))))))))))))))]), bvec4(false, false, true, true))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u + (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)), (max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)), _GLF_IDENTITY(uint(uint(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)))), uint(uint(uint(uint(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)))))))))))))))), (0u + (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)), (max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)), _GLF_IDENTITY(uint(uint(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u)))), uint(uint(uint(uint(max(_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) - 0u), 1u)), 1u), uint(uvec4(min(1u, 1u), 0u, 0u, 1u))), min(1u, 1u))))))))))))))))) ^ 0u)) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u), ~ (~ (uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(subgroup_id, subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(subgroup_id, subgroup_id, subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))) ^ 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, 0u | (_GLF_struct_replacement_5.workgroup_base)))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (1u ^ 1u) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (~ (_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), max(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 1u * ((subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_struct_replacement_5.workgroup_base + subgroup_id * subgroup_size) | (_GLF_struct_replacement_5.workgroup_base + subgroup_id * subgroup_size), 1u * ((_GLF_struct_replacement_5.workgroup_base + subgroup_id * subgroup_size) | (_GLF_struct_replacement_5.workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size)))) | (uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), min(uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), uint(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), 0u | (subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size)))))))) / 1u)), uint(uint(_GLF_struct_replacement_5.workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), max(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), ~ (64)))), ~ (~ ((_GLF_IDENTITY(~ (64), max(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), ~ (64)))))))), 4);
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, true && ((false) && true))))))))));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) << 0)), 64, 4);
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)).y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-69160))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(96473) : _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true)), false || (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true))))))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY((0), ((0)) ^ 0) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) / 1), _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), min((0) | (0), (0) | (0)))), clamp(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) | (0)), 0), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (ivec2(_GLF_IDENTITY(0, (0) | (0)), 0))))), (_GLF_IDENTITY(0, (0) | (0))) / 1), _GLF_IDENTITY(0, (0) | (0))))) : _GLF_FUZZED(min(-75155, _injected_loop_counter)))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))), ! (! (! ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)), ! (_GLF_IDENTITY(! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))), ! (! (! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))))), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5918.9513)), vec2(_GLF_FUZZED(-43.24), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))) || false), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) * 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true)))), true, false))))), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec4(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true)))), true, false))))), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))))), ! (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0))) > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) && true))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), 1.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), determinant(mat2(1.0, 0.0, sin(0.0), 1.0))))))), _GLF_IDENTITY(float(vec3(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), 1.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + tan(0.0))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), 1.0))))))), 1.0, 0.0)), mix(float(float(vec3(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, round(length(normalize(1.0))), 1.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), 1.0))), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + tan(0.0))), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 0.0, sin(0.0), 1.0))))))), 1.0, 0.0))), float(_GLF_FUZZED(6.3)), bool(false))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, false)))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))).x) - 0.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0)))))))), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))), exp(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6665.2882)), bool(false))), 0.0, tan(0.0), 0.0)))))), 0.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, tan(0.0), 0.0)))))), 0.0))).x) - 0.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))))), min(float(_GLF_IDENTITY(mat2x3(0.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-1665.1926)), bool(false))), 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, cos(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-558.604)))), 1.0, 0.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0)))))))), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false)))) || false), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0)))), mix(vec2((_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0)))))[0], (_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0)))))[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED((7.2 - -472.562))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false), ! (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (cos(vec2(0.0, 0.0))), (mat2(1.0) * (cos(vec2(0.0, 0.0)))) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), (true ? (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), mat2(1.0) * (cos(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(vec2((injectionSwitch) / cos(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(4.4)), vec2((vec2((injectionSwitch) / cos(vec2(0.0, 0.0))))[0], (vec2((injectionSwitch) / cos(vec2(0.0, 0.0))))[1]), bvec2(true, true)))))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-0.9, 4499.8011)))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, sin(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat4(-38.60, -99.95, 32.36, -2.3, 1.1, -490.563, 3.8, 56.05, -341.790, 1054.1547, -3.9, -76.23, -6.6, -5.9, -2.4, 2.9)) : mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, sin(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))))))))) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED((73.19 * -6.4)), _GLF_FUZZED(9202.9988)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0))).x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) / cos(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(73.39, 8.7).x) : _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch))))) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), ((injectionSwitch)) * vec2(1.0, 1.0)) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(41.13), _GLF_FUZZED(7907.4901)), vec2((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), cos(vec2(0.0, 0.0))))).x)) > injectionSwitch.y))))) || false))) || false)) && true))), (false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), _GLF_IDENTITY((true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)), ((true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0))), (injectionSwitch) / cos(vec2(0.0, 0.0)))), mix(vec2((_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0)))))))), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0)))))[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), _GLF_IDENTITY(((injectionSwitch) / cos(vec2(0.0, 0.0))) * mat2(1.0), (((injectionSwitch) / cos(vec2(0.0, 0.0))) * mat2(1.0)) * mat2(1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), clamp((injectionSwitch) / cos(vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) / cos(vec2(0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), vec2(mat3x2((injectionSwitch) / cos(vec2(0.0, 0.0)), 0.0, sqrt(1.0), 1.0, 0.0))))), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0)))))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED((7.2 - -472.562))), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED((7.2 - -472.562))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x2(vec2(0.0, 0.0), 0.0, 0.0, 0.0, 0.0))))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0)), (cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))) / vec2(1.0, 1.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], min((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[0])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(2.9, -32.50, 890.085, 2.8, -3.9, -630.496, 7258.6224, 63.80, -3.2, 2.9, 6.5, 8.5, 3.4, -3.4, 3.2, 3.9)) : mat4(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], min((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[0])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], min((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[0])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(2.9, -32.50, 890.085, 2.8, -3.9, -630.496, 7258.6224, 63.80, -3.2, 2.9, 6.5, 8.5, 3.4, -3.4, 3.2, 3.9)) : mat4(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], min((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[0])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], min((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[0])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(2.9, -32.50, 890.085, 2.8, -3.9, -630.496, 7258.6224, 63.80, -3.2, 2.9, 6.5, 8.5, 3.4, -3.4, 3.2, 3.9)) : mat4(_GLF_IDENTITY((cos(vec2(0.0, 0.0)))[0], min((cos(vec2(0.0, 0.0)))[0], (cos(vec2(0.0, 0.0)))[0])), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), _GLF_FUZZED(-517.050)), vec2(_GLF_FUZZED((vec4(-65.64, 5.9, 6.8, -678.070).w)), (cos(vec2(0.0, 0.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch))) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0)), cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), ((injectionSwitch) / cos(vec2(0.0, 0.0))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || _GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))), true)))))) || false), ! (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(mat2(1.0) * (cos(vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(mat2x4(mat2(1.0) * (cos(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(4.1, 278.884, 3.0, -1.5, 2132.7844, -566.029, 1.6, 2.6)) : mat2x4(mat2(1.0) * (cos(vec2(0.0, 0.0))), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (true ? (injectionSwitch) / cos(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch) / cos(vec2(0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0))), 0.0))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))) || false)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), max((injectionSwitch) / cos(vec2(0.0, 0.0)), (injectionSwitch) / cos(vec2(0.0, 0.0))))) + vec2(0.0, 0.0)), min(_GLF_IDENTITY((injectionSwitch) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), (true ? (injectionSwitch) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), mat2(1.0) * (cos(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)), vec2(1.0, 1.0) * ((vec2(0.0, 0.0)))) / vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch) / cos(vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(vec2((injectionSwitch) / cos(vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(4.4)), vec2((vec2((injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0))))[0], _GLF_IDENTITY((vec2((injectionSwitch) / cos(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(vec2(8.4, -0.4)) : (vec2((injectionSwitch) / cos(vec2(0.0, 0.0))))))[1]), bvec2(true, true)))))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-0.9, 4499.8011))), abs(vec2(0.0, 0.0)) + ((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-0.9, 4499.8011)))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, sin(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat4(-38.60, -99.95, 32.36, -2.3, 1.1, -490.563, 3.8, 56.05, -341.790, 1054.1547, -3.9, -76.23, -6.6, -5.9, -2.4, 2.9)) : mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), max(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))) + vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, sin(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9918.2440)), float(1.0), bool(true))))))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))))))))))))) / cos(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-0.9, 4499.8011))), abs(vec2(0.0, 0.0)) + ((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-0.9, 4499.8011)))))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, sin(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat4(-38.60, -99.95, 32.36, -2.3, 1.1, -490.563, 3.8, 56.05, -341.790, 1054.1547, -3.9, -76.23, -6.6, -5.9, -2.4, 2.9)) : mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), max(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))) + vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, sin(0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9918.2440)), float(1.0), bool(true))))))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))))))))))))) / cos(vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))), vec2(_GLF_FUZZED((73.19 * -6.4)), _GLF_FUZZED(9202.9988)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / cos(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-35.32)))))), 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0)))) - 0.0))), 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0), _GLF_IDENTITY(vec2(mat3x4(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0), 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(303.882, 7.9)) : vec2(mat3x4(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, 1.0, 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, log(1.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)) : _GLF_FUZZED(-35.32)))), 0.0), 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))).x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), max(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), min(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))))) / cos(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(73.39, 8.7).x) : _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch))))) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(vec4(vec2(0.0, 0.0), 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(vec2(0.0, 0.0), 1.0, 1.0))))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), ((injectionSwitch)) * vec2(1.0, 1.0)) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), min(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(41.13), _GLF_FUZZED(_GLF_IDENTITY(7907.4901, min(7907.4901, _GLF_IDENTITY(7907.4901, mix(float(7907.4901), float(_GLF_FUZZED(-926.659)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), vec2((cos(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))))[0], (cos(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 0.0))[0], float(vec4((vec2(0.0, 0.0))[0], 1.0, 0.0, 1.0))), _GLF_FUZZED(-8.1)), vec2(_GLF_FUZZED(-5.7), (vec2(0.0, 0.0))[1]), bvec2(false, true))), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec3(vec2(0.0, 0.0), 1.0)))))))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, true), bvec3(bvec4(bvec3(! (true), true, true), false))))))), (injectionSwitch.x < injectionSwitch.y))))))), cos(vec2(0.0, 0.0))))).x)) > injectionSwitch.y))))) || false))) || false)) && true)))) || false)), _GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || false)))) || false, ! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || false)))) || false, _GLF_IDENTITY(true && ((! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || _GLF_IDENTITY(false, (false) || false))))) || false), false || (true && ((! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || _GLF_IDENTITY(false, (false) || false))))) || false)))))))))))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
  }
}
