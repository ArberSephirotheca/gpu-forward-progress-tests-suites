#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0), _GLF_IDENTITY(int(ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x))), 0, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))))) : _GLF_FUZZED(90905)))) | 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))) || false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id) | (workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(0.3)), bool(false))), sqrt(1.0), 1.0))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0), _GLF_IDENTITY(1, max(1, 1))))) | (_GLF_IDENTITY(1, (1) | (1)))), int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), 1)))), uint(uvec2(_GLF_IDENTITY(uint(1), min(uint(1), uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-95496) : 1))) * 1)))), _GLF_IDENTITY(0u, (0u) | (0u))))), 0u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ ((1)))) | (1)), int(ivec2(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) - 0)), 1)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 1u))), min(uint(1), uint(1))), 0u))), 0u)), uvec2(uvec4(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(30380) : _GLF_IDENTITY(1, (1) ^ 0))))), int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))), (clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))) + 0))) ^ 0)), min(uint(1), uint(1))), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1))))) ^ 0)), _GLF_IDENTITY(min(uint(1), uint(1)), 1u * (min(uint(1), uint(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1))))))))), 0u))))), _GLF_IDENTITY(0u, (0u) * 1u))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / (1 ^ 0)), 1))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1)), 0u | (min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1))))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))), 0u)))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / (1 ^ 0)), 1))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1)), 0u | (min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1))))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))), 0u)))))), 0u)) + uvec2(0u, 0u)))), (false ? _GLF_FUZZED(uvec2(130651u, 147055u)) : ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / (1 ^ 0)), 1))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1)), 0u | (min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1))))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))), 0u)))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) / (1 ^ 0)), 1))))) >> 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1)), 0u | (min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(1))))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), uint(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))), 0u)))))), 0u)) + uvec2(0u, 0u)))))))), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x : _GLF_FUZZED(628.288)))))))) | (uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0)) : _GLF_FUZZED(58073))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | 0))))))), int(ivec2(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) >> 0))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))) * 1u), 0u))), 0u))), clamp(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | 0u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | 0u)))))))) + _GLF_IDENTITY(0u, 0u ^ (0u))), 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | 0u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | 0u)))))))) + _GLF_IDENTITY(0u, 0u ^ (0u))), 0u))), (~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | 0u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) / 1u), uint(1))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (_GLF_IDENTITY(uint(1), 0u ^ (uint(1)))) | 0u)))))))) + _GLF_IDENTITY(0u, 0u ^ (0u))), 0u)))) << 0u)))), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(uint(1), uint(1))), 0u), max(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(847.818) : _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) / 1.0)), max(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(847.818) : _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) / 1.0)), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(847.818) : _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) / 1.0)))) * (~ (_GLF_IDENTITY(0, 0 | (0))))))))), min(uint(1), uint(1))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(uint(_GLF_IDENTITY(1, (1) | 0)), uint(_GLF_IDENTITY(1, (1) | 0)))), min(uint(1), uint(1))), 0u))))), 0u), _GLF_IDENTITY(min(uvec2(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> 0)))) | 0)), min(uint(1), uint(1))), 0u), max(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, 0 | (0)))), min(uint(1), uint(1))), 0u), uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(uint(1), uint(1))), 0u))))), 0u), uvec2(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(_GLF_IDENTITY(uint(1), (uint(1)) << (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uint(1))), 0u), max(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, 0 | (0)))), min(uint(1), uint(1))), 0u), uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(uint(1), uint(1))), 0u))))), 0u)), (min(uvec2(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> 0)))) | 0)), min(uint(1), uint(1))), 0u), max(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, 0 | (0)))), min(uint(1), uint(1))), 0u), uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(uint(1), uint(1))), 0u))))), 0u), uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + 0)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(_GLF_IDENTITY(uint(1), (uint(1)) << (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uint(1))), 0u), max(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, 0 | (0)))), min(uint(1), uint(1))), 0u), uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | 0)), min(uint(1), uint(1))), 0u))))), 0u))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), uint(uvec2(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | ((1) ^ 0)), 1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | ((1) ^ 0)), 1), (true ? ivec2(_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) | ((1) ^ 0)), 1) : _GLF_FUZZED(ivec2(-10710, -83962)))))))))), uint(1))), 0u))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 0u), max(uvec2(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(1))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), min(uint(1), uint(1))), 0u))))), _GLF_IDENTITY(0u, (0u) >> 0u)))))))), _GLF_IDENTITY(4, (4) * 1), 64, 4);
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || false))) && true))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))), false)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(_GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) / 1.0), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0)))).x), (0.0 + (injectionSwitch.x)) / 1.0), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(_GLF_IDENTITY(0.0 + (injectionSwitch.x), (_GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)) + 0.0), _GLF_IDENTITY(0.0 + (injectionSwitch.x), float(mat3x4(0.0 + (injectionSwitch.x), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) / 1.0))), (0.0 + (injectionSwitch.x)) / 1.0), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.1) : 0.0))) - 0.0) + (injectionSwitch.x), min(_GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) / 1.0), 0.0 + (injectionSwitch.x)))) > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(66.19) : injectionSwitch.y))), float(_GLF_FUZZED(-70.35)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false)))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.5), max(_GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_FUZZED(8.5), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.5)), float(_GLF_FUZZED(-5.9)), bool(false)), min(mix(float(_GLF_FUZZED(8.5)), float(_GLF_FUZZED(-5.9)), bool(false)), mix(float(_GLF_FUZZED(8.5)), float(_GLF_FUZZED(-5.9)), bool(false))))))), _GLF_FUZZED(-6134.5545)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-19591)))], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (_GLF_IDENTITY(true, (true) && true))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), max(int(2), int(2))) : _GLF_FUZZED(53844))), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(35984), ~ (~ (true ? 2 : _GLF_FUZZED(35984))))))), min(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(35984), ~ (~ (true ? 2 : _GLF_FUZZED(35984))))))), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(35984), ~ (~ (true ? 2 : _GLF_FUZZED(35984)))))))))), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(2336) : 2)))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) | 0) : _GLF_FUZZED(69413)))), (int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) | 0) : _GLF_FUZZED(69413))))) << 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))) : _GLF_FUZZED(7613))))), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)), clamp(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0, 1)))))))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))))), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) | (_GLF_IDENTITY(2, max(2, 2))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(int(2), int(2)))) - 0, ((_GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(2), int(2)))), (~ ((_GLF_IDENTITY(int(2), int(2))))) * 1)))) - 0) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (int(2))), int(2))))), ~ (~ ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), max(int(2), int(2))) : _GLF_FUZZED(53844))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), max(int(2), int(2))) : _GLF_FUZZED(53844))), (0 << _GLF_IDENTITY(int(3), int(3))))), (int(ivec2(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), max(int(2), int(2))) : _GLF_FUZZED(53844))), (0 << _GLF_IDENTITY(int(3), int(3)))))) << 0)), int(2)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), _GLF_IDENTITY(max(int(2), int(2)), (max(int(2), int(2))) / (1 & 1))) : _GLF_FUZZED(53844))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), max(int(2), int(2))) : _GLF_FUZZED(53844))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), max(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) << 0)))))))), (int(ivec2(_GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), max(int(2), int(2))) : _GLF_FUZZED(53844))), (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)))))) << 0)), int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(69413))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), min(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), int(2))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))))))))), ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(69413))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), min(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), int(2))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))))))))), ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))) - 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(69413))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), min(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), int(2))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))))))))), ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(69413))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), min(_GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(int(2), int(2))))), int(ivec3(int(int((_GLF_IDENTITY(int(2), int(2))))), (0 << _GLF_IDENTITY(int(7), int(7))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) - 0), int(2))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))))))))), ((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)))) - 0))))) / 1))), _GLF_IDENTITY(int(2), int(2)))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
              continue;
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-802.435)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, ! (! (true))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))) == 0) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false || (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false || (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.7), _GLF_FUZZED(float(false))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true)))))))) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))))), (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (0 & _GLF_IDENTITY(int(46755u), (int(46755u)) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) != (_GLF_IDENTITY(0 | 0, (0 | 0) << 0))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) != (_GLF_IDENTITY(0 | 0, (0 | 0) << 0)))), bool(bool(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) != (_GLF_IDENTITY(0 | 0, (0 | 0) << 0))))))))); _injected_loop_counter --)
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), 4, 64, 4);
     if(_GLF_DEAD(false))
      break;
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - 0u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))], uint(2), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
