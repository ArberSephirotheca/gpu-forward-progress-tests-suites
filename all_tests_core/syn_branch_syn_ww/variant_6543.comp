#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, true, true, false)))), (bool(bool(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, true, true, false))))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(bool(bool(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, true, true, false)))), (bool(bool(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y, true, true, false))))) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 1u))), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(num_workgroup))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) >> 0u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), false || (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec3((_GLF_WRAPPED_IF_TRUE(true)), false, true)))))))))))), false))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), min(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)), int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))) || false))));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       int i = 0;
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          barrier();
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), max(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), (0 | 0) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1)))))))))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), max(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), (0 | 0) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1)))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1 * (_GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), max(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), (0 | 0) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1)))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), max(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), (0 | 0) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1)))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), max(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1))))), (0 | 0) ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 0, 1)))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | (0 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (0) | 0))))) < ((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / 1)), int(5)))), 1, 0, 0))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) | (0 ^ _GLF_IDENTITY(0, (0) | 0))))) < (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(i)))), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, _GLF_IDENTITY(-18726, (-18726) ^ 0), -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(96697, -99506, -51357, 469)) : ivec4(0, 0, 0, 0)))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(0, 0, 0, 0)))))), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1)))), int(ivec2((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, _GLF_IDENTITY(-78536, (_GLF_IDENTITY(-78536, ~ (~ (-78536)))) - 0), -18781)[1]), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0)))))), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1)))), 0))) >> _GLF_IDENTITY(int(0), int(0))))) && true, false || ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) | (0 ^ _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), clamp(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, (0) - 0))), 0, _GLF_IDENTITY(0, (0) >> 0)))))))) < (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1)), (false ? _GLF_FUZZED(i) : (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(5), int(5))) | (0))), int(0)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) << 0)) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, _GLF_IDENTITY(-18781, ~ (~ (-18781)))), (ivec4(_GLF_IDENTITY(25143, int(ivec3(_GLF_IDENTITY(25143, (25143) - 0), 0, 1))), -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1)))) + 0)), int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 1)))) << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1, (true ? (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1 : _GLF_FUZZED(i))))), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 1)))) << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1, (true ? (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1 : _GLF_FUZZED(i))))), int(ivec4((true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 1)))) << _GLF_IDENTITY(int(0), int(0))) << 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1, (true ? (_GLF_IDENTITY(_GLF_FUZZED(ivec4(25143, -18726, -78536, -18781)[1]), 0 + (_GLF_FUZZED(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), clamp(_GLF_IDENTITY(ivec4(25143, -18726, -78536, -18781), (ivec4(25143, -18726, -78536, -18781)) | ivec4(0, 0, 0, 0)), ivec4(25143, -18726, -78536, -18781), ivec4(25143, -18726, -78536, -18781)))[1])))) / 1 : _GLF_FUZZED(i))))), 1, 0, 0))))))) - 0)), 0))) >> _GLF_IDENTITY(int(0), int(0))))) && true))); _injected_loop_counter ++)
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)))], uint(2), _GLF_IDENTITY(4, (4) << 0), 64, 4);
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(64, max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, _GLF_IDENTITY((true ? 64 : _GLF_FUZZED(76540)), max((true ? 64 : _GLF_FUZZED(76540)), (true ? 64 : _GLF_FUZZED(76540))))), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0)))), (false ? _GLF_FUZZED(6412) : (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), max(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) << 0), clamp(64, 64, 64))))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-81283))))))))) | (_GLF_IDENTITY(64, clamp(64, 64, 64))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0)))), (false ? _GLF_FUZZED(6412) : (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), max(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) << 0), clamp(64, 64, 64))))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-81283))))))))) | (_GLF_IDENTITY(64, clamp(64, 64, 64))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0)))), (false ? _GLF_FUZZED(6412) : (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), max(_GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, 64, 64)) << 0), clamp(64, 64, 64))))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-81283))))))))) | (_GLF_IDENTITY(64, clamp(64, 64, 64))))))) + _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))))), ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))), clamp((_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))), (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))), _GLF_IDENTITY((_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))), max((_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))), (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))))), (~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ _GLF_IDENTITY(((64)), (((64))) / 1))))))) >> 0)) ^ 0)))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ (_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), min(~ ((64)), ~ ((64))))))))))))))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))))), (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))))) | (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))))))))))), min(int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, 64, 64)))), max(~ ((64)), ~ ((64))))))))), (int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))))))))) >> 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))), 0 ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))))))), clamp((~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))), 0 ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))), 0 ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))))))), min((~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))), 0 ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))))))), (~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))), 0 ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))))))))), (~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64))))), 0 ^ ((_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) ^ 0)), ~ ((64)))))))))))))), (int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(64, 0 | (64)), 64)), 64)))), max(~ ((64)), _GLF_IDENTITY(~ ((64)), 0 | (~ ((64))))))))), (true ? ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64))))))) : _GLF_FUZZED(77126))))))) << 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) | ((64))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((64)), _GLF_IDENTITY(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))), int(_GLF_IDENTITY(int(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64)))), (_GLF_IDENTITY(int(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64)))), (int(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))))) | (int(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))))))) / 1))))), ((_GLF_IDENTITY(~ _GLF_IDENTITY(((64)), min(((64)), ((64)))), _GLF_IDENTITY(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))), (_GLF_IDENTITY(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))), int(ivec3(max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))), 0, 0)))) | 0)))) ^ 0)))))), (int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((64)), 0 + (~ ((64)))), max(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), ~ ((64))))), ((_GLF_IDENTITY(~ ((64)), max(_GLF_IDENTITY(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), int(int(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0)))))), 0, 1, 1), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0))), int(int(~ _GLF_IDENTITY(((64)), clamp(((64)), ((64)), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), (((64))) >> 0)) << 0)))))), 0, 1, 1))))), ~ ((64)))))) ^ 0))))))) - 0))), int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))))))))), int(int(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), _GLF_IDENTITY(~ ((64)), clamp(~ ((64)), ~ ((64)), ~ ((64))))))), (~ (_GLF_IDENTITY(~ ((64)), max(~ ((64)), ~ ((64)))))) | 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, ~ (~ (64)))), min(int(_GLF_IDENTITY(64, ~ (~ (64)))), int(_GLF_IDENTITY(64, ~ (~ (64)))))))), (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64))))))) / 1))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64))))))) / 1))), 0, 1, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0 ^ (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) - 0)))), int(int(_GLF_IDENTITY(64, ~ (~ (64))))))) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, ~ (~ (64)))), (int(_GLF_IDENTITY(64, ~ (~ (64))))) | (int(_GLF_IDENTITY(64, ~ (~ (64)))))))), 0 ^ (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) - 0)))), int(int(_GLF_IDENTITY(64, ~ (~ (64))))))) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, ~ (~ (64)))), (int(_GLF_IDENTITY(64, ~ (~ (64))))) | (int(_GLF_IDENTITY(64, ~ (~ (64)))))))), 0 ^ (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) - 0)))), int(int(_GLF_IDENTITY(64, ~ (~ (64))))))) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, ~ (~ (64)))), (int(_GLF_IDENTITY(64, ~ (~ (64))))) | (int(_GLF_IDENTITY(64, ~ (~ (64)))))))), 0 ^ (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, ~ (~ (64)))))))))))) << 0)))), 4);
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
  }
}
