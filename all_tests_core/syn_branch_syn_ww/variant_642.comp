#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true))), true && (! (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2((injectionSwitch)[1], 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2((injectionSwitch)[1], 0.0, 0.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED((-5.7 / 8522.1112))), bvec2(true, false))).x > injectionSwitch.y)))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.28))))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5129.5482)), bvec2(_GLF_IDENTITY(true, (true) || false), false))))).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED((23.43 - mat2x4(-851.246, -3.8, 3.6, 304.515, 6829.8847, -224.569, 385.195, -20.15))) : _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat2(1.0)))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.7)), vec2(_GLF_FUZZED(399.360), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-40.64)), bool(false)))) * 1.0)), bvec2(false, true))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, 0u | (gl_WorkGroupSize.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x))) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x))) * 1u)))))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))))), 0u))) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, cos(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)), mix(float(_GLF_FUZZED(-4.4)), float(float(mat2x3(injectionSwitch.x, cos(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(4.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (_GLF_IDENTITY(1.0, (1.0) + 0.0)) / 1.0)), bool(true))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), bool(true)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) > injectionSwitch.y)))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)), bool(bvec2(! (false), false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)), bool(bvec2(! (false), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) | 0u)), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) | 0u))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << (1u ^ 1u)), ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u), _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) / 1u), subgroup_base), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u | (_GLF_IDENTITY(~ (subgroup_base), uint(uvec3(_GLF_IDENTITY(~ (subgroup_base), min(~ (subgroup_base), ~ (subgroup_base))), 0u, 1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(((~ (subgroup_base))), 0u | (((~ (subgroup_base))))) << 0u))))) / 1u), subgroup_base), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u + (_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u)))))), min(_GLF_IDENTITY((~ (subgroup_base)), (true ? (~ (subgroup_base)) : _GLF_FUZZED(packSnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_FUZZED(-58.11))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091), (true ? vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_IDENTITY(_GLF_FUZZED(-58.11), max(_GLF_IDENTITY(_GLF_FUZZED(-58.11), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-58.11), max(_GLF_FUZZED(-58.11), _GLF_FUZZED(-58.11))), 1.0, 0.0, 0.0))), _GLF_FUZZED(-58.11))))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((_GLF_IDENTITY(8.9, float(mat4x2(_GLF_IDENTITY(8.9, _GLF_IDENTITY(float(mat3x2(8.9, 1.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat3x2(8.9, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(8.9, 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(abs(1.0), tan(0.0))), dot(vec2(1.0, 0.0), vec2(abs(1.0), tan(0.0)))), 1.0, 0.0, 1.0))) + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091) : _GLF_FUZZED(vec4(-212.636, 5.8, 2.1, 28.58)))))))), (~ (subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, uint(uint((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u)))))) / _GLF_IDENTITY(1u, 0u | (1u))), subgroup_base)), max(_GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u + (_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u)))))), min(_GLF_IDENTITY((~ (subgroup_base)), (true ? (~ (subgroup_base)) : _GLF_FUZZED(packSnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_FUZZED(-58.11))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091), (true ? vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_IDENTITY(_GLF_FUZZED(-58.11), max(_GLF_FUZZED(-58.11), _GLF_FUZZED(-58.11))))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091) : _GLF_FUZZED(vec4(-212.636, 5.8, 2.1, 28.58)))))))), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, uint(uint((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u)))))) / _GLF_IDENTITY(1u, 0u | (1u))), subgroup_base)), ((max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> 0u), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u)))))), min(_GLF_IDENTITY((~ (subgroup_base)), (true ? (~ (subgroup_base)) : _GLF_FUZZED(packSnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_FUZZED(-58.11))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091), (true ? vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_IDENTITY(_GLF_FUZZED(-58.11), max(_GLF_FUZZED(-58.11), _GLF_FUZZED(-58.11))))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091) : _GLF_FUZZED(vec4(-212.636, 5.8, 2.1, 28.58)))))))), (~ (subgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), uint(uint((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), ~ (~ (subgroup_base)))) + 0u, uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) >> 0u)) + 0u))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u)))))) / _GLF_IDENTITY(1u, 0u | (1u))), subgroup_base))) >> 0u), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u))), 1u * (_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u))))))))))), min(_GLF_IDENTITY((~ (subgroup_base)), (true ? (~ (subgroup_base)) : _GLF_FUZZED(packSnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_FUZZED(-58.11))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091), (true ? vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_IDENTITY(_GLF_FUZZED(-58.11), max(_GLF_FUZZED(-58.11), _GLF_FUZZED(-58.11))))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((_GLF_IDENTITY(8.9, (false ? _GLF_FUZZED(73.10) : 8.9)) + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091) : _GLF_FUZZED(vec4(-212.636, 5.8, 2.1, 28.58)))))))), _GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) / 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (~ (~ (subgroup_base)))))) + 0u, uint(uint((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u)))))) / _GLF_IDENTITY(1u, 0u | (1u))), subgroup_base)), ((max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_base), 0u + (_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(33762u)))))), min(_GLF_IDENTITY((~ (subgroup_base)), (true ? (~ (subgroup_base)) : _GLF_FUZZED(packSnorm4x8(_GLF_IDENTITY(vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_FUZZED(-58.11))), _GLF_IDENTITY(23.79, mix(float(_GLF_FUZZED((8.9 + -3693.3366))), float(23.79), bool(true))), 9.6, -157.091), (true ? vec4(_GLF_IDENTITY(2011.2019, (true ? 2011.2019 : _GLF_IDENTITY(_GLF_FUZZED(-58.11), max(_GLF_FUZZED(-58.11), _GLF_FUZZED(-58.11))))), _GLF_IDENTITY(23.79, mix(_GLF_IDENTITY(float(_GLF_FUZZED((8.9 + -3693.3366))), _GLF_IDENTITY(float(mat2x4(float(_GLF_FUZZED((8.9 + -3693.3366))), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0))), clamp(float(mat2x4(float(_GLF_FUZZED((8.9 + -3693.3366))), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0))), float(mat2x4(float(_GLF_FUZZED((8.9 + -3693.3366))), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0))), float(mat2x4(float(_GLF_FUZZED((8.9 + -3693.3366))), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, abs(1.0)))))), float(23.79), bool(true))), 9.6, -157.091) : _GLF_FUZZED(vec4(-212.636, 5.8, 2.1, 28.58)))))))), (~ (subgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u), ~ (subgroup_base)))))) + 0u, uint(uint((_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) + 0u))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) - 0u)))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u, (1u) * 1u))), 0u | (1u))), subgroup_base))) ^ 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))), (subgroup_base), _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base)))) | ((subgroup_base))))) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_base)), (false ? _GLF_FUZZED(subgroup_base) : (~ (subgroup_base)))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ _GLF_IDENTITY((~ (~ (subgroup_base))), min((~ (~ (subgroup_base))), (~ (~ (subgroup_base))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))), uint(8u)))) / 1u) ^ (~ (~ (subgroup_base)))), (~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (~ (~ (subgroup_base))))) + 0u)))), ~ (~ (subgroup_base)))))) + 0u, ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_base)), (false ? _GLF_FUZZED(subgroup_base) : (~ (subgroup_base)))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(workgroup_id) : subgroup_base)))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ _GLF_IDENTITY((~ (~ (subgroup_base))), min((~ (~ (subgroup_base))), (~ _GLF_IDENTITY((~ (subgroup_base)), (_GLF_IDENTITY((~ (subgroup_base)), uint(uvec2((~ (subgroup_base)), 1u)))) >> 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))), uint(8u)))) / 1u) ^ (~ (~ (subgroup_base)))), (~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (~ (~ (subgroup_base))))) + 0u)))), ~ (~ (subgroup_base)))))) + 0u) / 1u)), _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) / 1u), subgroup_base), 1u * _GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), min(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) + 0u), ~ (~ (subgroup_base))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), max((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))))), (_GLF_IDENTITY((subgroup_base), 0u | (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))))), (_GLF_IDENTITY((subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> _GLF_IDENTITY(0u, (0u) | 0u))))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base)))), clamp((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / (1u | 0u)), (subgroup_base)))), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (((subgroup_base))), max((_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (((subgroup_base))), (_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (((subgroup_base)))))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> 0u)))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))) - 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)) | ((subgroup_base)))), clamp((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(0u, ~ (~ (0u))) | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))))), (_GLF_IDENTITY((subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> 0u)))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), uint(_GLF_IDENTITY(uvec2((~ (subgroup_base)), 0u), max(uvec2((~ (subgroup_base)), 0u), uvec2((~ (subgroup_base)), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), min(~ (subgroup_base), ~ _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) * (1u & 1u)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (true)), true, false))), (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), min((subgroup_base), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | ((subgroup_base)))), clamp((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), clamp(uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), clamp(uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u))))) / (1u & 1u)))), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))), uint(uvec4((_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), clamp(uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u)))))), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))), 1u, 1u, 1u))))), (_GLF_IDENTITY((subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> 0u)))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u)) | 0u))), subgroup_base)), ~ (~ ((max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ (subgroup_base)), min(_GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) + 0u), ~ (~ (subgroup_base))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), max((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))))), (_GLF_IDENTITY((subgroup_base), 0u | (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))))), (_GLF_IDENTITY((subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> _GLF_IDENTITY(0u, (0u) | 0u))))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base)))), clamp((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) / (1u | 0u)), (subgroup_base)))), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (((subgroup_base))), max((_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (((subgroup_base))), (_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (((subgroup_base)))))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> 0u)))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))) - 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u)) | ((subgroup_base)))), clamp((_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(0u, ~ (~ (0u))) | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | (_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((subgroup_base), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))))), (_GLF_IDENTITY((subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> 0u)))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), uint(_GLF_IDENTITY(uvec2((~ (subgroup_base)), 0u), max(uvec2((~ (subgroup_base)), 0u), uvec2((~ (subgroup_base)), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), min(~ (subgroup_base), ~ _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))))) * (1u & 1u)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, false || (true)), true, false))), (true) && true)) || false) ? _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))) : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), 1u * (_GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), min((subgroup_base), _GLF_IDENTITY((subgroup_base), ((subgroup_base)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | ((subgroup_base)))), clamp((_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY(((subgroup_base)), uint(uvec2(_GLF_IDENTITY(((subgroup_base)), (((subgroup_base))) | (((subgroup_base)))), 0u))))), (_GLF_IDENTITY((subgroup_base), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), clamp(uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), clamp(uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u))))) / (1u & 1u)))), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))), uint(uvec4((_GLF_IDENTITY((subgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 1u), clamp(uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u), uvec2(subgroup_base, 1u)))))), uint(uvec3((subgroup_base), 0u, 0u))), (subgroup_base)))), 1u, 1u, 1u))))), (_GLF_IDENTITY((subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, ((1u | 1u) ^ 0u) * (subgroup_base)))))))) >> 0u)))))) + 0u), _GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), max((~ (subgroup_base)), (~ (subgroup_base)))))))) / 1u)) | 0u))), subgroup_base)))))), max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)) | _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(~ (~ (subgroup_base)), uint(uvec4(~ (~ (subgroup_base)), (1u ^ 0u), 1u, 0u))))))) / 1u), subgroup_base)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true, false))))
    return;
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) : uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) + 0u)) + 1))))), 0u + (uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1))))))))), uint(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), min(0u | (subgroup_local_id + 1), 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)))))))))))), min((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((74836 % -12047)))))) >> 0u), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED((_GLF_IDENTITY(74836 % -12047, (74836 % -12047) / int(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (~ (true ? 1 : _GLF_FUZZED((_GLF_IDENTITY(74836 % -12047, (74836 % -12047) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) >> 0u)))))) % subgroup_size), max(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> (0u | 0u))))), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u))) % subgroup_size), workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ((subgroup_local_id + 1)) >> 0u))) % subgroup_size, 1u * (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ((subgroup_local_id + 1)) >> 0u))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) + 0)))) | 0))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % 2)) >> 0u), ~ (~ (_GLF_IDENTITY((subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) % 2)) >> 0u))))) - 0u) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bool(! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bool(! (false))))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bool(! (false))))), ! (! (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(! (false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uint(uint(2))), (_GLF_IDENTITY(uint(uint(uint(2))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(uint(uint(2))) : _GLF_FUZZED(uvec4(25188u, 64288u, 135613u, 17088u).b)))) >> 0u)), uint(2), uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1032.1182)), float(injectionSwitch.y), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(true, false || (true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8795.2751))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
