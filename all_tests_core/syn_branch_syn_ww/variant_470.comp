#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(mat2x4(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0, log(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x4(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0, log(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(mat2x4(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0, log(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x4(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0, log(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(injectionSwitch))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(true && (bool(_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (bool(_GLF_DEAD(false))))))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -98.06)), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x < injectionSwitch.y)) && (false))), bool(bool(_GLF_DEAD(false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_IDENTITY(false, ! (! (false))))), false, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), false || ((bool(_GLF_DEAD(false))))))), ! _GLF_IDENTITY((! (bool(_GLF_DEAD(false)))), ((! (bool(_GLF_DEAD(false))))) || false)))))))), false, false)), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4.7, 7.5)))).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))) || false))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))) || false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))) || false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), 1.0, cos(0.0), 0.0, 0.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), 1.0, cos(0.0), 0.0, 0.0, 1.0))) / 1.0))), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-62033))), float(1.0), bool(true)))), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.4)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), ((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), transpose(transpose(mat2(1.0) * (mat2(1.0))))))) + vec2(0.0, 0.0)), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED((mat3x2(1.3, 6.3, 1.0, -7.2, -6.5, 3.6) * mat2x3(2.9, 93.24, 1.6, -5513.9935, 6538.1832, -907.883))))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), _GLF_IDENTITY((vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-10.11, 0.8)) : _GLF_IDENTITY((vec2(0.0, 0.0)), ((vec2(0.0, 0.0))) / vec2(1.0, 1.0)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))))[0], (_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))))[1]), vec2(_GLF_FUZZED(-0.0), _GLF_FUZZED((3068.0249 + -458.662))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), mat2(0.0, 0.0, 0.0, 0.0) + ((mat2(1.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), transpose(transpose((mat2(1.0)))))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), mat2(mat3x2((mat2(1.0)))))), max(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY((vec2(0.0, 0.0)), (true ? (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-690.861, -30.90)))))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (true ? _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED(mat2(-65.61, -7112.8793, -221.334, 3.3)))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))))), _GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (false ? _GLF_FUZZED(mat2(-555.545, 91.14, -211.136, -9.5)) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), mat2(0.0, 0.0, 0.0, 0.0) + ((mat2(1.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), transpose(transpose((mat2(1.0)))))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), mat2(mat3x2((mat2(1.0)))))), max(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY((vec2(0.0, 0.0)), (true ? (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-690.861, -30.90)))))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (true ? _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED(mat2(-65.61, -7112.8793, -221.334, 3.3)))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))))), _GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (false ? _GLF_FUZZED(mat2(-555.545, 91.14, -211.136, -9.5)) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, exp(0.0), 0.0, 0.0, log(1.0)), (mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), mat2(0.0, 0.0, 0.0, 0.0) + ((mat2(1.0))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), transpose(transpose((mat2(1.0)))))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), max(_GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((mat2(1.0)), mat2(mat3x2((mat2(1.0)))))), max(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY((vec2(0.0, 0.0)), (true ? (vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-690.861, -30.90)))))))) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))), mix(vec2((_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[0], (_GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (true ? _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) : _GLF_FUZZED(mat2(-65.61, -7112.8793, -221.334, 3.3)))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(6628.4435)), bvec2(false, false))))), _GLF_IDENTITY((vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))), max((vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2(1.0) * (mat2(1.0))), (vec2(0.0, 0.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (false ? _GLF_FUZZED(mat2(-555.545, 91.14, -211.136, -9.5)) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, exp(0.0), 0.0, 0.0, log(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x, (false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(80827u, (80827u) << 0u), 144934u).r) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY((gl_WorkGroupID.x) / 1u, max((gl_WorkGroupID.x) / 1u, _GLF_IDENTITY((gl_WorkGroupID.x) / 1u, clamp((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED((vec2(1.8, 5.5))) : _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))).y, injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))))), (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, log(1.0), sin(0.0), 0.0, 0.0, 1.0))))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(vec2(-0.1, 77.30))) : injectionSwitch)), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, sin(0.0), 1.0, abs(0.0), 0.0, 1.0, 1.0))).y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, true && (true)) && ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) && true))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) || false)), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3(-1919.9816, 5978.5020, 68.02, 6.0, -0.2, 178.033, -8.6, -61.98, 668.395)) : mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, sqrt(0.0)))), injectionSwitch)).x < injectionSwitch.y)) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), (bool(injectionSwitch.x < injectionSwitch.y)) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))) && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true), false))))), true, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true), false))))), true, false))), bvec2(bvec4(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true), false))))), true, false))), true, true)))))), bvec2(bvec2(bvec2(! (_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))))), false)))))))) && (false), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false))))))), false || (! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0)), 1.0, log(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(injectionSwitch, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0)), 1.0, log(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)))))).y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false)))))))))))) && (false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.3) : injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.3) : injectionSwitch.x)) > injectionSwitch.y)) || false)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.3) : injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.3) : injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.3) : injectionSwitch.x)) > injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.3) : injectionSwitch.x)) > injectionSwitch.y)) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4915.2656)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), bool(bvec2((false), true)))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) : _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))), 0u ^ (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) : (subgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(162890u, _GLF_IDENTITY((162890u), ~ (~ ((162890u)))) | (_GLF_IDENTITY(162890u, max(_GLF_IDENTITY(162890u, max(162890u, 162890u)), 162890u))))), min(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(162890u, _GLF_IDENTITY((162890u) | (_GLF_IDENTITY(162890u, max(_GLF_IDENTITY(162890u, _GLF_IDENTITY(_GLF_IDENTITY(max(162890u, 162890u), (max(162890u, 162890u)) | (max(162890u, 162890u))), (max(162890u, 162890u)) | (_GLF_IDENTITY(max(162890u, 162890u), clamp(max(162890u, 162890u), max(162890u, 162890u), max(162890u, 162890u)))))), 162890u))), (_GLF_IDENTITY((162890u) | (_GLF_IDENTITY(162890u, max(_GLF_IDENTITY(162890u, max(162890u, 162890u)), 162890u))), 0u + ((162890u) | (_GLF_IDENTITY(_GLF_IDENTITY(162890u, max(_GLF_IDENTITY(162890u, max(162890u, 162890u)), 162890u)), min(_GLF_IDENTITY(162890u, max(_GLF_IDENTITY(162890u, max(162890u, 162890u)), _GLF_IDENTITY(162890u, 0u ^ (162890u)))), _GLF_IDENTITY(_GLF_IDENTITY(162890u, (162890u) - 0u), max(_GLF_IDENTITY(162890u, max(162890u, 162890u)), 162890u)))))))) >> 0u))), true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(162890u, (162890u) | (_GLF_IDENTITY(162890u, max(_GLF_IDENTITY(162890u, max(162890u, 162890u)), 162890u)))))))))))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(162890u), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(162890u)) >> 0u, 0u + ((true ? subgroup_size : _GLF_FUZZED(162890u)) >> 0u))))))), (0u ^ 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(162890u), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(162890u)) >> 0u, 0u + ((true ? subgroup_size : _GLF_FUZZED(162890u)) >> 0u))))))), uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(162890u), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(162890u)) >> 0u, 0u + ((true ? subgroup_size : _GLF_FUZZED(162890u)) >> 0u))))))))))))), 1u, 1u, 1u)))));
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)))), 1u * (virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bvec3((subgroup_local_id % 2) == 0, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, abs(1.0), 0.0, 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY(2, (2) - (0 >> _GLF_IDENTITY(int(6), int(6)))))), int(ivec3(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 | (2)), 2)), (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (2), 0 ^ (0 | (2)))), 2))) * 1), 2)), _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(1), int(1))))))), 2))), ~ (~ (uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 | (2)), 2)), 2)), 1, 0))), (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 | (2)), 2)), 2)), 1, 0)))) << 0), 2)))))), ~ (~ (uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(2, 2)), 1, 0))), 2)))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) >> ivec2(0, 0)), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) >> ivec2(0, 0)), 1, 0)), (_GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) >> ivec2(0, 0)), 1, 0)), clamp(ivec2(ivec4(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) >> ivec2(0, 0)), 1, 0)), ivec2(ivec4(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) >> ivec2(0, 0)), 1, 0)), ivec2(ivec4(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) >> ivec2(0, 0)), 1, 0))))) >> ivec2(0, 0))))), _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(2, 2)), 1, 0))), 2))), ~ (~ (uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, min(2, 2)), 1, 0))), 2)))))))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-53083) : 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED(2958.3786)), bvec2(false, false))).y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))), (false) && true), true)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), ((false || (false))) && true), bool(bool(_GLF_IDENTITY(! (false || (false)), bool(bvec2(! (false || (false)), true)))))))))))))) || _GLF_IDENTITY((false), ! (! ((false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), true), true))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), false || (bool(bool(injectionSwitch.x < injectionSwitch.y)))))))))))), true), true))))))))))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), true, true))), bvec2(bvec4(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (true), false || (! (true)))), true, false)), true && (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), true && (_GLF_IDENTITY(! (true), false || (! (true)))))), true, false))))))))), (injectionSwitch.x < injectionSwitch.y))), true, false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.8))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
}
