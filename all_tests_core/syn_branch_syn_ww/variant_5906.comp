#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (-59883 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != _GLF_IDENTITY(((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) >> 0)) << 0)), int(3))) >> _GLF_IDENTITY(int(3), int(3))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(2.1, -464.801).r)), bool(false))) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) | (_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (~ (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))).x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) * 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ ((clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) | (_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) * 1u))), min(_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), clamp(_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), max(_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) >> 0u), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), gl_NumWorkGroups)), 0u))).x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u)))), _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) | (_GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)) * 1u))))) : _GLF_FUZZED(125762u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float(_GLF_FUZZED(4592.9199)), float((injectionSwitch)[0]), bool(true)), clamp(mix(float(_GLF_FUZZED(4592.9199)), float((injectionSwitch)[0]), bool(true)), mix(float(_GLF_FUZZED(4592.9199)), float((injectionSwitch)[0]), bool(true)), mix(float(_GLF_FUZZED(4592.9199)), float((injectionSwitch)[0]), bool(true))))), _GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(_GLF_IDENTITY(-3.5, max(-3.5, -3.5)), -3.5, _GLF_IDENTITY(-3.5, (-3.5) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6929.2026)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.1)), float(0.0), bool(true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), 0.0), vec4(0.0, 1.0, 1.0, 1.0)))))))), vec2(_GLF_FUZZED(760.222), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x), float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x), 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(injectionSwitch[1]))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), float(mat4(float(float(1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0)), 0.0, log(1.0))), clamp(float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(37.51, 292.990, true)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.1)), bool(false))))), injectionSwitch.y), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, log(1.0))), float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-9.2)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-26.77)), vec2(_GLF_FUZZED(-27.01), (injectionSwitch)[1]), bvec2(false, true))).y), 1.0))), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_FUZZED(-5.5)), (float(_GLF_FUZZED(-5.5))) * 1.0)), (false ? _GLF_FUZZED((3.4 - 4.4)) : float(_GLF_IDENTITY(float(_GLF_FUZZED(-5.5)), (float(_GLF_FUZZED(-5.5))) * 1.0)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 0.0, log(1.0))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec4(-2.8, -52.35, -0.5, 4.7).b))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-961.627), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-2.7)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(8260.8542)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)), float(mat3((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch.x, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), float(mat2x3(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0, 1.0, 0.0, sin(0.0), 1.0)))) * 1.0), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, log(1.0))), (true ? float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5225.9082)), bool(false)))) + _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y), 1.0))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-3.6) : length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), 0.0, log(1.0))) : _GLF_FUZZED(1316.7604)))))) - 0.0), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_IDENTITY(vec2((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, sin(0.0))))), (false ? _GLF_FUZZED(vec2(7672.8676, -24.52)) : vec2((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, sin(0.0))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, sin(0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(injectionSwitch[1]))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), float(mat4(float(float(1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0)), 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6449.3840)), bool(false))) : _GLF_FUZZED(-4539.5439))), 1.0))))), (false ? _GLF_FUZZED(43.69) : float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(injectionSwitch[1]))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), float(mat4(float(float(1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) + 0.0)), 0.0, log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6449.3840)), bool(false))) : _GLF_FUZZED(-4539.5439))), 1.0))))))), clamp(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(37.51, 292.990, true)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.1)), bool(false))))), injectionSwitch.y), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, log(1.0)), (vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(37.51, 292.990, true)) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.1)), bool(false))))), injectionSwitch.y), 1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, log(1.0))) + vec4(0.0, 0.0, 0.0, 0.0))), float(vec4(_GLF_IDENTITY((_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-85.47) : 0.0)), 0.0)))), (0.0) - 0.0), 1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-9.2)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-26.77)), vec2(_GLF_FUZZED(-27.01), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED((4131.1055)), _GLF_FUZZED(-8.9)), vec2(_GLF_IDENTITY((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-9.2)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-26.77)), vec2(_GLF_FUZZED(-27.01), (injectionSwitch)[1]), bvec2(false, true)))[0], ((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-9.2)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-26.77)), vec2(_GLF_FUZZED(-27.01), (injectionSwitch)[1]), bvec2(false, true)))[0]) - 0.0), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-9.2)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-26.77)), vec2(_GLF_FUZZED(-27.01), (injectionSwitch)[1]), bvec2(false, true)))[1]), bvec2(true, true)))).y), 1.0))), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-5.5), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_FUZZED(-5.5)), (float(_GLF_FUZZED(-5.5))) * 1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED((3.4 - 4.4)), (true ? _GLF_FUZZED((3.4 - 4.4)) : _GLF_FUZZED(795.575))) : float(_GLF_IDENTITY(float(_GLF_FUZZED(-5.5)), (float(_GLF_FUZZED(-5.5))) * 1.0)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), 0.0, log(1.0))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec4(-2.8, -52.35, -0.5, 4.7).b))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-961.627), max(_GLF_FUZZED(-961.627), _GLF_IDENTITY(_GLF_FUZZED(-961.627), max(_GLF_FUZZED(-961.627), _GLF_FUZZED(-961.627))))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-2.7)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(8260.8542)), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))).x)), float(mat3((_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch.x, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), max(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), float(mat2x3(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, abs(1.0), 1.0)), min(float(vec3(0.0, abs(1.0), 1.0)), float(vec3(0.0, abs(1.0), 1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0, 1.0, 0.0, sin(0.0), 1.0)))) * 1.0), round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(1352.1212), _GLF_FUZZED((-6.9 / 1.8)), _GLF_FUZZED(92.46)), bvec3(false, false, false)))), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, log(1.0))), (true ? float(vec4(_GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), float(mat3((_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5225.9082)), bool(false))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5225.9082)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5225.9082)), bool(false)))))) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-3.6) : length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), 0.0, log(1.0))) : _GLF_FUZZED(1316.7604)))))) - 0.0)) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(0.0, (0.0) - 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-724.969) : 1.0)), 1.0, 0.0, sqrt(1.0), 1.0, 1.0)))))) + 0.0)), float(_GLF_FUZZED(9.1)), bool(false))))))).x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), (max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) - sin(0.0))), _GLF_ZERO(0.0, injectionSwitch.x))).x), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(756.787)), bool(false))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).x)) ^ 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, length(vec2(0.0, 0.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).x, 1u * (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, length(vec2(0.0, 0.0))))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).x)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(-0.3))), tan(0.0) + (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))), mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.2)))), mix(float(_GLF_FUZZED(62.92)), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.2))))), bool(true)))), bool(true)))), float(_GLF_FUZZED(-7697.1043)), bool(false))))), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? _GLF_FUZZED(-9845.2045) : 0.0)), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).x))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u))))))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-5929.0649)), bool(false))))))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_ZERO(0.0, injectionSwitch.x))).x), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x))).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x))).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), float(mat4x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x))).x)))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(mat4(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))).x > injectionSwitch.y)))))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), 1u))) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), 0u ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))))))))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), min((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), 0u ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))))))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uint(1u)))))) : _GLF_FUZZED(subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))), 0u | (~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))))) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, uint(uvec4(1u, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), 0u ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))))))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), 0u ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))))))))) * 1u))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), max(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) | (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id))))), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | 0u))) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | 0u))) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))), (true ? ~ ((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, min((subgroup_size) / 1u, (subgroup_size) / 1u))) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size)) | 0u))) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))) : _GLF_FUZZED(subgroup_local_id)))))), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / _GLF_IDENTITY(1u, 0u ^ (1u))))) / 1u)) : _GLF_FUZZED(subgroup_id), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))), 1u * ((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))))))))))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, uint(uvec2((subgroup_size) / 1u, (0u | 0u))))) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) / 1u)) >> 0u)) - 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (1u ^ 1u) | (0u ^ (subgroup_size)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))) | 0u)) / 1u) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u))) - 0u)))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), 0u + (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id))), true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)))) - 0u)))))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))) * 1u))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(subgroup_id)) - 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))) / 1u))))) | 0u)))) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) - 0))), (1 ^ 1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)))) % subgroup_size);
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true)))))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true), true, true))), true))))))))))))))) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(-35340), (true ? _GLF_FUZZED(-35340) : _GLF_FUZZED(-33136))))), _GLF_IDENTITY(64, max(64, 64)), 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) ? _GLF_FUZZED(-5340.4353) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - 0.0) > injectionSwitch.y)) ? _GLF_FUZZED(-5340.4353) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))));
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_DEAD(false), true)), false, false)), (bool(bvec3(bool(bvec2(_GLF_DEAD(false), true)), false, false))) && true))))))
          barrier();
         for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), max(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((false ? _GLF_IDENTITY(9.1, (_GLF_IDENTITY(9.1, 0.0 + (9.1))) - log(cos(0.0))) : 547.974)), _GLF_FUZZED(80.52)), bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true)), true, false), true)))))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && (false), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), (_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))) && true)) && true)) && (false), _GLF_IDENTITY(true, false || (true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(64.65) : injectionSwitch.y))), float(_GLF_FUZZED(390.021)), bool(false))), injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x)))) > injectionSwitch.y))) && true)));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false)))))))) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
      {
       if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70357) : _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 0, 1)), 1 * (_GLF_IDENTITY(int(ivec4(1, 0, 0, 1)), 0 | (int(ivec4(1, 0, 0, 1))))))), (0 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitfieldInsert(-87673, -81219, _GLF_IDENTITY(80691, 0 ^ (80691)), -78549)))), 1)))), 0 | (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) * 1.0), float(_GLF_FUZZED(958.628)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))) > injectionSwitch.y)) ? _GLF_FUZZED(70357) : _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)))), (false ? _GLF_FUZZED(6563) : (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)), (_GLF_IDENTITY(true, ! (! (true))) ? float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0)) : _GLF_FUZZED(2617.5675))), float(_GLF_FUZZED(958.628)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bvec2(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true))))) > injectionSwitch.y)) ? _GLF_FUZZED(70357) : _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))), (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1))))))))) < subgroup_size)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         int i = 0;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)), next_virtual_gid))], uint(2), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, int(ivec4(7, 0, 1, 0))), 7))), _GLF_IDENTITY(int(7), (int(7)) * 1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, min(7, 7)), 7))), int(7)), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) * 1))) >> _GLF_IDENTITY(int(7), int(7))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
            barrier();
           do
            {
             atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, false, true), bvec3(bvec4(bvec3((false) && true, false, true), false)))))), (_GLF_IDENTITY(false, (false) && true)) || false)));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))))), true && (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))));
      }
    }
  }
}
