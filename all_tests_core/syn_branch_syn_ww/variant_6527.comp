#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false, false))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), float(vec3((1.0), 1.0, 1.0))))), float(mat2x4(float(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), float(vec3((1.0), 1.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.0)), float(1.0), bool(true))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), 1.0)), 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), true && (bool(false)))))))), injectionSwitch.y), max(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y)))))), (int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(40.89)), max(float(_GLF_FUZZED(40.89)), float(_GLF_FUZZED(_GLF_IDENTITY(40.89, max(_GLF_IDENTITY(40.89, (false ? _GLF_FUZZED(-278.028) : _GLF_IDENTITY(40.89, clamp(40.89, 40.89, 40.89)))), _GLF_IDENTITY(40.89, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 40.89 : _GLF_FUZZED(-8.9))))))))), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))))), injectionSwitch.y))) - 0)), (~ (_GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y)), (int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-77.55))), mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(40.89)), bool(false))), injectionSwitch.y))) - 0))) ^ 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) && true)))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_injected_loop_counter) : 6)), 6))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY((int(6)) | (int(6)), ((int(6)) | (int(6))) / 1), (_GLF_IDENTITY((int(6)) | (int(_GLF_IDENTITY(6, (6) ^ 0))), ((int(6)) | (int(6))) / 1)) / 1)))), 0 ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_injected_loop_counter) : 6)), 6))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY((int(6)) | (int(6)), ((int(6)) | (int(6))) / 1), (_GLF_IDENTITY((int(6)) | (int(_GLF_IDENTITY(6, (6) ^ 0))), ((int(6)) | (int(6))) / 1)) / 1))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, true)))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))) && true)))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_WRAPPED_IF_FALSE(false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), true, false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))))), false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))))), false))))), (((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true) || false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false))), false)), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false)))))))), false)))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-99.22, 8.2)), min(_GLF_FUZZED(vec2(-99.22, 8.2)), _GLF_FUZZED(vec2(-99.22, 8.2)))) : injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(abs(vec2(0.0, 0.0))) * (injectionSwitch)).y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), exp(abs(vec2(0.0, 0.0))) * (injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(abs(vec2(0.0, 0.0))) * (injectionSwitch)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(827.418, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(827.418, min(827.418, 827.418)) : _GLF_FUZZED(_GLF_IDENTITY(pow(asin(-8.5), 268.729), (false ? _GLF_FUZZED(-8.7) : pow(asin(-8.5), 268.729))))))), _GLF_FUZZED(_GLF_IDENTITY((40.86 / 45.28), float(vec2((40.86 / 45.28), 0.0))))), (true ? vec2(_GLF_FUZZED(_GLF_IDENTITY(827.418, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(827.418, min(827.418, 827.418)) : _GLF_FUZZED(_GLF_IDENTITY(pow(asin(-8.5), 268.729), (false ? _GLF_FUZZED(-8.7) : pow(asin(-8.5), 268.729))))))), _GLF_FUZZED(_GLF_IDENTITY((40.86 / 45.28), float(vec2((40.86 / 45.28), 0.0))))) : _GLF_FUZZED(injectionSwitch))), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(exp(abs(vec2(0.0, 0.0))), mat2(1.0) * (exp(abs(vec2(0.0, 0.0))))) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, exp(abs(vec2(0.0, 0.0))) * (injectionSwitch)))[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1))))]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(exp(abs(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), (_GLF_IDENTITY(exp(abs(vec2(0.0, 0.0))), (exp(abs(vec2(0.0, 0.0)))) * mat2(1.0))) - sin(vec2(0.0, 0.0))) * (injectionSwitch)))).y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(abs(vec2(0.0, 0.0))) * (injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, exp(abs(vec2(0.0, 0.0))) * (injectionSwitch)).y)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) / 1.0)) / 1.0)) - sqrt(tan(_GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-67.64) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-67.64) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-67.64) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 1.0, exp(0.0), 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))))))))))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), true && (_injected_loop_counter < (1 & _GLF_IDENTITY(1, ~ (~ (1))))))); _GLF_IDENTITY(_injected_loop_counter ++, (1 & 1) * _GLF_IDENTITY((_injected_loop_counter ++), 0 ^ ((_injected_loop_counter ++)))))
                {
                 return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))))
                continue;
              }
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), (true) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), ! (! (true))), (true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (true) && true) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))) || false)))));
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) || false))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), false))))), bool(bvec2(! (false), true)))), bool(bool(bool(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + _GLF_IDENTITY(0u, (0u) ^ 0u));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) | 0u))) - 0u, _GLF_IDENTITY(~ (~ ((subgroup_size) - 0u)), max(~ (~ ((subgroup_size) - 0u)), ~ (~ ((subgroup_size) - 0u)))))), _GLF_IDENTITY(max(subgroup_size, subgroup_size), uint(uvec4(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), 1u, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(vec3(-850.496, 7.2, 2723.0094).s)), bool(false)))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, (0u & _GLF_IDENTITY(78030u, max(78030u, 78030u))))), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, (0u & 78030u)))) * 1u))) / 1u)), max((workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), uint(uvec4(~ (workgroup_base), 1u, 0u, 0u))))) + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))))) << 0u, 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)), ((workgroup_base + subgroup_id * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))))))))) << 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, (0u & _GLF_IDENTITY(78030u, max(78030u, 78030u))))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 1u, 0u, (0u & 78030u)), min(uvec4(subgroup_id * subgroup_size, 1u, 0u, (0u & 78030u)), uvec4(subgroup_id * subgroup_size, 1u, 0u, (0u & 78030u)))))) * 1u))) / 1u)), max((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), uint(uvec4(~ (workgroup_base), 1u, 0u, 0u))))) + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(virtual_gid))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) / 1u))), (uint(uvec2(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (0u) / 1u)))) << 0u), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (1u ^ (0u ^ 1u)) | (subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u, ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u) | ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)))), _GLF_IDENTITY(((workgroup_base + subgroup_id * subgroup_size)) << 0u, ~ (_GLF_IDENTITY(~ (((workgroup_base + subgroup_id * subgroup_size)) << 0u), (true ? ~ (((workgroup_base + subgroup_id * subgroup_size)) << 0u) : _GLF_FUZZED(40055u))))))))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)))))), ~ (~ (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | 0u), 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (workgroup_base)))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u | 0u), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), subgroup_size)), 0u)))) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (workgroup_base)))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u | 0u), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), subgroup_size)), 0u)))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (_GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (workgroup_base)))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (0u | 0u), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), subgroup_size)), 0u)))) / 1u)))), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))))) << 0u, 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u)), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) - 0u))) >> 0u), ((workgroup_base + subgroup_id * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) | (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size)))))))))))), max(~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size)))))))))))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size)), 0u)), (true ? uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)) : _GLF_FUZZED(153079u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), subgroup_id * subgroup_size)), 0u ^ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size)) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))) / 1u)), ((workgroup_base + subgroup_id * subgroup_size)) << 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), max(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u ^ (workgroup_base + subgroup_id * subgroup_size))))))))))))))) << 0u)))))) | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1)))), (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0), (false ? _GLF_FUZZED(65121) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0), (false ? _GLF_FUZZED(-76757) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0), 0, 0)))))))) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (1)), 1, 1))) >> 0, ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, 0 + ((1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(3247) : _GLF_IDENTITY(0, ~ (~ (0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(89009, (false ? _GLF_FUZZED(22942) : 89009))) : 1))))) >> 0)) / 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(89009, (false ? _GLF_FUZZED(22942) : 89009))) : 1))))) >> 0)) / 1))) * 1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), 1u * ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(ivec2((1), 1))) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))))), (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((1) ^ 0, (true ? (1) ^ 0 : _GLF_FUZZED(28185)))) | ((1) ^ 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, (0 << _GLF_IDENTITY(int(6), int(6))), 1)), clamp(int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, (0 << _GLF_IDENTITY(int(6), int(6))), 1)), int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, (0 << _GLF_IDENTITY(int(6), int(6))), 1)), int(ivec4(_GLF_IDENTITY(0, max(0, 0)), 1, (0 << _GLF_IDENTITY(int(6), int(6))), 1))))), ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))) ? _GLF_FUZZED(89009) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), max((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(89009, (89009) >> 0)) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, clamp((1) ^ 0, (1) ^ 0, (1) ^ 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(89009) : 1))))) >> 0)) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | 0)) | (0))), 0 ^ (_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0))))))))))))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size)), (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) | 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))), (true ? ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) | 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) >> 0u), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, subgroup_local_id, 63500u))))) >> 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - (0 & 47809))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))), ((1)) - 0) >> 0)) % _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) / (0u ^ 1u))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))) << 0u)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) | 0u))))), (true ? _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))) ^ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) | 0)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size) / (0u ^ 1u))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))) << 0u)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) | 0u))))) : _GLF_FUZZED(workgroup_base)))), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))), (~ (_GLF_IDENTITY((1), clamp((1), (1), (1))))) * 1)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))), (~ (_GLF_IDENTITY((1), clamp((1), (1), (1))))) * 1)), (false ? _GLF_FUZZED(67141) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))), (~ (_GLF_IDENTITY((1), clamp((1), (1), (1))))) * 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), clamp((1), (1), (1)))), (~ (_GLF_IDENTITY((1), clamp((1), (1), (1))))) * 1))))) >> 0)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(subgroup_size, subgroup_size))), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) >> 0)) % subgroup_size), min(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 1 * (1))))), (1) >> 0)) % subgroup_size)))))) ^ (0u | _GLF_IDENTITY(0u, 0u ^ (0u))))));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), bool(bvec3(! (false), false, false)))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))) && true), true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), bool(bvec3((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), bool(bvec3((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) && true, ((_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))) && true) && true)), true))), bool(bvec3((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ((_GLF_DEAD(false))) && true)) && true), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) || false, (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), bool(bvec3((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false))) || false) && true))), ((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bool(true))))), bool(bool((! (_GLF_IDENTITY(true, bool(bool(true)))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bool(true))))), bool(bool((! (_GLF_IDENTITY(true, bool(bool(true)))))))))), ! (! (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bool(true))))), bool(bool((! (_GLF_IDENTITY(true, bool(bool(true))))))))))))), false, false, false)))) || false))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))), ((_GLF_DEAD(false))) && _GLF_IDENTITY(true, ! (! (true)))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ((_GLF_DEAD(false))) && true), true))), bool(bvec3((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false)))) && true), true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))) || false)), ((_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))) || false))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, false)))), false, false)))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), ! (! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))))))) || false)) && true)))) || false)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), bool(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_IDENTITY(bool(bvec2((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))) || false))))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) && true), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), bool(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_IDENTITY(bool(bvec2((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2((bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))) || false)), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))) || false))))) || false))), true, true, true))))) && true)) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, _GLF_IDENTITY(1u, (1u) - 0u), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) >> 0u, 0u + (_GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) | 0u))), ((virtual_gid) >> 0u) ^ 0u))], uint(1), 4, 64, 4);
  }
 else
  {
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) - 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))), min(float(_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))), float(_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)))))), float(_GLF_IDENTITY(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))))))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), false, false, false))))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), true && (! (! (false))))))))), bool(bvec3(_GLF_DEAD(false), true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, log(cos(vec2(0.0, 0.0))) + (injectionSwitch)).y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, log(cos(vec2(0.0, 0.0))) + (injectionSwitch)).y))))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, log(cos(vec2(0.0, 0.0))) + (injectionSwitch)).y)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) << 0u), max(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u)))) + (uint(2))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) ^ (0u)) - 0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / 1u) ^ (0u))) - 0u))))), _GLF_IDENTITY(0u, 0u ^ (0u)))) + (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) >> 0)))))))), (uint(2)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u)))), clamp(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u)))), min(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u))))), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))) ^ (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_local_id)) : 0u)))), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), (0u ^ (0u)) << 0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u)))) + (uint(2))))), min(_GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)))))), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u)))) + (uint(2))))), _GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u))), uint(uvec3(clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u))), 0u, 0u))), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), _GLF_IDENTITY(0u, 0u ^ (0u)))))) + (uint(2))))))), (uint(2)) << 0u)) / 1u))), 4, 64, 4);
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, int(int(2))), (2) | (_GLF_IDENTITY(2, ~ (~ (2))))), int(ivec3(2, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, (true ? (0) / 1 : _GLF_FUZZED(-57528)))))), 1)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(2, int(int(2)))), ((_GLF_IDENTITY(2, int(int(2))))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), (false ? _GLF_FUZZED(65075) : (~ (_GLF_IDENTITY(2, int(int(2))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) | (int(int(2))))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-29.05) : 1.0)), injectionSwitch.y)))), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), (false ? _GLF_FUZZED(65075) : (~ (_GLF_IDENTITY(2, int(int(2))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) | (int(int(2))))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-29.05) : 1.0)), injectionSwitch.y)))), 0 | (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), (false ? _GLF_FUZZED(65075) : (~ (_GLF_IDENTITY(2, int(int(2))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) | (int(int(2))))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-29.05) : 1.0)), injectionSwitch.y))))))) | (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), (false ? _GLF_FUZZED(65075) : (~ (_GLF_IDENTITY(2, int(int(2))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) | (int(int(2))))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-29.05) : 1.0)), injectionSwitch.y)))))), int(ivec3(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, min(2, 2))))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0, 1))))), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) / 1))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)))), (false ? _GLF_FUZZED(38309) : (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)))))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)))))) | (1 ^ 1), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), max(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), min(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))))))), ((_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), max(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), min(clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)), clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))))))))) ^ (0 << _GLF_IDENTITY(int(8), int(8)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1), (ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), _GLF_IDENTITY(((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) / 1)))), _GLF_IDENTITY(0, (0) / 1)))))) | (1 ^ 1)), 0 + (((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) / 1)))), _GLF_IDENTITY(0, (0) / 1)))))) | (1 ^ 1)))) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), int(3), int(3))), int(3))))), 1)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-410.995), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.3)), bvec2(true, false))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))))))), injectionSwitch.y)))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(2, int(int(2)))), (0 << _GLF_IDENTITY(int(0), int(0))) | (~ (_GLF_IDENTITY(2, int(int(2))))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0, 1))))), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-20128))))), 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) - 0)))), _GLF_IDENTITY(0, (0) / 1)))) | _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), min((1 ^ 1), (1 ^ 1))), (1 ^ 1))), _GLF_IDENTITY(((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))), int(ivec4(((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))), 0, 0, 1))))), 1), (ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)), 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), int(ivec4(int(3), 0, 0, 0))), int(3))), int(3))))), 1)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), injectionSwitch.y)))), int(int(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0, 1))))), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1), (ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0, 1))))), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1), (ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(int(ivec2(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, int(int(2))))), 0 | ((~ (_GLF_IDENTITY(2, int(int(2))))))), (~ (_GLF_IDENTITY(2, int(int(2))))))), int(_GLF_ONE(1.0, injectionSwitch.y)))), 0, 1))))), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1), (ivec3(2, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1), ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (1 ^ 1)) >> (0 << _GLF_IDENTITY(int(3), int(3))))), 1)) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | 0))))) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b), max(_GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b), _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), min(true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b), max(_GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b), _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))), true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b), max(_GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b), _GLF_FUZZED(vec3(-827.336, -683.198, -47.84).b))))))), injectionSwitch.y)))))))) * 1))))), 4, 64, 4);
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec3(-136.975, _GLF_IDENTITY(-332.157, max(_GLF_IDENTITY(-332.157, (true ? _GLF_IDENTITY(-332.157, 1.0 * (-332.157)) : _GLF_FUZZED(determinant(mat3(3.5, 12.23, 3.2, -46.65, 5346.6975, -216.765, 9136.6242, 2.2, 767.118))))), _GLF_IDENTITY(-332.157, max(-332.157, -332.157)))), 5886.6323), vec3(22.53, 42.34, -0.4))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))
                    return;
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0)), _GLF_IDENTITY(mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0)))), (mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, log(1.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(normalize(2.1)))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.6)), float(1.0), bool(true))))))))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))) && true)))) && true));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) || false)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) || false)), true)))))
      return;
    }
  }
}
