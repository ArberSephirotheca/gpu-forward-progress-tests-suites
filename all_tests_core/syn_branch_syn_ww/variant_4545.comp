#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false)), (bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), true, false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = (0 & (53035 | 73176)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = ((_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)) - vec2(0.0, 0.0))).y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ (41549 & 0)), int(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), ~ (~ (int(5)))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) + 0)) / 1))) - (0 & 2320)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bool((true)))), false))))), true, false)))))
                            {
                             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 | 0), (_injected_loop_counter != (1 | 0)) && true)); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), injectionSwitch)).x))); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (1) / 1) & (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1)))), min(1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 | (_GLF_IDENTITY(1, (1) - 0))) ^ 1) + (1)), 1)) | 0))); _injected_loop_counter ++)
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                {
                                                }
                                               else
                                                {
                                                 do
                                                  {
                                                   do
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                                        {
                                                         do
                                                          {
                                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                                                            {
                                                            }
                                                           else
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1) && true)); _injected_loop_counter ++)
                                                                  {
                                                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))))))))); _injected_loop_counter ++)
                                                                    {
                                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                                      {
                                                                       return;
                                                                      }
                                                                     else
                                                                      {
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                         while(_GLF_WRAPPED_LOOP(false));
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   while(_GLF_WRAPPED_LOOP(false));
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), max(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), max(0.0, 0.0))) : _GLF_FUZZED(610.463), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463))))), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ((0) << 0) >> 0))])) + 0.0) : _GLF_FUZZED(610.463), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ((0) << 0) >> 0))])) + 0.0) : _GLF_FUZZED(610.463), mix(float(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463)), float(_GLF_FUZZED(8792.6794)), bool(false))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(vec3(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(0.0))), vec2(mat4x3(vec2(mat2(injectionSwitch, 1.0, exp(0.0))), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))).y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), max(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(610.463), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463))))), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ((0) << 0) >> 0))])) + 0.0) : _GLF_FUZZED(610.463), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ((0) << 0) >> 0))])) + 0.0) : _GLF_FUZZED(610.463), mix(float(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)]), min(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)]), _GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])))) + 0.0) : _GLF_FUZZED(610.463)), float(_GLF_FUZZED(8792.6794)), bool(false))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(vec3(vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) / 1.0), 1.0, 0.0, 0.0, 0.0)), 0.0)))).y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, clamp((0) << 0, _GLF_IDENTITY((0) << 0, (true ? (0) << 0 : _GLF_FUZZED(-26582))), (0) << 0)))])) + 0.0) : _GLF_FUZZED(610.463), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), max(true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)]), (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)]), float(mat4(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)]), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) + _GLF_IDENTITY(0.0, max(0.0, 0.0))) : _GLF_FUZZED(610.463), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0, clamp(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0, min(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0, mix(float((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0), float(_GLF_FUZZED(-1.2)), bool(false))), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0, mix(float((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0), float(_GLF_FUZZED(1.2)), bool(false))))), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0, float(mat3x4((_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0))) : _GLF_FUZZED(610.463))))), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(2), int(2)))), (0) + 0)]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0)), _GLF_IDENTITY((0) << 0, ((0) << 0) >> 0))])) + 0.0) : _GLF_FUZZED(610.463), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ((0) << 0) >> 0))])) + 0.0) : _GLF_FUZZED(610.463), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), max(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463)))), float(_GLF_FUZZED(8792.6794)), bool(false)), max(mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), max(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463)))), float(_GLF_FUZZED(8792.6794)), bool(false)), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), max(true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463), true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463)))), float(_GLF_FUZZED(8792.6794)), bool(false))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), vec2(vec3(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))).y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true))))))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), min(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), (true ? vec3(injectionSwitch.x, 0.0, 0.0) : _GLF_FUZZED(vec3(-827.845, -2.6, -0.4)))), vec3(injectionSwitch.x, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(true)))))))), bool(bvec3(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(true)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch[0]), (_GLF_FUZZED(injectionSwitch[_GLF_IDENTITY(0, (0) << 0)])) + 0.0) : _GLF_FUZZED(610.463))) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(true))))))) || false))), true, true)))))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(false))
                                          {
                                           do
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1])).x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), max(~ (1), ~ (1)))))])).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0))[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)))) || false))))))))
                                              {
                                               do
                                                {
                                                 return;
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                             else
                                              {
                                              }
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))));
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mod(_GLF_IDENTITY(_GLF_IDENTITY(1117.9757, max(1117.9757, 1117.9757)), max(_GLF_IDENTITY(1117.9757, max(1117.9757, 1117.9757)), _GLF_IDENTITY(_GLF_IDENTITY(1117.9757, float(mat3(_GLF_IDENTITY(1117.9757, min(1117.9757, 1117.9757)), 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))), max(1117.9757, 1117.9757)))), 35.30)) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mod(_GLF_IDENTITY(_GLF_IDENTITY(1117.9757, max(1117.9757, 1117.9757)), max(_GLF_IDENTITY(1117.9757, max(1117.9757, 1117.9757)), _GLF_IDENTITY(_GLF_IDENTITY(1117.9757, float(mat3(_GLF_IDENTITY(1117.9757, min(_GLF_IDENTITY(1117.9757, (1117.9757) / 1.0), 1117.9757)), 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))), max(1117.9757, 1117.9757)))), 35.30)) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mod(_GLF_IDENTITY(_GLF_IDENTITY(1117.9757, max(1117.9757, 1117.9757)), max(_GLF_IDENTITY(1117.9757, max(1117.9757, 1117.9757)), _GLF_IDENTITY(_GLF_IDENTITY(1117.9757, float(mat3(_GLF_IDENTITY(1117.9757, _GLF_IDENTITY(min(1117.9757, 1117.9757), mix(float(min(1117.9757, 1117.9757)), float(_GLF_FUZZED((- -862.831))), bool(false)))), 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(max(1117.9757, 1117.9757), (max(1117.9757, 1117.9757)) - 0.0)))), 35.30)) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))) || false)))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((-65706 & 0) << _GLF_IDENTITY(int(1), int(1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     do
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))))) || false); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), true && ((true))), ! (! ((true))))) || false))))))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), false, true, false)), true && (bool(bvec4(true && (false), false, true, false)))))) && true)), (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id))));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
                    {
                    }
                   else
                    {
                     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), min((1), (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 85735)); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), cos(0.0), 1.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), cos(0.0), 1.0))) - sin(0.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (injectionSwitch.x > injectionSwitch.y))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2) == 0)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(1, clamp(1, 1, 1)))); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), min(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1))))) << 0)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, (1) | 0))), 0 ^ (1))), min((_GLF_IDENTITY(1, 0 ^ (1))), (_GLF_IDENTITY(1, 0 ^ (1))))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(1, 1))), (~ (_GLF_IDENTITY(1, max(1, 1)))) ^ 0)))))))))))), true && (_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! (bool(bool(_injected_loop_counter < 1))), (! (bool(bool(_injected_loop_counter < 1)))) && true))), (bool(bool(_injected_loop_counter < 1))) && true), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter < 1), ! (! (bool(_injected_loop_counter < 1))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), false || ((bool(bool(_injected_loop_counter < 1))))), (_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), bool(bool((bool(bool(_injected_loop_counter < 1))))))) && true) && true), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! (bool(bool(_injected_loop_counter < 1))), (! (bool(bool(_injected_loop_counter < 1)))) && _GLF_IDENTITY(true, true && (true))))), (bool(bool(_injected_loop_counter < 1))) && true), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1)))), (bool(bool(_injected_loop_counter < 1))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), (_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), bool(bool((bool(bool(_injected_loop_counter < 1))))))) && true) && true), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) < 1)), ! (_GLF_IDENTITY(! (bool(bool(_injected_loop_counter < 1))), (! (bool(bool(_injected_loop_counter < 1)))) && true))), (bool(bool(_injected_loop_counter < 1))) && true), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), (_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), bool(bool((bool(bool(_injected_loop_counter < 1))))))) && true) && true, (_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), (_GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), bool(bool((bool(bool(_injected_loop_counter < 1))))))) && true) && true) || false)), false || (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, false))), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) < 1))), _GLF_IDENTITY((! (bool(bool(_injected_loop_counter < 1)))), ((! (bool(bool(_injected_loop_counter < 1))))) && true) && true))), (bool(bool(_injected_loop_counter < 1))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true)), ((_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), (bool(bool(_injected_loop_counter < 1))) && true), ! (! (_GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), _GLF_IDENTITY((bool(bool(_injected_loop_counter < 1))), true && ((bool(bool(_injected_loop_counter < 1))))) && true)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))); _injected_loop_counter ++)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(clamp(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(87261) : _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), min(int(_injected_loop_counter), int(_injected_loop_counter)))))) | (_injected_loop_counter), ((_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))), ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), int(0)))))))) / 1)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(0 | (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))), (0 | 1) * (0 | (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))) ? _GLF_FUZZED(clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1), _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))))))) | (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)) / 1, (((_injected_loop_counter)) / 1) | (((_injected_loop_counter)) / 1)))))))) < 1); _injected_loop_counter ++)
                              {
                               do
                                {
                                 do
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_injected_loop_counter), max(int(_injected_loop_counter), int(_injected_loop_counter)))), int(ivec4(int(_GLF_IDENTITY(int(_injected_loop_counter), max(int(_injected_loop_counter), int(_injected_loop_counter)))), 0, 0, 0)))) < int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(1.0, 1.0)), injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_injected_loop_counter ++), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicOr(_injected_loop_counter, _injected_loop_counter), (_GLF_IDENTITY(atomicOr(_injected_loop_counter, _injected_loop_counter), (atomicOr(_injected_loop_counter, _injected_loop_counter)) | 0)) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) : ~ (_injected_loop_counter ++))), 0 | (~ (_injected_loop_counter ++)))))) | 0)) >> 0))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) << 0), 4)), (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY((4), ~ (~ ((4)))) >> 0)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)))), (~ (~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))))) | 0)))), (_GLF_IDENTITY((int(4)), int(ivec2((int(4)), 1)))) | (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) | (7)))))) / 1)))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter))), (~ (1)) << 0))) * (int(4))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), max(~ (4), ~ (4))))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(5), int(5))))), (ivec3(_GLF_IDENTITY(4, ~ (~ (4))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)) - ivec3(0, 0, 0))), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (4))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(int(4), int(4))) ^ 0)) >> _GLF_IDENTITY(int(4), int(4))), 1)) - ivec3(0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (~ (4))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(int(4), int(4))) ^ 0)) >> _GLF_IDENTITY(int(4), int(4))), 1)) - ivec3(0, 0, 0))) : _GLF_FUZZED(_injected_loop_counter))), 0, 0))))) | (_GLF_IDENTITY(4, (4) >> 0)))), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), _GLF_IDENTITY(((int(4))) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(7), int(7)))), (int(int(_GLF_IDENTITY(int(7), int(7))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(7), int(7)))), ~ (~ (int(int(_GLF_IDENTITY(int(7), int(7)))))))) ^ 0))))), (((int(4))) | (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(7), int(7)))), (int(int(_GLF_IDENTITY(int(7), int(7))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(7), int(7)))), ~ (~ (int(int(_GLF_IDENTITY(int(7), int(7)))))))) ^ 0)))))) | 0)) / 1)))), false, true, true))); _GLF_IDENTITY(_injected_loop_counter ++, (0 >> _GLF_IDENTITY(int(7), int(7))) + (_injected_loop_counter ++)))
                                                {
                                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                                  {
                                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY(max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))), _GLF_IDENTITY((max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid))))), (true ? _GLF_IDENTITY((max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid))))), ((max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))))) * 1u) : _GLF_FUZZED(workgroup_size))) | (max(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> (0u & 74797u))))), _GLF_IDENTITY(max((next_virtual_gid), (next_virtual_gid)), max(max((next_virtual_gid), (next_virtual_gid)), max((next_virtual_gid), (next_virtual_gid))))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), _GLF_IDENTITY(max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(max((next_virtual_gid), (next_virtual_gid)), uint(uvec4(_GLF_IDENTITY(max((next_virtual_gid), (next_virtual_gid)), uint(uvec2(max((next_virtual_gid), (next_virtual_gid)), 1u))), 1u, 0u, (0u & 142129u))))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), _GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, 0u, 1u))))))))), ~ (next_virtual_gid)))), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) ^ (max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid))))))))), ~ (~ (_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (next_virtual_gid), max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))))), 1u * ((_GLF_IDENTITY(~ (next_virtual_gid), max(~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), ((next_virtual_gid)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))))))))))), 0u)))], uint(2), 4, 64, 4);
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                 else
                                                  {
                                                  }
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                           else
                                            {
                                            }
                                          }
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.3, -39.99)) : injectionSwitch)).x > injectionSwitch.y))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0), mix(float(_GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0)), float(_GLF_FUZZED((- -4.4))), bool(false))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0))), false, false, false)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ((! (true))) || false)))), ! (! (((_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), ((! (true))) || false)))))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(true, (true) && true), false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false))))))))))) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bool(false))))))))))) && true))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))))))))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))), ! (! (! (! ((_GLF_IDENTITY(! (true), true && (! (true))))))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), false, true, true))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true, false, false))))))), bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), false, false, false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false), true))))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))), true, false)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))))))))))))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(true, (true) && true), false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), false))))))))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(false)))))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))), true, false)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))))))))))))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ! (! ((_GLF_IDENTITY(! (true), true && (! (true)))))))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(true, (true) && true), false)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), false))))))))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false))))))))))))), false)))))))))))))) || false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))) || false, ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))) || false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) / 1.0))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0))))), (bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) / 1.0)))))) && true)), false, false, false))))) && true)));
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 ^ 1)))); _injected_loop_counter ++)
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) << 0)))); _injected_loop_counter ++)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             do
                                              {
                                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-4800.7442, 245.146, -1.7, 3384.1967)) : vec4(1.0, 1.0, 0.0, 1.0)))))), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(2.7, -15.62))), clamp((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(2.7, -15.62))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(2.7, -15.62))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(2.7, -15.62))))))).x > injectionSwitch.y))))
                                                {
                                                }
                                               else
                                                {
                                                 return;
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(129306u, ~ (~ (129306u)))), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(129306u, ~ (~ (129306u))))))))) : _GLF_FUZZED(subgroup_id)))], uint(2), 4, _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) >> 0))), max((~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(64, (64) >> 0))) | ((_GLF_IDENTITY(64, (64) >> 0))))), (~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) >> 0))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ~ (~ ((64) >> 0)))))), max((~ (_GLF_IDENTITY(64, (64) >> 0))), (~ (_GLF_IDENTITY(64, (64) >> 0))))))), ((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), min(_GLF_IDENTITY((64), clamp(_GLF_IDENTITY((64), ((64)) ^ 0), (64), (64))), (64))) >> 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) >> 0), _GLF_IDENTITY(64, (64) >> 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : clamp(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) >> 0), _GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (0) | (0))))))))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (64) >> 0))), 0 ^ (_GLF_IDENTITY(64, (64) >> 0))))), (~ (_GLF_IDENTITY(64, (64) >> 0)))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) >> 0))), max((~ (_GLF_IDENTITY(64, (64) >> 0))), (~ (_GLF_IDENTITY(64, (64) >> 0))))))), ((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) >> 0))), max((~ (_GLF_IDENTITY(64, (64) >> 0))), (~ (_GLF_IDENTITY(64, (64) >> 0)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) >> 0))), max((~ (_GLF_IDENTITY(64, (64) >> 0))), (~ (_GLF_IDENTITY(64, (64) >> 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) >> 0))), max((~ (_GLF_IDENTITY(64, (64) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))))), (~ (_GLF_IDENTITY(64, (64) >> 0))))))), ((_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) >> 0))), max((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 | ((64))) >> 0))), (~ (_GLF_IDENTITY(64, (64) >> 0)))))))) - 0)) ^ (0 | 0)))))))), 4);
                          }
                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false))))))), true))));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                        {
                        }
                       else
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = ((_GLF_IDENTITY((1 & 1), clamp((1 & 1), _GLF_IDENTITY((1 & 1), (true ? (1 & 1) : _GLF_FUZZED(_injected_loop_counter))), (1 & 1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) - 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (~ (5))), (5) | (5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, 1 * (5))), (int(5)) >> 0), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) | 0)) - _GLF_IDENTITY(0, (0) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))) != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)))); _injected_loop_counter --)
                                        {
                                         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | (0 ^ 1))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | (_GLF_IDENTITY(0 ^ 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0 ^ 1), (true ? (0 ^ 1) : _GLF_FUZZED(_injected_loop_counter))), max(~ (0 ^ 1), _GLF_IDENTITY(~ (0 ^ 1), ~ (~ (~ (0 ^ 1))))))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ((false) && true) && true)))), (false) && true))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | (0 ^ 1))), true, _GLF_IDENTITY(false, (false) && true))), (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | (0 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY(false, (false) && true)))) && true))))); _injected_loop_counter ++)
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                              {
                                              }
                                             else
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                                                {
                                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((false))))))) || false)))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     do
                                                      {
                                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                            {
                                                             do
                                                              {
                                                               if(_GLF_WRAPPED_IF_FALSE(false))
                                                                {
                                                                }
                                                               else
                                                                {
                                                                 return;
                                                                }
                                                              }
                                                             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true, false, false))));
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))));
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
