#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat2 _f0;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat2x3 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 bvec2 _f4;
 bool _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 _GLF_struct_5 _f1;
 mat4x3 _f2;
 _GLF_struct_6 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
 bvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 bvec2 _f1;
 mat4 _f2;
 mat2x3 _f3;
 mat2x4 _f4;
 uint workgroup_size;
 mat4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat2 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat3 _f1;
 bool _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_1 _f0;
 _GLF_struct_4 _f1;
 mat3x4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3785.6994, -3484.3510)))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1))))) << _GLF_IDENTITY(0, (0) | 0))])).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false, true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false, true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-47.02) : injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-47.02) : injectionSwitch.y)), injectionSwitch.y)), mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-47.02) : injectionSwitch.y)), injectionSwitch.y))), bool(true))) : _GLF_FUZZED((-7.8 / -601.378))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat2x4(injectionSwitch[1], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat2x4(63.21, -2.1, -55.80, -8582.0804, 0.0, -853.476, 72.27, -3.4)) : mat2x4(injectionSwitch[1], 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, cos(0.0)))))))).y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6711.5016)), bool(false)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true))))))), false || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(245.479) : 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(28.10) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))), 0.0, 1.0, 0.0, 0.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))), 0.0, 1.0, 0.0, 0.0)))))).x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(28.10) : injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8089.8387) : _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))) || false, (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 0.0))).x > injectionSwitch.y))))))) || false, (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 0.0))).x > injectionSwitch.y))))))) || false, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))))), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true)))), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 0.0, 0.0))).x > injectionSwitch.y))))))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)) && true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9483.0972)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8202.8576)))) - abs(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), false || (bool(bvec2(! (false), false)))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_1(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(939.469, 43.34, -944.059, -62.38, -1553.8384, 8618.5410, -96.20, 5870.5664, -7.8)) : mat3(1.0)), transpose(transpose((false ? _GLF_FUZZED(mat3(_GLF_IDENTITY(939.469, max(939.469, _GLF_IDENTITY(939.469, (939.469) - 0.0))), 43.34, -944.059, -62.38, -1553.8384, 8618.5410, -96.20, 5870.5664, -7.8)) : mat3(1.0)))))), mat4x2(1.0), uvec2(1u), _GLF_struct_0(ivec2(1), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) + mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), true)), _GLF_struct_4(_GLF_struct_2(mat3x2(1.0), bvec2(true), mat4(1.0), mat2x3(1.0), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-7900.6000)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.2)), bool(false)))) / 1.0, ((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.2)), bool(false)))) / 1.0) + 0.0))), gl_WorkGroupSize.x, mat4(1.0), ivec3(1)), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, (1.0) - 0.0))), float(_GLF_FUZZED(705.072)), bool(false)))), max(1.0, 1.0))), _GLF_struct_3(1.0, bvec3(true), uvec3(1u))), mat3x4(1.0), _GLF_struct_7(mat2x4(1.0), _GLF_struct_5(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat4x2(transpose(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atanh(-6389.5663)) : 1.0))))))))), mat2x4(1.0), ivec2(1), mat4x2(1.0), bvec2(true), true, mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_IDENTITY(_GLF_FUZZED(1.7), _GLF_IDENTITY(clamp(_GLF_FUZZED(1.7), _GLF_FUZZED(1.7), _GLF_FUZZED(1.7)), min(clamp(_GLF_FUZZED(1.7), _GLF_FUZZED(1.7), _GLF_FUZZED(1.7)), clamp(_GLF_FUZZED(1.7), _GLF_FUZZED(_GLF_IDENTITY(1.7, (_GLF_IDENTITY(1.7, float(float(_GLF_IDENTITY(1.7, min(1.7, 1.7)))))) / 1.0)), _GLF_FUZZED(1.7)))))))) - abs(0.0)))), mat4x3(1.0), _GLF_struct_6(mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ldexp(-26.62, -63602)), mix(float(_GLF_FUZZED(-85.56)), float(_GLF_FUZZED(_GLF_IDENTITY(ldexp(-26.62, -63602), max(ldexp(-26.62, -63602), _GLF_IDENTITY(ldexp(-26.62, -63602), 0.0 + (ldexp(-26.62, -63602))))))), bool(true))), max(_GLF_IDENTITY(_GLF_FUZZED(ldexp(-26.62, -63602)), mix(float(_GLF_FUZZED(-85.56)), float(_GLF_FUZZED(_GLF_IDENTITY(ldexp(-26.62, -63602), max(ldexp(-26.62, -63602), _GLF_IDENTITY(ldexp(-26.62, -63602), 0.0 + (ldexp(-26.62, -63602))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ldexp(-26.62, -63602)), mix(float(_GLF_FUZZED(-85.56)), float(_GLF_FUZZED(_GLF_IDENTITY(ldexp(-26.62, -63602), max(ldexp(-26.62, -63602), _GLF_IDENTITY(ldexp(-26.62, -63602), 0.0 + (ldexp(-26.62, -63602))))))), bool(true))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, true)))))) ? _GLF_FUZZED(8315.4824) : _GLF_IDENTITY(_GLF_FUZZED(ldexp(-26.62, -63602)), mix(float(_GLF_FUZZED(-85.56)), float(_GLF_FUZZED(_GLF_IDENTITY(ldexp(-26.62, -63602), max(ldexp(-26.62, -63602), _GLF_IDENTITY(ldexp(-26.62, -63602), 0.0 + (ldexp(-26.62, -63602))))))), bool(true))))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), float(mat3(_GLF_IDENTITY(ldexp(-26.62, -63602), max(ldexp(-26.62, -63602), ldexp(-26.62, -63602))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(971.650)), bool(false))), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / abs(exp(0.0))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(_GLF_IDENTITY(ldexp(-26.62, -63602), (true ? ldexp(-26.62, -63602) : _GLF_FUZZED(0.1)))), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.5) : 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, _GLF_IDENTITY(-63602, max(-63602, -63602))), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))))) / 1.0), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(3788.5314)), bool(false))), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))))))) * 1.0)), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, -63602), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0))), (max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))) - 0.0), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)))))))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(ldexp(-26.62, _GLF_IDENTITY(-63602, (-63602) | (-63602))), (_GLF_IDENTITY(ldexp(-26.62, -63602), mix(float(ldexp(-26.62, -63602)), float(_GLF_FUZZED(-7144.2158)), bool(false)))) / 1.0), _GLF_IDENTITY(float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(ldexp(-26.62, -63602), _GLF_IDENTITY(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.1))), 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2289.3343) : 0.0)), 1.0, 0.0, 1.0)), float(mat3(float(mat3x4(ldexp(-26.62, -63602), 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, abs(1.0))), min(float(vec2(0.0, abs(1.0))), float(vec2(0.0, abs(1.0)))))), abs(0.0)))), 1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), float(mat4x3(ldexp(-26.62, -63602), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? -8155.9552 : -942.172))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 1.0, 0.0, 0.0))))))))) + 0.0)))), mat2x3(1.0), mat2(1.0)), vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)))), _GLF_struct_9(mat3x2(1.0), _GLF_struct_8(mat2(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? 1.0 : _GLF_FUZZED(-8.1))), 1.0, 0.0, 0.0)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_struct_replacement_10._f1._f0.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, tan(0.0), tan(0.0), 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), (mat3x4(injectionSwitch.x, tan(0.0), tan(0.0), 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) * mat3(1.0))), (false ? _GLF_FUZZED(-6892.1623) : float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, tan(0.0), tan(0.0), 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), (mat3x4(injectionSwitch.x, tan(0.0), tan(0.0), 1.0, abs(0.0), 0.0, 1.0, sqrt(1.0), abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) * mat3(1.0)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.3)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.6, max(-6.6, -6.6))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(4.7, -4.9)) : _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) * vec2(1.0, 1.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec3(! ((_GLF_DEAD(false))), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(738.854)), vec2(_GLF_FUZZED(6781.9924), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)))), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3777.8013) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3146.8471) : injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3146.8471) : injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), min(float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(mat2x4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(3146.8471) : injectionSwitch.x)) > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u), min(_GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u), 1u)), uvec3(uvec4(uvec3(uvec4(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u), 1u)), 0u)))), _GLF_IDENTITY(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u), (uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u)) | (uvec3((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, 1u, 0u)))))))))), 0u ^ (workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))), max(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))), _GLF_IDENTITY(max((_GLF_IDENTITY(subgroup_local_id + 1, 0u + _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))))), 0u ^ (max((_GLF_IDENTITY(subgroup_local_id + 1, 0u + _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))) | ((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) - 0u))), (clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) * 1u)) << 0u)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) << 0u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-86.50) : injectionSwitch.x)) : _GLF_FUZZED(40.88))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-86.50) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), float(_GLF_FUZZED(vec3(4351.0735, 1612.7382, 4.6).r)), bool(false))))) : _GLF_FUZZED(40.88))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch))))[0], min(((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch))))[0], float(vec3(((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch))))[0], 0.0, 0.0))))), _GLF_FUZZED(-7468.8264)), vec2(_GLF_FUZZED(5.7), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) ? injectionSwitch : _GLF_FUZZED(max(vec2(2516.2687, 6496.9493), injectionSwitch))))[1]), bvec2(false, true)))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}
