#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 bvec2 _f0;
 bvec3 _f1;
 ivec4 _f2;
 mat2 _f3;
 vec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat4x2 _f1;
 mat2x3 _f2;
 mat3 _f3;
 float _f4;
 mat2x3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_6 {
 uint workgroup_size;
 _GLF_struct_5 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, false || (true)))), bool(bvec2(bool(bvec4(false, false, true, true)), false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false)))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          continue;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))))) && true)), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), false))), false)))))))))));
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-45450 & 0)); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.6)))))))))
    {
    }
   else
    {
     do
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), ((int(7))) ^ 0) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED((_injected_loop_counter * -1789)))) > 0), true, true)), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true, true))))))) && true); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
       else
        {
        }
       return;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(gl_WorkGroupSize.x, _GLF_struct_5(_GLF_struct_0(mat3x4(1.0), mat2(1.0), mat2x3(1.0)), _GLF_struct_1(uvec2(1u), ivec3(_GLF_IDENTITY(1, max(1, 1))), mat3x4(1.0), uvec3(1u)), _GLF_struct_2(1u, mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))), mat3(mat3x4(mat3(1.0)))))))))), 1.0, mat2x3(1.0), uvec3(1u)), uvec4(1u), _GLF_struct_3(bvec2(true)), _GLF_struct_4(bvec2(true), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), ~ (~ (_GLF_IDENTITY(1, (1) >> 0))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))))) | 0), 0, _GLF_IDENTITY(0, 1 * (0))))) : _GLF_FUZZED(21098)))), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1)))), (~ (~ (1))) / 1))))), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) / 1.0, clamp((float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) / 1.0, (float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) / 1.0, (float(mat4x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))) / 1.0))))), vec2(1.0), mat3(1.0)), ivec4(1)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))), (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))), (injectionSwitch) * mat2(1.0)).y) - 0.0), 1.0 * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          continue;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), float(_GLF_FUZZED((+ 443.918))), bool(false))) > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_size, ~ (~ (_GLF_struct_replacement_6.workgroup_size)))), (~ (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_size, ~ (~ (_GLF_struct_replacement_6.workgroup_size))))) ^ 0u))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), subgroup_id * subgroup_size), uint(uvec4(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) : _GLF_FUZZED(virtual_gid))))), subgroup_id * subgroup_size), 0u, 1u, 0u)))) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / 1), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), max(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY((int(2)), ((int(2))) + 0))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), 0 ^ (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(_GLF_IDENTITY(2, (2) | (2))))))))))) + 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int((_GLF_IDENTITY(0, int(int(0))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((_injected_loop_counter << _injected_loop_counter))))))) | (1)), _GLF_IDENTITY(1, 0 | (1)))) * (~ (int(2))))))) | (int(2))), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(565.817), _GLF_FUZZED(-74.98)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))) | (int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))))), (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1)))) * (~ (int(2))))))) | (int(2))) : _GLF_FUZZED((+ bitfieldExtract(-85487, 72091, -6330)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (int(_GLF_IDENTITY(2, ~ (~ (2))))), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), (int(2)) >> 0)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2))) * 1))))))), (int((_GLF_IDENTITY(0, (0) ^ 0) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(2), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))), max(clamp((_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1 * (~ (int(2))), max(_GLF_IDENTITY(1 * (~ (int(2))), (1 * (~ (int(2)))) / 1), 1 * (~ (int(2))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))), clamp((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ _GLF_IDENTITY((int(2)), max((int(2)), _GLF_IDENTITY((int(2)), ((int(2))) | 0)))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))))))) | (int(2))))))) + 0), clamp(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), (false ? _GLF_FUZZED(19734) : (int(2))))) >> 0)))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ _GLF_IDENTITY((int(2)), 0 | ((int(2))))))))) | (_GLF_IDENTITY(int(2), (int(2)) << 0))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1)))), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (1) | (1)) * (~ (int(2))))))) | (int(2))) * 1), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), _GLF_IDENTITY(int(2), (int(2)) - 0))), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), 0 + ((1)))) * (~ (int(2))))))) | (int(2))) * 1)) + 0))))))), (int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(2), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), clamp(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), _GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), _GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (_GLF_IDENTITY(int(2), (int(2)) | (0 >> _GLF_IDENTITY(int(1), int(1)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, int(ivec3(2, 0, _GLF_IDENTITY(1, 0 ^ (1))))))), 1 * (~ (int(2))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (int(2)) ^ 0), int(2), int(2)))), 1 * (~ (_GLF_IDENTITY(int(2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (~ (int(2))))), clamp((_GLF_IDENTITY(int(2), ~ (~ (int(2))))), (_GLF_IDENTITY(int(2), ~ (~ (int(2))))), (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))))))))))), min(((_GLF_IDENTITY(~ (int(2)), 1 * (~ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), max(~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), ~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2))))))))) - 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), 0 | (~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (int(2)), 1 * (~ (_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))))))))), (false ? _GLF_FUZZED(50165) : ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), max(int(2), int(2)))), 1 * (~ (_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), ~ (~ _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), ((int(2))) << 0)) | (_GLF_IDENTITY((int(2)), int(ivec2((int(2)), 1))))))))))))))))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * _GLF_IDENTITY((~ (int(2))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((~ (int(2)))))))), 1 * (((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ _GLF_IDENTITY((int(2)), ((int(2))) ^ 0))))))))) - 0), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))))) | (int(2))))))) + 0), _GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1 * (~ (int(2))), (_GLF_IDENTITY(1 * (~ (int(2))), 0 ^ (1 * (~ (int(2)))))) + 0))))) | (int(2)), _GLF_IDENTITY(((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1, clamp(((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1, ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1, int(_GLF_IDENTITY(int(((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1), (int(((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1)) - 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2)))))), (false ? _GLF_FUZZED(-14815) : _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2)))))), (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))))))) | (_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))))) | (int(2))) * 1)), ((_GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) << 0))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), (true ? ~ (int(2)) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) * (~ (int(2))))))) | (int(2))) * 1))) | _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-68051))))) >> 0)))))), (int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2)))), (0 ^ (_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))))) | (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2)))), (0 ^ (_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))))) / 1))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * _GLF_IDENTITY((~ (int(2))), ((~ (int(2)))) ^ 0))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))), int(ivec4(_GLF_IDENTITY(((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))), (false ? _GLF_FUZZED(int(196.448)) : ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 1))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), (int(2)) / 1)), 1 * _GLF_IDENTITY((~ (int(2))), clamp((~ (int(2))), _GLF_IDENTITY((~ (int(2))), clamp((~ (int(2))), _GLF_IDENTITY((~ (int(2))), ((~ (int(2)))) << 0), (~ (int(2))))), (~ (int(2))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))))))), clamp((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, _GLF_IDENTITY(2, (2) / 1)), max(min(2, _GLF_IDENTITY(2, (2) / 1)), min(2, _GLF_IDENTITY(2, (2) / 1))))))))), 1 * (~ (int(2))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), ~ (~ (~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) - (0 ^ 0))))))), min((~ (int(2))), _GLF_IDENTITY((~ (int(2))), ((~ (int(2)))) / 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, 1 * (2)))), 1 * (~ (int(2))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), 0 | (int(2)))), 1 * (~ (int(2))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))) - 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(~ (int(2)), 1 * _GLF_IDENTITY((~ (int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((~ (int(2))), min((~ (int(2))), (~ (int(2)))))), 0 + (int(_GLF_IDENTITY((~ (int(2))), min((~ (int(2))), (~ (int(2))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY((~ (int(2))), min((~ (int(2))), (~ (int(2)))))), 0 + (int(_GLF_IDENTITY((~ (int(2))), min((~ (int(2))), (~ (int(2)))))))))) | (int(_GLF_IDENTITY(int(_GLF_IDENTITY((~ (int(2))), min((~ (int(2))), (~ (int(2)))))), 0 + (int(_GLF_IDENTITY((~ (int(2))), min((~ (int(2))), (~ (int(2)))))))))))))) + 0))))) - 0), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))))) | (int(2))))))) + 0), _GLF_IDENTITY(int((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, max(2, 2)))), 1 * (~ (int(2))))))) | (int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 0 ^ (~ (int(2)))), 1 * (~ (int(2)))), _GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) / 1)))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2))) * 1))))), min(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, max(2, 2)))), 1 * (~ (int(2))))))) | (int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 0 ^ (~ (int(2)))), 1 * (~ (int(2)))), _GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) / 1)))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2))) * 1))))), 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, max(2, 2)))), 1 * (~ (int(2))))))) | (int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (int(2)), 0 ^ (~ (int(2)))), 1 * (~ (int(2)))), _GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) / 1)))) | (int(2)), ((_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))) | (int(2))) * 1))))))))), _GLF_IDENTITY((int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), int(ivec2((int(2)), 1)))) >> 0), _GLF_IDENTITY(1, (1) ^ 0) * (~ (int(2))))), clamp((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, max((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0)))), 1 * ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), 0 ^ ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0))), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))))) | (int(2))))))) + 0, int(ivec4(_GLF_IDENTITY((int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), int(ivec2((int(2)), 1)))) >> 0), _GLF_IDENTITY(1, (1) ^ 0) * (~ (int(2))))), clamp((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, max((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0)))), 1 * ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), 0 ^ ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0))), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))))) | (int(2))))))) + 0, int(ivec2((int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((int(2)), (_GLF_IDENTITY((int(2)), int(ivec2((int(2)), 1)))) >> 0), _GLF_IDENTITY(1, (1) ^ 0) * (~ (int(2))))), clamp((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (_GLF_IDENTITY(~ (int(2)), (~ (int(2))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, max((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0, ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0)))), 1 * ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))), 0 ^ ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) | ((_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2)))))))) - 0))), (_GLF_IDENTITY(~ (int(2)), 1 * (~ (int(2))))))))) | (int(2))))))) + 0, 1))), 1, 0, 0)))))), int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (int(2))), (_GLF_IDENTITY(int(2), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(2, ((0 << _GLF_IDENTITY(int(2), int(2))) | 0) ^ (2)))), 1 * (~ (int(_GLF_IDENTITY(2, (2) ^ 0)))))), int(int(_GLF_IDENTITY((_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1 * (~ (int(2))), (1 * (~ (int(2)))) | 0))), ~ (~ ((_GLF_IDENTITY(~ (int(2)), _GLF_IDENTITY(1 * (~ (int(2))), (1 * (~ (int(2)))) | 0))))))))))) | (int(2))))))))), _GLF_IDENTITY(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), min(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) | (int(2)))) | (int(2)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) << (0 << _GLF_IDENTITY(int(1), int(1)))), (int(2)) | (int(2)))) | (int(2)))))))))))), _GLF_IDENTITY(int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), int(int(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), clamp((int(2)), _GLF_IDENTITY((int(2)), 0 + ((int(2)))), (int(2)))) | (int(2)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) ^ 0) | _GLF_IDENTITY((int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))), ((int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) | (int(2))))))))) * 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))))))), (false ? _GLF_FUZZED(-53043) : int(_GLF_IDENTITY(int(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : int(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))))))))), (min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))) | (_GLF_IDENTITY(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))), (min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))) / 1))), (min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) << 0)))), _GLF_IDENTITY((int(2)) | (int(2)), ((int(2)) | _GLF_IDENTITY((int(2)), 0 + (_GLF_IDENTITY((int(2)), ((int(2))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | ((int(2)) | (int(2))))))))))), int(int((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2)))) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))), (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2)))) | (_GLF_IDENTITY(int(2), (int(2)) / _GLF_IDENTITY(1, clamp(1, 1, 1))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(min(int(int((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, _GLF_IDENTITY(0, (0) << 0)))))))) | (0)) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) >> 0), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), _GLF_IDENTITY(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))))), (min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (int(2))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) | 0), _GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2)))))) | (_GLF_IDENTITY(2, ~ (~ (2)))))) | (2)))) | (_GLF_IDENTITY(int(2), (int(2)) / 1))))))))) / 1)), ((_GLF_IDENTITY(min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), ((int(2))) >> 0) | (int(2))), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) | 0))) / 1)))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))), (min(int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 0 ^ (_GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) / 1))))))))), int(int((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2)))) | (_GLF_IDENTITY(int(2), (int(2)) / 1))), (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) | (2)))) | (_GLF_IDENTITY(int(2), (int(2)) / 1)))) ^ 0))))))) / 1))) ^ 0)) >> 0))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(_injected_loop_counter, 1535)) : _GLF_IDENTITY(1, (1) / 1))) < subgroup_size)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     int i = 0;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(2, 2))), (uint(2)) >> 0u), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && true)))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0)))))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true, false)), (bool(bvec4((false), false, true, false))) || false)), _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true, false)), (bool(bvec4((false), false, true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true, false)), (bool(bvec4((false), false, true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! ((_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true, false)), (bool(bvec4((false), false, true, false))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (~ (_GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), (false ? _GLF_FUZZED(_injected_loop_counter) : (2)))))))) * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1)))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    break;
  }
}
