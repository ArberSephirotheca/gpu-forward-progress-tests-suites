#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 0u)))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 0u)))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 0u)))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 0u)))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), 0u, 0u, 0u)))))))), max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(26112u, (26112u) >> 0u), 62689u, 5439u)))))) ^ uvec3(0u, 0u, 0u))) / _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))), (((uvec3(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, (1u) | 0u))), 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))) - uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(8.5, -6.3).r)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))), true && (_GLF_DEAD(false))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))))).x, (_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(num_workgroup)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), vec2(1.0, 1.0) * (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)))), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(-6.8), ((injectionSwitch))[1]), bvec2(false, true)))[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)), true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.9), clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), (_GLF_FUZZED(-0.9)) - 0.0), _GLF_FUZZED(-0.9))), (injectionSwitch)[1]), bvec2(false, true)), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9.9)), bool(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-7.9, mix(float(-7.9), float(_GLF_FUZZED((-6.8 - -4133.4753))), bool(false)))), sqrt(1.0) * (_GLF_FUZZED(_GLF_IDENTITY(-7.9, mix(float(-7.9), float(_GLF_FUZZED((-6.8 - -4133.4753))), bool(false))))))), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), vec2(1.0, 1.0) * (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-0.9, float(mat4(-0.9, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)))), (injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), min(ivec3(1, 0, 0), ivec3(1, 0, 0)))))]), bvec2(false, true)), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))) * (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)))))), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-0.9, (false ? _GLF_FUZZED(length(vec3(95.73, -4.7, -87.70))) : -0.9))), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.9, max(-7.9, -7.9)))), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true)), max(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-0.9, (false ? _GLF_FUZZED(dot(vec3(3245.1768, 1.1, -20.47), vec3(255.851, -5593.1007, -730.006))) : -0.9))), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-7.9)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(3.3), _GLF_IDENTITY((vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]))[1], ((vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]))[1]) / 1.0)), vec2((vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]))[0], _GLF_FUZZED((false ? 7.3 : 146.912))), bvec2(true, false))), bvec2(false, true))))))))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.9, mix(float(-7.9), float(_GLF_FUZZED((-6.8 - -4133.4753))), bool(false))))), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.9, mix(float(-7.9), float(_GLF_FUZZED((-6.8 - -4133.4753))), bool(false))))), vec2(_GLF_FUZZED(-0.9), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((19.48 / -31.85))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))), bool(bvec3(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), ! (! (bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((54.35 * float(-6259)))), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))) + subgroup_id * subgroup_size)) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), 1u * (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))), 1u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(subgroup_local_id))))) + subgroup_id * subgroup_size)) + subgroup_local_id) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u), 0u)))))), min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) | (uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) / 1u) | _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), ((0u)) | 0u), (0u)))), 1u, 0u)))), (uint(uint(uint(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min((0u), (0u)))))) / 1u), (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), _GLF_IDENTITY((0u), min((0u), (0u)))))) / 1u)) << 0u) | _GLF_IDENTITY((0u), max((0u), (0u)))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 0u))))) | _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 1u, (1u | 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), uint(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 1u, 0u))))))), 0u ^ (uint(uint(uint(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) + 0u)) >> 0u), uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))), _GLF_IDENTITY(0u, (0u) >> 0u)))), 1u, 0u))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) : uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) * 1u)) | (0u)), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) * 1u)) | (0u)), 1u, 0u))), uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u)) | (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u)), uvec3(uvec3((uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u)) | (uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 1u, 0u))))))))) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)))))))) << 0u))), 1u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u)))))), 0u ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), max((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), min((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), uint(2u))) * _GLF_IDENTITY(((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))), clamp(((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))), (true ? ((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))) : _GLF_FUZZED(subgroup_size))), ((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u)))))))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u))))), (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u)))))) | (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u)))))))), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))) ^ (~ (_GLF_IDENTITY(uint(1u), uint(uvec2(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u))), uint(uvec2(uint(1u), 0u)))), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), max(uvec2(uint(1u), 0u), uvec2(uint(1u), 0u)))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(uvec2(uint(1u), 0u)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))), uint(uint(uint(uvec2(uint(1u), 0u)))))))), ((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(uvec2(uint(1u), 0u))))))))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(153481u, 87393u)) : uvec2(uint(1u), 0u)))), max(uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(153481u, 87393u)) : uvec2(uint(1u), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(153481u, 87393u)) : uvec2(uint(1u), 0u)))))), uint(uint(uint(uvec2(uint(1u), _GLF_IDENTITY(0u, (0u) | (0u)))))))))), uint(uvec2((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), 0u)), uint(_GLF_IDENTITY(uint(uint(uvec2(uint(1u), 0u))), (uint(uint(uvec2(uint(1u), 0u)))) / 1u)))))), 0u))))), (~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(uvec2(uint(1u), 0u)))))))))))))))) / 1u, uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(num_workgroup), max(true ? 1u : _GLF_FUZZED(num_workgroup), true ? 1u : _GLF_FUZZED(num_workgroup)))) - 0u))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec2(uint(1u), 0u)))))), 0u ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), max((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), min((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec2(uint(1u), 0u))))) >> 0u))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), uint(2u))) * _GLF_IDENTITY(((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))), clamp(((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))), (true ? ((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u))))) : _GLF_FUZZED(subgroup_size))), ((_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 0u)))))))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u))))), (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u)))))) | (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u), uvec3(uvec3(uvec3((_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(74984u, 38507u)) : uvec2(uint(1u), 0u)))))), 1u, 1u)))))))), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)))) ^ (~ (_GLF_IDENTITY(uint(1u), uint(uvec2(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))), 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u))), uint(uvec2(uint(1u), 0u)))), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), max(uvec2(uint(1u), 0u), uvec2(uint(1u), 0u)))))))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(uvec2(uint(1u), 0u)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))), uint(uint(uint(uvec2(uint(1u), 0u)))))))), ((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(uvec2(uint(1u), 0u))))))))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(153481u, 87393u)) : uvec2(uint(1u), 0u)))), max(uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(153481u, 87393u)) : uvec2(uint(1u), 0u)))), uint(_GLF_IDENTITY(uvec2(uint(1u), 0u), (false ? _GLF_FUZZED(uvec2(153481u, 87393u)) : uvec2(uint(1u), 0u)))))), uint(uint(uint(uvec2(uint(1u), _GLF_IDENTITY(0u, (0u) | (0u)))))))))), uint(uvec2((~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), 0u)), uint(_GLF_IDENTITY(uint(uint(uvec2(uint(1u), 0u))), (uint(uint(uvec2(uint(1u), 0u)))) / 1u)))))), 0u))))), (~ (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 0u)), uint(uint(uint(uvec2(uint(1u), 0u)))))))))))))))) / 1u, 1u, 1u, 1u))))))))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), min((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (_GLF_IDENTITY((1) | 0, _GLF_IDENTITY(((1) | 0), (((1) | 0)) * 1) >> 0)) | ((1) | 0))), clamp(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((0), min((0), (0))))), (_GLF_IDENTITY(_GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((0), min((0), (0))))), (_GLF_IDENTITY((0), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((0), min((0), (0)))))) << 0)) ^ 0) | (0)))) ^ 0), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec3(~ (0), 1, 0))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((next_virtual_gid % _GLF_IDENTITY(uvec4(87340u, 184872u, 199212u, 141912u)[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0))], min(uvec4(87340u, 184872u, 199212u, 141912u)[0], uvec4(87340u, 184872u, 199212u, 141912u)[0])))) : subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), (uint(uint(next_virtual_gid))) / 1u))], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bvec4(_GLF_DEAD(false), false, true, false))))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))), false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (next_virtual_gid))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(49640) : 2)), max(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(49640) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(49640) : 2)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(49640) : 2)), max(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(49640) : 2)), _GLF_IDENTITY(2, (false ? _GLF_FUZZED(49640) : 2))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(4.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
