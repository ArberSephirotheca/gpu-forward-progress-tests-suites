#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -41.87, (+ -41.87) - 0.0)), mix(float(_GLF_FUZZED(-33.96)), float((_GLF_IDENTITY(+ -41.87, (+ -41.87) - 0.0))), bool(true))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), (float(_GLF_FUZZED(float(3395)))) / sqrt(1.0)), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), (float(_GLF_FUZZED((+ -41.87)))) - 0.0), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false)), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ _GLF_IDENTITY(-41.87, min(-41.87, -41.87))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(float(_GLF_FUZZED(float(3395))), _GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), 1.0 * (float(_GLF_FUZZED(float(3395))))))), float(_GLF_FUZZED(float(3395))))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) - 0.0)) / round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((+ -41.87)), max(_GLF_FUZZED((+ -41.87)), _GLF_FUZZED((+ -41.87))))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false)), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(float(_GLF_FUZZED(float(3395))), _GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), 1.0 * (float(_GLF_FUZZED(float(3395))))))), float(_GLF_FUZZED(float(3395))))), float(float(_GLF_FUZZED(_GLF_IDENTITY((+ -41.87), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((+ -41.87), 0.0 + ((+ -41.87))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, tan(0.0), cos(0.0), 0.0), (true ? mat4x3(_GLF_IDENTITY((+ -41.87), 0.0 + ((+ -41.87))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, tan(0.0), cos(0.0), 0.0) : _GLF_FUZZED(mat4x3(-13.12, 807.036, 4.7, -8231.8663, -4.5, -40.23, 3.8, _GLF_IDENTITY(-56.06, mix(float(_GLF_FUZZED(936.184)), float(-56.06), bool(true))), -9.4, -4285.2530, 7985.8777, -99.34))))))))), bool(true))), bool(false))) - 0.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ _GLF_IDENTITY(-41.87, (true ? _GLF_IDENTITY(-41.87, min(-41.87, -41.87)) : _GLF_FUZZED(-324.340)))))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((_GLF_IDENTITY(+ -41.87, max(+ -41.87, + -41.87)))))), bool(true))), bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((+ -41.87)), 0.0 + (_GLF_FUZZED((+ -41.87))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(3395)), 1.0 * (_GLF_FUZZED(float(3395))))), min(float(_GLF_FUZZED(float(3395))), _GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), 1.0 * (float(_GLF_FUZZED(_GLF_IDENTITY(float(3395), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-4178.0315, -6.3).g) : float(3395))))))))), float(_GLF_FUZZED(float(3395))))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false))) - 0.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((_GLF_IDENTITY(+ -41.87, max(+ -41.87, + -41.87)))))), bool(true))), bool(false)), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED(_GLF_IDENTITY((+ -41.87), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (+ -41.87) : _GLF_FUZZED(-2.3)))))), bool(true))), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED(_GLF_IDENTITY((+ -41.87), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))) ? (+ -41.87) : _GLF_FUZZED(_GLF_IDENTITY(-2.3, (-2.3) + 0.0))))))), bool(true))), bool(false)), (true ? _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((+ -41.87)), (_GLF_FUZZED((+ -41.87))) * 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(3395), mix(float(_GLF_FUZZED(5862.9820)), float(float(3395)), bool(true))))), float(float(_GLF_FUZZED(_GLF_IDENTITY((+ -41.87), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (+ -41.87) : _GLF_FUZZED(-2.3)))))), bool(true))), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED(_GLF_IDENTITY((+ -41.87), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (+ _GLF_IDENTITY(-41.87, min(_GLF_IDENTITY(-41.87, min(-41.87, -41.87)), -41.87))) : _GLF_FUZZED(-2.3)))))), bool(true))), bool(false))) / 1.0) : _GLF_FUZZED(901.937))), mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED(_GLF_IDENTITY((+ -41.87), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (+ -41.87) : _GLF_FUZZED(-2.3)))))), bool(true))), bool(false)))), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(_GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), min(float(_GLF_FUZZED(float(3395))), _GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), 1.0 * (float(_GLF_FUZZED(float(3395))))))), float(_GLF_FUZZED(float(3395))))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false))) - 0.0)) / round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), (true ? _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) : _GLF_FUZZED(-824.586))))))))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((+ -41.87))), mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(+ -41.87, mix(float(_GLF_FUZZED(4.3)), float(+ -41.87), bool(true))), max(_GLF_IDENTITY(+ -41.87, mix(float(_GLF_FUZZED(4.3)), float(+ -41.87), bool(true))), _GLF_IDENTITY(+ -41.87, mix(float(_GLF_FUZZED(4.3)), float(+ -41.87), bool(true)))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true)), (mix(float(_GLF_FUZZED(float(3395))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))) * abs(1.0))), bool(false)), (mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(+ -41.87, float(mat4x3(_GLF_IDENTITY(+ -41.87, clamp(+ -41.87, _GLF_IDENTITY(+ -41.87, (+ -41.87) / 1.0), + -41.87)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -41.87, float(mat4x3(_GLF_IDENTITY(+ -41.87, clamp(+ -41.87, _GLF_IDENTITY(+ -41.87, (+ -41.87) / 1.0), + -41.87)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), min((_GLF_IDENTITY(+ -41.87, float(mat4x3(_GLF_IDENTITY(+ -41.87, clamp(+ -41.87, _GLF_IDENTITY(+ -41.87, (+ -41.87) / 1.0), + -41.87)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (_GLF_IDENTITY(+ -41.87, float(mat4x3(_GLF_IDENTITY(+ -41.87, clamp(+ -41.87, _GLF_IDENTITY(+ -41.87, (+ -41.87) / 1.0), + -41.87)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), (_GLF_IDENTITY(+ -41.87, float(mat4x3(_GLF_IDENTITY(+ -41.87, clamp(+ -41.87, _GLF_IDENTITY(+ -41.87, (+ -41.87) / 1.0), + -41.87)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (_GLF_IDENTITY(+ -41.87, float(mat4x3(_GLF_IDENTITY(+ -41.87, clamp(+ -41.87, _GLF_IDENTITY(+ -41.87, (+ -41.87) / 1.0), + -41.87)), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(3395)), min(_GLF_FUZZED(float(3395)), _GLF_FUZZED(float(3395))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(float(3395)), 0.0 + (_GLF_FUZZED(float(_GLF_IDENTITY(3395, _GLF_IDENTITY(0, 0 ^ (0)) ^ (3395))))))), min(float(_GLF_FUZZED(float(3395))), _GLF_IDENTITY(float(_GLF_FUZZED(float(3395))), 1.0 * (float(_GLF_FUZZED(float(3395))))))), float(_GLF_FUZZED(float(3395))))), float(float(_GLF_FUZZED((+ -41.87)))), bool(true))), bool(false))) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec4(685.525, -9.3, 9.3, 2.4), vec4(36.06, 8411.5691, 1715.7189, -0.9)))))) / 1.0))) / round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1672.3426)), vec2(_GLF_FUZZED(66.12), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(asin(91.86))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(29.23), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), bvec2(true, false))).y))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))) | (gl_WorkGroupSize)))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, true, false))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1] : _GLF_FUZZED(380.367))))).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-0.7) : abs(0.0))))), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), max(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(vec2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(8.1)), bool(false))), float(_GLF_FUZZED(-895.225)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))), vec2(0.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(vec2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(8.1)), bool(false))), float(_GLF_FUZZED(-895.225)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))), vec2(0.0, 1.0)), mix(float(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(vec2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1.0))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(8.1)), bool(false))), float(_GLF_FUZZED(-895.225)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))), vec2(0.0, 1.0))), float(_GLF_FUZZED(-264.105)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : _GLF_FUZZED(885.432)))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(380.367))))).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.8))), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0)), transpose(transpose(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) * 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, abs(1.0))))))), 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8016.8360)), float(1.0), bool(true)))) + 0.0), 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(998.589)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-461.900)))))), bool(true))), clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), bool(false)))))) * 1.0)), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) / exp(vec2(0.0, 0.0)))[1] : _GLF_FUZZED(380.367))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(380.367)))))) * mat2(1.0)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), min(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))) + 0.0), 0.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-895.225)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))))), false)))))), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(3850.0954, -67.99, 8612.4993).x)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(3850.0954, -67.99, 8612.4993).x)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) : _GLF_FUZZED(-8.4))), 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), min((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6805.5478)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(8.5)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))) + 0.0), 0.0, 1.0))), 1.0), mix(vec2(_GLF_FUZZED(4.9), (vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), min((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(8.5)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.4))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))) + 0.0), 0.0, 1.0))), 1.0))[1]), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))))))), min((_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(8.5)), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8237.5226) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8816.9892)), float(1.0), bool(true))))), 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(true))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x2(float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0)), dot(vec2(0.0, exp(0.0)), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0)))))), max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))) + 0.0), 0.0, 1.0))), 1.0))[0], mix(float(_GLF_FUZZED(613.206)), float((_GLF_IDENTITY(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), min((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.5), max(_GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_FUZZED(8.5), float(mat4x2(_GLF_FUZZED(8.5), 0.0, 0.0, exp(0.0), abs(0.0), 1.0, 1.0, 1.0)))))), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(118.633))), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0))))))))))), max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))) + 0.0), 0.0, 1.0))), 1.0), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), min((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.5), max(_GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_FUZZED(8.5), float(mat4x2(_GLF_FUZZED(8.5), 0.0, 0.0, exp(0.0), abs(0.0), 1.0, 1.0, 1.0)))))), float(round(length(normalize(vec3(1.0, 1.0, 1.0))))), bool(true))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max(max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(118.633))), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), max((_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))))) + 0.0), 0.0, 1.0))), 1.0))))[0]), bool(true))), _GLF_FUZZED(-0.9)), bvec2(true, false))), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), true, false)))), true && (bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), min(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), vec4(mat3x2(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - abs(0.0))), float(_GLF_FUZZED(590.020)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))), clamp(dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), 1.0)))), 1.0, 0.0))))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4)))))))))))) + 0.0), 0.0, 1.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), min(vec4(0.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), vec4(mat3x2(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - abs(0.0))), float(_GLF_FUZZED(590.020)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0)))), clamp(dot(vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), 1.0)))), 1.0, 0.0))))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4))))))))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(8.8, 759.438)) : vec2(0.0, 0.0))), vec2(0.0, 0.0))))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0))))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED((+ dot(9.0, -5.4)))))))))))) + 0.0), 0.0, 1.0))), 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)))))), true, false)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(194623u, 164222u, 43567u)) : gl_WorkGroupID))) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, false || (false)), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false), false, false))))), true))))), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u) + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), uint(uvec2(_GLF_IDENTITY(0u | (subgroup_size), _GLF_IDENTITY((true ? 0u | (subgroup_size) : _GLF_FUZZED(subgroup_size)), ~ (~ _GLF_IDENTITY(((true ? 0u | (subgroup_size) : _GLF_FUZZED(subgroup_size))), max(((true ? 0u | (subgroup_size) : _GLF_FUZZED(subgroup_size))), ((true ? 0u | (subgroup_size) : _GLF_FUZZED(subgroup_size)))))))), 1u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)))) + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)))) + subgroup_id * subgroup_size) / (1u ^ 0u), min((_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)))) + subgroup_id * subgroup_size) / (1u ^ 0u), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)))) + subgroup_id * subgroup_size) / (1u ^ 0u)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))))), (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))))) | (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (~ (workgroup_base + subgroup_id * subgroup_size)) + 0u))))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))))), (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))) | (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ((0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u) ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))))))))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(0u, 1u)), uint(uvec3(uint(uvec2(0u, 1u)), 0u, _GLF_IDENTITY(1u, (1u) >> 0u)))), (_GLF_IDENTITY(uint(uvec2(0u, 1u)), uint(uvec3(uint(uvec2(0u, 1u)), 0u, _GLF_IDENTITY(1u, (1u) >> 0u))))) | (_GLF_IDENTITY(uint(uvec2(0u, 1u)), uint(uvec3(uint(uvec2(0u, 1u)), 0u, _GLF_IDENTITY(1u, (1u) >> 0u))))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))))), (false ? _GLF_FUZZED(129791u) : (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(radians(-1568.9435)) : injectionSwitch.x)) > injectionSwitch.y))), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(uint(round(-0.5))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, clamp((4) + 0, (4) + 0, (4) + 0))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)))))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       return;
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-2.5)), bool(false))), _GLF_FUZZED(35.98)), bvec2(true, false))))))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, sin(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), sin(0.0), 1.0, cos(0.0), 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))).x), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), cos(0.0), 1.0)), 0.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-2.5)), bool(false))), _GLF_FUZZED(35.98)), bvec2(true, false))))))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, sin(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), sin(0.0), 1.0, cos(0.0), 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))).x), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), cos(0.0), 1.0)), 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-2.5)), bool(false))), _GLF_FUZZED(35.98)), bvec2(true, false))))))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, sin(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), sin(0.0), 1.0, cos(0.0), 0.0, 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))).x), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), cos(0.0), 1.0)), 0.0))))), mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.6) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.4) : 1.0)), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(cos(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.3) : 0.0)), 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))), mat4x3(mat4(mat4x3(_GLF_IDENTITY(cos(0.0), (true ? cos(0.0) : _GLF_FUZZED(-80.44))), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))))))), (float(_GLF_IDENTITY(mat4x3(cos(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))), mat4x3(mat4(mat4x3(cos(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))) - tan(0.0))), 1.0)), 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(58.74))), 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), cos(0.0), 1.0)), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.5), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 1.0)))), clamp(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1])) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(35.98)), bvec2(true, false))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.7)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), 1.0, sin(0.0), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), cos(0.0), 1.0)), 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), false, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-6.7, -1.4)))).x > injectionSwitch.y))) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat4x3((injectionSwitch.y) - 0.0, sqrt(1.0), 1.0, abs(1.0), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(false))) && true))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, sin(0.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false, false, true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
