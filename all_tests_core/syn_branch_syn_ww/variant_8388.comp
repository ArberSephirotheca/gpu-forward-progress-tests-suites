#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 uint num_workgroup;
 bool _f0;
 mat4x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 mat2 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 vec4 _f1;
 uvec3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat2x3 _f1;
 int _f2;
} ;

struct _GLF_struct_2 {
 int _f0;
 vec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
 bvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 int _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint subgroup_id;
 bool _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uvec3 _f1;
 _GLF_struct_0 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_1 _f0;
 bool _f1;
 int _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_1(uvec2(1u), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u))), _GLF_struct_0(1, gl_SubgroupID, true), uvec3(1u)), true, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(97076))), _GLF_struct_4(mat2(1.0), mat2x3(1.0), _GLF_struct_2(1, vec2(1.0), ivec4(1), uvec4(1u), bvec2(true), mat2x4(1.0)), _GLF_IDENTITY(1, max(1, 1)), _GLF_struct_3(1, mat2x3(1.0), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) * (1 & 1))))))))), _GLF_struct_7(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_5(uvec4(1u)), _GLF_struct_6(uvec4(1u), vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(140.052)), float(0.0), bool(true))), 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(_GLF_IDENTITY(779.242, min(779.242, 779.242))), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), vec3(1.0, 1.0, 1.0) * (vec3(1.0, 0.0, tan(0.0)))))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : _GLF_IDENTITY(34.62, clamp(34.62, _GLF_IDENTITY(34.62, (true ? 34.62 : _GLF_FUZZED(-8897.6442))), 34.62))))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9867.1039)), float(1.0), bool(true))))), 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), _GLF_IDENTITY(min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0))), max(min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0))), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), _GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec4(bvec3(bvec3(true, true, false)), false))))))), vec3(0.0, 1.0, 1.0)))) - 0.0)), clamp(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0))), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), 0.0 + ((0.0)))), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), max(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mat3(1.0) * (vec3(1.0, 0.0, tan(0.0)))), vec3(1.0, 0.0, tan(0.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), max(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mat3(1.0) * (vec3(1.0, 0.0, tan(0.0)))), vec3(1.0, 0.0, tan(0.0))))), ((_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), max(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mat3(1.0) * (vec3(1.0, 0.0, tan(0.0)))), vec3(1.0, 0.0, tan(0.0)))))) * mat3(1.0))) - vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), (dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0))) + 0.0), dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3(_GLF_IDENTITY((vec3(0.0, 1.0, 1.0))[0], ((vec3(0.0, 1.0, 1.0))[0]) - 0.0), (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(9023.8451), _GLF_FUZZED(-721.841), _GLF_FUZZED(-7642.5244)), bvec3(false, false, false)))))) - 0.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_IDENTITY(_GLF_FUZZED(569.363), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(569.363), max(_GLF_IDENTITY(_GLF_FUZZED(569.363), max(_GLF_FUZZED(569.363), _GLF_FUZZED(569.363))), _GLF_FUZZED(569.363))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(pow(-0.4, 8.2))))) * 1.0), injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)), clamp(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(-5041.1603)) : 0.0)), 0.0)))), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), bool(false))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(_GLF_IDENTITY(569.363, 1.0 * (_GLF_IDENTITY(569.363, clamp(569.363, 569.363, 569.363))))), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))[0]), float(_GLF_FUZZED((false ? -4.1 : 34.62))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, tan(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(119140u))), _GLF_IDENTITY(bool(false), false || (bool(false))))), 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0), (mat4x2(0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-887.809) : injectionSwitch.y))), 0.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), tan(0.0)), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, tan(0.0)), mix(vec3(_GLF_FUZZED(569.363), _GLF_FUZZED(779.242), (vec3(1.0, 0.0, tan(0.0)))[2]), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, tan(0.0)))[0], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0))))), _GLF_IDENTITY(vec3(mat3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0))))), ((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-56.54) : 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), min(vec3(mat3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0))))), ((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-56.54) : 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), vec3(mat3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0))))), ((_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), min(vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-56.54) : 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0)))))[0]), float(_GLF_IDENTITY(_GLF_FUZZED((false ? -4.1 : 34.62)), clamp(_GLF_IDENTITY(_GLF_FUZZED((false ? -4.1 : 34.62)), max(_GLF_FUZZED((false ? -4.1 : 34.62)), _GLF_FUZZED((false ? -4.1 : 34.62)))), _GLF_FUZZED((false ? -4.1 : 34.62)), _GLF_FUZZED((false ? -4.1 : 34.62))))), bool(false))), (vec3(1.0, 0.0, tan(0.0)))[1], _GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_IDENTITY(_GLF_FUZZED(30.68), (_GLF_FUZZED(30.68)) * 1.0)) + 0.0)), bvec3(true, true, false))), vec3(0.0, 1.0, 1.0)))) - 0.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(80110u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u)))), vec4(1.0), mat2x3(1.0), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-4.5)), vec2(_GLF_FUZZED(62.39), (vec2(1.0))[1]), bvec2(false, true)))), uvec4(1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.9, -144.735)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) || false))))) && true), true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0)), (mat3x4(injectionSwitch, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(53.03)), float(exp(0.0)), bool(true))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, sqrt(1.0), sqrt(cos(0.0)), 1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), bool(bvec2(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.5)), float(1.0), bool(true)))), _GLF_struct_10(mat4(1.0), _GLF_struct_9(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))).x, true, mat4x3(1.0), uvec3(1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-935.341)), bool(false))), injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) - 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(true, (true) || false))))), (_GLF_IDENTITY(false, false || (false))) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(9.5)), bool(false))), injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (! (true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false)))))))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_8._f0._f2.subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | 0), int(_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), int(8))), (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(8, max(8, 8))) - 0))), (0 >> _GLF_IDENTITY(int(8), int(8))) - 0)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)), max(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)), 0 ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8))) * 1)))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))))), int(8))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8))), true && (_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8))), ! (! (_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 0 ^ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 1 * (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 0 ^ (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)))))))))) << 0), int(8)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, _GLF_IDENTITY((0 | (0 & -77358)) | (0), clamp(_GLF_IDENTITY((0 | (0 & -77358)) | (0), ((0 | (0 & -77358)) | (0)) / 1), (0 | (0 & -77358)) | (0), _GLF_IDENTITY((0 | (0 & -77358)) | (0), min((0 | (0 & -77358)) | (0), (0 | (0 & -77358)) | (0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))) + (8)), (0 | 0))), 0 ^ (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(8, int(int(8))), 0 + (8)), (0 | 0))), 0 ^ (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))))))) << 0), int(8)) : _GLF_FUZZED(int(subgroup_local_id))))), true && (_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8))), ! (! (_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), 0 | (int(8)))) / 1), int(8)))))))))))) || false), false, true, true))))))) || false)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), int(8))), (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(_GLF_IDENTITY(8, max(8, 8)), (_GLF_IDENTITY(8, max(8, 8))) - 0))), (0 >> _GLF_IDENTITY(int(8), int(8))) - 0)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))))), int(8))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8))), true && (_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8))), ! (! (_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))))))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 0 ^ (int(ivec2(_GLF_IDENTITY(8, _GLF_IDENTITY(0, (0) | (0)) + (8)), (0 | 0))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 0 ^ (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))))))) << 0), int(8)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0 | (0 & -77358)) | (0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 0 ^ (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))))))), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))), 0 ^ _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))), clamp(_GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))), ((int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0))))) | ((int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))))), (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))), (int(ivec2(_GLF_IDENTITY(8, 0 + (8)), (0 | 0)))))))))) << 0), int(8)) : _GLF_FUZZED(int(subgroup_local_id))))), true && (_GLF_IDENTITY(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8))), ! (! (_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), 0 | (int(8)))) / 1), int(8)))))))))))) || false), false, true, true))))))) || false))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7820.6089))) > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-7820.6089), (true ? _GLF_FUZZED(-7820.6089) : _GLF_FUZZED(33.26))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-7820.6089), (true ? _GLF_FUZZED(-7820.6089) : _GLF_FUZZED(33.26))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-7820.6089), (true ? _GLF_FUZZED(-7820.6089) : _GLF_FUZZED(33.26))))) > injectionSwitch.y)) && true)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, exp(0.0), 1.0, 0.0, log(1.0), 0.0, 0.0, sin(0.0), 0.0, cos(sin(0.0)), 1.0), transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, exp(0.0), 1.0, 0.0, log(1.0), 0.0, 0.0, sin(0.0), 0.0, cos(sin(0.0)), 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, exp(0.0), 1.0, 0.0, log(1.0), 0.0, 0.0, sin(0.0), 0.0, cos(sin(0.0)), 1.0)))))))))))) && true)))))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(false ? 6325.9418 : 8.9, float(mat3(false ? 6325.9418 : 8.9, 0.0, 0.0, 1.0, abs(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, sin(0.0))))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(-7820.6089))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7820.6089))) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) : _GLF_FUZZED(uvec2(136410u, 87729u)))), (_GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) : _GLF_FUZZED(uvec2(136410u, 87729u)))), uvec2(0u, 0u) | (_GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) : _GLF_FUZZED(uvec2(136410u, 87729u))))))) | uvec2(_GLF_IDENTITY(0u, 0u | (0u)), 0u))).x), 0u ^ (((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) : _GLF_FUZZED(uvec2(136410u, 87729u))))).x))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, max(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y) | 0u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y, ~ (~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(20965) : _GLF_IDENTITY(0, (0) | (0)))) ^ (4)), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91580) : 1)), 1)))) - 0)) >> 0));
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(virtual_gid))) % 2), ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(virtual_gid))) % 2)) ^ 0u) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (~ (2)))), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false, false), false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(137.102, 13.06)))).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_IDENTITY(true, ! (! (true))), false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(21.96))), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, cos(0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))), true, true, false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))), _GLF_IDENTITY(true, ! (! (true))))), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, false))), bool(bool(false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (true), (! (true)) && true)), true, true))))))))), true, false))), true, true, false)))))))), true)), false, true, false)), true, false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true)), bool(bvec2(bool(bvec2(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)), true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
}
