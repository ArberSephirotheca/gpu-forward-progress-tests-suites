#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY(0, (0) + (0 >> _GLF_IDENTITY(int(7), int(7)))))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), false), false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) << 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), max(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), _GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))))), 0u), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) / 1u, ~ (~ (_GLF_IDENTITY((workgroup_id) / 1u, ~ (~ (_GLF_IDENTITY((workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_id))) / 1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(19.99)))))))))))) / 1u), uint(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))))))), workgroup_id)))), 0u))), _GLF_IDENTITY(0u, (0u) | (0u))), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), 0u))), _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) / 1u)), _GLF_IDENTITY(0u, (0u) >> 0u)))), 0u), _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))) | (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))))))), (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_id))), (_GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_id))), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_id)))) >> 0u)) | 0u)), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_id))), (_GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_id))), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_id)))) >> 0u)) | 0u)), 0u))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ((0u)) | 0u))), min(_GLF_IDENTITY((0u) | (0u), 0u ^ ((0u) | (0u))), _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))) | (0u), ((0u) | (0u)) | ((0u) | (0u)))) | 0u))))), uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)))))), 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 0u, 1u, 0u))), workgroup_id)), _GLF_IDENTITY(0u, (0u) >> 0u)))), 0u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (0u) >> 0u)))), 0u), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (0u) >> 0u)))), 0u))), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))), _GLF_IDENTITY(0u, (0u) >> 0u)))), 0u))), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec4(uvec2(0u, 0u), (1u & 1u), 0u))) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)) + (uvec2(0u, 0u) ^ uvec2(0u, 0u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), _GLF_IDENTITY(uvec2(3u), (uvec2(3u)) - uvec2(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))))) << 0u), 0u | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(40745u) : workgroup_id)))), 0u | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))), 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)))))) >> 0u), 0u)))) >> uvec2(0u, 0u)))), 0u), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), 0u))), _GLF_IDENTITY(0u, (0u) << 0u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u)))) + 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id)))) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))) + 0u))) / 1u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u + (0u))))), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u)))) + 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id)))) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))) + 0u))) / 1u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u)))) + 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id)))) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))) + 0u))) / 1u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, (0u) << 0u)))) + 0u)), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))), (min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), workgroup_id)))) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))), (uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)))) + 0u))) / 1u), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, 0u + (0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), uint(uvec4(min(workgroup_id, workgroup_id), 0u, 1u, 1u)))), (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)))))), 0u))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), _GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), uvec2(0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), max(_GLF_IDENTITY(168392u, (168392u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(168392u, (168392u) << 0u)) | (_GLF_IDENTITY(168392u, (168392u) << 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 101848u)) : (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u)), uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3430.2663)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))) | uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(workgroup_id, workgroup_id)), 0u))), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), min(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))))), 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))))), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), 0u)))) - uvec2(0u, 0u))))), clamp(uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), uvec2(0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), max(_GLF_IDENTITY(168392u, (168392u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(168392u, (168392u) << 0u)) | (_GLF_IDENTITY(168392u, (168392u) << 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 101848u)) : (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u)), uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3430.2663)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))) | uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(workgroup_id, workgroup_id)), 0u))), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), min(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))))), 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))))), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), 0u)))) - uvec2(0u, 0u))))), _GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), uvec2(0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), max(_GLF_IDENTITY(168392u, (168392u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(168392u, (168392u) << 0u)) | (_GLF_IDENTITY(168392u, (168392u) << 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 101848u)) : (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u)), uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3430.2663)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))) | uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(workgroup_id, workgroup_id)), 0u))), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), min(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))))), 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))))), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), 0u)))) - uvec2(0u, 0u))))), (uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), uvec2(0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), max(_GLF_IDENTITY(168392u, (168392u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(168392u, (168392u) << 0u)) | (_GLF_IDENTITY(168392u, (168392u) << 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 101848u)) : (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u)), uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3430.2663)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))) | uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(workgroup_id, workgroup_id)), 0u))), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), min(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))))), 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))))), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), 0u)))) - uvec2(0u, 0u)))))) - uvec2(0u, 0u)), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), uvec2(0u, 0u) | _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), _GLF_IDENTITY(0u, max(0u, 0u)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)))), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), max(_GLF_IDENTITY(168392u, (168392u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(168392u, (168392u) << 0u), (_GLF_IDENTITY(168392u, (168392u) << 0u)) | (_GLF_IDENTITY(168392u, (168392u) << 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 101848u)) : (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u)))), 0u)), uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3430.2663)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY(((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))) | uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(workgroup_id, workgroup_id)), 0u))), 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))), (clamp(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), min(uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u)), uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))))), 0u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u))), 0u))))), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), 0u))), 0u)))) - uvec2(0u, 0u))))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (15323 & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(workgroup_id)))))) * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) ^ (45566u & uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch.x, 0.0)))), mix(float(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch.x, 0.0))))), float(_GLF_FUZZED(780.124)), bool(false)))), injectionSwitch.x))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u)))))) + ((_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(64420, 0 | (_GLF_IDENTITY(64420, (64420) ^ (-56565 & 0)))) & _GLF_IDENTITY(0, (0 & -33189) | (0))) | (1))) >> 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), 1))), min(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(1, (64420 & _GLF_IDENTITY(0, (0 & -33189) | (0))) | (1))) >> 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), 1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (64420 & _GLF_IDENTITY(0, (0 & -33189) | (0))) | (1))) >> 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), 1))), (uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (64420 & _GLF_IDENTITY(0, (0 & -33189) | (0))) | (1))) >> 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1)), 1)))) / (1u ^ 0u)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 3926)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y))))
          return;
        }
       return;
      }
     else
      {
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false)))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bool((! (true)))), ! (! (bool(bool((! (true)))))))), false, true))))))
          {
           for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ((1) | (_GLF_IDENTITY(1, min(1, 1)))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 1 * (_GLF_IDENTITY(1, (1) | (1))))) | (_GLF_IDENTITY(1, (1) | (1)))) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(2, 0)))) / 1)) ^ 0)))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
              continue;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((0 & int(46755u)), 1 * (_GLF_IDENTITY((0 & int(46755u)), min((0 & int(46755u)), _GLF_IDENTITY((0 & int(46755u)), ((0 & int(46755u))) | ((0 & int(46755u)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))), true)))) || false)))
              return;
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)) || false));
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 1, 1, (0 >> _GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0)))); _injected_loop_counter --)
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      break;
    }
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)), min(uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec3((next_virtual_gid) | _GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u))))), uint(uvec2(uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)), 1u)))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90905) : 0)))))), uint(2))), min(_GLF_IDENTITY(uint(2), min(uint(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90905) : 0)))))), uint(2))), _GLF_IDENTITY(uint(2), min(uint(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(90905) : 0)))))), uint(2))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
