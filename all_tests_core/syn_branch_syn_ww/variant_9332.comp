#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat3 _f0;
 ivec4 _f1;
 bool _f2;
 mat2x4 _f3;
 mat2x4 _f4;
 mat2x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 bvec4 _f1;
 bvec2 _f2;
 uvec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_19 {
 uint _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat4x3 _f3;
 uvec4 _f4;
 _GLF_struct_20 _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_15 {
 mat3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 float _f1;
 ivec2 _f2;
 mat4x3 _f3;
 mat3x4 _f4;
 uint _f5;
 float _f6;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 bvec3 _f1;
 bvec4 _f2;
 mat2x3 _f3;
 mat4x2 _f4;
 int _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 mat4x3 _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_23 {
 mat4 _f0;
 _GLF_struct_16 _f1;
 mat3 _f2;
 ivec3 _f3;
 uint virtual_gid;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 float _f3;
 vec2 _f4;
 mat4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 ivec4 _f1;
 mat3x4 _f2;
 bool _f3;
 uint workgroup_base;
 uvec2 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 float _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 ivec3 _f1;
 bvec4 _f2;
 bool _f3;
 int _f4;
 float _f5;
 mat3 _f6;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 uint _f1;
 bvec4 _f2;
 mat2x3 _f3;
 float _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_1 {
 uint _f0;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec3 _f2;
 mat2x4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_8 {
 uint workgroup_size;
 _GLF_struct_5 _f0;
 mat3 _f1;
 _GLF_struct_7 _f2;
 vec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0))), max(float(vec4(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0)), vec4(mat2x4(vec4(injectionSwitch.y, 0.0, 0.0, sqrt(1.0)), 0.0, cos(0.0), 0.0, 0.0)))))))) * sqrt(1.0))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))), false || (true && (bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))), (_GLF_IDENTITY(true && (bool(bvec3(false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))), (true && (bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false))), ! (! ((bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)))))) && true)))))) || false)) || false), false || (true && (bool(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, tan(length(0.0)) + (injectionSwitch.x))), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))))))))))))), false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))))), bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), (! (! (_GLF_IDENTITY(false, bool(bool(false)))))) && true))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))) || _GLF_IDENTITY(false, true && (false)))) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(gl_WorkGroupSize.x, _GLF_struct_5(_GLF_struct_0(vec3(1.0)), _GLF_struct_1(1u), bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false)))), mat2x4(1.0), _GLF_struct_2(mat4(1.0), 1u, bvec4(true), mat2x3(1.0), 1.0, mat3x4(1.0)), _GLF_struct_3(uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(184712u) : 1u))), mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bool(bool(true))), (bool(bool(bool(true)))) && true)))))), _GLF_struct_4(bvec4(true), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))), bvec4(true), _GLF_IDENTITY(true, ! (! (true))), 1, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(1.1) : min(1.0, 1.0)))))))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0))), (_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (true ? mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3(5.6, -3.8, 4972.4015, -92.73, 9972.2877, 33.88, -5039.6727, 2.1, -0.5)))), mat3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)), (true ? max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)) : _GLF_FUZZED(-4.6)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), mat3(1.0), _GLF_struct_7(_GLF_struct_6(bvec3(true), 1.0, mat3x4(1.0))), vec4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x)))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0 | 0) ^ (_GLF_IDENTITY(0, (0) / 1)))], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x)))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0 | 0) ^ (_GLF_IDENTITY(0, (0) / 1)))], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((+ 5.9))))))) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), min(_GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)))) : injectionSwitch))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), min(_GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)))) : injectionSwitch))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), min(_GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)))) : injectionSwitch))))[1], float(mat2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), min(_GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)))) : injectionSwitch))))[1], 0.0 + (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), min(_GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)))) : injectionSwitch))))[1])), 0.0, 0.0, 1.0)))), vec2(_GLF_FUZZED((- -128.672)), _GLF_FUZZED(-137.203)), bvec2(false, false))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), max(_GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), mix(vec2((_GLF_FUZZED(radians(injectionSwitch)))[0], (_GLF_FUZZED(radians(injectionSwitch)))[1]), vec2(_GLF_FUZZED(-45.14), _GLF_FUZZED(1.6)), bvec2(false, false))))), _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), (_GLF_FUZZED(radians(injectionSwitch))) - vec2(0.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(radians(injectionSwitch)), clamp(_GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)), _GLF_FUZZED(radians(injectionSwitch)))) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3.2))), injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(radians(injectionSwitch), mat2(1.0) * (radians(injectionSwitch)))) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))), mix(vec2((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))[0], (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(injectionSwitch)) : injectionSwitch))) - tan(vec2(0.0, 0.0))) * mat2(1.0))))[1]), vec2(_GLF_FUZZED(4.1), _GLF_FUZZED((true ? -8.7 : 7695.1834))), bvec2(false, false))))).x)))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0 | 0) ^ (_GLF_IDENTITY(0, (0) / 1)))], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true, false)), ! (! (bool(bvec3((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_IDENTITY(false, (false) && true), true, false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-3993.1711)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), bool(true))), 0.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-3993.1711)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), bool(true))), 0.0, exp(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) - 0.0)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, exp(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3x2(injectionSwitch.x, 1.0, 1.0, exp(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.2 + -9.5))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_11(_GLF_struct_9(ivec3(1), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(min(ivec4(1), ivec4(1)), (min(ivec4(1), ivec4(1))) * ivec4(1, 1, 1, 1))), mat3x4(1.0), true, _GLF_struct_replacement_8.workgroup_size * workgroup_id, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))), _GLF_struct_10(bvec3(true), mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(1, 1, _GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(4), int(4))))) * (_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), _GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(ivec3(1), max(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1))), ivec3(1))), ivec3(1))))))), ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))) << ivec3(0, 0, 0)), (ivec3(1)) >> (ivec3(-92090, -6766, 98849) & (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(2), ivec3(2))))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) >> (ivec3(-92090, -6766, 98849) & (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(2), ivec3(2))))))), (ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) >> (ivec3(-92090, -6766, 98849) & (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))))) - ivec3(0, 0, 0))), 0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), mat2(1.0) * (_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), vec2(mat4x2(vec2(1.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) + vec2(0.0, 0.0)))), vec2(1.0))), (true ? vec2(1.0) : _GLF_FUZZED(vec2(-6.6, -3.7)))), mat4(1.0), mat2x3(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))))), mat4x2(1.0), mat4x3(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, 0.0)), (float(mat2(1.0, 0.0, 0.0, 0.0))) * 1.0)), min(1.0, 1.0)) : _GLF_FUZZED(52.00)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(float(vec3(clamp(1.0, 1.0, 1.0), 0.0, 1.0)), min(float(vec3(clamp(1.0, 1.0, 1.0), 0.0, 1.0)), float(vec3(clamp(1.0, 1.0, 1.0), 0.0, 1.0)))))), (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3017.9254), min(_GLF_FUZZED(-3017.9254), _GLF_FUZZED(-3017.9254)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-95.87)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(-95.87)), float(1.0), bool(true))) - length(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ 121.540))), float(0.0), bool(true))), 0.0, 0.0, 0.0))))), bool(true))), 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(52.00), (_GLF_FUZZED(52.00)) + abs(0.0))))), clamp(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00)))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00)), (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))) * 1.0, mix(float(((true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))) * 1.0), float(_GLF_FUZZED(0.1)), bool(false)))))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.8))), 1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))), 1.0, 0.0, determinant(mat4(1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (1.0)), mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(-18.01)), bool(false))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.9) : 0.0)), 0.0, 1.0, 0.0), (mat2x4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))), 1.0, 0.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(397.535)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(6483.9965, 0.1, -23.23, 25.14, 383.372, -1.9, 8.0, 2.5, 47.57, 4.0, -1714.0522, 28.12, 6483.1184, -9.8, -878.405, -7.0)) : mat4(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(397.535)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-16.08) : determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0)) * mat2(1.0))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00)))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(52.00))), clamp(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(52.00))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(52.00))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(52.00)))) / 1.0), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)) : _GLF_FUZZED(52.00))))))), clamp((vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00), (true ? true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00) : _GLF_FUZZED(-9.4))))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00)))), (vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))))) * mat2(1.0))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))))), clamp((vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(52.00), (true ? _GLF_FUZZED(52.00) : _GLF_FUZZED(-39.69))))))), (vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-727.997)), bool(false)))) : _GLF_IDENTITY(_GLF_FUZZED(52.00), clamp(_GLF_FUZZED(52.00), _GLF_IDENTITY(_GLF_FUZZED(52.00), (_GLF_FUZZED(52.00)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(52.00), (false ? _GLF_FUZZED(-6.8) : _GLF_FUZZED(52.00))))))))), (vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), float(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(length(-902.574)))))) : _GLF_FUZZED(52.00), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), float(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(length(-902.574)))))) : _GLF_FUZZED(52.00), (false ? _GLF_FUZZED(-5.2) : true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), float(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(length(-902.574)))))) : _GLF_FUZZED(52.00))), true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), float(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(transpose(mat2x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(length(-902.574)))))) : _GLF_FUZZED(52.00)))))))))))[0], _GLF_FUZZED((true ? 78.11 : 7.5))), vec2(_GLF_FUZZED(1087.3393), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00))), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0)) : _GLF_FUZZED(52.00), mix(float(_GLF_FUZZED(76.76)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0)) : _GLF_FUZZED(52.00), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0)) : _GLF_FUZZED(52.00), true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0)) : _GLF_FUZZED(52.00)))), bool(true)))))), float(_GLF_FUZZED(-593.371)), bool(false)))))[1], ((vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(52.00, (true ? 52.00 : _GLF_FUZZED(fract(-1.0))))), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00), clamp(true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00), true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00), true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(52.00)))), float(_GLF_FUZZED(0.9)), bool(false))))), mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), 1.0 * ((1.0)))), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) : _GLF_FUZZED(52.00)))), float(_GLF_IDENTITY(_GLF_FUZZED(-593.371), float(mat3(_GLF_FUZZED(-593.371), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), determinant(mat2(0.0, 0.0, sin(0.0), log(1.0))), 0.0)))), bool(false)))))[1]) * 1.0)), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(287.017)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true), false))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true))))))), false, true)))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, true)))))))))))))) || false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)), true, false))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))) / 1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x3((vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (mat2x3((vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y, true, false)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0))) / 1.0)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x3((vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (mat2x3((vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 1.0))), ((vec2(mat2(injectionSwitch, 0.0, 1.0)))) + abs(vec2(0.0, 0.0))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))).y, _GLF_IDENTITY(true, true && (true)), false)))))))))))), (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false), false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(452.257)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), (vec2(mat2(injectionSwitch, 0.0, 1.0))) * mat2(1.0))).y, true, false))))))))))))) && true))) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.7)), float(1.0), bool(true))))), 1.0, 0.0, 1.0, 1.0)), vec2(vec4(vec2(mat3x2(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(805.869)), float(1.0), bool(true))), 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y)))) && true))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(35.69)), bool(false)))))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u))));
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(mat4(1.0), _GLF_struct_16(_GLF_struct_13(mat4x2(1.0), bvec3(true), bvec4(true), mat2x3(1.0), mat4x2(1.0), 1), _GLF_struct_14(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bool(bool(bvec2(true, true))))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), ivec2(1), mat4x3(1.0), mat3x4(1.0), 1u, 1.0), mat4x3(1.0), _GLF_struct_15(mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bvec2(true))), mat3(1.0), ivec3(1), _GLF_struct_replacement_12._f0._f0.workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_local_id)))))) >> _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) >> 0u)))), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), _GLF_struct_22(_GLF_struct_17(ivec3(1), vec3(1.0)), _GLF_struct_18(ivec3(1), mat4x3(1.0)), _GLF_struct_19(1u, ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-26590))))), mat4x3(1.0), _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(17437u, 20133u, 66198u, 42081u)) : uvec4(1u))), _GLF_struct_20(mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, sqrt(0.0), 0.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.7) : 1.0))))), bvec4(true), bvec2(true), _GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(6571u) : 0u))), 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), uvec3(7u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(7u), uvec3(7u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(9955u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (9955u)), 165846u, 184748u)) : _GLF_IDENTITY(uvec3(7u), uvec3(7u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(9955u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (9955u)), 165846u, 184748u)) : _GLF_IDENTITY(uvec3(7u), uvec3(7u)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(9955u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (9955u)), 165846u, 184748u)) : _GLF_IDENTITY(uvec3(7u), uvec3(7u)), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(9955u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (9955u)), 165846u, 184748u)) : _GLF_IDENTITY(uvec3(7u), uvec3(7u))) | uvec3(0u, 0u, 0u)), false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(9955u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (9955u)), 165846u, 184748u)) : _GLF_IDENTITY(uvec3(7u), uvec3(7u)))), false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(9955u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (9955u)), 165846u, 184748u)) : _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))), _GLF_IDENTITY(uvec3(7u), uvec3(_GLF_IDENTITY(7u, (7u) / (1u ^ 0u)))), _GLF_IDENTITY(uvec3(7u), uvec3(7u))))) + (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(_GLF_IDENTITY(1u, 0u + (1u))))))), uvec2(1u)), _GLF_struct_21(mat3(1.0), ivec4(1), true, mat2x4(1.0), mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))), mat2x3(1.0), ivec2(1))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(clamp(0.0, 0.0, 0.0)), float(_GLF_FUZZED((13.50 - vec3(5.7, -1.5, -7.3).y))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0))) / vec2(1.0, 1.0))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.4)), bool(false))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : 1.0)), 0.0, 1.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0))) / vec2(1.0, 1.0))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.4)), bool(false))) > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : 1.0)), 0.0, 1.0, 1.0)), (vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0))) / vec2(1.0, 1.0))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.4)), bool(false))) > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(subgroup_base)) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_12._f0._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))) >> 0)) >> 0)), (_GLF_IDENTITY((1), 0 | ((1)))) ^ 0)) | 0)), ((_GLF_IDENTITY(~ (1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY((1), int(ivec3((1), 1, 0))), 0 | ((1)))) ^ 0)) | 0))) / 1) | (~ (1)))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) / 1.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(_GLF_FUZZED(-0.7)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_struct_replacement_23.virtual_gid], uint(1), 4, 64, 4);
 if((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), mix(vec2(_GLF_FUZZED(14.94), (vec2(vec2(injectionSwitch)))[1]), vec2((vec2(vec2(injectionSwitch)))[0], _GLF_FUZZED(float(-23223))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))), true))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | 0u, ((next_virtual_gid) | 0u) - 0u))], uint(2), _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), max(int(_GLF_IDENTITY(4, max(4, 4))), int(_GLF_IDENTITY(4, max(4, 4)))))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), max(int(_GLF_IDENTITY(4, max(4, 4))), int(_GLF_IDENTITY(4, max(4, 4)))))) | 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), max(int(_GLF_IDENTITY(4, max(4, 4))), int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 1 * (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4)))))))))) | 0)) + 0)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false)))))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, false, false)))))) || false))) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), 0u ^ (~ (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))), next_virtual_gid, next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, _GLF_IDENTITY(true, bool(bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))) || false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat2(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0)))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))), false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
