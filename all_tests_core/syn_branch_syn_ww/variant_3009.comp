#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_115 {
 uvec3 _f0;
 int _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 mat4x3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_114 {
 mat3x4 _f0;
 vec2 _f1;
 bvec3 _f2;
 int _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_113 {
 ivec2 _f0;
 vec4 _f1;
 float _f2;
 mat4 _f3;
 float _f4;
} ;

struct _GLF_struct_116 {
 _GLF_struct_113 _f0;
 uvec4 _f1;
 _GLF_struct_114 _f2;
 _GLF_struct_115 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_111 {
 uvec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_110 {
 mat3x2 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 float _f3;
} ;

struct _GLF_struct_109 {
 mat4x2 _f0;
} ;

struct _GLF_struct_108 {
 bool _f0;
 bool _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_107 {
 mat4x2 _f0;
} ;

struct _GLF_struct_106 {
 mat3x2 _f0;
 ivec3 _f1;
 vec3 _f2;
 bool _f3;
 mat4x2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_105 {
 vec3 _f0;
 vec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_112 {
 _GLF_struct_105 _f0;
 _GLF_struct_106 _f1;
 _GLF_struct_107 _f2;
 _GLF_struct_108 _f3;
 _GLF_struct_109 _f4;
 _GLF_struct_110 _f5;
 _GLF_struct_111 _f6;
} ;

struct _GLF_struct_103 {
 int _f0;
 uvec4 _f1;
 uvec3 _f2;
 bvec3 _f3;
 mat2x4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_102 {
 mat3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_104 {
 vec4 _f0;
 _GLF_struct_102 _f1;
 uint workgroup_base;
 uvec3 _f2;
 _GLF_struct_103 _f3;
 float _f4;
 ivec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_117 {
 _GLF_struct_104 _f0;
 _GLF_struct_112 _f1;
 _GLF_struct_116 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_99 {
 vec2 _f0;
 bvec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_98 {
 uvec2 _f0;
 mat3 _f1;
 mat2x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_100 {
 _GLF_struct_98 _f0;
 mat4 _GLF_SWITCH_1_5v;
 _GLF_struct_99 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_101 {
 _GLF_struct_100 _f0;
 vec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_97 {
 mat3 _f0;
 vec2 _GLF_SWITCH_0_100v;
 vec4 _f1;
} ;

struct _GLF_struct_94 {
 bvec4 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_93 {
 bvec3 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 vec2 _f3;
 uvec4 _f4;
 float _f5;
} ;

struct _GLF_struct_95 {
 _GLF_struct_93 _f0;
 _GLF_struct_94 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_91 {
 mat3x4 _f0;
 ivec3 _f1;
 mat2 _f2;
 mat2x3 _f3;
 float _f4;
 mat3x4 _GLF_SWITCH_0_21v;
 uvec3 _f5;
} ;

struct _GLF_struct_90 {
 float _f0;
 mat3x2 _f1;
 uvec3 _f2;
 mat2 _f3;
 ivec3 _f4;
 mat4x3 _f5;
 bool _f6;
} ;

struct _GLF_struct_89 {
 int _f0;
 mat4 _f1;
 bvec2 _f2;
 ivec2 _f3;
 float _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_92 {
 _GLF_struct_89 _f0;
 _GLF_struct_90 _f1;
 mat2 _f2;
 _GLF_struct_91 _f3;
 mat2x4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_96 {
 mat3 _f0;
 _GLF_struct_92 _f1;
 _GLF_struct_95 _f2;
} ;

struct _GLF_struct_86 {
 vec2 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 mat3x4 _f3;
 float _f4;
} ;

struct _GLF_struct_85 {
 vec2 _f0;
 ivec3 _f1;
 bool _f2;
 bvec2 _f3;
 int _f4;
} ;

struct _GLF_struct_84 {
 vec4 _f0;
 mat4x3 _f1;
 ivec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_83 {
 vec2 _f0;
 ivec3 _f1;
 vec3 _f2;
 bool _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_82 {
 mat3x4 _f0;
 float _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_87 {
 _GLF_struct_82 _f0;
 uint subgroup_base;
 _GLF_struct_83 _f1;
 _GLF_struct_84 _f2;
 _GLF_struct_85 _f3;
 _GLF_struct_86 _f4;
 int _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_88 {
 _GLF_struct_87 _f0;
} ;

struct _GLF_struct_79 {
 ivec3 _f0;
 uvec4 _f1;
 vec2 _f2;
 int _f3;
 uvec4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_80 {
 mat4x2 _f0;
 _GLF_struct_79 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_81 {
 bvec2 _GLF_SWITCH_0_61v;
 vec4 _f0;
 _GLF_struct_80 _f1;
 ivec3 _f2;
 vec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_76 {
 vec3 _f0;
 bvec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_77 {
 ivec3 _f0;
 uvec4 _f1;
 vec4 _f2;
 _GLF_struct_76 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_74 {
 uvec2 _f0;
 uvec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_73 {
 mat3 _f0;
 mat3x4 _f1;
 mat3 _f2;
 mat4 _f3;
 int _f4;
 float _f5;
 mat2 _f6;
} ;

struct _GLF_struct_75 {
 _GLF_struct_73 _f0;
 int _f1;
 mat2x3 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 _GLF_struct_74 _f5;
} ;

struct _GLF_struct_78 {
 vec2 _f0;
 _GLF_struct_75 _f1;
 ivec2 _GLF_SWITCH_2_23v;
 uvec2 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 _GLF_struct_77 _f5;
} ;

struct _GLF_struct_70 {
 bvec3 _f0;
 uvec2 _f1;
 mat3 _f2;
 bvec4 _f3;
 vec4 _f4;
 ivec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_69 {
 mat3x2 _f0;
 mat4 _f1;
 vec2 _f2;
 float _f3;
 vec3 _f4;
} ;

struct _GLF_struct_68 {
 mat4x2 _f0;
 float _f1;
 bool _f2;
} ;

struct _GLF_struct_67 {
 vec3 _f0;
 uvec3 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 bvec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_66 {
 ivec2 _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 uint _f3;
 mat3 _f4;
} ;

struct _GLF_struct_71 {
 _GLF_struct_66 _f0;
 ivec2 _f1;
 _GLF_struct_67 _f2;
 _GLF_struct_68 _f3;
 _GLF_struct_69 _f4;
 uvec2 _GLF_SWITCH_1_0v;
 _GLF_struct_70 _f5;
} ;

struct _GLF_struct_72 {
 bvec3 _f0;
 _GLF_struct_71 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_63 {
 uvec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_62 {
 mat4x3 _f0;
 mat4 _f1;
 ivec4 _f2;
 ivec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_61 {
 mat3x4 _f0;
 mat2x4 _f1;
 bvec4 _f2;
 bvec2 _f3;
 ivec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_64 {
 _GLF_struct_61 _f0;
 vec2 _f1;
 _GLF_struct_62 _f2;
 mat2 _f3;
 _GLF_struct_63 _f4;
} ;

struct _GLF_struct_59 {
 uint _f0;
} ;

struct _GLF_struct_58 {
 float _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_57 {
 uvec4 _f0;
 uint _f1;
 uint _f2;
 uint _f3;
 mat4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_60 {
 _GLF_struct_57 _f0;
 _GLF_struct_58 _f1;
 uvec3 _f2;
 _GLF_struct_59 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_65 {
 vec2 _f0;
 bool _f1;
 _GLF_struct_60 _f2;
 mat4x3 _f3;
 uvec2 _f4;
 uint next_virtual_gid;
 _GLF_struct_64 _f5;
} ;

struct _GLF_struct_54 {
 ivec3 _f0;
 bool _f1;
 mat4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_53 {
 mat3 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 uint workgroup_id;
 bool _f3;
} ;

struct _GLF_struct_52 {
 bool _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_55 {
 _GLF_struct_52 _f0;
 mat2x4 _f1;
 vec3 _f2;
 _GLF_struct_53 _f3;
 _GLF_struct_54 _f4;
} ;

struct _GLF_struct_50 {
 bvec4 _f0;
 uint _f1;
 bvec3 _f2;
 float _f3;
 mat2x4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_49 {
 mat3x2 _f0;
 mat3x4 _f1;
 vec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_51 {
 _GLF_struct_49 _f0;
 _GLF_struct_50 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_56 {
 _GLF_struct_51 _f0;
 _GLF_struct_55 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_46 {
 uint _f0;
 int _f1;
} ;

struct _GLF_struct_45 {
 bvec2 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_44 {
 bvec4 _f0;
} ;

struct _GLF_struct_43 {
 int _f0;
 vec3 _f1;
 vec2 _f2;
 bvec3 _f3;
 mat3 _f4;
 mat4x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_47 {
 _GLF_struct_43 _f0;
 uvec3 _f1;
 _GLF_struct_44 _f2;
 float _GLF_SWITCH_0_73v;
 _GLF_struct_45 _f3;
 _GLF_struct_46 _f4;
 vec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_48 {
 _GLF_struct_47 _f0;
} ;

struct _GLF_struct_41 {
 mat2x4 _f0;
} ;

struct _GLF_struct_39 {
 vec4 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 uvec2 _f3;
 int _f4;
 mat2x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_38 {
 uvec2 _f0;
 vec4 _f1;
 vec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_37 {
 mat4x3 _f0;
 mat4x3 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 mat2 _f4;
 bvec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_36 {
 mat3x2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_35 {
 ivec2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_40 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
 _GLF_struct_37 _f2;
 _GLF_struct_38 _f3;
 _GLF_struct_39 _f4;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 float _f1;
 vec3 _f2;
 ivec2 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_32 {
 vec3 _f0;
 ivec2 _f1;
 mat4x3 _f2;
 float _f3;
} ;

struct _GLF_struct_34 {
 uint _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 vec2 _f3;
 uvec2 _f4;
 bool _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_30 {
 mat3x2 _f0;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 uvec4 _f1;
 vec3 _f2;
 mat4 _f3;
 mat2 _f4;
 uvec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_31 {
 _GLF_struct_29 _f0;
 _GLF_struct_30 _f1;
} ;

struct _GLF_struct_27 {
 mat4 _f0;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_25 {
 uvec2 _f0;
 uvec4 _f1;
 uint _f2;
 mat4 _f3;
 mat3x2 _f4;
 uvec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_28 {
 bvec4 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 mat2x4 _f3;
 _GLF_struct_27 _f4;
} ;

struct _GLF_struct_42 {
 mat2x3 _f0;
 _GLF_struct_28 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_40 _f4;
 _GLF_struct_41 _f5;
 uvec4 _f6;
 mat4x3 _GLF_SWITCH_0_40v;
} ;

struct _GLF_struct_22 {
 int _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 ivec3 _f1;
 ivec2 _f2;
 bvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 float _f1;
 mat2 _f2;
 mat3x4 _f3;
 bvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_18 {
 int _f0;
 int _injected_loop_counter;
 mat2x3 _f1;
 float _f2;
 vec4 _f3;
 mat4x3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
} ;

struct _GLF_struct_21 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 bvec3 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_21 _f0;
 _GLF_struct_23 _f1;
 vec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 bvec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_13 {
 float _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 bvec3 _f2;
 vec4 _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uint virtual_gid;
 bvec4 _f1;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 uvec4 _f1;
 bvec2 _f2;
 int _f3;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 int _f1;
 uint _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 mat4x2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_5 {
 float _f0;
 bool _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
 ivec4 _f1;
 mat4 _f2;
 mat4x2 _f3;
 bvec3 _f4;
 mat4x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec2 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 vec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_1 _f0;
 ivec4 _f1;
 uint subgroup_id;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 mat3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_1(_GLF_struct_0(mat2x4(1.0), mat2(1.0), mat2(1.0))), ivec4(1), gl_SubgroupID, _GLF_struct_7(_GLF_struct_2(uvec3(1u), mat2x3(1.0), mat3x4(1.0), mat2x4(1.0)), _GLF_struct_3(1, ivec2(1), bvec3(true), mat4x2(1.0), vec3(1.0), mat4x3(1.0)), _GLF_struct_4(1u, ivec4(1), mat4(1.0), mat4x2(1.0), bvec3(true), mat4x2(1.0), mat2(1.0)), _GLF_struct_5(1.0, true), _GLF_struct_6(mat2x3(1.0), mat4x2(1.0), uvec3(1u))), _GLF_struct_11(_GLF_struct_8(ivec4(1), 1, 1u, bvec4(true)), _GLF_struct_9(mat4x2(1.0)), _GLF_struct_10(ivec2(1), uvec4(1u), bvec2(true), 1)), mat3(1.0));
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     switch(_GLF_SWITCH(0))
      {
       case 69:
       ivec4 _GLF_SWITCH_0_0v[19], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 83:
       if(true)
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 6:
           mat4x3 _GLF_SWITCH_2_0v[97];
           case 0:
           if(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 72:
               bvec3(false, false, false);
               if(_GLF_DEAD(false))
                barrier();
               case 35:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               for(               mat2(867.747, -741.985, -580.564, 0.1);
 false; mat2(9.6, -7.1, 2702.4607, 477.938))
                {
                 do
                  {
                   uvec2(20389u, 18325u);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   (- mat3(163.849, 5.4, -11.19, 995.816, -37.55, -459.180, -870.424, 4036.0515, 10.00));
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 bvec2 _GLF_SWITCH_1_0v[96], _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                 mat4(-83.52);
                 mat2 _GLF_SWITCH_1_3v[54], _GLF_SWITCH_1_4v[8];
                 int _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[64], _GLF_SWITCH_1_7v;
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   _GLF_SWITCH_1_2v.g;
                  }
                 bvec3(true, false, true);
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 0:
               case 67:
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 70:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               {
                ivec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                ;
                ivec3(85012, 31183, 92430);
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 return;
                mat2x3(797.130, 8.5, 9286.6082, -6.1, -374.626, 255.901);
                (mat4x3(mat2x3(-7.4, -8.1, 5.3, -5.1, 4088.1111, -4295.8224)) + mat4x3(75.86, 15.87, -612.577, 2.9, 1.6, 2.5, -3.8, -5148.0047, -56.97, -8808.2990, -4232.7062, -52.76));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
                     barrier();
                    return;
                   }
                  return;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      return;
                     }
                   }
                  return;
                 }
                uvec4(151699u, 52902u, 163014u, 49107u);
                uvec3(115706u, 59365u, 170825u);
                mat2x4 _GLF_SWITCH_0_5v;
               }
               case 71:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               for(               (-5.2 , (6.2 + mat2x4(-8.3, -464.761, -329.601, 9.7, 4.7, -151.392, -5.5, 6.2)));
 (-46145 < -83716); (+ mat3x4(-7559.2537, -2.9, -7.5, 585.734, 5018.1939, 4.2, -6950.8846, 1.6, -21.58, -3.1, -494.756, -0.6)))
                {
                 mat4x3(-4067.7488, -2.6, 9.2, -96.27, -6.2, -55.26, -57.88, 7.8, 6.1, 9.5, 6.8, 5.0);
                 mat2(-33.37, 111.248, -3945.0838, 4217.5353);
                 if(_GLF_DEAD(false))
                  return;
                 mat3(-0.6, -776.262, -751.228, -7954.8641, -3.3, 1683.7102, 5401.8418, -7583.0321, -354.395);
                 mat4x2(mat3x4(6.5, -29.42, 8.4, -68.40, -7746.0431, -9382.7390, 46.33, 6684.1740, -1.5, -2.1, 8120.6463, -91.17));
                }
               ivec3 _GLF_SWITCH_0_6v[82];
               -17731;
               case 90:
               if(false)
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
                  {
                   case 24:
                   _GLF_struct_72 _GLF_struct_replacement_72;
                   case 0:
                   case 32:
                   case 94:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   case 82:
                   case 48:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 58:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 29:
                   case 40:
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   break;
                   case 9:
                   _GLF_struct_replacement_72._f1._GLF_SWITCH_1_0v;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   default:
                   1;
                  }
                }
               break;
               default:
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 1;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              return;
            }
           if(_GLF_DEAD(false))
            break;
           bvec2(false, false);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               119437u;
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           break;
           case 42:
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               barrier();
              mat2(-9.4, 341.796, -0.3, 6.0);
              if(_GLF_DEAD(false))
               break;
             }
            {
            }
            while(true)
             {
              if(_GLF_DEAD(false))
               break;
              false;
              mat2 _GLF_SWITCH_2_1v[70], _GLF_SWITCH_2_2v[35];
              uvec2 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[57];
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              continue;
             }
            while((bvec3(false, true, false) != bvec3(true, true, false)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              ;
              mat2x4(872.729, -3.5, -5.0, -920.066, -30.61, -99.00, -2454.2725, -625.421);
              do
               {
                ;
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              uvec2 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              do
               {
                mat4(2.6, 68.15, 1.5, 97.28, -3.7, 49.27, 52.02, 5.7, -7525.6880, -0.3, 765.445, -1.5, 234.690, 3.5, 9.4, -3.6);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              int _GLF_SWITCH_2_8v[13], _GLF_SWITCH_2_9v[45], _GLF_SWITCH_2_10v[5];
              if(_GLF_DEAD(false))
               continue;
              uvec2 _GLF_SWITCH_2_11v[38], _GLF_SWITCH_2_12v[82];
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                (vec4(9976.9859, -8.5, 0.9, 3673.1577) * (mat4(-8.2, 5.1, -1.7, 7016.0533, -3485.8274, 930.288, -2.6, 0.0, 3.2, -7365.9716, 3393.1080, 3.5, 28.04, -445.281, 8.4, 0.4)));
               }
             }
            (subgroup_size * 157354u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(true)
             {
              mat4 _GLF_SWITCH_2_13v[38], _GLF_SWITCH_2_14v;
              uvec4 _GLF_SWITCH_2_15v[35], _GLF_SWITCH_2_16v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  return;
                 }
               }
              (mat3x2(63.46, 505.169, -3971.6551, 8764.1078, 0.5, 5.3) / mat3x2(-1.1, -63.93, -1164.1143, -3005.9169, -7.5, -7.0));
              true;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                continue;
               }
              mat2x3(-58.38, mix(-532.990, -71.35, false), -404.162, 5488.5316, 1.7, 0.3);
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              mat3x2 _GLF_SWITCH_2_17v;
              (ivec3(98178, -781, -94264) / (87228 | 97360));
             }
            uvec2 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v;
            bvec2 _GLF_SWITCH_2_20v[74], _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v;
            if(false)
             {
              if(_GLF_DEAD(false))
               break;
              mat3(mat4x3(5.4, 85.78, 985.097, 551.194, 8807.2012, 7.0, -36.62, -7529.5112, 5.4, 1.7, -1935.9361, 459.419));
             }
            else
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                bitfieldExtract(ivec2(96641, -72013), ivec4(97708, -79746, -39716, 31287)[3], bitCount(-9559));
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              (mat3(-8.0, -6537.3261, -2.6, -4371.1325, 7.3, 9803.1963, -3.9, -1.1, -4482.6528) * mat4x3(-271.305, 7.5, 262.059, -8.1, -2.4, 6797.0039, -8343.8549, 4679.1951, -9208.1187, -2.3, -0.0, 2.5));
              _GLF_struct_78 _GLF_struct_replacement_78;
              mat3x2(20.95, 0.0, 7263.6544, -0.6, -25.44, 5.7);
              uvec3(120606u, 170834u, 154830u);
              bvec3 _GLF_SWITCH_2_24v[61];
              mat4 _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v[37];
              if(_GLF_DEAD(false))
               return;
             }
           }
           case 91:
           if(_GLF_DEAD(false))
            continue;
           if((bvec3(true, true, true).yxxy == bvec4(false, true, false, true)))
            {
             vec3(255.126, -65.95, -999.641);
            }
           else
            {
             (vec3(-1.1, 5378.7695, -5.5) , mat3x4(4114.6666, -992.403, 213.659, -4119.9821, -2541.3624, -65.87, -9814.2570, -523.861, 37.53, 97.28, 3.6, -1.5));
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 uvec3(33136u, 148939u, 69266u);
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             mat2x4 _GLF_SWITCH_2_27v[73], _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
              barrier();
             mat3x2(-630.196, 8547.4695, -43.14, -4427.6426, -1409.4679, 4672.7853);
             if(_GLF_DEAD(false))
              continue;
             while((subgroup_size == subgroup_size))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 ;
                }
               else
                {
                }
               radians(injectionSwitch);
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             ivec4 _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v[3];
             cos(vec4(-287.816, -229.011, 138.435, 8.8));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
              break;
             mat4(3.2, -6.6, 949.283, 300.841, -2.2, -2170.0631, -66.23, -60.93, -4882.0894, 60.67, 1.9, 6.1, 2.1, -9432.0019, 3.8, 3.3);
            }
           default:
           1;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         switch(_GLF_SWITCH(0))
          {
           case 61:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           bvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
           case 0:
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
           case 48:
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             ;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           case 49:
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           case 68:
           if(_GLF_DEAD(false))
            break;
           (mat3(-8807.5871, -59.51, 740.792, 4026.7321, -53.56, -30.62, -213.003, -747.956, -4058.1457) + -3.8);
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           case 64:
           vec3(-3.7, -50.95, -53.57);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           case 1:
           mat2x3 _GLF_SWITCH_3_3v;
           default:
           1;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       case 0:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       case 49:
       case 46:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       case 55:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       for(_GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_21(_GLF_struct_17(mat2x3(1.0)), _GLF_struct_18(1, (0 << _GLF_IDENTITY(int(3), int(3))), mat2x3(1.0), 1.0, vec4(1.0), mat4x3(1.0), vec3(1.0)), bvec3(true), _GLF_struct_19(ivec2(1), 1.0, mat2(1.0), mat3x4(1.0), bvec2(true), ivec2(1)), _GLF_struct_20(uvec2(1u), ivec3(1), ivec2(1), bvec3(true), uvec3(1u))), _GLF_struct_23(_GLF_struct_22(1, ivec3(1))), vec4(1.0), mat2(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_24._f0._f1._injected_loop_counter < 1); _GLF_struct_replacement_24._f0._f1._injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       break;
       case 88:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if((mat3(-4.1, 2.6, -0.5, 2409.8694, 9.7, 793.234, -7.0, -3048.2736, 2851.0500) == mat3(2687.5719, 9569.3187, 4.9, 5.1, -9.3, -37.59, -70.90, -9.4, 8.3)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         mat4x3 _GLF_SWITCH_0_7v[12], _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         while(true)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           vec3(-7.9, 76.88, 86.24);
           vec4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[4];
           vec2 _GLF_SWITCH_0_12v;
           mat2x3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             for(bvec4 _GLF_SWITCH_0_16v[74], _GLF_SWITCH_0_17v; true; ivec3(-22290, ivec2(23654, 44212)))
              {
               findLSB(143910u);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
               bvec2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               ivec3(32316, 62199, 91428);
               if(_GLF_DEAD(false))
                continue;
               _GLF_SWITCH_0_8v;
               _GLF_struct_96 _GLF_struct_replacement_96;
               91386;
               if(_GLF_DEAD(false))
                break;
               (false ? (ivec3(18276, 51246, 40473) - -80961) : (-82144 / ivec3(11839, 50465, -35555)));
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), true))))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           uvec3(98431u, 151370u, 39088u);
           if(_GLF_DEAD(false))
            barrier();
           if((ivec4(-52701, 49021, 21287, -76632) != _GLF_SWITCH_0_1v))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             bvec3(false, true, true);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             uvec2 _GLF_SWITCH_0_22v[93], _GLF_SWITCH_0_23v;
             if(_GLF_DEAD(false))
              barrier();
             _GLF_SWITCH_0_23v;
             do
              {
               mat2x4(4281.7690, 7232.9195, 40.56, 19.53, -304.651, 4324.2963, -70.12, 20.95);
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             (floatBitsToInt(vec3(-272.391, 351.565, 5.6)) ^ -90499);
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             mat4x2(2.7, -2.6, 1.7, -57.62, -2437.9527, 4.9, -53.75, -7.5);
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             mat2x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[46];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             vec4 _GLF_SWITCH_0_27v[12], _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[64];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
            }
           ;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat3x2(6.6, -4.1, -5946.8288, 0.3, -7881.1425, 3.4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           injectionSwitch;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if((false != true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             bvec2 _GLF_SWITCH_0_30v[34], _GLF_SWITCH_0_31v;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 53:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     mat4x2(9.5, -53.87, -65.42, -7.3, -6454.3295, 9.9, 95.33, -0.6);
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 case 0:
                 case 74:
                 case 71:
                 case 97:
                 case 25:
                 if(_GLF_DEAD(false))
                  continue;
                 case 93:
                 case 56:
                 if(_GLF_DEAD(false))
                  break;
                 case 17:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 49:
                 ;
                 break;
                 if(_GLF_DEAD(false))
                  continue;
                 case 5:
                 ivec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                 case 37:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec3 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
                 default:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   1;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                {
                 return;
                }
              }
             float _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             bvec2 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
             uvec2 _GLF_SWITCH_0_37v[91], _GLF_SWITCH_0_38v[74];
             mat4x2 _GLF_SWITCH_0_39v[33];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             vec3(-149.598, 0.6, 1195.2674);
             uvec3(181018u, 92777u, 26315u);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             _GLF_struct_42 _GLF_struct_replacement_42;
             mat2x4(-312.741, -52.47, -131.001, 4668.6215, -1.0, -31.23, 5.2, 8299.8572);
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 subgroup_size;
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           ;
           if(_GLF_DEAD(false))
            barrier();
           ;
           mat2x4 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v;
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               barrier();
              vec2(-13.78, -295.663);
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
               barrier();
              continue;
             }
            if(_GLF_DEAD(false))
             barrier();
            ivec4 _GLF_SWITCH_0_43v[6], _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    return;
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                if(_GLF_DEAD(false))
                 barrier();
                continue;
               }
              barrier();
             }
            mat4x3(mat2(-3.0, 2.8, -61.22, 0.6));
            if(_GLF_DEAD(false))
             return;
            ;
           }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               switch(_GLF_SWITCH(0))
                {
                 case 30:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     ivec2(24271, 95110);
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 43:
                 if(_GLF_DEAD(false))
                  barrier();
                 bool _GLF_SWITCH_1_0v[76];
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 case 24:
                 case 51:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 case 13:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 86:
                 case 45:
                 if(_GLF_DEAD(false))
                  barrier();
                 vec4(-26.95, -505.911, 88.38, 7.3);
                 break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  barrier();
                 case 29:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     return;
                    }
                  }
                 uvec3(subgroup_size);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 default:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 1;
                }
              }
            }
           else
            {
            }
           float _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(false)
            {
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               mat4x3(-2.3, -38.61, 70.04, 4092.5462, -4473.4482, 9.5, -5648.8871, -3589.2565, 5.7, -8546.3009, -8132.5795, -55.91);
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   continue;
                  }
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
               bvec3(false, true, false);
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               vec3(1.0, -219.855, -9.7);
              }
             else
              {
              }
             ivec2(-69630, 90371);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
                  barrier();
                }
               else
                {
                }
              }
             mat4 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             bvec2 _GLF_SWITCH_0_52v;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(_injected_loop_counter))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         (mat4(-0.6, -8519.7507, -37.12, -73.64, -241.083, -2525.6710, -73.08, -486.655, 690.994, -0.8, 55.58, 18.22, 6693.1337, -520.027, 31.31, -7726.5966));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         for(uvec3 _GLF_SWITCH_0_53v; false; bvec3(true, true, false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           mat2x3 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v[88];
           mat4x2 _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v, _GLF_SWITCH_0_59v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           mat2x3 _GLF_SWITCH_0_60v[51];
           if(_GLF_DEAD(false))
            continue;
           for(           mat3x4(-9777.5101, -201.560, 413.707, -3.4, 9.8, 371.372, 5.8, 0.9, 718.649, 3.8, 9814.2740, -5.8);
 true; mat4x2(-2.0, -27.11, -5556.7861, 378.763, 862.775, -50.63, -367.324, -0.4))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             bvec4(bvec2(false, false), false, false);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
           while(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               greaterThanEqual(uvec4(155767u, 23854u, 46447u, 18779u), (mat2x4(534.540, 42.18, 5368.7132, -21.67, -369.507, -4120.3933, 965.948, -2.3) , uvec4(28394u, 181876u, 13751u, 141949u)));
              }
             do
              {
               subgroup_size;
              }
             while(_GLF_WRAPPED_LOOP(false));
             _GLF_struct_81 _GLF_struct_replacement_81;
             mix(vec3(4.7, -71.32, 49.78), vec3(-2.8, 97.43, -57.01), bvec3(false, false, true));
             mat2x3(mat2x4(-607.509, -47.12, -9.7, 5.3, -22.65, 11.64, -20.77, 4.0));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             bvec3((146913u >= 50702u), false, (uvec3(151809u, 170426u, 61937u) != uvec3(103429u, 25554u, 7560u)));
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             _GLF_SWITCH_0_1v;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                  barrier();
                 barrier();
                }
              }
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             ((mat3(-102.309, 24.31, -539.360, -1799.9291, 1.2, -6.6, -8.4, 5.1, -1639.9697) * mat3(-4560.5475, -4.8, 8321.7780, 185.767, 4.1, 52.84, 7.3, -25.02, -7.2)) / mat3(-3.5, -5.4, 879.476, -6.6, 27.38, 146.648, 95.34, 610.800, -81.70));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           bool _GLF_SWITCH_0_62v, _GLF_SWITCH_0_63v;
           mat4 _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v, _GLF_SWITCH_0_66v[33];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           vec3 _GLF_SWITCH_0_67v;
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             (step(-15.89, _GLF_SWITCH_0_67v) * mat2x3(2189.6912, 2.5, -7.9, -822.374, -97.95, 255.791));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
           mat3x2 _GLF_SWITCH_0_68v[7], _GLF_SWITCH_0_69v[6];
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(false)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 74:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 25:
                 mat4x3 _GLF_SWITCH_0_70v, _GLF_SWITCH_0_71v, _GLF_SWITCH_0_72v;
                 if(_GLF_DEAD(false))
                  return;
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 11:
                 max(134357u, subgroup_size);
                 if(_GLF_DEAD(false))
                  barrier();
                 case 10:
                 (4698 << 83574);
                 default:
                 1;
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         (max(uvec3(156728u, 157649u, 83071u), uvec3(191889u, 73994u, 21111u)) - uvec3(15818u, 104189u, 123873u));
         {
          for(          -5433.4635;
 true; (ivec3(-34770, 73797, 33260) * ivec3(18904, 45471, 98147)))
           {
            if(_GLF_DEAD(false))
             barrier();
            (mat2x3(9440.6418, -7.2, 1.4, -9.6, 96.19, 3888.6165));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              continue;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            _GLF_struct_48 _GLF_struct_replacement_48;
            if(_GLF_DEAD(false))
             break;
            bool _GLF_SWITCH_0_74v[31];
            if(_GLF_DEAD(false))
             break;
            mat4 _GLF_SWITCH_0_75v, _GLF_SWITCH_0_76v;
            ;
            lessThan(uvec2(167500u, 93261u), uvec2(152277u, 45236u));
            vec4(931.011, -22.06, 77.50, 25.06);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            ivec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              do
               {
                findMSB(ivec3(31625, -35174, -36786));
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       break;
                      return;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     return;
                    barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                 {
                 }
                else
                 {
                  ;
                 }
                if(_GLF_DEAD(false))
                 return;
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                 {
                  (mat3(1.6, -5.6, -476.056, 80.53, -66.14, 662.801, 2.4, 86.73, -127.887) * mat3(-7.9, -2.1, -456.418, -913.589, -7216.5921, 0.3, -1214.8138, -3.1, 452.946));
                 }
               }
              while((mat3x2(9813.9578, 8.2, 119.441, 151.618, -6.3, 9704.2846) == outerProduct(injectionSwitch, vec3(-5.7, -71.17, -8.0))));
             }
           }
          else
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
             return;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
           {
            if((true))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                -61184;
                if(_GLF_DEAD(false))
                 continue;
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                 {
                  return;
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              mat4x3(7.8, -869.646, -29.11, 5.4, 1245.6881, 778.304, -6.8, -96.28, 494.919, -4120.9254, 307.318, -473.509);
              if(_GLF_DEAD(false))
               barrier();
              mat4x3 _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v, _GLF_SWITCH_0_81v;
              if(_GLF_DEAD(false))
               barrier();
              int _GLF_SWITCH_0_82v;
              mat4x3 _GLF_SWITCH_0_83v, _GLF_SWITCH_0_84v[2], _GLF_SWITCH_0_85v;
              if(_GLF_DEAD(false))
               barrier();
              mat4 _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                return;
               }
              vec3 _GLF_SWITCH_0_88v;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
               }
              ivec2 _GLF_SWITCH_0_89v[54];
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              vec3 _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v[59];
             }
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            barrier();
           }
          subgroup_size;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            continue;
           }
          vec4 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v;
          if(_GLF_DEAD(false))
           barrier();
          uvec2 _GLF_SWITCH_0_94v, _GLF_SWITCH_0_95v[42], _GLF_SWITCH_0_96v[94];
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
         }
         for(         transpose((sqrt(-5298.8851) + mat2(7.5, -4194.9590, -7906.1949, -6.5)));
 any(bvec4(false, true, true, false)); mat2x3(length(vec3(590.389, 112.641, 783.952))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x3 _GLF_SWITCH_0_97v[54], _GLF_SWITCH_0_98v;
           vec4 _GLF_SWITCH_0_99v[88];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             _GLF_struct_97 _GLF_struct_replacement_97;
             mat4x3 _GLF_SWITCH_0_101v, _GLF_SWITCH_0_102v;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                  return;
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat4 _GLF_SWITCH_0_103v[91], _GLF_SWITCH_0_104v, _GLF_SWITCH_0_105v;
             mat4 _GLF_SWITCH_0_106v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             ;
             if(_GLF_DEAD(false))
              break;
             ;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x2(3.6, 7283.3201, 50.22, 695.847, -6425.1495, 15.40, -2.0, -4.3);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               injectionSwitch;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(false)
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(true)
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 packUnorm4x8(vec4(7.5, 8972.5682, -5.8, 558.346));
                 sign(22988);
                 injectionSwitch;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat2x3 _GLF_SWITCH_0_107v, _GLF_SWITCH_0_108v;
            }
           if(_GLF_DEAD(false))
            return;
           {
            if(_GLF_DEAD(false))
             barrier();
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              _GLF_SWITCH_0_1v;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                break;
               }
             }
            bool _GLF_SWITCH_0_109v[97];
            if(_GLF_DEAD(false))
             return;
           }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           mat2 _GLF_SWITCH_0_110v, _GLF_SWITCH_0_111v, _GLF_SWITCH_0_112v[31];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(1), int(1))) ^ 1)); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              break;
            }
           ((ivec4(10212, -26324, -16205, -78355) | -29032) + min(ivec4(22304, 28493, 7688, -26602), 83015));
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           ivec4 _GLF_SWITCH_0_113v, _GLF_SWITCH_0_114v, _GLF_SWITCH_0_115v;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             do
              {
               barrier();
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-53738))))))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(           outerProduct(vec2(-54.77, -2.7), vec4(-70.97, 1.8, -6147.6529, -35.05));
 (-74262 < 17402); lessThanEqual(ldexp(vec3(7.7, -4.8, -2.5), ivec3(-88638, -92351, -44629)), vec3(61.17, 3.8, 672.705)))
            {
             mat2(25.45, 5212.9998, 6.6, 4.1);
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           mat4x2(-7430.7979, 9921.2985, 66.73, -3709.0815, -5767.2862, 5328.0494, -1396.0893, 4459.2952);
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           for(           bvec4(false, false, true, true);
 false; mat3x4(-5.4, 456.027, 2956.5948, 21.74, 6264.7060, 2.4, -4.9, -549.685, -9.7, 282.014, -761.628, -2.0))
            {
             mat2 _GLF_SWITCH_0_116v, _GLF_SWITCH_0_117v[46];
             if(_GLF_DEAD(false))
              barrier();
             ivec2 _GLF_SWITCH_0_118v, _GLF_SWITCH_0_119v, _GLF_SWITCH_0_120v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           mat2(-93.50, 1.1, -0.1, -8.7);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         (mat3x4(1.5, -947.385, -7.7, 3.1, 4.7, -8709.6484, -2.2, 5816.3734, -4.7, 4564.6543, 8862.3216, 17.86) * (mat4x3(-60.27, 1.8, 0.3, -0.1, 15.40, 85.79, -1.9, -30.20, 6293.0394, 2.7, 8.4, -760.807) + mat4x3(-357.644, -9372.1435, 7.8, -207.509, -82.87, -2121.2266, -2412.1336, 40.00, -7.1, 0.6, 9660.3256, -9308.8021)));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       default:
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (26482 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 ^ 1), min((0 ^ 1), (0 ^ 1)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_56 _GLF_struct_replacement_56 = _GLF_struct_56(_GLF_struct_51(_GLF_struct_49(mat3x2(1.0), mat3x4(1.0), vec2(1.0), vec2(1.0)), _GLF_struct_50(bvec4(true), 1u, bvec3(true), 1.0, mat2x4(1.0), mat3x2(1.0)), mat3x4(1.0)), _GLF_struct_55(_GLF_struct_52(true, mat3x2(1.0)), mat2x4(1.0), vec3(1.0), _GLF_struct_53(mat3(1.0), mat3x4(1.0), bvec3(true), gl_WorkGroupID.x, true), _GLF_struct_54(ivec3(1), true, mat4(1.0), mat3x2(1.0))), mat3x2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       case 17:
       case 23:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       case 47:
       barrier();
       break;
       default:
       1;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 0:
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))));
     case 85:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 54:
     case 67:
     case 80:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 52:
     case 82:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     break;
     case 10:
     do
      {
       if((false || true))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         {
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
            {
             do
              {
               bitfieldInsert(uvec3(176579u, 110104u, 22661u), (+ uvec3(48842u, 160936u, 191149u)), -58493, 96790);
               -43698;
               (- ivec4(586, 56376, -49900, 13978));
              }
             while(true);
             if(_GLF_DEAD(false))
              break;
             for(vec3 _GLF_SWITCH_1_0v; false; uvec3(161429u, 28533u, 128038u))
              {
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
               bvec4(false, false, false, false);
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               ivec2 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[24], _GLF_SWITCH_1_3v;
               ;
               mat2x4 _GLF_SWITCH_1_4v;
               if(_GLF_DEAD(false))
                barrier();
               (cos(1.4) / mat3(-0.0, 6.6, 7.3, -6.5, -8.8, 4.7, -5454.0854, 3974.3551, 348.636));
               _GLF_struct_101 _GLF_struct_replacement_101;
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
          }
         else
          {
          }
         9.6;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           ;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         while((atomicMin(num_workgroup, workgroup_size) > uvec3(188825u, 93938u, 148271u)[2]))
          {
           if(_GLF_DEAD(false))
            barrier();
           mat2x3(-498.619, -593.052, 0.3, 2.6, -3.0, -236.727);
           false;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)))))
            return;
           mat4(12.73, -6547.5895, 8.3, -95.42, -21.38, -693.101, 2.0, -6.8, -37.20, -8.7, 74.69, 3305.1220, -1.0, -195.139, 1.9, 655.146);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec3 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           mat2x3(157.447, -1.3, -7.0, -18.65, -7192.7690, 0.3);
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     case 2:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     (- injectionSwitch).y;
     default:
     1;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_117 _GLF_struct_replacement_117 = _GLF_struct_117(_GLF_struct_104(vec4(1.0), _GLF_struct_102(mat3(1.0), vec3(1.0)), workgroup_size * _GLF_struct_replacement_56._f1._f3.workgroup_id, uvec3(1u), _GLF_struct_103(1, uvec4(1u), uvec3(1u), bvec3(true), mat2x4(1.0), mat2x3(1.0)), 1.0, ivec2(1), bvec2(true)), _GLF_struct_112(_GLF_struct_105(vec3(1.0), vec3(1.0), mat2x3(1.0)), _GLF_struct_106(mat3x2(1.0), ivec3(1), vec3(1.0), true, mat4x2(1.0), mat2(1.0)), _GLF_struct_107(mat4x2(1.0)), _GLF_struct_108(true, true, uvec4(1u)), _GLF_struct_109(mat4x2(1.0)), _GLF_struct_110(mat3x2(1.0), mat2x3(1.0), mat2x4(1.0), 1.0), _GLF_struct_111(uvec2(1u), mat4x3(1.0))), _GLF_struct_116(_GLF_struct_113(ivec2(1), vec4(1.0), 1.0, mat4(1.0), 1.0), uvec4(1u), _GLF_struct_114(mat3x4(1.0), vec2(1.0), bvec3(true), 1, uvec3(1u)), _GLF_struct_115(uvec3(1u), 1, mat2x3(1.0), mat3x4(1.0), mat4x3(1.0), mat2(1.0)), vec2(1.0)), mat3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_88 _GLF_struct_replacement_88 = _GLF_struct_88(_GLF_struct_87(_GLF_struct_82(mat3x4(1.0), 1.0, bvec2(true)), _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_83(vec2(1.0), ivec3(1), vec3(1.0), true, ivec4(1)), _GLF_struct_84(vec4(1.0), mat4x3(1.0), ivec2(1), mat3(1.0)), _GLF_struct_85(vec2(1.0), ivec3(1), true, bvec2(true), 1), _GLF_struct_86(vec2(1.0), mat3x4(1.0), bvec3(true), mat3x4(1.0), 1.0), 1, ivec3(1)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(_GLF_struct_13(1.0), _GLF_struct_14(ivec2(1), ivec2(1), mat4x2(1.0), mat2x3(1.0), mat3x4(1.0), bvec3(true), true), bvec3(true), vec4(1.0), 1, 1.0), _GLF_struct_replacement_117._f0.workgroup_base + _GLF_struct_replacement_88._f0.subgroup_base + subgroup_local_id, bvec4(true));
 _GLF_struct_65 _GLF_struct_replacement_65 = _GLF_struct_65(vec2(1.0), true, _GLF_struct_60(_GLF_struct_57(uvec4(1u), 1u, 1u, 1u, mat4(1.0), ivec4(1)), _GLF_struct_58(1.0, 1u, uvec2(1u)), uvec3(1u), _GLF_struct_59(1u), uvec4(1u)), mat4x3(1.0), uvec2(1u), _GLF_struct_replacement_117._f0.workgroup_base + _GLF_struct_replacement_88._f0.subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_64(_GLF_struct_61(mat3x4(1.0), mat2x4(1.0), bvec4(true), bvec2(true), ivec3(1), true), vec2(1.0), _GLF_struct_62(mat4x3(1.0), mat4(1.0), ivec4(1), ivec3(1), uvec2(1u)), mat2(1.0), _GLF_struct_63(uvec2(1u), ivec2(1))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_16.virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[_GLF_struct_replacement_65.next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 39:
     if(_GLF_DEAD(false))
      barrier();
     uvec2(196192u, 85801u);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 0:
     case 91:
     if(_GLF_DEAD(false))
      barrier();
     case 19:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     case 77:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     case 41:
     atomicStore(buf[_GLF_struct_replacement_65.next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 35:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     case 79:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 76:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     break;
     case 54:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     {
      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
       }
      else
       {
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        else
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          vec2(8.6, -1.5);
         }
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_WRAPPED_IF_FALSE(false))
       {
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
       }
      else
       {
        if(_GLF_DEAD(false))
         barrier();
        mat2x3 _GLF_SWITCH_2_0v;
        mat2 _GLF_SWITCH_2_1v;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        mod(vec3(-4.4, 20.91, 776.556), vec3(9.5, -3412.1926, -5485.7181)).t;
        if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
         {
         }
        else
         {
          (uvec4(5570u, 110168u, 136917u, 157113u) | uvec4(num_workgroup, _GLF_struct_replacement_117._f0.workgroup_base, uvec2(73623u, 133965u)))[3];
         }
       }
      ivec4 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[89];
      for(      mat4x2(mat2x4(617.353, 6.4, -3.4, 9.4, 56.23, 18.76, 5.6, 9.6));
 ((true ? mat4x3(-9.2, -1797.4562, 7.7, -9.6, 6418.5575, -5.5, 29.87, -5977.4290, 2.7, 0.7, 5.9, 250.605) : mat4x3(-7809.3629, -4.7, 7.8, 2078.3020, 86.87, 0.1, -0.8, -761.772, 3302.6689, -67.52, -601.528, 2899.8270)) == mat4x3(823.387, -3153.1512, 1184.5211, -4.7, -3058.4994, 7.2, 40.52, -19.83, 6.4, 935.838, -875.136, 239.636)); uvec2(85683u, 14u))
       {
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        vec4 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       {
        if(_GLF_DEAD(false))
         barrier();
        return;
       }
      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
       barrier();
     }
     case 5:
     (uvec4(139517u, 131342u, 6875u, 23071u) + uvec4(140004u, 131916u, 145986u, 110816u));
     default:
     1;
    }
  }
}
