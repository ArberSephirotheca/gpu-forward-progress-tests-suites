#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 mat2x4 _f0;
 float _f1;
 vec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat4 _f3;
 bvec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 vec4 _f1;
 bvec4 _f2;
 uint workgroup_base;
 bvec4 _f3;
 mat2x3 _f4;
 mat2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_14 {
 float _f0;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 mat4x2 _f2;
 mat2 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
 mat4 _f3;
 mat3x4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 uvec3 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 uvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 mat4x3 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_6 {
 uvec4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_6 _f0;
 uvec3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 uvec2 _f1;
 mat2 _f2;
 mat4x2 _f3;
 ivec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 mat4x3 _f1;
 mat2 _f2;
 uint _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat4 _f1;
 mat2x3 _f2;
 vec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 _GLF_struct_2 _f1;
 mat2x3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_18 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, abs(1.0), 1.0, 1.0))).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(6.7, -4.5)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), sqrt(0.0)))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-9548.5730)))), float(_GLF_FUZZED(-84.56)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)), float(_GLF_FUZZED((-489.992))), bool(false)))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))) && true)), true))))))) || false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))) || false))))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(6.7, -4.5)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), sqrt(0.0)))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-9548.5730)))), float(_GLF_FUZZED(-84.56)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)), float(_GLF_FUZZED((-489.992))), bool(false)))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))) && true)), true))))))) || false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))) || false))))), false))), (bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(6.7, -4.5)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), sqrt(0.0)))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), true, true)))))), false, false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-9548.5730)))), float(_GLF_FUZZED(-84.56)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)), float(_GLF_FUZZED((-489.992))), bool(false)))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))) && true)), true))))))) || false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))) || false))))), false)))) || false))), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))) && true)), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), vec2(_GLF_FUZZED(53.07), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(6616))), float(0.0), bool(true))), sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), clamp(dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0)))), dot(vec3(1.0, 0.0, sqrt(0.0)), vec3(0.0, 1.0, 1.0))) + (injectionSwitch.y)))) && true)), true))))))) || false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false))))), false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4437.6998) : injectionSwitch.x)) > injectionSwitch.y))), false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-7.1)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? _GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(mat2(mat2(injectionSwitch, 1.0, 1.0)))) : _GLF_FUZZED(mat2(9.9, 4717.9632, -6.9, 2.3)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, abs(1.0)))), injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, sqrt(0.0), 1.0, length(0.0), 1.0, round(length(normalize(cos(0.0))))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0))))), 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(length(0.0), (true ? length(0.0) : _GLF_FUZZED(72.48))), 1.0, round(length(normalize(cos(0.0)))))))) / vec2(1.0, 1.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) || false), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false, false, false)))) || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6363.3387, -1.9)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false))), false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), false)))), false, false, false)))) || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6363.3387, -1.9)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6363.3387, -1.9)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false)), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6363.3387, -1.9)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false))))))))))))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x))) ^ 0u, ((_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x))) ^ 0u) / 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))), gl_WorkGroupSize.x), (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x)) << 0u)))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))), gl_WorkGroupSize.x)) ^ 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x))));
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat3x2(1.0), _GLF_struct_2(mat4(1.0), _GLF_struct_0(bvec4(true)), _GLF_struct_1(mat3x4(1.0), mat4(1.0), mat2x3(1.0), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), vec4(mat2x4(vec4(1.0), 0.0, 1.0, 0.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)))), float(mat2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 0.0, cos(abs(0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0)))))), sqrt(0.0), 0.0, 1.0)))))), ivec4(1)), mat2x3(1.0), _GLF_struct_5(uvec2(1u), vec2(1.0), _GLF_struct_3(mat2x3(1.0), mat4x3(1.0), mat2(1.0), 1u, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))), (uvec3(1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_struct_4(mat2x3(_GLF_IDENTITY(1.0, (1.0) / abs(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_local_id --)) : 1u))) << 0u)), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u)), uvec2(1u))), uvec2(_GLF_IDENTITY(uvec4(uvec2(1u), 0u, 0u), clamp(uvec4(uvec2(1u), 0u, 0u), uvec4(uvec2(1u), 0u, 0u), uvec4(uvec2(1u), 0u, 0u))))), mat2(1.0), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6.0), float(mat4x2(_GLF_FUZZED(-6.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0), log(1.0))))), bool(false))), clamp(1.0, 1.0, 1.0))) + 0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(413.668)), bool(false))))), (1.0) + log(1.0))), ivec4(1), mat3x2(1.0))), _GLF_struct_12(_GLF_struct_6(uvec4(1u), vec4(1.0)), uvec3(1u), _GLF_struct_7(mat3x2(1.0), _GLF_IDENTITY(vec3(1.0), abs(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.4)), bool(false))), 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.4)), bool(false))), 1.0, 1.0)), (mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-5.4)), bool(false)), float(mat3x2(mix(float(1.0), float(_GLF_FUZZED(-5.4)), bool(false)), 1.0, sqrt(1.0), tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), 1.0, 1.0))) / vec3(1.0, 1.0, 1.0)))) * (vec3(1.0)))), _GLF_struct_8(vec4(1.0), mat4x3(1.0), mat4x3(1.0), ivec2(1), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(bvec2(bvec2(true)), true))))))))), _GLF_struct_9(mat2x3(1.0), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), vec3(1.0), mat3x4(1.0), mat2x4(1.0), uvec3(1u), mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_struct_10(bvec4(true), mat4x2(1.0), mat2x3(1.0), mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (0.0), (true ? determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (0.0) : _GLF_FUZZED(70.83)))), 0.0, 0.0)))))), mat3x4(1.0), bvec4(true)), _GLF_struct_11(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), mat2x4(1.0))), _GLF_struct_18(_GLF_struct_13(mat3x2(1.0)), _GLF_struct_14(1.0), mat4x2(1.0), mat2(1.0), _GLF_struct_15(_GLF_IDENTITY(vec4(1.0), (true ? vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))) : _GLF_IDENTITY(_GLF_FUZZED(vec4(-2.8, -8.8, 3.6, 67.40)), max(_GLF_IDENTITY(_GLF_FUZZED(vec4(-2.8, -8.8, 3.6, 67.40)), (_GLF_FUZZED(vec4(-2.8, -8.8, 3.6, 67.40))) / abs(vec4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))), 1.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 1.0))), _GLF_FUZZED(vec4(-2.8, -8.8, 3.6, 67.40)))))), vec4(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(bool(bvec3(true, true, false))))))), workgroup_size * workgroup_id, bvec4(true), mat2x3(1.0), mat2(1.0), ivec2(1)), _GLF_struct_16(mat4(1.0), mat2x3(1.0), bvec4(true), mat4(1.0), bvec4(true), ivec3(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0)))), _GLF_struct_17(mat2x4(1.0), 1.0, vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4x3(1.0))));
 uint virtual_gid = _GLF_struct_replacement_19._f5._f4.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_19._f5._f4.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))), (! (false)) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true))), _GLF_IDENTITY((! (false)) && true, ((! (false)) && true) || false))))))))) && _GLF_IDENTITY(true, bool(bool(true)))))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(4, 4)));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
