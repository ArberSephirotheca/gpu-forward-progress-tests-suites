#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x4 _f0;
 vec3 _f1;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false))))))) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 1.0)), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (true ? mat2(injectionSwitch, 1.0, 1.0) : _GLF_FUZZED(mat2(8627.2313, -544.410, 7.2, 608.591)))))) / vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), ! (! (true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), ! (! (true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), false, false), false))))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(false, false, true, true)))), ! (! (bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))))))))) || false))) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u, clamp(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u, (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u) << 0u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp((1u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) << 0u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u))) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), _GLF_IDENTITY(0u, (0u) | 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), false, false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), false, false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), false, false)))), true), false, false))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true)) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)), mix(vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0)))[1]), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(0.8)), bvec2(false, false)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))), true), false, false)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u | (workgroup_id), (0u | (workgroup_id)) | 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), sqrt(0.0), cos(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (false ? _GLF_FUZZED(-8.6) : _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (sin(0.0)) - _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0)))), (true ? _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0) : _GLF_FUZZED(2.8)))))) / 1.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8876.5949)), float(0.0), bool(true))) + (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)))))))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) / exp(0.0))), (true ? _GLF_IDENTITY((0.0) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) / exp(0.0))), ((0.0) / round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) / exp(0.0)))) - 0.0) : _GLF_FUZZED(-4.7)))), 0.0))), (_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || false, bool(bool((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || false))))))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 0.0))), mix(float(_GLF_FUZZED(10.70)), float(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0))))), 0.0), (true ? clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(8.9, 1.0 * (8.9)))))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(45.53) : 0.0))) / round(length(normalize(vec2(1.0, 1.0))))), 0.0) : _GLF_FUZZED(-2820.5337))))), (_GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0))))), 0.0), (true ? clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(8.9, 1.0 * (8.9)))))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(45.53) : 0.0))) / round(length(normalize(vec2(1.0, 1.0))))), 0.0) : _GLF_FUZZED(-2820.5337))))), (false ? _GLF_FUZZED(0.9) : sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0))))), 0.0), (true ? clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, _GLF_IDENTITY(8.9, 1.0 * (8.9)))))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(45.53) : 0.0))) / round(length(normalize(vec2(1.0, 1.0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(45.53) : 0.0))) / round(length(normalize(vec2(1.0, 1.0)))), float(mat3x4((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(45.53) : 0.0))) / round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(45.53) : 0.0))) / round(length(normalize(vec2(1.0, 1.0))))))), 0.0) : _GLF_FUZZED(-2820.5337)))))))) - 0.0)), bool(true)))) * 1.0)), 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat2(normalize(vec2(1.0, 1.0)), 1.0, 1.0))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (true ? normalize(vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))) * mat2(1.0))), (vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(_GLF_IDENTITY(0.0, (0.0) + 0.0))) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((+ -2971.1002)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0)))))))[1]), clamp(vec2(_GLF_FUZZED((+ -2971.1002)), (normalize(vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED((+ -2971.1002)), (normalize(vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED((+ -2971.1002)), _GLF_IDENTITY((normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-654.019, 480.247)) : (normalize(vec2(1.0, 1.0)))))[1]))), vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED((vec2(9149.2313, -6660.8995).g * _GLF_IDENTITY(-9.5, min(-9.5, -9.5)))), (_GLF_IDENTITY(_GLF_FUZZED((vec2(9149.2313, -6660.8995).g * _GLF_IDENTITY(-9.5, min(-9.5, -9.5)))), (false ? _GLF_FUZZED(radians(3.9)) : _GLF_FUZZED((vec2(9149.2313, -6660.8995).g * _GLF_IDENTITY(-9.5, min(-9.5, -9.5))))))) * 1.0)), bvec2(true, false)))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) + 0.0), 0.0, 1.0, 1.0, cos(0.0), sqrt(0.0))), (true ? float(mat3(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, sin(0.0), 0.0, 1.0, 1.0, cos(0.0), sqrt(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) : _GLF_FUZZED(151.810)))))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0)))) - vec3(0.0, 0.0, 0.0))), vec3(vec4(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (0.0) - 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4333.0759)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))), mix(vec3(_GLF_FUZZED(-4.8), (vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))[1], _GLF_FUZZED(-62.90)), vec3((vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))[0], _GLF_FUZZED(6815.4165), (vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))[2]), bvec3(true, false, true))), vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))), vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))), mix(vec3((vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))[0], (vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY((sqrt(0.0)), (true ? _GLF_IDENTITY((sqrt(0.0)), _GLF_IDENTITY(float(mat2x3((sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), min(float(mat2x3((sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x3((sqrt(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(-49.26))) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(_GLF_IDENTITY(mat2(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0, 0.0), (mat2(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) / 1.0))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))[1], (vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0))))[2]), vec3(_GLF_FUZZED((+ 8260.7261)), _GLF_FUZZED(-6699.7437), _GLF_FUZZED(-8168.4492)), _GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))) - vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0)))), mix(vec3(_GLF_FUZZED(-1515.0944), _GLF_IDENTITY(_GLF_FUZZED(-413.839), float(mat2x4(_GLF_FUZZED(-413.839), sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_FUZZED(-0.4)), vec3(((vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat3x2(sqrt(0.0), 1.0, 1.0, determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), 1.0, 1.0), transpose(transpose(mat3x2(sqrt(0.0), 1.0, 1.0, determinant(mat2(1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), 1.0, 1.0)))))), (sqrt(0.0)) * determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.7)), float(0.0), bool(true))))), 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), vec3(1.0))), vec3(1.0))), vec3(1.0))), _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat2x3(sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0), (mat2x3(sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 0.0)))), cos(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(1.0)))) - vec3(0.0, 0.0, 0.0))[0], ((vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED((-4005.7949 / 31.39)), _GLF_FUZZED(-69.65)), vec3(_GLF_FUZZED(-8197.2687), (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(false, true, true))), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), max(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))))) * mat2(1.0)))) - vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY(((vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(1.0, 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(mat2x4(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), bool(true))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0))))))) - vec3(0.0, 0.0, 0.0))[2], min(((_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED((-42.48 / -8430.3179))), bool(false)))))), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(0.0)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED((-42.48 / -8430.3179))), bool(false))))))))) - vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0))[2], ((vec3(_GLF_IDENTITY(mat2x4(vec3(1.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * determinant(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0))), cos(sin(0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(vec3(1.0), sqrt(0.0), cos(sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0)))))))) * mat2(1.0)))) - vec3(0.0, 0.0, 0.0))[2]))), bvec3(true, true, true))))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 1u))) + subgroup_local_id), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 1u))) + subgroup_local_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ((0 ^ 0) & 71989) ^ (0))], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(-3.9), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat3((injectionSwitch)[1], 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(float(mat3((injectionSwitch)[1], 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)))), min(float(mat3((injectionSwitch)[1], 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)))), float(mat3((injectionSwitch)[1], 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(-5114.1161)))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0), clamp(vec3(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0), vec3(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0), vec3(_GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)], min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 0.0))), (vec3((injectionSwitch)[1], 1.0, 0.0)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))))), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, false, false)), bool(bvec2(bool(bvec4(true, true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))), (injectionSwitch.x < injectionSwitch.y))))).x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), float(_GLF_FUZZED((-9923.1165 / 3.4))), bool(false)))) - abs(0.0))), 1.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, abs(0.0), 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, _GLF_IDENTITY(false, false || (false)), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))))), (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_base)))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))))), (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_base))))))) * (1u & 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_0.virtual_gid], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), min(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))), 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u), (uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)) | (uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))))), subgroup_size)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), min(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u), (uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 1u)) / _GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((uvec2(112250u, 116439u) * workgroup_size)) : uvec2(1u, 1u))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_DEAD(false), true, true, true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, log(1.0)), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))).x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), ! (! (! (_GLF_IDENTITY(true, true && (true)))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))))) * 1u), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-34.17, -6.8, -33.16).z)), bool(false))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true)))) || false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (0 ^ 0) | (2))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), (_GLF_IDENTITY(64, (64) - 0)) | (_GLF_IDENTITY(64, (64) - 0))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)) > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(vec4(11.53, 4112.3906, 9.8, 900.236)) : vec4(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((false), false || ((false))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, true))))), _GLF_IDENTITY(false, false || (false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-113.787), _GLF_FUZZED(-9.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), false)), true, true))))), _GLF_IDENTITY(false, false || (false))), true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
