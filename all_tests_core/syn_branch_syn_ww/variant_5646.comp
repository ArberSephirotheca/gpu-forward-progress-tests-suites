#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))), true, true)))), false, true), bvec3(bvec4(bvec3(bool(false), false, true), false))))), true && (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))), true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))), true, true))), false, true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))), true, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))), true, true)))))))) || false), false, true), bvec3(bvec4(bvec3(bool(false), false, true), false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false))), false, true), bvec3(bvec4(bvec3(bool(false), false, true), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false))), false, true), bvec3(bvec4(bvec3(bool(false), false, true), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false))), false, true), bvec3(bvec4(bvec3(bool(false), false, true), false))))) && true))))), true && (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(false), false, true), bvec3(bvec4(bvec3(bool(false), false, true), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bool(false), false, true), false)))))))))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), float(_GLF_FUZZED(-64.68)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((2.1 * -557.282))), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), (false ? _GLF_FUZZED(3961.9680) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-69.92 + -3852.9157))), float(1.0), bool(true))), 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + _GLF_IDENTITY((1.0), clamp((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0), (1.0)))), max(1.0, 1.0))))))) * vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))))), 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)), (false ? _GLF_FUZZED(vec3(-2.6, 3466.3965, 9.8)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + _GLF_IDENTITY((1.0), clamp((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0), (1.0)))), max(1.0, 1.0))))))), max((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + _GLF_IDENTITY((1.0), clamp((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0), (1.0)))), max(1.0, 1.0))))))), (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + _GLF_IDENTITY((1.0), clamp((_GLF_IDENTITY(1.0, max(1.0, 1.0))), (1.0), (1.0)))), max(1.0, 1.0))))))))) * vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))), clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.1))))), 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))))) > injectionSwitch.y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), float(_GLF_FUZZED(-64.68)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), max(1.0, 1.0))))))) * _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(vec3(vec4(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 0.0)), vec3(1.0, 1.0, 1.0) * (vec3(vec4(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), 0.0))))), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-989.307), _GLF_FUZZED(1267.1074), (vec3(1.0, 1.0, 1.0))[2]), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(4.3)), bvec3(true, true, false)))) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec3(-73.35, 0.4, -3649.9553)) : vec3(1.0, 1.0, 1.0))), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), mix(float(_GLF_FUZZED(96.97)), float(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0))), bool(_GLF_IDENTITY(true, (true) && true)))), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), float(_GLF_FUZZED(-64.68)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((7.0 * (5.5 / -390.467)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), min(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), max(1.0, 1.0))))), mix(vec3((max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), min(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), max(1.0, 1.0))))))[0], (max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), min(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), max(1.0, 1.0))))))[1], _GLF_FUZZED(17.30)), vec3(_GLF_FUZZED(-66.02), _GLF_FUZZED(12.68), (max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), min(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), max(1.0, 1.0))))))[2]), bvec3(false, false, true))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), max(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (false ? _GLF_FUZZED(-1.0) : float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0))))))))), float(_GLF_FUZZED(-125.690)), bool(false)))), 1.0)), (_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (false ? _GLF_FUZZED(-1.0) : float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0))))))))), float(_GLF_FUZZED(-125.690)), bool(false)))), 1.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (false ? _GLF_FUZZED(-1.0) : float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0))))))))), float(_GLF_FUZZED(-125.690)), bool(false)))), 1.0))))) / vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(390.182))), 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), _GLF_IDENTITY(bool(true), false || (bool(true))))), 1.0)))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), max(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (false ? _GLF_FUZZED(-1.0) : float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0))))))))), float(_GLF_FUZZED(-125.690)), bool(false)))), 1.0)), (_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (false ? _GLF_FUZZED(-1.0) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0))))))) / 1.0)))), float(_GLF_FUZZED(-125.690)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))), 1.0)), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (normalize(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0)))))), (false ? _GLF_FUZZED(-1.0) : float(_GLF_IDENTITY(vec3(1.0, 0.0, cos(tan(0.0))), mat3(1.0) * (vec3(1.0, 0.0, cos(tan(0.0))))))))), float(_GLF_FUZZED(-125.690)), bool(false)))), 1.0))))) / vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(mat3x2(normalize(vec3(1.0, 1.0, 1.0)), determinant(mat2(0.0, 0.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec3(0.0, sin(0.0), 1.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec3(0.0, sin(0.0), 1.0))), 0.0))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) * 1.0) : _GLF_FUZZED(390.182))), 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), _GLF_IDENTITY(bool(true), false || (bool(true))))), 1.0)))))) > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), clamp(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(intBitsToFloat(ivec3(59780, 26431, 76892))) : vec3(1.0, 1.0, 1.0)))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))), clamp(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))), _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))), vec3(mat4x2(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0, log(1.0)))), vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(intBitsToFloat(ivec3(59780, 26431, 76892))) : vec3(1.0, 1.0, 1.0)))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y)), bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), 1.0)))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y)) ? _GLF_FUZZED(intBitsToFloat(ivec3(59780, 26431, 76892))) : vec3(1.0, 1.0, 1.0)))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y)), true, true))), false, true)))))))) || false))), false || (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), float(_GLF_FUZZED(-64.68)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true))))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0)))))))))) / 1.0)))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0))), (false ? _GLF_FUZZED(vec3(-0.1, 491.124, -8.3)) : _GLF_IDENTITY(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true)), float(mat3(mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), _GLF_IDENTITY(max(1.0, 1.0), _GLF_IDENTITY(float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0))), min(float(mat3x2(max(1.0, 1.0), 0.0, exp(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, 1.0, sin(0.0))), float(mat3x2(max(1.0, 1.0), 0.0, exp(0.0), 0.0, 1.0, sin(0.0)))))))))) / 1.0)))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))))) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0), (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(length(vec3(-95.61, 52.31, -3507.2917))))), 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(5344.2302), (normalize(vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-579.020)), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-9.3), (normalize(vec3(1.0, 1.0, 1.0)))[2]), _GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), true)), false))))))))), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(9.3)), float(float(1.0)), bool(true))), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true)) : _GLF_FUZZED(7.4)))), 1.0)))))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) * 1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(sqrt(0.0) + (1.0), max(_GLF_IDENTITY(sqrt(0.0) + (1.0), (false ? _GLF_FUZZED(-840.614) : sqrt(0.0) + (1.0))), sqrt(0.0) + (1.0)))), max(1.0, 1.0))))))) * vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(9.3)), float(float(1.0)), bool(true))), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.1) : 1.0)), sqrt(0.0) + (1.0)), max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0)), (false ? _GLF_FUZZED(-162.010) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y)))), true, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))) / sqrt(1.0)), 1.0)), 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))), vec3(mat2x4(max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, cos(0.0)))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), _GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(9.3)), float(float(1.0)), bool(true))), bool(true))), 1.0)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-5.1), (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED(-40.12), _GLF_FUZZED(-43.74)), bvec3(true, false, false)))), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), ((_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), max(1.0, 1.0))))))) * vec3(1.0, 1.0, 1.0)) / vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true))), 1.0)))))) > injectionSwitch.y)))), true, false, true))))))))) || false)))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), bvec3(bvec3(bvec3(false, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, true && (true)) && (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), false)))), ! (! (bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), false)))))))))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))) || false)))))), ! (! (! (_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))))))))) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))) | (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((~ subgroup_size)))), 1u)))).x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), clamp(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, true, false)), bool(bvec2(bool(bvec4(! (! (false)), false, true, false)), false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 1.0))), injectionSwitch.y)) : _GLF_FUZZED(398.818)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), min(uvec2(subgroup_id * subgroup_size, 1u), uvec2(subgroup_id * subgroup_size, 1u)))), (uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 1u), min(uvec2(subgroup_id * subgroup_size, 1u), uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(num_workgroup)))))))) - 0u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, subgroup_id)), 0u + (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, 0u | (0u)) ^ (subgroup_id)), subgroup_id, subgroup_id)), 0u + (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id, subgroup_id)), 0u + (subgroup_id)) * subgroup_size) - 0u)) | _GLF_IDENTITY(0u, (0u) << 0u)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 | (1))), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))))))) / 1), ~ (~ (1))))) / 1u))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) - 0)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(160186u, max(160186u, 160186u))) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))))))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) / 1, ((~ (1)) / 1) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) | ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ (1)) / 1)), min((_GLF_IDENTITY(~ (1), (~ (1)) / 1)), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))) | 0)) / 1)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 1 * (1)))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | (_GLF_IDENTITY((~ (1)), int(int((~ (1))))))))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findMSB((-30139 - 8923))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0)), ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))) | ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))))))) / 1u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | (_GLF_IDENTITY((~ (1)), int(int((~ (1))))))))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findMSB((-30139 - 8923))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0)), ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))) | ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))))))) / 1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | (_GLF_IDENTITY((~ (1)), int(int((~ (1))))))))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findMSB((-30139 - 8923))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0)), ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))) | ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))))))) / 1u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | (_GLF_IDENTITY((~ (1)), int(int((~ (1))))))))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findMSB((-30139 - 8923))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0)), ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))) | ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))))))) / 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), clamp(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | (_GLF_IDENTITY((~ (1)), int(int((~ (1))))))))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(findMSB((-30139 - 8923))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) / 1u), (false ? _GLF_FUZZED(160186u) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0)), ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))) | ((~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec4((1), 1, 1, 1)))) << 0))))))) / 1u)))))))))))))), (97496u & 0u), 0u))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), min(1, 1))), uint(_GLF_IDENTITY(1, min(1, 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))), uint(uvec3(~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, ~ (~ (1))))) | (uint(1)), min((uint(_GLF_IDENTITY(1, ~ (~ (1))))) | (uint(1)), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) | (uint(1)))))), 1u, 0u))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true))
  {
   int i = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0));
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bool(_GLF_DEAD(false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))) || false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) && true)) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), false, true)), true && (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true))))))), true)))))))))))), false, true)))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true))) || false))))))))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))) && true))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)))))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))), false, true)))))))), false, false, true))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
