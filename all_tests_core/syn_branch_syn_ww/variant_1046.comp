#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 uvec2 _f0;
 uint num_workgroup;
 mat4 _f1;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat2x4 _f1;
 bvec3 _f2;
 mat2 _f3;
 vec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 uint _f0;
 vec2 _f1;
 _GLF_struct_2 _f2;
 float _f3;
 uvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false))))))), false), true, false)))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, false))))))), false), true, false)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true)))))))))))), true, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true, false))), true)))))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false))))), bool(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true)))))))))))), true, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-57.67) : _GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)))) > injectionSwitch.y), false), true, false))), true)))))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false)))))))) && true))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(vec2(607.688, 458.059).g)), bool(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), true, true)))))))))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), false, false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), false, false))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(1.0))) * (injectionSwitch.y))), false), true, _GLF_IDENTITY(false, (false) || false))), true)), false, false))))), true), true)))))))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec4(bvec2(bool(bool(false)), false), true, true)))))))))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), false, false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), false, false))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, _GLF_IDENTITY(false, (false) || false))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(1.0))) * (injectionSwitch.y))), false), true, _GLF_IDENTITY(false, (false) || false))), true)), false, false))))), true), true)))))))))), true, false))) && true)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), ! (! (! (! (bool(_GLF_DEAD(false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), ! (! (! (! (bool(_GLF_DEAD(false))))))))))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), ! (! (! (! (bool(_GLF_DEAD(false))))))))))))), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7419.0689))) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5375.8200)), float(0.0), bool(true))), 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), exp(0.0), tan(0.0), 0.0, 0.0, length(0.0), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat2(1.0))) * mat2(1.0)))), 0.0)), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), mix(float(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(1730.2146)), bool(false))), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0))))), exp(0.0), tan(0.0), 0.0, 0.0, length(0.0), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(vec3(_GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), float(_GLF_FUZZED(620.091)), bool(false))), 0.0, 1.0))))), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (mat2(1.0, 0.0, 0.0, 1.0)) * mat2(1.0))) * mat2(1.0)))), 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (determinant(mat2(0.0, 0.0, 1.0, 0.0))) - 0.0), (_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (determinant(mat2(0.0, 0.0, 1.0, 0.0))) - 0.0)) - 0.0), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false), true))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0)))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), vec2(mat2(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), 1.0, 1.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), bvec2(true, false))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))), (! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))), (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), clamp(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))))), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), clamp(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)), _GLF_IDENTITY(float(_GLF_FUZZED(2.4)), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))))), bool(false)))) / 1.0) > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.4)), bool(false))) > injectionSwitch.y)))))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.4)), bool(false))) > injectionSwitch.y))))))))))))) || false)))))))), true, true))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0), (mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y)))) && true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-12.48))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1868.1460)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0, 0.0)))))))) > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-12.48))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(1.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[1], (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[2], (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[3]), vec4((vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[0], _GLF_FUZZED(5757.7474), _GLF_FUZZED(vec3(-6.0, 7889.2776, 5.1).x), _GLF_FUZZED(3.3)), bvec4(true, false, false, false))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1868.1460)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), 0.0)), 0.0, 0.0)))))))) > injectionSwitch.y))))))) && true)), true), true, false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0), (mat3(injectionSwitch, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))), (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y)))) && true)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-12.48))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1868.1460)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), 0.0, 0.0)))))))) > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-12.48))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(1.0), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[1], (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[2], (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[3]), vec4((vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))[0], _GLF_FUZZED(5757.7474), _GLF_FUZZED(vec3(-6.0, 7889.2776, 5.1).x), _GLF_FUZZED(3.3)), bvec4(true, false, false, false))))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1868.1460)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), 0.0)), 0.0, 0.0)))))))) > injectionSwitch.y))))))) && true)), true), true, false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, true))))))))))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(false, (false) || false)))), true, true, false)))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))), false))), true)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), clamp(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + _GLF_IDENTITY((vec2(mat2(injectionSwitch, 0.0, 0.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((vec2(mat2(injectionSwitch, 0.0, 0.0)))))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), max(mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], clamp(_GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) - 0.0), (vec2(0.0, 0.0))[1], (vec2(0.0, 0.0))[1]))), vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(-186.783)), bvec2(false, false))) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(8.6), (vec2(mat2(injectionSwitch, 0.0, 0.0)))[1]), vec2((vec2(mat2(injectionSwitch, 0.0, 0.0)))[0], _GLF_FUZZED(-7029.9143)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), clamp((_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (mat2(injectionSwitch, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))))), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0)))), mix(vec2((_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0)))))[0], _GLF_FUZZED(-93.29)), vec2(_GLF_FUZZED(-6466.5321), (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0)))))[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(76.05, -4.4))))))), mat2(1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), max(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5110.8335)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)), 1.0 * (injectionSwitch.x))) - 0.0))))), (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)))) && true))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))) + (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6069.6770), _GLF_FUZZED(-4.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(1u, vec2(1.0), _GLF_struct_2(_GLF_struct_0(vec2(1.0), mat2x4(1.0), bvec3(true), mat2(1.0), vec2(1.0), ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))), mat4x2(1.0), mat4x3(1.0), _GLF_struct_1(uvec2(1u), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), clamp(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), clamp(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), clamp(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 0u)), clamp(uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u)), uint(uvec2(gl_NumWorkGroups.x, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) >> 0u)))), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), (uvec3(uvec4(gl_NumWorkGroups, 0u))) >> uvec3(0u, 0u, 0u))).x, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))), min((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | (uvec3(uvec3(gl_NumWorkGroups)))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))))) * uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(87471u) : _GLF_IDENTITY(1u, 1u * (1u)))), 1u, 1u)).x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((0u), min((0u), (0u))), (_GLF_IDENTITY((0u), min((0u), (0u)))) << 0u))) - (1u ^ 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u)).x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), 0u | (_GLF_IDENTITY((0u), min((0u), (0u))))) - (1u ^ 1u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(uvec4(uvec3(uvec3(gl_NumWorkGroups)), 0u), (true ? uvec4(uvec3(uvec3(gl_NumWorkGroups)), 0u) : _GLF_FUZZED(uvec4(89868u, 58003u, 172889u, 78054u)))))))) * uvec3(1u, 1u, 1u)).x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), min((0u), (0u))))) - (1u ^ 1u)))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))) * uvec3(1u, 1u, 1u)).x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), 0u | (_GLF_IDENTITY((0u), min((0u), (0u))))) - (1u ^ 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY((gl_NumWorkGroups.x) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_size) : ~ (0u))))), min(0u, 0u))) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> (0u ^ 0u))))), 0u ^ (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x) | _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), ((gl_NumWorkGroups.x) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 1u * (0u)))), (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), ((_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, 1u * (0u)))), (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), (_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))) ^ 0u)) << 0u), _GLF_IDENTITY((gl_NumWorkGroups.x) | _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(_GLF_IDENTITY(2u, (2u) / 1u)), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))), max(_GLF_IDENTITY((gl_NumWorkGroups.x) | _GLF_IDENTITY(0u, (0u) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) << 0u))), uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((true ? 2u : _GLF_FUZZED((111889u * subgroup_id))), ((true ? 2u : _GLF_FUZZED((111889u * subgroup_id)))) | ((true ? 2u : _GLF_FUZZED((111889u * subgroup_id))))))), uint(2u))))))) | 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))).x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))).x, 0u, 1u, 0u)))) | 0u)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(0u, 0u, 1u))))), (uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), ~ (~ (uvec3(0u, 0u, 1u)))))) - 0u)), (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))), uint(2u))), uint(2u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u))), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))), uint(2u))), uint(2u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), _GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 1u, 0u, 1u))), uint(2u))), uint(2u))))))))))) ^ 0u), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x) | _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))))))))), (gl_NumWorkGroups.x) | _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)))), (_GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))) << 0u)), 1u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u))), uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u)))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))))), 1u, 0u, 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (33217u & 0u) | (_GLF_IDENTITY(0u, (0u) | 0u)))) / 1u), 0u)), uint(uvec3(2u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(_GLF_IDENTITY(uvec3(2u, 0u, 0u), (uvec3(2u, 0u, 0u)) * uvec3(1u, 1u, 1u))), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(2u, (2u) ^ 0u), 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, _GLF_IDENTITY(0u, (0u) / (1u & 1u))))), uvec4(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), clamp(uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u)), uint(uvec3(2u, 0u, 0u))))), 1u, 0u, 0u)))))))), (_GLF_IDENTITY(0u, uint(uint(0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), max(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))))))))))), uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x) >> 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.2)), float(1.0), bool(true))))), transpose(transpose(_GLF_IDENTITY((mat4(1.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-4.0, -573.174, 521.621, 368.595, 2940.6145, 9802.7186, -5133.5384, 3.8, -8.4, 8.8, 22.75, 20.52, -8.0, _GLF_IDENTITY(-377.694, (false ? _GLF_FUZZED(atan(-7.1, -6.0)) : -377.694)), -2383.6254, 562.790)), (_GLF_IDENTITY(_GLF_FUZZED(mat4(-4.0, -573.174, 521.621, 368.595, 2940.6145, 9802.7186, -5133.5384, 3.8, -8.4, 8.8, 22.75, 20.52, -8.0, -377.694, -2383.6254, 562.790)), transpose(transpose(_GLF_FUZZED(mat4(-4.0, -573.174, 521.621, 368.595, 2940.6145, 9802.7186, -5133.5384, 3.8, -8.4, 8.8, 22.75, 20.52, -8.0, -377.694, -2383.6254, 562.790)))))) / mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec4(6.9, 7.4, 4.8, 2.9))) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), float(vec3((injectionSwitch.y), log(1.0), 1.0)))) + determinant(mat2(0.0, 0.0, 0.0, 0.0))) - 0.0)) - 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : (mat4(1.0))))))) - mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(921.525) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.1) : 0.0))), float(_GLF_FUZZED(-8.6)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(7.8, -518.418, -1811.2953, -1555.2050, -578.683, 285.792, 889.594, 96.75, 5334.7339, -5387.6887, _GLF_IDENTITY(496.197, clamp(496.197, 496.197, 496.197)), -1.9, 2.3, -5.1, -63.31, -7.9)))))))), 1.0, uvec3(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) && true))) || false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(fma(-603.748, -2.8, -8.3)), float(mat4x3(_GLF_FUZZED(fma(-603.748, -2.8, -8.3)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(false), true, false))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || (bool(bvec3(_GLF_DEAD(false), true, false))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))) && true), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))))))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) || false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || false), (bool(true && (false))) && true))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || false), (bool(true && (false))) && true))))))) || false, ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || false), (bool(true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), (! (bool((false)))) && true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), (! (bool((false)))) && true))))), (! (bool(_GLF_IDENTITY(bool((false)), ! (_GLF_IDENTITY(! (bool((false))), (! (bool((false)))) && true)))))) && true)))))) && true))))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false, ! (! (false))) || ((! (false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)), 0 | (int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED(2280.0911), _GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true))), ((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0))[1]), vec2(_GLF_IDENTITY((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(float(false)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), (false ? _GLF_FUZZED(5975.2542) : _GLF_FUZZED(float(false))))), float(_GLF_FUZZED(6067.4883)), bool(false)))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)))[0], ((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false))), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * _GLF_IDENTITY(-146.313, float(mat2x3(_GLF_IDENTITY(-146.313, min(_GLF_IDENTITY(-146.313, clamp(-146.313, -146.313, -146.313)), _GLF_IDENTITY(-146.313, (true ? -146.313 : _GLF_FUZZED(-9861.3808))))), tan(0.0), 1.0, 0.0, 0.0, 0.0))))), (injectionSwitch)[1]), bvec2(false, true)))[0]) - 0.0), _GLF_FUZZED(-72.71)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), (false ? _GLF_FUZZED(injectionSwitch) : mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)))), (_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), clamp(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)), (false ? _GLF_FUZZED(injectionSwitch) : mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true)))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, max(0, 0)), 0, 1)))], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true))))) * mat2(1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-416.531)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(false))), (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], _GLF_FUZZED(float(false)))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED((-923.042 * -146.313)), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(568.377, (false ? _GLF_FUZZED(5.2) : 568.377))))) : _GLF_FUZZED(-416.531)), max(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false, true))) ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), clamp((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)))), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), (false ? _GLF_FUZZED(5912.3038) : _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), ((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531))) + 0.0))), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), (false ? _GLF_FUZZED(5912.3038) : _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), ((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531))) + 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), (false ? _GLF_FUZZED(5912.3038) : _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), ((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531))) + 0.0))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), (false ? _GLF_FUZZED(5912.3038) : _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531)), ((true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(568.377))) : _GLF_FUZZED(-416.531))) + 0.0))))))))))), true, true, false))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), true, false))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-482.128)), bool(false)))) * 1.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-27.40), (injectionSwitch)[_GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, (1 & 1))), min(int(ivec2(1, (1 & 1))), int(ivec2(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(_GLF_IDENTITY(ivec4(~ (~ (1)), 1, 0, 0), (ivec4(~ (~ (1)), 1, 0, 0)) + ivec4(0, 0, 0, 0))))))) & 1)))))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), 0 ^ (int(1))))))]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(true, false, false)))), false || (bool(bool(bool(bvec3(true, false, false)))))))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(4.9, 1.0 * (4.9)), 7302.5385)))), mix(vec2(_GLF_FUZZED(-8.3), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (injectionSwitch))), (injectionSwitch)))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(749.536)), bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, abs(1.0), 1.0))).y)))))))))[_GLF_IDENTITY(0, 1 * (0))], _GLF_FUZZED(_GLF_IDENTITY(-7026.2206, max(_GLF_IDENTITY(_GLF_IDENTITY(-7026.2206, 0.0 + (-7026.2206)), mix(float(_GLF_FUZZED(-880.973)), float(-7026.2206), bool(true))), _GLF_IDENTITY(-7026.2206, _GLF_IDENTITY(min(-7026.2206, -7026.2206), min(_GLF_IDENTITY(min(-7026.2206, -7026.2206), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(min(-7026.2206, -7026.2206), (min(-7026.2206, -7026.2206)) - 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-86.46)), bool(false)))) - 0.0))), min(float(mat3x2(_GLF_IDENTITY(min(-7026.2206, _GLF_IDENTITY(-7026.2206, min(-7026.2206, -7026.2206))), (min(-7026.2206, -7026.2206)) - 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(min(-7026.2206, -7026.2206), (min(-7026.2206, -7026.2206)) - 0.0), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(-7026.2206, min(-7026.2206, -7026.2206)), -7026.2206)))))))), bvec2(true, false))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id) * 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) * 1u)))) ^ 0u))), ~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) << uvec2(0u, 0u))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uvec2(workgroup_id, 1u), (uvec2(workgroup_id, 1u)) << uvec2(0u, 0u))))))) << 0u), 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, 0u), ~ (~ (uvec3(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_size * workgroup_id, 0u, 0u), ~ (~ (uvec3(workgroup_size * workgroup_id, 0u, 0u))))))) * 1u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) >> 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))))) * 1u))))))))), workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec3(bool(bvec4(! (false), false, false, true)), false, true)))))))), ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec3(true, false, false))))), (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) < injectionSwitch.y)), false))))))) || false), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4975.9157)), vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false), true, true)), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true), _GLF_IDENTITY((false), false || ((false))) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false))), true, false))), bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, false))), bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false))), true, false))), bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, false))), bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6837.0844), _GLF_FUZZED(-1.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))) && true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_id)))) + 0u), uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_id)))) + 0u)))) + subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u) + subgroup_local_id), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u) + subgroup_local_id), ~ (~ (uint(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u) + subgroup_local_id))))))), uint(uvec3(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_id))), (workgroup_base + subgroup_base) + 0u) + subgroup_local_id), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u) + subgroup_local_id) - 0u))))), 0u, 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), min(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))) + subgroup_base, workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), min(workgroup_base + subgroup_base, workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base, subgroup_base))))))) ^ 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << (0u ^ 0u))], uint(1), _GLF_IDENTITY(4, (4) - 0), 64, 4);
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), max(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, max(2, 2)))), _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)), 2))), 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(uvec2(137522u, 105113u)) : _GLF_IDENTITY(uvec2(uint(2), 1u), (uvec2(uint(2), 1u)) << uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))))) << 0u)) | (max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))))))) | 0u))))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(uvec2(137522u, 105113u)) : _GLF_IDENTITY(uvec2(uint(2), 1u), (uvec2(uint(2), 1u)) << uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))))) << 0u)) | (max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))))))) | 0u)))))) | ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(uvec2(137522u, 105113u)) : _GLF_IDENTITY(uvec2(uint(2), 1u), (uvec2(uint(2), 1u)) << uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))), (max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))))) << 0u)) | (max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id))))))) | 0u))))))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))) ? _GLF_FUZZED(uvec2(137522u, 105113u)) : _GLF_IDENTITY(uvec2(uint(2), 1u), (uvec2(uint(2), 1u)) << uvec2(0u, 0u)))) | uvec2(0u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)), 2))), 1u), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(uvec2(137522u, 105113u)) : _GLF_IDENTITY(uvec2(uint(2), 1u), (uvec2(uint(2), 1u)) << uvec2(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_id)))))))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(uvec2(137522u, 105113u)) : _GLF_IDENTITY(uvec2(uint(2), 1u), (uvec2(uint(2), 1u)) << uvec2(0u, 0u)))) | uvec2(0u, 0u)))))))), 4, 64, 4);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3860.9937), _GLF_FUZZED(291.916)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3860.9937), _GLF_FUZZED(291.916)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).y)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(40448u)), _GLF_FUZZED(-652.432)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(682.209)), bool(false)))))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y)), false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(mat3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat2x3(vec2(mat3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))), vec2(mat3(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-232.774)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true))))))))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (-6.0) / 1.0))), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), ! (! (bool(bvec2((false), true))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), false), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0)))), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(tan(vec2(0.0, 0.0)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7699.7010)), vec2(_GLF_FUZZED(957.269), (injectionSwitch)[1]), bvec2(false, true))).y)), false), true, true)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-59.26, 4.8)) : injectionSwitch)), vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 1.0), (true ? mat2(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2(-8952.3663, 8998.1344, 846.767, 498.627))))), min(float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 1.0), (true ? mat2(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2(-8952.3663, 8998.1344, 846.767, 498.627))))), float(_GLF_IDENTITY(mat2(0.0, 0.0, 1.0, 1.0), (true ? mat2(0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2(-8952.3663, 8998.1344, 846.767, 498.627)))))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(486.735) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0)))), (mat2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(486.735) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) + 0.0))))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.8)), float(0.0), bool(true)))))), exp(0.0), 0.0, 0.0))).x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), false), false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(float(true))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false), true, true)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(109.943)))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))).x), float(_GLF_FUZZED(-6.0)), bool(false))), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false), true, true)), false), false))))))), true)))))))))) && true))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(radians(vec2(1.9, -1.0))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec2(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(length(0.0)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(length(0.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(length(0.0))))) && true))))))))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
}
