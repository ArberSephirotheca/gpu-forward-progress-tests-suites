#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(84.90)), vec2(_GLF_FUZZED(-938.465), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat4(1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), mix(float(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), float(_GLF_FUZZED(-3.3)), bool(false)))), 0.0))))[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9070.0732)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), true, true, false)))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), true, true, false)))))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / sqrt(determinant(mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true, false, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-55.87, -8752.0995)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), ! (! ((false) && true))), true, false, true))))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true, false, true)))))))))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y))))) && true), false, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) && true)), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! (! ((false) || false)), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), (((false) || false)) && true), false || (! ((false) || false)))))))), ! (! (_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! ((false) || false)), ((! ((false) || false))) || false), false || (! (_GLF_IDENTITY(! ((false) || false), false || (! ((_GLF_IDENTITY(false, ! (! (false)))) || false)))))))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec4(gl_WorkGroupID.x, 0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_DEAD(false))), false, false), bvec3(bvec3(bvec3((! (_GLF_DEAD(false))), false, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(45.03) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 1u, 0u, 0u)))), clamp(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), _GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u ^ 0u)) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size)))))))), 1u * (((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(56886) : 1)))), 1u, 0u), (uvec3(subgroup_local_id + 1, 1u, 0u)) << uvec3(0u, 0u, 0u))))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), (bool(bvec4(! (false), false, false, true))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), false, true))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-1.1, -1.3)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), bool(bool((bool(bool(false)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(ivec2(_GLF_IDENTITY(4, ~ (~ (4))), 1)))) | (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) - 0) : _GLF_FUZZED(48964))), 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), clamp(~ (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(48964)), (true ? 4 : _GLF_FUZZED(48964)))))))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(48964)), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(48964)), 1, 0), max(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(48964)), 1, 0), ivec3((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(48964)), 1, 0))))), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))), (((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)))) << 0) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)), ((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))), _GLF_IDENTITY(4, (4) | (4)))), (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), (true ? (0) | (0) : _GLF_FUZZED(71069)))), 0, 0)) - ivec4(0, 0, 0, 0))))), ivec4(4, 1, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(48964))), 1, 0, 1)), clamp(~ (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(48964)), (true ? 4 : _GLF_FUZZED(48964)))))))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 4 : _GLF_FUZZED(48964)), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))), (((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true))))), false, false))))))) ? 4 : _GLF_FUZZED(48964)))) << 0) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)), ((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) | (4)))), (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(0, 0, 0, 0), (true ? _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) + ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-57937, 31167, -97774, 81510)))))), (ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0)) - ivec4(0, 0, 0, 0))))), ivec4(4, 1, 0, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, max(1, 1)), 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-20393) : 0)), 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), clamp(~ (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), 0 ^ ((true ? 4 : _GLF_FUZZED(48964)))), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(48964)), (true ? 4 : _GLF_FUZZED(48964)))))))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 4 : _GLF_FUZZED(48964)), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))), (((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)))) << 0) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)), ((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))), _GLF_IDENTITY(4, (4) | (4)))), (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0)) - ivec4(0, 0, 0, 0))))), ivec4(4, 1, 0, 1)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(48964), (true ? 4 : _GLF_FUZZED(48964)) << 0))), 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), clamp(~ (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(48964)), (true ? 4 : _GLF_FUZZED(48964)))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(48964)), (true ? 4 : _GLF_FUZZED(48964))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) >> 0), 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 4 : _GLF_FUZZED(48964)), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))), (((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)))) << 0) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) ? 4 : _GLF_FUZZED(_GLF_IDENTITY(48964, 1 * (48964))))) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))), _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(true, bool(bool(true))) ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0)) - ivec4(0, 0, 0, 0))))), ivec4(4, 1, 0, 1)))), max(int(_GLF_IDENTITY(ivec4(4, 1, 0, _GLF_IDENTITY(1, int(ivec2(1, 1)))), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), clamp(~ (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(48964)), (true ? 4 : _GLF_FUZZED(48964)))))))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 4 : _GLF_FUZZED(48964)), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))), (((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)))) << 0) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))) - 0, (((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))) - 0) >> 0))), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 1, _GLF_IDENTITY(1, 0 | (1)), 0))), _GLF_IDENTITY(4, (4) | (4)))), (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(48964), (true ? 4 : _GLF_FUZZED(48964)) | (true ? 4 : _GLF_FUZZED(48964))))), 1, 0, 1)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0)) - ivec4(0, 0, 0, 0))))), ivec4(4, 1, 0, 1)))), int(_GLF_IDENTITY(ivec4(4, 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), clamp(~ (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), ((true ? 4 : _GLF_FUZZED(48964))) >> 0), ~ (~ (_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(48964)), min((true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(48964, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (48964)))), (true ? _GLF_IDENTITY(4, (4) / 1) : _GLF_FUZZED(48964)))))))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)), ~ (ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, (true) && true) ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? 4 : _GLF_FUZZED(48964)), _GLF_IDENTITY(((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))), (((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false) ? 4 : _GLF_FUZZED(48964)))) << 0) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))), ivec4(0, 0, 0, 0) + (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964)), ((_GLF_IDENTITY(true, ! (! (true))) ? 4 : _GLF_FUZZED(48964))) - 0)), 1, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0))), _GLF_IDENTITY(4, (4) | (4)))), (true ? 4 : _GLF_FUZZED(48964))), 1, 0, 1)) >> _GLF_IDENTITY(ivec4(0, 0, 0, 0), _GLF_IDENTITY((ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0)), ~ (~ ((ivec4(0, _GLF_IDENTITY(0, (0) | (0)), 0, 0))))) - ivec4(0, 0, 0, 0))))), ivec4(4, 1, 0, 1)))))) : _GLF_FUZZED(-80689)))))))), _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(64, 1, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), ((64)) >> 0)), 1, 0))))), int(ivec3(int(_GLF_IDENTITY(ivec3(64, 1, 0), ivec3(ivec3(ivec3(64, 1, 0))))), 0, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))))))))))), _GLF_IDENTITY(4, (4) << 0));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true, true))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.3)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7672.2916)))), bool(true))) < injectionSwitch.y)), false))) && true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), false))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, log(1.0), 0.0)), float(float(float(mat2(injectionSwitch.x, 0.0, log(1.0), 0.0)))))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat3(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0), 1.0, determinant(mat2(log(1.0), 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0))).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat3(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0), 1.0, determinant(mat2(log(1.0), 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), determinant(mat3(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0), 1.0, determinant(mat2(log(1.0), 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, sin(0.0), 1.0))).x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
