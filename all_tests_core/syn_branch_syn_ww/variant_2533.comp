#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(914.718)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_IDENTITY(false, ! (! (false))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)), true))), true))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(318.951, 9.8)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(318.951, 9.8)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(318.951, 9.8)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)))), true))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)))), false, false)), (bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y)))) || false))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, true, true)), true), bvec2(bvec3(bvec2(bool(bvec3(false, true, true)), true), false)))))))))))), true, false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), false)))), false, false))) && true)), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(90.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(90.30), (_GLF_FUZZED(90.30)) + 0.0), _GLF_FUZZED(_GLF_IDENTITY(90.30, max(90.30, 90.30))), _GLF_FUZZED(90.30))), _GLF_FUZZED(-626.178)), bvec2(false, false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(90.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(90.30), (_GLF_FUZZED(90.30)) + 0.0), _GLF_FUZZED(_GLF_IDENTITY(90.30, max(90.30, 90.30))), _GLF_FUZZED(90.30))), _GLF_FUZZED(-626.178)), bvec2(false, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(90.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(90.30), (_GLF_FUZZED(90.30)) + 0.0), _GLF_FUZZED(_GLF_IDENTITY(90.30, max(90.30, 90.30))), _GLF_FUZZED(90.30))), _GLF_FUZZED(-626.178)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(90.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(90.30), (_GLF_FUZZED(90.30)) + 0.0), _GLF_FUZZED(_GLF_IDENTITY(90.30, max(90.30, 90.30))), _GLF_FUZZED(90.30))), _GLF_FUZZED(-626.178)), bvec2(false, false))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(90.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(90.30), (_GLF_FUZZED(90.30)) + 0.0), _GLF_FUZZED(_GLF_IDENTITY(90.30, max(90.30, 90.30))), _GLF_FUZZED(90.30))), _GLF_FUZZED(-626.178)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(90.30), clamp(_GLF_IDENTITY(_GLF_FUZZED(90.30), (_GLF_FUZZED(90.30)) + 0.0), _GLF_FUZZED(_GLF_IDENTITY(90.30, max(90.30, 90.30))), _GLF_FUZZED(90.30))), _GLF_FUZZED(-626.178)), bvec2(false, false))).x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true)))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(2.7, 35.97)), vec2(_GLF_IDENTITY(mat4(_GLF_FUZZED(vec2(2.7, 35.97)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0))) + 0.0), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2885.7277)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(0.0, abs(1.0), 1.0, 0.0, cos(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)))))))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(348.885)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))))), bool(true))), 0.0, abs(0.0), 1.0))), (false ? _GLF_FUZZED(871.878) : _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(cos(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(vec3(cos(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, abs(0.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)))))))), abs(0.0), 1.0), vec4(0.0, 0.0, abs(0.0), 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(348.885)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3(mat2(1.0)), (mat3(mat2(1.0))) * mat3(1.0)))))))), bool(true))), 0.0, abs(0.0), 1.0))))) : _GLF_FUZZED(_GLF_IDENTITY(floor(318.997), clamp(_GLF_IDENTITY(floor(318.997), (floor(318.997)) * 1.0), floor(318.997), floor(318.997)))))), 1.0), (mat4(_GLF_FUZZED(vec2(2.7, 35.97)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-64.63)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), (float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0))) + 0.0), _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), max(float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.1) : 0.0))), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0))))))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * 1.0)) - 0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), max(float(float(0.0)), float(float(0.0)))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(-5.4)))) + 0.0), 0.0))), 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), max(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), (mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))) * mat4(1.0))))), vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), min(0.0, 0.0)), abs(0.0), 1.0)), dot(vec4(0.0, 0.0, abs(0.0), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, abs(0.0), 1.0), (false ? _GLF_FUZZED((vec4(_GLF_IDENTITY(-279.838, min(_GLF_IDENTITY(-279.838, mix(float(_GLF_FUZZED(70.19)), float(-279.838), bool(true))), -279.838)), 1.6, 5967.5659, 7731.4784) + radians(vec4(725.075, -3634.1560, _GLF_IDENTITY(-0.3, (false ? _GLF_FUZZED(-34.61) : -0.3)), 105.417)))) : _GLF_IDENTITY(vec4(0.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) * round(length(normalize(1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))), (vec4(0.0, 0.0, abs(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))), 1.0)) * mat4(1.0)))) : injectionSwitch)).x > injectionSwitch.y))), true, false)))), false)))), false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(627.391) : injectionSwitch.y))) - 0.0)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), true, false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (_GLF_IDENTITY(gl_NumWorkGroups[0], uint(uint(gl_NumWorkGroups[0])))) << 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) << uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))))) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), (! ((! (_GLF_DEAD(false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) / 1u, clamp((gl_WorkGroupID.x) / 1u, _GLF_IDENTITY((gl_WorkGroupID.x) / 1u, ((gl_WorkGroupID.x) / 1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u, ((gl_WorkGroupID.x) / 1u) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bool(false)))), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id))), 0u + (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))) | 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(6.2, 742.801, 7486.8077, 945.449) * injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), clamp(~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)), min((_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)))) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))) | ((subgroup_base))), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))))) : _GLF_FUZZED(workgroup_size)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), _GLF_IDENTITY(clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base)))), max(clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base)))), clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))))))) : _GLF_FUZZED(workgroup_size)), clamp((true ? _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base)), ((_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))) | ((_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))))) : _GLF_FUZZED(workgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))))) : _GLF_FUZZED(workgroup_size)), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), max((subgroup_base), (subgroup_base))), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))))) : _GLF_FUZZED(workgroup_size))))) | ((true ? _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), clamp(~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) + 0u)) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))), 0u ^ ((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), 1u, 0u), max(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))), 0u ^ ((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), 1u, 0u), uvec3(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))), 0u ^ ((_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))))), 1u, 0u))))), _GLF_IDENTITY(((subgroup_base)) + 0u, (((subgroup_base)) + 0u) / 1u))) | ((subgroup_base))), ~ _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_base))), ((subgroup_base)) + 0u)) | ((subgroup_base))))) : _GLF_FUZZED(workgroup_size))))), min(~ (subgroup_base), ~ (subgroup_base))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? ~ (subgroup_base) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((true ? ~ (subgroup_base) : _GLF_FUZZED(workgroup_size)), ~ (_GLF_IDENTITY(~ ((true ? ~ (subgroup_base) : _GLF_FUZZED(workgroup_size))), 0u | (~ ((true ? ~ (subgroup_base) : _GLF_FUZZED(workgroup_size))))))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0))), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)))) >> 0u), 0u)), 0u | (_GLF_IDENTITY(uint(uvec3((true ? ~ _GLF_IDENTITY((subgroup_base), ((subgroup_base)) / 1u) : _GLF_FUZZED(workgroup_size)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0u)), clamp(uint(uvec3((true ? ~ _GLF_IDENTITY((subgroup_base), max((subgroup_base), _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))))) : _GLF_FUZZED(workgroup_size)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY((true ? ~ (subgroup_base) : _GLF_FUZZED(workgroup_size)), 0u | ((true ? ~ (subgroup_base) : _GLF_FUZZED(workgroup_size)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0u)), uint(uvec3((true ? ~ (subgroup_base) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0u)))))))), min(~ (subgroup_base), ~ (subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) : _GLF_FUZZED(workgroup_size))), min(~ (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), ~ (~ (~ (subgroup_base))))))), ~ (subgroup_base))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(-0.3, -59.34, 850.423).p)), bool(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_base)))), (0u ^ (workgroup_base + subgroup_base)) | (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(atomicOr(subgroup_size, subgroup_local_id)) : _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2))) == 0, _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))))) % 2))) == 0), ! (! (true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) * 1u)) | (subgroup_local_id)), (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2))) == 0))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(0u, min(0u, 0u)))) % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u))))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u), ~ (_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u)), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, clamp(2, 2, 2)), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, clamp(2, 2, 2)), 0u)) * uvec2(1u, 1u))) : _GLF_FUZZED(uvec2(168619u, 193164u)), uvec2(0u, 0u) | (true ? ~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, clamp(2, 2, 2)), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, clamp(2, 2, 2)), 0u)) * uvec2(1u, 1u))) : _GLF_FUZZED(uvec2(168619u, 193164u))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))) % 2, _GLF_IDENTITY(0u, (0u) / 1u)), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))) % 2, _GLF_IDENTITY(0u, (0u) / 1u)), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))) % 2, _GLF_IDENTITY(0u, (0u) / 1u)), ~ (~ (uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % 2, 0u))))))))))))) == 0, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.5, 5.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) ^ 0u, (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.5, 5.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) ^ 0u)))) % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2))))), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)) % _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2)))))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)), (max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0))))) ^ 0u)) % 2))) == 0, false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.5, 5.8)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) ^ 0u)) % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u)) % _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) >> 0), ~ (~ (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (0 & ivec3(-90738, 78346, 10853).s) + (2)))))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) % 2))) == 0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)) >> 0, ((_GLF_IDENTITY(4, (4) - 0)) >> 0) / 1)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec3(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true)))))))))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), mix(float(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) / 1.0)) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(0.1, float(_GLF_IDENTITY(vec3(0.1, sqrt(0.0), 0.0), mix(vec3((vec3(0.1, sqrt(0.0), 0.0))[0], (vec3(0.1, sqrt(0.0), 0.0))[1], _GLF_FUZZED(-70.98)), vec3(_GLF_FUZZED(-580.557), _GLF_FUZZED(76.01), (vec3(0.1, sqrt(0.0), 0.0))[2]), bvec3(false, false, true))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(76.57)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), false || (bool(bool(bool(true))))))))), float(_GLF_FUZZED((-4.0 + 371.681))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) | (64)), min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) | (64)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) | (64)))), 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-2148.6632, (-2148.6632) - sin(0.0))))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * _GLF_IDENTITY((injectionSwitch[0]), 0.0 + (_GLF_IDENTITY((injectionSwitch[0]), (true ? (injectionSwitch[0]) : _GLF_FUZZED(-6.8)))))), 0.0))), injectionSwitch[1])).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * _GLF_IDENTITY((injectionSwitch[0]), 0.0 + (_GLF_IDENTITY((injectionSwitch[0]), (true ? (injectionSwitch[0]) : _GLF_FUZZED(-6.8)))))), 0.0))), injectionSwitch[1])).y), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
