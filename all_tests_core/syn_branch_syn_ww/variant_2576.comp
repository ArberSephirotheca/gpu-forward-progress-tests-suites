#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-16.96)), bool(false))))), uvec2(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(mat4x2(min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), (float(vec3(injectionSwitch.x, 1.0, 1.0))) / 1.0))), float(_GLF_FUZZED(55.17)), bool(false))), (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))), bool(true)))), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y))))), true), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y))))), true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(_GLF_IDENTITY(mat3x4((injectionSwitch.x) - 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), (true ? mat3x4((injectionSwitch.x) - 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-889.128, -7.5, 235.391, -29.05, 159.892, 5054.1078, -20.91, -7.6, -81.39, 7541.1647, 1.4, -469.997))))))), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, sqrt(1.0), 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y))))), true), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), max(1.0 * (0.0), 1.0 * (0.0))))))) < injectionSwitch.y))))), true), true))))))))) || false)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0)), (true ? _GLF_IDENTITY((injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float((injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-2638.1590)), bool(false))) : _GLF_FUZZED(976.515)))))) < injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), bool(true))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), bool(true))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y)))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y))))), ! (! (true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))) < injectionSwitch.y)))))))))))))) || false)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.9, 245.895)))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(0.0, 0.0)), 1.0 * (0.0))))) < injectionSwitch.y)))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.9, 245.895)))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(0.0, 0.0)), 1.0 * (0.0))))) < injectionSwitch.y)))))) || false))))), false, true, true))), false || (! (bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! _GLF_IDENTITY(((_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-474.252), _GLF_FUZZED(-0.7)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)).x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))))) < injectionSwitch.y) || false))))))) || false, false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (false ? _GLF_FUZZED(sqrt(6.3)) : min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-474.252), _GLF_FUZZED(-0.7)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)).x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((float(131766u)))), bool(false)))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, cos(0.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, cos(0.0)))), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), mat4x2(mat4x2(_GLF_IDENTITY(mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, cos(0.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, cos(0.0)))), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0), transpose(transpose(mat4x2(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, cos(0.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, cos(0.0)))), 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))))))))))), max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 1.0 * (0.0))))))) < injectionSwitch.y) || false))))))) || false)))), false, true, _GLF_IDENTITY(true, (true) && true)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])) | (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 0u, 0u, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 0u, 0u, 0u))) >> 0u)))), gl_WorkGroupSize[2])) | (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-89081, max(-89081, -89081))) : 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(45451)))], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) - 0u)) * (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))))))[1], max(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))[1])), gl_WorkGroupSize[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]), 1u * (max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), gl_WorkGroupSize[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u + (_GLF_IDENTITY(gl_WorkGroupSize[0], min(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) ^ 0u), gl_WorkGroupSize[0])))), _GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) + (gl_WorkGroupSize))[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))) | (gl_WorkGroupSize))[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], uint(uint(gl_WorkGroupSize[2]))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))) << 0u)) | (~ (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))))))), gl_WorkGroupSize[2]))))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]), (max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])) + 0u)), gl_WorkGroupSize[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))))[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], 1u * (gl_WorkGroupSize[1])))), gl_WorkGroupSize[2])) | (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[2])))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (false ? _GLF_FUZZED(atomicMin(subgroup_id, 189508u)) : _GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])))), _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96303) : 1))])), gl_WorkGroupSize[2]))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (false ? _GLF_FUZZED(atomicMin(subgroup_id, 189508u)) : _GLF_IDENTITY(gl_WorkGroupSize[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])))), _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-96303) : 1))])), gl_WorkGroupSize[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicMin(subgroup_id, 189508u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(atomicMin(subgroup_id, 189508u)))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], clamp(gl_WorkGroupSize[0], gl_WorkGroupSize[0], gl_WorkGroupSize[0])))), _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(-96303) : 1))])), gl_WorkGroupSize[2])))) * uvec3(1u, 1u, 1u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize[1], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[1], (true ? gl_WorkGroupSize[1] : _GLF_FUZZED((subgroup_size / subgroup_id)))))), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], _GLF_IDENTITY(max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]), (_GLF_IDENTITY(max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]), (max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])) - 0u)) * (0u ^ 1u))), gl_WorkGroupSize[2]))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[1])), gl_WorkGroupSize[2]))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[1])), (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))) | 0u), gl_WorkGroupSize[2])))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(subgroup_local_id))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (1))], max(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))) * uvec3(1u, 1u, 1u))))), uvec3(1u, 1u, 1u) * (((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))[1])), gl_WorkGroupSize[2]))) : _GLF_FUZZED(uvec3(91043u, 137894u, 46990u))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), clamp(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), gl_WorkGroupSize[2]))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))) | uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[_GLF_IDENTITY(1, 0 | (1))], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), gl_WorkGroupSize[2])))), min((~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id), min(true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id), true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id))))), gl_WorkGroupSize[1])), max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id), min(true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id), true ? _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id))))), gl_WorkGroupSize[1])), max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), clamp(((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize[2], (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize[2])))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min((uvec3(13410u, 49758u, 83962u) << uvec3(92514u, 81584u, 75099u)), uvec3(147168u, 46695u, 89993u))) : gl_WorkGroupSize))[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), clamp(((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(36638u, 129265u, 149104u))))[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))))[2]))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(1, clamp(1, 1, 1))])), gl_WorkGroupSize[2]))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))) - uvec3(0u, 0u, 0u)))))), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ (((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))) - uvec3(0u, 0u, 0u)))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))))))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u))))))))), (false ? _GLF_FUZZED(uvec3(7772u, 116841u, 10970u)) : (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), clamp(uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u, 1u, 1u)), (uvec3(uvec3(1u, 1u, 1u))) | (uvec3(158607u, 158257u, 21456u) & uvec3(0u, 0u, 0u)))))))))))) - uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 0u | (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]))))) | (_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) << uvec3(0u, 0u, 0u)))), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u), (uvec2(_GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), 1u)) >> (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), gl_WorkGroupSize[2])))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) | _GLF_IDENTITY(((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))), (((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))])))))) | (((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))))))))) | ((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) / uint(_GLF_ONE(1.0, injectionSwitch.y))), max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))))).x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (1)))], _GLF_IDENTITY(max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]), uint(uvec3(_GLF_IDENTITY(max(gl_WorkGroupSize[1], gl_WorkGroupSize[1]), ~ (~ (max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])))), 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2]))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).x, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])), gl_WorkGroupSize[2])), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(1, int(int(1)))])), gl_WorkGroupSize[2]))))).x, 1u, 1u))))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) & 152257u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) & 152257u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) & 152257u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) & 152257u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)) & 152257u)))))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))) << 0u)), ((~ (workgroup_base))) << 0u)), clamp(_GLF_IDENTITY(~ (workgroup_base), 0u ^ _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) << 0u)), _GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), max(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))) : _GLF_FUZZED(virtual_gid))) ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), uint(uint(workgroup_base)))))) << 0u)), _GLF_IDENTITY(~ (workgroup_base), 0u ^ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))), ((~ (workgroup_base))) << 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(0u, 1u * (0u)) ^ (~ (workgroup_base))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 1u, 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))))), 0u)), min(uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(0u ^ (~ (workgroup_base)), ~ (~ (0u ^ (~ (workgroup_base))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))), 0u ^ (~ (workgroup_base)))), clamp(~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), 0u ^ (~ (workgroup_base)))), ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))))) / 1u)), 0u)), uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(~ (workgroup_base), 0u ^ (~ (workgroup_base))))))), 0u)))))) >> 0u) + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(1, 1))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(1, 1)))) | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(1, 1))))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(1, 1))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(1, 1)))) | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec2(1, 1))))), 1u, 0u)))) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), ~ (~ (_GLF_IDENTITY(2, 0 + _GLF_IDENTITY((2), int(ivec2((2), 0)))))))) ^ 0)), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, (4) * 1) : _GLF_FUZZED(_GLF_IDENTITY(-82883, int(_GLF_IDENTITY(ivec3(-82883, 1, 0), (true ? _GLF_IDENTITY(ivec3(-82883, 1, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(-82883, 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(-82883, 1, 0), ivec3(ivec4(ivec3(-82883, 1, 0), 1)))), (false ? _GLF_FUZZED(ivec3(-75385, 83303, -45466)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(-82883, 1, 0), ivec3(ivec4(ivec3(-82883, 1, 0), 1)))), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(ivec3(-82883, 1, 0), ivec3(ivec4(ivec3(-82883, 1, 0), 1))))))))), max(ivec3(ivec3(_GLF_IDENTITY(ivec3(-82883, 1, 0), ivec3(_GLF_IDENTITY(ivec4(ivec3(-82883, 1, 0), 1), (ivec4(ivec3(-82883, 1, 0), 1)) << ivec4(0, 0, 0, 0)))))), ivec3(ivec3(_GLF_IDENTITY(ivec3(-82883, 1, 0), ivec3(ivec4(ivec3(-82883, 1, 0), 1)))))))), 1))) : _GLF_FUZZED(ivec3(-19825, 43334, 84150))))))))) : _GLF_FUZZED(67896))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) * 1.0))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(bool(bool(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), (bool(bool(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) ^ (_GLF_IDENTITY(0, (0) ^ 0) | 0))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(861.702, mix(float(861.702), _GLF_IDENTITY(float(_GLF_FUZZED(-910.661)), _GLF_IDENTITY(float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(float(51503u))), bool(false))))), clamp(float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0)), float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(float(_GLF_FUZZED(-910.661)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(_GLF_FUZZED(-910.661), min(_GLF_FUZZED(-910.661), _GLF_IDENTITY(_GLF_FUZZED(-910.661), float(vec4(_GLF_FUZZED(-910.661), 0.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), mix(float(float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-19.56)), bool(false))), float(mat4x2(float(_GLF_FUZZED(-910.661)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))))), bool(false))))), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(false), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bool(false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(false), true))), false, true))), true, false)))), false))))), true, true, true))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
