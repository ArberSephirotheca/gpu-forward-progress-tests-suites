#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 vec3 _f0;
 mat4 _f1;
 int _f2;
 bvec4 _f3;
 bool _f4;
 mat4x3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 bvec3 _f1;
 mat2 _f2;
 mat3x2 _f3;
 mat3x4 _f4;
 mat4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bvec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec4 _GLF_SWITCH_0_55v;
 _GLF_struct_2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 uvec3 _f1;
 mat2 _f2;
 mat3x4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
      break;
     do
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-343.014) : 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 | (0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     int i = 0;
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 48:
       while(false)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if((mat2x4(-880.082, 52.65, -39.74, -324.926, -0.1, _GLF_IDENTITY(-60.69, (-60.69) / 1.0), 367.506, -7.4) != mat2x4(-9.2, 2.2, -35.47, -9.6, _GLF_IDENTITY(-5.0, 0.0 + (_GLF_IDENTITY(-5.0, min(-5.0, -5.0)))), 6.8, -0.0, 5088.8348)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             while(_GLF_IDENTITY(false, ! (! (false))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 ;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                barrier();
               do
                {
                 lessThanEqual(uvec4(137261u, _GLF_IDENTITY(111149u, max(111149u, 111149u)), 56711u, _GLF_IDENTITY(195876u, max(195876u, 195876u))), uvec4(84685u, 141235u, 57898u, _GLF_IDENTITY(51345u, max(_GLF_IDENTITY(51345u, min(51345u, 51345u)), 51345u))).wwzy);
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               ;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, true, true)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 break;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               (mat2x4(294.679, 9.5, 9352.2201, 78.42, -1417.7373, _GLF_IDENTITY(-3.0, clamp(-3.0, -3.0, _GLF_IDENTITY(-3.0, (false ? _GLF_FUZZED(-916.357) : _GLF_IDENTITY(-3.0, min(-3.0, _GLF_IDENTITY(-3.0, max(-3.0, -3.0)))))))), -607.682, 6.5) / _GLF_IDENTITY(3.0, (3.0) * abs(1.0)));
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -8.5)), _GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-934.552, 7.6)))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.8)), bvec2(true, false))).x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               subgroup_local_id;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               mat3 _GLF_SWITCH_0_0v;
               uvec4(118244u, 137160u, 74326u, 152902u);
               if(_GLF_DEAD(false))
                barrier();
               _GLF_IDENTITY(uvec2(_GLF_IDENTITY(175993u, (175993u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1206u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(175993u, (175993u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1206u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(175993u, (175993u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1206u)))) / uvec2(1u, 1u));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           virtual_gid;
           (mat3x2(-1131.3609, 0.9, -9894.2133, -0.8, 39.84, 5023.8271) + mat3x2(885.284, 3.9, 7423.9949, 5.6, -97.21, 27.32));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            return;
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              return;
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               break;
             }
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
             }
            else
             {
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true))), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))))
             {
              if(_GLF_DEAD(false))
               continue;
              do
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    barrier();
                   }
                  else
                   {
                   }
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            else
             {
              _GLF_IDENTITY(bvec3(true, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true), true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(true, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(true, true, true), true))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(true, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(true, true, true), true))), true))), true))))));
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 continue;
                barrier();
               }
             }
            else
             {
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  return;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))));
              uvec3(53698u, 165636u, 35641u);
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                barrier();
               }
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            do
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                (+ mat2(398.499, 4.5, 3811.8915, -7212.2445));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                 barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                barrier();
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))));
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               return;
              break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && true)))))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
               return;
              barrier();
             }
            mat4x2(_GLF_IDENTITY(9767.9055, _GLF_IDENTITY((9767.9055), ((9767.9055)) + 0.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), -7.1, 815.440, -0.5, -14.59, -4.7, -10.83, 0.8);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                ;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))) && true), false)))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              barrier();
             }
            uint _GLF_SWITCH_0_1v[98], _GLF_SWITCH_0_2v[20];
           }
           if(true)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             bvec3 _GLF_SWITCH_0_3v;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_IDENTITY(false, false || (false)), true), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.5))))))))) && true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false))))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
              }
             for(int _injected_loop_counter = (0 ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))) || false); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ivec2(-44340, 73727);
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               vec3(_GLF_IDENTITY(-82.78, _GLF_IDENTITY(clamp(-82.78, -82.78, -82.78), clamp(clamp(-82.78, -82.78, -82.78), _GLF_IDENTITY(clamp(-82.78, -82.78, -82.78), min(_GLF_IDENTITY(clamp(-82.78, -82.78, -82.78), clamp(clamp(-82.78, -82.78, -82.78), clamp(-82.78, -82.78, -82.78), clamp(-82.78, -82.78, -82.78))), clamp(-82.78, -82.78, -82.78))), clamp(-82.78, -82.78, -82.78)))), 911.609, -9.1);
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4x2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               bvec4(false, true, true, false);
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             vec3(-6.3, -3.2, -1751.3354);
             ivec3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v[11], _GLF_SWITCH_0_9v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             uvec3(109730u, 131997u, 93067u);
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               ivec3(6942, 56545, -71900);
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(2.7), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (false ? _GLF_FUZZED(9.4) : ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(8768.0543)), bvec2(true, false)))).y, 0.0, 0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-14.29), (_GLF_FUZZED(-14.29)) - length(vec3(0.0, 0.0, 0.0))) : float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(-14.29), (_GLF_FUZZED(-14.29)) - length(vec3(0.0, 0.0, 0.0))) : float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), 0.0), (false ? _GLF_FUZZED(mat4x3(-73.54, 8.6, -2.2, -55.34, 2962.2877, -91.71, -8.1, -378.026, 82.76, -577.380, -6.6, -0.3)) : _GLF_IDENTITY(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(-14.29), (_GLF_FUZZED(-14.29)) - length(vec3(0.0, 0.0, 0.0))) : float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), 0.0), (false ? _GLF_FUZZED(mat4x3(970.392, 75.92, -145.847, -5.4, 9299.9988, -8.4, -99.27, -5.8, 2300.3482, -568.443, 0.9, 3.0)) : mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(-14.29), (_GLF_FUZZED(-14.29)) - length(vec3(0.0, 0.0, 0.0))) : float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), 0.0)))))))))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                continue;
               _GLF_IDENTITY(_GLF_IDENTITY(mix(bvec3(false, false, false), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u))), bvec3(bvec4(mix(bvec3(false, false, false), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u))), true))), _GLF_IDENTITY(bvec3(bvec4(mix(bvec3(false, false, false), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), _GLF_IDENTITY(lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(lessThan(_GLF_IDENTITY(uvec3(38531u, 26370u, 160432u), max(uvec3(38531u, 26370u, 160432u), uvec3(38531u, 26370u, 160432u))), (uvec3(106020u, 147291u, 189272u) ^ 168023u)), bvec3(bvec4(lessThan(uvec3(38531u, 26370u, 160432u), (_GLF_IDENTITY(uvec3(106020u, 147291u, 189272u) ^ 168023u, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(106020u, 147291u, 189272u) ^ 168023u, min(_GLF_IDENTITY(uvec3(106020u, 147291u, 189272u) ^ 168023u, min(uvec3(106020u, 147291u, 189272u) ^ 168023u, uvec3(106020u, 147291u, 189272u) ^ 168023u)), uvec3(106020u, 147291u, 189272u) ^ 168023u)))))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u)), _GLF_IDENTITY(bvec3(bvec4(lessThan(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u), max(uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u), uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u))), (uvec3(106020u, 147291u, 189272u) ^ 168023u)), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(lessThan(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u), max(uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u), uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u))), (uvec3(106020u, 147291u, 189272u) ^ 168023u)), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(lessThan(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u), max(uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u), uvec3(_GLF_IDENTITY(38531u, max(38531u, 38531u)), 26370u, 160432u))), (uvec3(106020u, 147291u, 189272u) ^ 168023u)), true)))), true)))))))))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(mix(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (_GLF_IDENTITY(uvec3(106020u, 147291u, 189272u), _GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) ^ uvec3(0u, 0u, 0u))) ^ 168023u))), true)), bvec3(bvec3(bvec3(bvec4(mix(bvec3(false, false, false), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, _GLF_IDENTITY(46268u, (46268u) | 0u), 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u))), true))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(mix(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), false)))), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (_GLF_IDENTITY(uvec3(106020u, 147291u, 189272u), _GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) ^ uvec3(0u, 0u, 0u), ((uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) ^ uvec3(0u, 0u, 0u)) | ((uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) ^ uvec3(0u, 0u, 0u))))) ^ 168023u))), true)), bvec3(bvec3(bvec3(bvec4(mix(bvec3(false, false, false), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u))), true))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(mix(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, false, true)))), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (_GLF_IDENTITY(uvec3(106020u, 147291u, 189272u), _GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) ^ uvec3(0u, 0u, 0u))) ^ 168023u))), true)), bvec3(bvec3(bvec3(bvec4(mix(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), (uvec3(106020u, 147291u, 189272u) ^ 168023u))), true))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(mix(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, 160432u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(106020u, _GLF_IDENTITY(147291u, (_GLF_IDENTITY(147291u, (147291u) + 0u)) | (147291u)), 189272u), _GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) ^ uvec3(0u, 0u, 0u))) ^ 168023u), ((_GLF_IDENTITY(uvec3(106020u, _GLF_IDENTITY(147291u, (_GLF_IDENTITY(147291u, (147291u) + 0u)) | (147291u)), 189272u), _GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(uvec4(uvec3(106020u, 147291u, 189272u), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) ^ uvec3(0u, 0u, 0u))) ^ 168023u)) + uvec3(0u, 0u, 0u)))), true)), bvec3(bvec3(bvec3(bvec4(mix(bvec3(false, false, false), notEqual(uvec3(68206u, 68045u, 34734u), uvec3(71158u, 46268u, 7969u)), lessThan(uvec3(38531u, 26370u, _GLF_IDENTITY(160432u, 0u | (160432u))), (uvec3(106020u, 147291u, 189272u) ^ 168023u))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))), false)), true)))))), false)))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0)), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0))))).y) / 1.0)))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))) & -94201)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(2), int(2))) + (0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             (mat3(-30.67, 56.23, -0.0, 59.77, -45.18, _GLF_IDENTITY(-0.6, (false ? _GLF_FUZZED(-83.96) : -0.6)), 23.93, 5.3, -47.17) / _GLF_IDENTITY(atanh(vec3(6166.6543, 1.8, 5.8)), _GLF_IDENTITY((atanh(vec3(6166.6543, 1.8, 5.8))) * mat3(1.0), vec3(mat4((atanh(vec3(6166.6543, 1.8, 5.8))) * mat3(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))[0]);
             if(_GLF_DEAD(false))
              barrier();
             mat4(mat2x4(mat2x3(-5.4, -891.296, -38.27, 2826.5936, -6783.4948, -463.250)));
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             ivec3 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[_GLF_IDENTITY(1, (1) - 0)], 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).x > injectionSwitch.y))))
              continue;
             float _GLF_SWITCH_0_12v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec4(-53189, 2961, 87665, 10216);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              barrier();
             vec3(1.1, 6.5, -2.4);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               barrier();
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           for(           _GLF_IDENTITY((~ int(false)), ((~ int(false))) - 0);
 true; mat3x2(-1.4, 91.80, _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (false ? _GLF_FUZZED(695.763) : _GLF_IDENTITY(0.2, (true ? 0.2 : _GLF_FUZZED(5392.9301)))))) + 0.0), 31.98, -108.776, -16.32))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               67.95;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             vec4(_GLF_IDENTITY(-5970.5001, min(_GLF_IDENTITY(-5970.5001, (-5970.5001) * 1.0), -5970.5001)), -68.85, -22.77, -709.766);
             bvec2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
             mat4x3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
             floatBitsToInt(-1641.3117);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             ivec3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v[40];
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             mat2x3(-30.72, -75.43, -1595.1360, -610.228, -9.6, -379.433);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (mat2x3(4074.7918, _GLF_IDENTITY(_GLF_IDENTITY(528.018, (_GLF_IDENTITY(528.018, (528.018) - 0.0)) - _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))), float(mat2x4(_GLF_IDENTITY(528.018, (528.018) + 0.0), exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-20.84)), float(determinant(mat2(0.0, 1.0, 0.0, 0.0))), bool(true))), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), vec3(mat2x4(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(-51.67), _GLF_FUZZED(-2965.5750), _GLF_FUZZED(785.488)), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), 1.0, 0.0, 0.0, 0.0, 1.0)))), max(dot(_GLF_IDENTITY(vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0), (vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0)) * vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), vec3(1.0, 1.0, 1.0)), dot(vec3(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 0.0))), -766.270, -761.271, 5038.3615, 0.0) + -9.5);
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           ivec2(_GLF_IDENTITY(-20850, 0 + (-20850)), -66629);
           mat2(-3554.8411, -1435.1044, -52.07, 1.6);
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             for(mat3 _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v; true; 40596)
              {
               uvec4 _GLF_SWITCH_0_22v[94], _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[54];
               mat4x3 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 ;
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               ;
               bool _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
               transpose(mat3x2(_GLF_IDENTITY(543.631, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (543.631)), -48.80, _GLF_IDENTITY(-3380.3089, 1.0 * (-3380.3089)), -805.968, -0.4, -73.14));
               ivec4 _GLF_SWITCH_0_31v;
               if(_GLF_DEAD(false))
                barrier();
               uvec2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v[23], _GLF_SWITCH_0_34v;
               bool _GLF_SWITCH_0_35v[32], _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), clamp(float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), injectionSwitch)).x)) : _GLF_IDENTITY(_GLF_FUZZED(-1659.0089), max(_GLF_FUZZED(-1659.0089), _GLF_IDENTITY(_GLF_FUZZED(-1659.0089), (false ? _GLF_FUZZED(86.24) : _GLF_IDENTITY(_GLF_FUZZED(-1659.0089), clamp(_GLF_FUZZED(-1659.0089), _GLF_FUZZED(-1659.0089), _GLF_FUZZED(-1659.0089))))))))) > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           bvec2 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           uvec2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
           if(_GLF_DEAD(false))
            continue;
           for(           mat2x3(66.96, 1.9, _GLF_IDENTITY(8.2, float(mat2(_GLF_IDENTITY(8.2, clamp(8.2, _GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, mix(float(_GLF_FUZZED(2.0)), float(8.2), bool(true))))), _GLF_IDENTITY(8.2, (false ? _GLF_FUZZED(-9.4) : _GLF_IDENTITY(8.2, min(8.2, 8.2)))))), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-437.943, -89.86), (true ? vec2(-437.943, -89.86) : _GLF_FUZZED(injectionSwitch))).t)), float(1.0), bool(true))), injectionSwitch.y), 0.0))), -1613.4375, -8.7, -2790.8242);
 (mat2x4(-786.683, 23.49, -15.76, 1809.1712, 80.76, 1.7, 862.258, -7.3) != mat2x4(mat3x4(3.1, _GLF_IDENTITY(-382.427, mix(float(-382.427), float(_GLF_FUZZED(18.06)), bool(false))), -49.22, -7.1, -51.36, -7.6, -67.73, 59.91, -860.669, -364.135, -372.408, 1.1))); vec4(2.8, -372.681, 32.27, -2776.6290))
            {
             mat3x2(-173.799);
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             _GLF_SWITCH_0_39v;
             mat3x4 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v[87], _GLF_SWITCH_0_44v;
             ivec4 _GLF_SWITCH_0_45v[96], _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   continue;
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             mat4x3 _GLF_SWITCH_0_48v[13], _GLF_SWITCH_0_49v[17];
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             (_GLF_SWITCH_0_40v + _GLF_IDENTITY((mat3x2(-6.5, 556.560, 94.18, 2853.1007, -8.7, 22.21) , _GLF_SWITCH_0_40v), (_GLF_IDENTITY((mat3x2(-6.5, 556.560, 94.18, 2853.1007, -8.7, 22.21) , _GLF_SWITCH_0_40v), ((mat3x2(-6.5, 556.560, 94.18, 2853.1007, -8.7, 22.21) , _GLF_SWITCH_0_40v)) >> uvec2(0u, 0u))) | ((mat3x2(-6.5, 556.560, 94.18, 2853.1007, -8.7, 22.21) , _GLF_SWITCH_0_40v))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               break;
              }
             if(_GLF_DEAD(false))
              break;
             uint _GLF_SWITCH_0_50v[31], _GLF_SWITCH_0_51v[58];
            }
           bool _GLF_SWITCH_0_52v[61], _GLF_SWITCH_0_53v;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.8) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2x3 _GLF_SWITCH_0_54v[40];
           vec4(-669.690, -5.6, -2.2, -3.0);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(((_GLF_IDENTITY(9.0, float(vec3(9.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) + mat4x3(4.0, -3.4, 8.8, -39.48, _GLF_IDENTITY(188.564, mix(float(_GLF_IDENTITY(188.564, max(188.564, _GLF_IDENTITY(188.564, clamp(188.564, 188.564, 188.564))))), float(_GLF_FUZZED(-152.340)), bool(false))), 399.217, _GLF_IDENTITY(-6870.0491, mix(float(-6870.0491), float(_GLF_FUZZED(_GLF_IDENTITY(22.11, (true ? 22.11 : _GLF_FUZZED(distance(vec4(-609.809, -2.2, 0.9, 9660.8507), vec4(116.443, -5823.3085, -5.5, 71.72))))))), bool(false))), 5.4, 7.6, 8593.5483, 23.36, -444.171)) == mat4x3(-9.4, -143.052, 8.7, -734.029, 7.9, 575.193, -1.6, -7960.4457, -3.6, _GLF_IDENTITY(611.193, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 611.193 : _GLF_FUZZED(-87.03))), 46.69, 6.2)))
            {
             ;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false)), ! (! (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, false, false))))))) || false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((false), ! (! ((false))))) && true, false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((false), ! (! ((false))))) && true, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((false), ! (! ((false))))) && true, false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY((false), ! (! ((false))))) && true, false, false)))))))))) && true), false)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), false))), false)))))))))))))))))))))
                barrier();
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) ^ 0) & 44121)); _injected_loop_counter --)
                {
                 mat2(9.1, _GLF_IDENTITY(-95.83, min(-95.83, _GLF_IDENTITY(-95.83, max(-95.83, -95.83)))), _GLF_IDENTITY(-5302.3155, max(-5302.3155, -5302.3155)), 8.4);
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             degrees(vec3(-4.0, -3.8, _GLF_IDENTITY(-93.06, float(_GLF_IDENTITY(mat3x4(-93.06, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat4(1.0) * (mat3x4(-93.06, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), cos(0.0), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false, true, false)))) && _GLF_IDENTITY(true, ! (! (true))))) || false)))) && true)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             mat4x3(6.2, 9855.5226, 336.817, -39.21, 20.46, 6208.7809, 6336.8621, -55.34, 6.2, -2.5, -50.59, -32.15);
             _GLF_struct_4 _GLF_struct_replacement_4;
             if(_GLF_DEAD(false))
              barrier();
             mat3x2 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat2(1.0) * (min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2793.6775), _GLF_FUZZED(90.33)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) + vec2(0.0, 0.0))).y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))) * (0.0)), 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), min(0.0, 0.0)))), (false ? _GLF_FUZZED(3785.1990) : dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.8) : 1.0)), 0.0))))), 1.0)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             uvec4 _GLF_SWITCH_0_58v[39], _GLF_SWITCH_0_59v[10];
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             (_GLF_SWITCH_0_57v)[1][1];
            }
           {
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
             }
            else
             {
              (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup, (_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup, (uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) | (uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup)), (_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup, _GLF_IDENTITY((_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, 142333u) + _GLF_IDENTITY(num_workgroup, (num_workgroup) | (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(num_workgroup, 1u, 0u, 1u), (uvec4(num_workgroup, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(num_workgroup, 1u, 0u, 1u), (uvec4(num_workgroup, 1u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))) >> 0u)))), _GLF_IDENTITY((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup), ((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup)) | uvec4(0u, 0u, 0u, 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-9102.3007)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), clamp((_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, _GLF_IDENTITY(142333u, (_GLF_IDENTITY(142333u, max(142333u, 142333u))) >> 0u)) + num_workgroup, _GLF_IDENTITY((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup), ((_GLF_IDENTITY(uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u), min(uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u), _GLF_IDENTITY(uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u), (uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u)) << uvec4(0u, 0u, 0u, 0u)))) + num_workgroup)) | uvec4(0u, 0u, 0u, 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup, _GLF_IDENTITY(_GLF_IDENTITY((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup), ((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup)) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup), ((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, _GLF_IDENTITY((6212u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((6212u), ((6212u)) | ((6212u))))) ^ 0u), 142333u) + num_workgroup)) | uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uvec4(94862u, 82617u, 6212u, _GLF_IDENTITY(142333u, min(142333u, _GLF_IDENTITY(142333u, uint(uvec3(142333u, 1u, 0u)))))) + num_workgroup, _GLF_IDENTITY((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup), ((uvec4(94862u, 82617u, _GLF_IDENTITY(6212u, (6212u) ^ 0u), 142333u) + num_workgroup)) | uvec4(0u, 0u, 0u, 0u)) * uvec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) | (uvec4(94862u, 82617u, 6212u, 142333u) + num_workgroup))) / uvec4(1u, 1u, 1u, 1u)));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
               }
             }
            bool _GLF_SWITCH_0_60v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_DEAD(false)), false, false)), bvec3(bvec4(bvec3(bvec3((_GLF_DEAD(false)), false, false)), true)))))))) || false))))
             continue;
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) * _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1))))), max(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(_injected_loop_counter) : (1))), _GLF_IDENTITY((1), clamp((1), (1), (1))))) * 1)), 0))); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               continue;
              do
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                 }
                exp2(cos(vec4(37.10, _GLF_IDENTITY(_GLF_IDENTITY(2.3, clamp(2.3, 2.3, 2.3)), 1.0 * (2.3)), 56.30, 97.94)));
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  barrier();
                 }
                break;
               }
              if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
               }
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
             return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              break;
             }
            do
             {
              mat2x3(1034.5690, -9341.2093, 821.646, -630.037, 12.16, -656.391);
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             break;
            ;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(82.64)), bvec2(true, false))).x > injectionSwitch.y))))
             {
              if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               break;
             }
            subgroup_size;
           }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(bvec4(! (_GLF_IDENTITY(true, false || (true))), true, false, false)))))) || false)))
          {
           (mat4x3(_GLF_IDENTITY(56.62, max(_GLF_IDENTITY(56.62, (false ? _GLF_FUZZED(-857.192) : 56.62)), 56.62)), _GLF_IDENTITY(_GLF_IDENTITY(26.90, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(26.90, (26.90) - 0.0), 1.0, sin(0.0), 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, sqrt(1.0), 1.0, exp(0.0), 1.0, sqrt(exp(0.0)), 1.0)), (false ? _GLF_FUZZED(-1.9) : float(mat4x3(_GLF_IDENTITY(26.90, (26.90) - 0.0), 1.0, sin(0.0), 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, sqrt(1.0), 1.0, exp(0.0), 1.0, sqrt(exp(0.0)), 1.0))))), 1.0 * (_GLF_IDENTITY(26.90, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(26.90, (26.90) - 0.0), 1.0, sin(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 0.0, sqrt(1.0), 1.0, exp(0.0), 1.0, sqrt(exp(0.0)), 1.0)), (false ? _GLF_FUZZED(-1.9) : float(mat4x3(_GLF_IDENTITY(26.90, (26.90) - 0.0), 1.0, sin(0.0), 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.1) : 0.0)), 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, sqrt(1.0), 1.0, exp(0.0), 1.0, sqrt(exp(_GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0))))))), -11.02, -3.8, -4.3, 49.55, _GLF_IDENTITY(-8.7, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2931.9825) : -8.7, float(mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(-2931.9825) : -8.7, clamp(false ? _GLF_FUZZED(-2931.9825) : -8.7, false ? _GLF_FUZZED(-2931.9825) : -8.7, false ? _GLF_FUZZED(_GLF_IDENTITY(-2931.9825, 1.0 * (-2931.9825))) : _GLF_IDENTITY(-8.7, clamp(-8.7, _GLF_IDENTITY(-8.7, 1.0 * (-8.7)), -8.7)))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))), 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(1954.0738, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(1954.0738, (1954.0738) - 0.0))), 9.6, 2.9, -216.154, -83.59) / mat4x3(-7.8, -3.1, -835.665, 9.3, 62.95, 4236.3412, -413.529, 73.38, -6.3, -933.815, -959.858, 5.3));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 60:
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       break;
       if(_GLF_DEAD(false))
        return;
       default:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false), bvec2(bvec4(bvec2(false, false), false, true)))))), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       1;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}
