#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), min(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))), exp(vec2(0.0, 0.0))))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)) : _GLF_FUZZED((1.6 + injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED((1.6 + injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((1.6 + injectionSwitch)))).x)) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.5)), vec2(_GLF_FUZZED(80.35), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(float((uvec2(3977u, 155993u) != uvec2(188901u, 141802u))))), bvec2(false, false))).x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))), bool(bvec2(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5.9), mix(float(_GLF_FUZZED(6.9)), float(_GLF_FUZZED(-5.9)), bool(true))) : injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)), bool(bvec2((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), true, false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), true, _GLF_IDENTITY(true, (true) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((1.6 + injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((1.6 + injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((1.6 + injectionSwitch)))).x)) > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))) && true))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec4(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), true, false))), false)))))))), true, true))), true, false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x))), float(_GLF_FUZZED(-81.70)), bool(false))))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y))))))))))) || false))))))) || false)))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, false)), (bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y))))))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)), bool(bvec3((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)), true, false)))))))))))) || false)))))) && true))) || false)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))))))))) || false)), bool(bvec2((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)) || false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * 1.0)) * (injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false))) && true))))) || false)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))), true))), true, _GLF_IDENTITY(true, (true) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(uvec4(uvec3(gl_NumWorkGroups), 0u)))) ^ uvec3(0u, 0u, 0u)))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec4(uvec3(gl_NumWorkGroups), 0u), max(uvec4(uvec3(gl_NumWorkGroups), 0u), uvec4(uvec3(gl_NumWorkGroups), 0u)))))) ^ uvec3(0u, 0u, 0u))))) | uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u, 0u))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), clamp((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))))), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))))))))) | (uvec3(gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (uvec3(gl_NumWorkGroups))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u)), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) * uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) | _GLF_IDENTITY(_GLF_IDENTITY((1u), max((1u), (1u))), max(_GLF_IDENTITY((1u), max((1u), (1u))), _GLF_IDENTITY((1u), max((1u), (1u)))))), 1u))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), abs(1.0))))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec2(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.9), (_GLF_FUZZED(3.9)) + 0.0)), float(1.0), bool(true)))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), max((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups))))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(uvec4((uvec3(gl_NumWorkGroups)) << uvec3(0u, 0u, 0u), (1u ^ 0u))))), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(46160u, 170885u, 149535u)))), gl_NumWorkGroups)))))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))), uvec3(uvec4((uvec3(gl_NumWorkGroups)) << uvec3(0u, 0u, 0u), (1u ^ 0u))))), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(46160u, 170885u, 149535u)))), gl_NumWorkGroups))))))) * uvec3(1u, 1u, 1u)) | (uvec3(gl_NumWorkGroups)))), (uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups))))) >> uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(39669u, 10300u, 123097u)) : gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) / (uvec3(1u, 1u, 1u) & uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) >> 0u) + (1u)), 1u))), (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (uvec3(gl_NumWorkGroups)))))), _GLF_IDENTITY(clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 1u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))), (uvec3(gl_NumWorkGroups)) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), 1u))), gl_NumWorkGroups))))))), uvec3(gl_NumWorkGroups)), (clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), min(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))))), uvec3(gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))) | (uvec3(gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) | (uvec3(gl_NumWorkGroups))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups))), (uvec3(gl_NumWorkGroups)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (true ? uvec3(gl_NumWorkGroups) : _GLF_FUZZED(uvec3(1470u, 130704u, 55333u))))) >> uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))), ((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | uvec3(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (0u)), 0u, 0u)), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)) * uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)))), _GLF_IDENTITY(0u | (1u), (false ? _GLF_FUZZED((subgroup_local_id >> 45451u)) : 0u | (1u))))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) ^ 0u) ^ 0u))), 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y), (_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.9)), float(1.0), bool(true)))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y), (_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.9)), float(1.0), bool(true)))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))) >> uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], clamp(gl_NumWorkGroups[0], gl_NumWorkGroups[0], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups)))), max((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), max((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)))))) << uvec3(0u, 0u, 0u)))), (uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], clamp(gl_NumWorkGroups[0], gl_NumWorkGroups[0], gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups)))), max((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), max((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups)))))) << uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))), clamp(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))))))))))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))))))), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | ((uvec3(gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups), uvec3(gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))), 0u))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u))))))), (~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), uvec3(uvec4(~ (gl_NumWorkGroups), 0u)))))))) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(46160u, 170885u, 149535u)))), gl_NumWorkGroups)))))) | _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(100084u, 190900u, 108843u)) : _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | ((uvec3(gl_NumWorkGroups)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) | (uvec3(gl_NumWorkGroups))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(188585u, 29226u, 94629u)) : uvec3(gl_NumWorkGroups))), uvec3(gl_NumWorkGroups)))) | (uvec3(gl_NumWorkGroups))))) >> uvec3(0u, 0u, 0u)))))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))), false, true))))), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), true))))), true, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), false))), (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(607.797))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], abs(abs(0.0)), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), bvec2(true, false))))).x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), float(_GLF_IDENTITY(mat3x4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), float(mat2(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)))), exp(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3x4(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, 0.0, 1.0)), float(mat2(dot(vec4(0.0, 0.0, 0.0, sqrt(1.0)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(-3.3, 9436.9318, 58.55, 45.83)) : vec4(0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, 0.0)))), exp(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.8)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(bool(true), (bool(true)) && true))), min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, cos(abs(0.0)), 0.0), mat2(1.0) * (mat2(0.0, 0.0, cos(abs(0.0)), 0.0))))), 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), 1.0, 0.0, 1.0, 0.0)))))), bool(true))), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) + vec3(0.0, 0.0, 0.0)))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), clamp(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), max(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), min(true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))), true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-43.97, max(-43.97, -43.97))))))))))))) : _GLF_FUZZED(449.304))), 0.0, 1.0, 0.0)))))), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 4.6))), bool(false)))), float(_GLF_FUZZED(-73.64)), bool(false))), 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))), min(injectionSwitch.x, injectionSwitch.x)))) : _GLF_IDENTITY(_GLF_FUZZED(-85.78), clamp(_GLF_FUZZED(-85.78), _GLF_IDENTITY(_GLF_FUZZED(-85.78), max(_GLF_IDENTITY(_GLF_FUZZED(-85.78), (true ? _GLF_FUZZED(-85.78) : _GLF_FUZZED(9.4))), _GLF_FUZZED(-85.78))), _GLF_IDENTITY(_GLF_FUZZED(-85.78), max(_GLF_IDENTITY(_GLF_FUZZED(-85.78), min(_GLF_FUZZED(-85.78), _GLF_FUZZED(-85.78))), _GLF_FUZZED(-85.78)))))))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(sqrt(1.0)), max(_GLF_IDENTITY(abs(sqrt(1.0)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0), cos(0.0), 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), mix(float(float(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), float(_GLF_FUZZED(-750.908)), bool(false)))), 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), max(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), (_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0)))) / 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), max(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), (_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0)))) / 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), max(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), (_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0)))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), max(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0))), (_GLF_IDENTITY(abs(sqrt(1.0)), float(vec3(abs(sqrt(1.0)), 1.0, 1.0)))) / 1.0))))) : _GLF_FUZZED(distance(52.65, -0.9)))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, cos(0.0), 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.4))), max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.4))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.4))))), 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, exp(0.0), 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)))), dot(vec3(0.0, exp(0.0), 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0))))), 1.0, 0.0)), (_GLF_IDENTITY(float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, exp(0.0), 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)))), dot(vec3(0.0, exp(0.0), 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0))))), 1.0, 0.0)), (true ? float(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, exp(0.0), 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0)))), dot(vec3(0.0, exp(0.0), 1.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, length(vec2(0.0, 0.0))))), 1.0, 0.0)) : _GLF_FUZZED(7.2)))) * 1.0)), 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(abs(sqrt(1.0)), max(abs(sqrt(1.0)), _GLF_IDENTITY(abs(sqrt(1.0)), (_GLF_IDENTITY(abs(sqrt(1.0)), (false ? _GLF_FUZZED(5463.1814) : abs(sqrt(1.0))))) + 0.0))))), 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), injectionSwitch.x))), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(sqrt(1.0)), (abs(sqrt(1.0))) + 0.0), 1.0)) - mat2x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0)))) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.72)), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0)), (float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0))) + 0.0), max(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0)), (float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0))) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0)), (float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0))) + 0.0))), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sin(vec2(0.0, 0.0)) + (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(sqrt(1.0)), max(abs(sqrt(1.0)), abs(sqrt(_GLF_IDENTITY(1.0, (1.0) + 0.0))))), 1.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), log(1.0)))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, sqrt(0.0), 0.0, 0.0, abs(1.0)), transpose(transpose(mat2x3(0.0, 1.0, sqrt(0.0), 0.0, 0.0, abs(1.0))))))), (0.0) / 1.0), injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0, abs(sqrt(1.0)), 1.0)) - mat2x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(ceil(6.5)))))))) + 0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), false, true, false))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), false, true, false)))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) * mat2(1.0), max((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) * mat2(1.0), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) * mat2(1.0))))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-437.294)), bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, min((injectionSwitch.y) / 1.0, (injectionSwitch.y) / 1.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-502.985)), float(injectionSwitch.y), bool(true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, ! (! (false))), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_IDENTITY(false, bool(bvec2(false, true))))), true)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY((injectionSwitch + -5.1), abs(vec2(1.0, 1.0)) * ((injectionSwitch + -5.1)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + -5.1)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))) / 1u), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false)))))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0)))), (vec2(vec3(injectionSwitch, 0.0))) - sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x)))) + (1)) < subgroup_size, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) - sqrt(vec2(0.0, 0.0)))).x, injectionSwitch.x)))) + (1)) < subgroup_size)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true))) && true))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), exp(0.0), 0.0, abs(0.0), tan(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), mix(vec3(_GLF_FUZZED(-84.84), _GLF_FUZZED(3.5), (vec3(1.0, 0.0, log(1.0)))[2]), vec3((vec3(1.0, 0.0, log(1.0)))[0], (vec3(1.0, 0.0, log(1.0)))[1], _GLF_FUZZED(-8.6)), bvec3(true, true, false)))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0)))))), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-590.652) : (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(8853.2564)))))), float(vec3(max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-590.652) : (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(8853.2564)))))), 1.0, 1.0))))))), 1.0, 1.0, 0.0, tan(0.0)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(false)))), 0.0, abs(0.0), _GLF_IDENTITY(tan(sqrt(0.0)), mix(float(_GLF_IDENTITY(tan(sqrt(0.0)), clamp(tan(sqrt(0.0)), tan(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), tan(sqrt(0.0))))), float(_GLF_FUZZED(-2.1)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-4686.1701)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0), log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(5844.8339), mix(float(_GLF_FUZZED(5844.8339)), float(_GLF_FUZZED(5867.5264)), bool(false)))), bool(false))), 0.0))) * 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0)))).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(0.0), 0.0, abs(0.0), tan(sqrt(0.0)), _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((determinant(mat2(0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(float(44914))), float((determinant(mat2(0.0, 1.0, 0.0, 0.0)))), bool(true))) / 1.0)), float(_GLF_FUZZED(float(104643u))), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), clamp(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0)))) - abs(sin(vec3(0.0, 0.0, 0.0)))))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0, abs(0.0), tan(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-9.5, 990.997).t)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - log(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - log(1.0), float(float((_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - log(1.0))))) + 0.0))), bool(true))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(6.4), _GLF_FUZZED(-2.6)), vec3((vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.6)), bool(false)))))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 0.0, 0.0))[_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2))))]), bvec3(true, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), vec3(mat3(vec3(1.0, 0.0, log(1.0)), 1.0, 0.0, sqrt(0.0), abs(1.0), 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false))), tan(0.0)))).y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) : _GLF_FUZZED(-834.735))))) + (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, false, false))), false)))))))), 0.0, abs(0.0), tan(sqrt(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + tan(0.0)))))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(-7.4)) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false)))))), vec3(1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0), sqrt(0.0))))), mix(float(float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))))), float(_GLF_FUZZED(51.59)), bool(false))))), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (true ? vec3(1.0, 0.0, log(1.0)) : _GLF_FUZZED(vec3(-48.67, -75.06, -793.934)))))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, tan(0.0)))).y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)) && true)))))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), exp(0.0), 0.0, abs(0.0), tan(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), mix(vec3(_GLF_FUZZED(-84.84), _GLF_FUZZED(3.5), (vec3(1.0, 0.0, log(1.0)))[2]), vec3((vec3(1.0, 0.0, log(1.0)))[0], (vec3(1.0, 0.0, log(1.0)))[1], _GLF_FUZZED(-8.6)), bvec3(true, true, false)))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0)))))), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-590.652) : (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(8853.2564)))))), float(vec3(max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-590.652) : (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(8853.2564)))))), 1.0, 1.0))))))), 1.0, 1.0, 0.0, tan(0.0)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(false)))), 0.0, abs(0.0), _GLF_IDENTITY(tan(sqrt(0.0)), mix(float(_GLF_IDENTITY(tan(sqrt(0.0)), clamp(tan(sqrt(0.0)), tan(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), tan(sqrt(0.0))))), float(_GLF_FUZZED(-2.1)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-4686.1701)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0), log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(5844.8339), mix(float(_GLF_FUZZED(5844.8339)), float(_GLF_FUZZED(5867.5264)), bool(false)))), bool(false))), 0.0))) * 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0)))).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), exp(0.0), 0.0, abs(0.0), tan(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), mix(vec3(_GLF_FUZZED(-84.84), _GLF_FUZZED(3.5), (vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat3(float(mat3x2(0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)))), log(1.0)))[2]), vec3((vec3(1.0, 0.0, log(1.0)))[0], (vec3(1.0, 0.0, log(1.0)))[1], _GLF_FUZZED(-8.6)), bvec3(true, true, false)))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(80.28) : log(1.0))), min(log(1.0), log(1.0)))))), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) - length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, _GLF_IDENTITY(max((1.0) - 0.0, _GLF_IDENTITY((1.0) - 0.0, min(_GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(-590.652) : (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(8853.2564)))))), float(vec3(max(_GLF_IDENTITY((1.0), min((1.0), (1.0))) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, ((1.0) - 0.0) * 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1.0) - 0.0 : _GLF_FUZZED(7578.8460))), (false ? _GLF_FUZZED(-590.652) : (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(8853.2564)))))), 1.0, 1.0))))))), 1.0, 1.0, 0.0, tan(0.0)))).y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(false)))), 0.0, abs(0.0), _GLF_IDENTITY(tan(sqrt(0.0)), mix(float(_GLF_IDENTITY(tan(sqrt(0.0)), clamp(_GLF_IDENTITY(tan(sqrt(0.0)), 0.0 + (tan(sqrt(0.0)))), tan(sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0)))))), tan(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0))))), float(_GLF_FUZZED(-2.1)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(-56.02)), bool(false)))), mix(float(_GLF_FUZZED(-4686.1701)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0), log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(5844.8339), mix(float(_GLF_FUZZED(5844.8339)), float(_GLF_FUZZED(5867.5264)), bool(false)))), bool(false))), 0.0))) * 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0)))).y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), ! (! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, true)))) || false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(0.0), 0.0, abs(0.0), tan(sqrt(0.0)), _GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY((determinant(mat2(0.0, 1.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(float(44914))), float((determinant(mat2(0.0, 1.0, 0.0, 0.0)))), bool(true))) / 1.0)), float(_GLF_FUZZED(float(104643u))), bool(false))), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), (_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), clamp(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(73.54), (true ? _GLF_FUZZED(73.54) : _GLF_FUZZED(-8.1))))), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(73.54))), 0.0)))) - abs(sin(vec3(0.0, 0.0, 0.0)))))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-3.2), _GLF_FUZZED(8910.9384), (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(-5666.8569)), bvec3(true, true, false))))))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, tan(0.0)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0, abs(0.0), tan(sqrt(0.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), mix(float(_GLF_FUZZED(vec2(-9.5, 990.997).t)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))) - log(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.2) : 1.0)) : _GLF_FUZZED(894.697))), 0.0)))) - log(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0), mix(vec3(_GLF_FUZZED(0.7), _GLF_FUZZED(-4415.3698), (vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0))[2]), vec3((vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0))[0], (vec3(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0))[1], _GLF_FUZZED(523.470)), bvec3(true, true, false)))))), float(float((_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, abs(1.0), round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0 + (float(vec3(1.0, abs(1.0), round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-72.18)), float(0.0), bool(true))), 0.0, 1.0, 1.0, 1.0, 0.0)))) - log(1.0))))) + 0.0))), bool(true))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(6.4), _GLF_FUZZED(-2.6)), vec3((vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.6)), bool(false)))))[0], (vec3(1.0, 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 0.0, 0.0))[_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2))))]), bvec3(true, true, true)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), vec3(mat3(vec3(1.0, 0.0, log(1.0)), 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), abs(1.0), 1.0, 1.0))))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.9)), bool(false))), tan(0.0)))).y) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))) : _GLF_FUZZED(-834.735))))) + (injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), (true ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))) * (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))))) : _GLF_FUZZED(-834.735))))) + (injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, false, false))), false)))))))), 0.0, abs(0.0), tan(sqrt(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(-55.20) : _GLF_IDENTITY((0.0), min((0.0), (0.0))))), (0.0))) * 1.0))), 0.0), (false ? _GLF_FUZZED(vec3(8.2, 6.0, 75.09)) : vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), clamp((0.0), _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(-55.20) : _GLF_IDENTITY((0.0), min((0.0), (0.0))))), (0.0))) * 1.0))), 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + tan(0.0)))))), 0.0, 0.0), vec3(1.0, 0.0, log(1.0))), dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(-7.4)) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false)))))), vec3(1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0), sqrt(0.0))))), mix(float(float(mat3x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (vec3(1.0, 1.0, 0.0)) * _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(7.9, -785.412, 391.742, 926.358, -96.29, -775.855, -7603.4951, -5.4, -5111.9291))))), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0)))))), float(_GLF_FUZZED(51.59)), bool(false))))), _GLF_IDENTITY(vec3(1.0, 0.0, log(1.0)), (true ? vec3(1.0, 0.0, log(1.0)) : _GLF_FUZZED(vec3(-48.67, -75.06, -793.934)))))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, tan(0.0)))).y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), (_GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))) && true))))))))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)) && true))))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (! (false))), false)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)) && true) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))))), ! (! ((false) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))) || false))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true)))) && true)) || false))), false), true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) || false))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) || false), true && (bool((false) || false)))), bool(bvec4(bool(_GLF_IDENTITY(bool((false) || false), true && (bool((false) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! ((false) || false))), bool(bvec3(_GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || _GLF_IDENTITY(false, true && (false))))), false, true)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), bool(bvec3(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || false)), false || (! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || false))))), false, true)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)), bool(bvec3((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)), false, false)))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), bool(bvec3(_GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || false))), false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), bool(bvec3(_GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || false))), false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (! (false))))) || false))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), bool(bvec3(_GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || false))), false, true)))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), bool(bvec3(_GLF_IDENTITY((false) || false, ! (! _GLF_IDENTITY(((false) || false), (((false) || false)) || false))), false, true)))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)) && true))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-27.22)), bool(false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) / vec2(1.0, 1.0)).y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), ((_GLF_IDENTITY(0, clamp(0, 0, 0)))) | 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), ((_GLF_IDENTITY(0, clamp(0, 0, 0)))) | 0)) - 0) >> 0), _GLF_IDENTITY(0, ~ (~ (0))))))), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(64, max(64, 64)))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-816.582), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-10.15)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), bvec2(true, false))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-816.582), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-10.15)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), bvec2(true, false))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-816.582), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-10.15)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), bvec2(true, false))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec4(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-816.582), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-10.15)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), bvec2(true, false))))).x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))), true, true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))))))), ! (! ((! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))))))) || false)))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, false, false))))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) - 0u), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
