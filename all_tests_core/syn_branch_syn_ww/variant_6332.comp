#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), max(0.0, 0.0)), 1.0)), (float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))) / 1.0), (_GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), (float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))) / 1.0)) / sqrt(1.0))), (injectionSwitch.x) - sqrt(0.0)), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(atan(952.721)), max(_GLF_IDENTITY(_GLF_FUZZED(atan(952.721)), clamp(_GLF_FUZZED(atan(952.721)), _GLF_FUZZED(atan(952.721)), _GLF_FUZZED(atan(952.721)))), _GLF_FUZZED(atan(952.721)))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-3.0, -5.2).y)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(float(-55685))))), mix(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(float(-55685)))))), float(_GLF_FUZZED(4.0)), bool(false)))), _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), float(_GLF_IDENTITY(float(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) / 1.0)), (_GLF_IDENTITY(float(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) / 1.0)), float(mat2(float(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) / 1.0)), 0.0, 1.0, 0.0)))) + 0.0))))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), clamp(mix(float(_GLF_FUZZED(vec2(-3.0, -5.2).y)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), mat3(mat4(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))), _GLF_IDENTITY((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))), 0.0 + ((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))) * 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), mat3(mat4(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))), _GLF_IDENTITY((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))), 0.0 + ((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))) * 1.0))), max(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), mat3(mat4(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))), _GLF_IDENTITY((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))), 0.0 + ((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))) * 1.0))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), mat3(mat4(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))), _GLF_IDENTITY((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))), 0.0 + ((float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))))) * 1.0)))))) * 1.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), mix(float(_GLF_FUZZED(vec2(-3.0, -5.2).y)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))), exp(0.0)))) * 1.0))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-3.0, -5.2).y)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), (true ? mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat3(-4.7, 5.1, 6.6, 8339.2445, -3774.2454, 604.434, 1390.3347, 7624.4178, -5148.3986)))))), mat3(1.0) * (mat3(mat4x3(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)), (true ? mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat3(-4.7, 5.1, 6.6, 8339.2445, -3774.2454, 604.434, 1390.3347, 7624.4178, -5148.3986))))))))))) * 1.0))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), (mix(float(_GLF_FUZZED(vec2(-3.0, _GLF_IDENTITY(-5.2, float(_GLF_IDENTITY(mat4(-5.2, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_IDENTITY(mat4(-5.2, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sign(81.30)) : 1.0)), injectionSwitch.y), 0.0, 1.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(mat4(-598.548, 91.94, -2911.8852, 477.971, -71.30, 4.8, 2089.2773, 5.6, -6.8, -159.695, 818.075, 0.2, 2.7, -4604.1062, -5.7, -690.300)) : mat4(-5.2, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp(-47.78)) : 1.0)), 1.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, sin(0.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))) * mat4(1.0))))).y)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0), clamp(_GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0), _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0), _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0))), (float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, exp(0.0)))) * 1.0))) : _GLF_FUZZED(531.128))))) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0)))), 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(-3.9))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY((+ 5.6), min((+ 5.6), (+ 5.6))))), float(0.0), bool(true))))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5854.6768)), bool(false))), 0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(intBitsToFloat(-83086)) : 0.0)), 0.0, 1.0)))), dot(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(770.462)), float(0.0), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(7740.1700), (_GLF_IDENTITY(_GLF_FUZZED(7740.1700), clamp(_GLF_FUZZED(7740.1700), _GLF_FUZZED(7740.1700), _GLF_FUZZED(7740.1700)))) - log(1.0)), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), clamp(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 0.0), clamp(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0))), 0.0))), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(asinh(595.088)) : _GLF_IDENTITY(1.0, 0.0 + (1.0)))), max(1.0, 1.0)), 0.0))) : _GLF_FUZZED(vec3(8126.7884, 7.5, -5.3)))), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.0)))))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(9.8, _GLF_IDENTITY(float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9446.8602) : 1.0))), 1.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(vec3(-9317.0756, -730.165, 3243.3752).y)), float(abs(1.0)), bool(true))), 1.0, 1.0)), float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0))))), -6345.1354, -5.7)))), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48)))), ((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48))))) + sqrt(0.0))), 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(tan(0.0), tan(0.0))), 0.0 + (_GLF_IDENTITY(tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(5.9) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))), min(tan(0.0), tan(0.0)))))), clamp(vec4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(_GLF_IDENTITY(float(_GLF_FUZZED(7740.1700)), (float(_GLF_FUZZED(7740.1700))) * 1.0), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))))), (true ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), clamp(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))) : _GLF_FUZZED(vec3(8126.7884, 7.5, -5.3)))), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.0)))))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(9.8, _GLF_IDENTITY(float(mat3x4(9.8, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), abs(1.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x4(9.8, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0)), float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0))))), -6345.1354, -5.7)))), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48)))), ((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), mix(float(_GLF_FUZZED(-9.3)), float(true ? 1.0 : _GLF_FUZZED(-84.48)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) + sqrt(0.0))), 0.0))), 1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), min(tan(0.0), tan(0.0)))), vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), float(mat2(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), 1.0 * (dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), max(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)))))))), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), clamp(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))) : _GLF_FUZZED(vec3(8126.7884, 7.5, -5.3)))), vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), (true ? 0.0 : _GLF_FUZZED(4.0)))))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(9.8, _GLF_IDENTITY(float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6242.0819))), 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0)), float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0))))), -6345.1354, -5.7)))), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48)))), ((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48))))) + sqrt(0.0))), 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(-1691.9705) : tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), abs(1.0), 1.0), vec3(mat4(vec3(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (false ? _GLF_FUZZED(-1691.9705) : tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))))), abs(1.0), 1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(min(tan(0.0), tan(0.0)), mix(float(_GLF_FUZZED(172.605)), float(min(tan(0.0), tan(0.0))), bool(true))))), vec4(1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-641.298)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(7740.1700), mix(float(_GLF_FUZZED(7740.1700)), float(_GLF_FUZZED(-45.23)), bool(false))) : 0.0))), vec3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), clamp(vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), mix(float(max(1.0, 1.0)), float(_GLF_FUZZED(-345.032)), bool(false)))), 0.0))) : _GLF_FUZZED(vec3(8126.7884, _GLF_IDENTITY(7.5, 0.0 + (7.5)), -5.3)))), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.0)))))) : _GLF_FUZZED(vec3(_GLF_IDENTITY(9.8, _GLF_IDENTITY(float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0)), max(float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, float(mat2(1.0, sqrt(1.0), 0.0, 0.0))), 0.0, abs(1.0), 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-55.86)), float(1.0), bool(true)))), 1.0, 1.0)), float(mat3x4(9.8, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0))))), -6345.1354, -5.7)))), vec3(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48)))), ((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-84.48), min(true ? 1.0 : _GLF_FUZZED(-84.48), true ? 1.0 : _GLF_FUZZED(-84.48))))) + sqrt(0.0))), 0.0))), 1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), min(_GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), tan(0.0)))))), vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, sqrt(1.0), 1.0), (false ? _GLF_FUZZED(vec4(0.1, -166.141, -2.6, 94.77)) : vec4(1.0, 1.0, sqrt(1.0), 1.0))))))))), injectionSwitch.y), 0.0))) > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(582.571) : injectionSwitch[1])))).x > injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(783.517) : injectionSwitch.y)), injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-905.299), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-905.299), cos(0.0), 1.0, 1.0), transpose(transpose(mat2(_GLF_FUZZED(-905.299), cos(0.0), 1.0, 1.0))))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(_GLF_IDENTITY(true, (true) || false))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bool(bool(bvec4(false, true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true, true), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bool(bool(bvec4(false, true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))))))), false))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)), false)))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(max(vec2(744.414, 3147.1296), vec2(_GLF_IDENTITY(9.0, max(9.0, _GLF_IDENTITY(9.0, (_GLF_IDENTITY(9.0, mix(float(_GLF_FUZZED(1.4)), float(9.0), bool(true)))) / 1.0))), 728.299))), (_GLF_FUZZED(max(vec2(744.414, 3147.1296), vec2(_GLF_IDENTITY(9.0, max(9.0, _GLF_IDENTITY(9.0, (_GLF_IDENTITY(9.0, mix(float(_GLF_FUZZED(1.4)), float(9.0), bool(true)))) / 1.0))), 728.299)))) - sqrt(vec2(0.0, 0.0)))))).x > injectionSwitch.y))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6092.0769)), vec2(_GLF_FUZZED((-7.0 + 16.76)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bvec3(bvec3(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true))))))))), false))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0))).x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), false, false)))))))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(79948) : 1), min((false ? _GLF_FUZZED(79948) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(79948) : 1), (false ? _GLF_FUZZED(_injected_loop_counter) : (false ? _GLF_FUZZED(79948) : 1))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))), mix(vec2((_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(76.73), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))), mix(vec2((_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(76.73), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, tan(0.0))), (float(vec3(injectionSwitch.y, 1.0, tan(0.0)))) * 1.0))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-9122.5277)), vec2(_GLF_FUZZED(-92.12), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)))))))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).y))))
              {
               for(int _injected_loop_counter = (35539 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), injectionSwitch.x)) | 1, min(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), injectionSwitch.x)) | 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), injectionSwitch.x)) | 1)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(555.192, -12.94)) : injectionSwitch)).x)) | 1) | 0))); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec2(true, true)))))
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (false))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))) && true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, abs(1.0), 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED((-1.5 * -9169.2048))), float(float(mat2x3(injectionSwitch.x, abs(1.0), 0.0, 0.0, 1.0, 1.0))), bool(true)))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 ^ 1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) + 0), max(3, 3)))))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (3) * 1), _GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (true ? 3 : _GLF_FUZZED(54340))), 3))))), int(int(int(3)))), int(3)))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3)))))), 0 + (int(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3)))))))))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3))))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3)))))), 0 + (int(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3)))))))))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3)))))) | ((_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3)))))), 0 + (int(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), min(int(_GLF_IDENTITY(3, (3) | (3))), int(_GLF_IDENTITY(3, (3) | (3)))))))))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3)))))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3))), ((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))) >> 0)) - 0)), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) >> (1 ^ 1)), (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))), 0 | ((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), _GLF_IDENTITY(int(3), (int(3)) ^ 0))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))), int(int((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(clamp(int(3), int(3), int(3)), (clamp(int(3), int(3), int(3))) ^ 0))))))), int(3)))))))))) - 0)) >> _GLF_IDENTITY(int(3), int(3))), max(((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), ~ (~ (int(_GLF_IDENTITY(3, max(3, 3)))))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3)))), 0 | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(int(int(3)))), int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(max(int(3), int(3)), clamp(max(int(3), int(3)), max(int(3), int(3)), max(int(3), int(3)))))))) ^ (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) - 0.0)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((++ _injected_loop_counter)) : int(3))), int(3), int(3)))))), int(3))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))))) ^ 0))))), int(3))))), 0 | ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (3) + 0), max(_GLF_IDENTITY(3, (3) + 0), _GLF_IDENTITY(3, (3) + 0)))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3), int(3)))))), int(3))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) + 0, 1 * ((3) + 0)))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) << _GLF_IDENTITY(int(3), int(3)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), 1, 0)), (int(ivec3(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))), 1, 0))) + 0)))), int(_GLF_IDENTITY(3, (3) >> 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), (_GLF_IDENTITY((int(3)), 0 + ((int(3))))) | ((int(3)))) | (_GLF_IDENTITY(int(3), max(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec3(3, 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4)))))), (ivec3(3, 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_injected_loop_counter) : int(4))))))) >> ivec3(0, 0, 0))))), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3), int(3))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3), int(3))))), clamp(int(int(_GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3), int(3))))), int(int(_GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3), int(3))))), int(int(_GLF_IDENTITY(int(3), clamp(int(_GLF_IDENTITY(3, ~ (~ (3)))), int(3), int(3)))))))) >> 0)), int(3))))), int(int((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), min(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))))), int(3)))))))))) - 0)) >> _GLF_IDENTITY(int(3), int(3))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(_GLF_IDENTITY(3, max(3, 3)))) | (int(_GLF_IDENTITY(3, max(3, 3)))))), 0 + (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, 3))), (int(_GLF_IDENTITY(3, max(3, 3)))) | (int(_GLF_IDENTITY(3, max(3, 3))))))))))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), _GLF_IDENTITY(max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3)), (max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3))) ^ 0))), 0 | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), clamp((int(3)), (int(3)), _GLF_IDENTITY((int(3)), ((int(3))) | 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))), 0 | ((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))), ((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3))))))) >> 0) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)) - ((68141 + -87348) & 0)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))), max((_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), clamp(_GLF_IDENTITY(int(3), (int(3)) - 0), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))), int(3))), int(3)))))), int(3))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), int(3))))), int(int((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) + 0)), ~ (~ (int(_GLF_IDENTITY(3, (3) + 0))))), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))))) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(int(3), int(3)))), int(int(_GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3)))))), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))))))))) - 0)) >> _GLF_IDENTITY(int(3), int(3)))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(1, 0 | (1)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(673.943)), bool(false))), (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(atan(_GLF_IDENTITY(8.9, clamp(8.9, _GLF_IDENTITY(8.9, _GLF_IDENTITY((false ? _GLF_FUZZED(-9.2) : 8.9), mix(float(_GLF_FUZZED((true ? -586.175 : -86.44))), float((false ? _GLF_FUZZED(-9.2) : 8.9)), bool(true)))), 8.9))))))) / 1.0), injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0), ((0.0)) - 0.0), (_GLF_IDENTITY((0.0), ((0.0)) - 0.0)) - 0.0) - 0.0) : _GLF_FUZZED(atan(_GLF_IDENTITY(8.9, clamp(8.9, 8.9, 8.9))))))) / 1.0), injectionSwitch.x))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.8))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), (vec2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-90.26) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-974.479 - 1.2))), bool(false))))), 1.0))))), 0.0)) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, cos(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1918.5420) : 1.0)), 1.0))))))), 0.0), (vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))))), 0.0)) * vec2(1.0, 1.0)))) * 1.0)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uint(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), max(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), max((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))))))), ~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (0 | 0))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))), (true ? int(4) : _GLF_FUZZED(-3024))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5)))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (0 | 0))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))), (true ? int(4) : _GLF_FUZZED(-3024))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5)))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (0 | 0))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))), (true ? int(4) : _GLF_FUZZED(-3024))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) | 0), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (0 | 0))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))), (true ? int(4) : _GLF_FUZZED(-3024))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5)))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (0 | 0))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))), (true ? int(4) : _GLF_FUZZED(-3024))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) ^ (0 | 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) >> 0))), (1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) >> 0)))) | (1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) >> 0)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 0)))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), int(int(int(3))))) | 0), int(3)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(322.362)), vec2(_GLF_FUZZED(2406.2263), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))) / vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0], clamp(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), (injectionSwitch)))[0])), _GLF_FUZZED((_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? 4.5 : 6318.7983))), vec2(_GLF_FUZZED(838.351), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false))), true, false), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true)))), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false)))))), (bool(_GLF_IDENTITY(true, false || (true)))) && true)))))), false, false, true))) || false), true, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || _GLF_IDENTITY(((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false), bool(bvec2(((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false), true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, false || (true)))) && true, ((bool(_GLF_IDENTITY(true, false || (true)))) && true) || _GLF_IDENTITY(false, (false) && true)))))))), false, false, true))) || false), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))), false, true))) || false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true)))))), false, false, true))) || false), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true))))), ! (! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true))))))))) && true)))))))), false, false, true))) || false)))), true, false)))))) || false)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false))), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false))), true, false), false))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true)))), false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false)))), (false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false))))) && true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true)))))), false, false, true))) || false), true, false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || _GLF_IDENTITY(((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false), bool(bvec2(((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false), true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, false || (true)))) && true, ((bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))) && true) || _GLF_IDENTITY(false, (false) && true)))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, false || (true)))) && true, ((bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))) && true) || _GLF_IDENTITY(false, (false) && true)))))))))), false, false, true))) || false), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true, false))), true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true))) || false, false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false))))))), false, true))) || false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true))))), false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true)))))), false, false, true))) || false), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) && true)) && true)) || false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false || (true), (false || (true)) || false), false || (false || (true))))), ! (! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true))))))))) && true)))))))), false, false, true))) || false)))), true, false)))))) || false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * abs(vec2(1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0)], _GLF_FUZZED(7071.2195)), vec2(_GLF_FUZZED((7.7)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), log(1.0), 1.0, 0.0, 1.0, 0.0, abs(1.0)))), cos(0.0), sin(0.0)))))[1]), bvec2(false, true))))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * abs(vec2(1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0)], _GLF_FUZZED(7071.2195)), vec2(_GLF_FUZZED((7.7)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), log(1.0), 1.0, 0.0, 1.0, 0.0, abs(1.0)))), cos(0.0), sin(0.0)))))[1]), bvec2(false, true))))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * abs(vec2(1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0)], _GLF_FUZZED(7071.2195)), vec2(_GLF_FUZZED((7.7)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), log(1.0), 1.0, 0.0, 1.0, 0.0, abs(1.0)))), cos(0.0), sin(0.0)))))[1]), bvec2(false, true))))))).x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * abs(vec2(1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0)], _GLF_FUZZED(7071.2195)), vec2(_GLF_FUZZED((7.7)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), log(1.0), 1.0, 0.0, 1.0, 0.0, abs(1.0)))), cos(0.0), sin(0.0)))))[1]), bvec2(false, true))))))).x > injectionSwitch.y)), false, true, true)))))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, uint(uint((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u))))))), 1u, 0u, 1u)), clamp(uint(uvec4(workgroup_base, _GLF_IDENTITY(1u, (1u) ^ 0u), 0u, 1u)), uint(uvec4(workgroup_base, 1u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))))), 1u, 0u, 1u)))))) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size), 1u * (~ (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size))))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) ^ 0u))))))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), 0u, 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u))), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u))), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u)), (uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u))) | 0u)) | (_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u)), max(_GLF_IDENTITY(uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u)), min(uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u)), uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u)))), uint(uvec4((subgroup_local_id + 1), 0u, 0u, 1u))))))))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) - 0.0)), mix(float(_GLF_FUZZED(8345.9012)), float(0.0), bool(true))))), 0.0)), injectionSwitch.x))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ((0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (50857 & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 do
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (22742 & 0)); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     int i = 0;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec2((false), true))), false, false, _GLF_IDENTITY(false, (false) || false)))), true)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(false))));
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true), false, true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, length(0.0)), transpose(transpose(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, length(0.0)))))))))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))), ((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, _GLF_IDENTITY((5), ~ (~ (_GLF_IDENTITY((5), ((5)) >> 0)))) << 0), (5) * 1), (_GLF_IDENTITY(5, (5) * 1)) | (_GLF_IDENTITY(5, _GLF_IDENTITY(_GLF_IDENTITY((5), max((5), (5))), clamp((5), (5), (5))) * 1))))))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec3(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))], uint(2), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bvec3((false) && true, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false) && true, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3((false) && true, true, false), true)))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), false || (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), (false ? _GLF_FUZZED(79508) : (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))), int(1)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((((1 & 1) | 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (((1 & 1) | 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((((1 & 1) | 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (((1 & 1) | 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))))) >> _GLF_IDENTITY(int(2), int(2))) | 0))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), min(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, min(1 ^ 1, 1 ^ 1))), clamp(_GLF_IDENTITY((1 ^ 1), min((1 ^ 1), (1 ^ 1))), (1 ^ 1), (1 ^ 1)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-4.8)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5767.3780, 3.5)) : injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(false, (false) && true))), true && (bool(bvec2(true, _GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
