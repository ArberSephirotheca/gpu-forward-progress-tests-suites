#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : injectionSwitch.y))))), (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : injectionSwitch.y)))))) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(8.3)), vec2(_GLF_FUZZED(-51.68), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch))[1]), bvec2(false, true))))) * cos(tan(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), sqrt(0.0), 0.0, 1.0, 0.0, 1.0)))))).y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), sqrt(0.0), 0.0, 1.0, 0.0, 1.0)))))).y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.1) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), sqrt(0.0), 0.0, 1.0, 0.0, 1.0)))))).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), bool(bvec3(_GLF_IDENTITY(false || (! (false)), bool(bool(false || (! (false))))), false, true))))))) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), float(_GLF_FUZZED(1.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-237.291)), bool(false))), (injectionSwitch.x) * 1.0) > injectionSwitch.y))) && true))), false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), min(_GLF_IDENTITY(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), min(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), determinant(mat2(1.0, sin(0.0), 1.0, 1.0)))), _GLF_IDENTITY(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 0.0), (vec4(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 0.0)) * mat4(1.0))), float(vec4(float(_GLF_IDENTITY(vec4(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 0.0), (vec4(determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), 1.0, 1.0, 0.0)) * mat4(1.0))), 0.0, 1.0, 1.0)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(10.28) : injectionSwitch.y))) + 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1959.5594) : injectionSwitch.y))) + 0.0))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), false)))))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), _GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, bool(bool(false))))), (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, bool(bool(false)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / 1u) | (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u)))), 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) >> 0u)), _GLF_IDENTITY(uint(uvec3((gl_NumWorkGroups.x), (1u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (false ? _GLF_FUZZED(subgroup_size) : ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), max(uint(uvec3((gl_NumWorkGroups.x), (1u | 1u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec3((gl_NumWorkGroups.x), (1u | 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u), ~ (~ ((gl_NumWorkGroups.x)))))) << _GLF_IDENTITY(0u, (0u) << 0u))) + 0u);
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, exp(0.0), 1.0, 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-7.4)) : _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(sin(-7.4)) : _GLF_IDENTITY(injectionSwitch.y, exp(0.0) * (injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(sin(-7.4), max(sin(-7.4), sin(-7.4)))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(exp(0.0) * (injectionSwitch.y), (exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))) * (injectionSwitch.y)) - 0.0))))))), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(sin(-7.4), max(sin(-7.4), sin(-7.4)))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(exp(0.0) * (injectionSwitch.y), (exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))) * (injectionSwitch.y)) - 0.0))))))), false)), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y = _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), max(workgroup_base + GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base, _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))), uvec2(uvec2(_GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))), (false ? _GLF_FUZZED(uvec2(12710u, 147895u)) : (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)))))))) ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base) | (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base)))).y + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(54.67)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_base.y + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1, uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), ~ (~ _GLF_IDENTITY((uvec2(subgroup_local_id + 1, 1u)), ~ (_GLF_IDENTITY(~ ((uvec2(subgroup_local_id + 1, 1u))), (_GLF_IDENTITY(~ ((uvec2(subgroup_local_id + 1, 1u))), uvec2(uvec4(~ ((uvec2(subgroup_local_id + 1, 1u))), 1u, 1u)))) >> uvec2(0u, 0u))))))))) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (true ? (subgroup_local_id) | (subgroup_local_id) : _GLF_FUZZED(workgroup_id))), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u))))))))) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ((false ? 95663u : 108415u) & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 0u, 1u), max(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id, 1u, 0u, 1u)))), uvec4(subgroup_local_id, 1u, 0u, 1u))))))), subgroup_local_id)) % 2, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u)))))) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ((false ? 95663u : 108415u) & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 0u, 1u), max(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id, 1u, 0u, 1u)))), uvec4(subgroup_local_id, 1u, 0u, 1u))))))), subgroup_local_id), ~ (~ (clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u)))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), uint(uint(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) ^ 0u))))))) ^ (0u & 94502u)) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(((false ? 95663u : 108415u) & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id), max(((false ? 95663u : 108415u) & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id), ((false ? 95663u : 108415u) & uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), 0u, 1u), max(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 1u), ~ (~ (uvec4(subgroup_local_id, 1u, 0u, 1u)))), uvec4(subgroup_local_id, 1u, 0u, 1u))))))), subgroup_local_id))))) % 2))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))), max(uint(3u), uint(3u))))) | (0u)))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * 1)), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) * 1)) << 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) * 1)) << 0), 1, 1))) * 1))) * 1))) - 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(ivec2(_GLF_IDENTITY((2), int(int((2)))), 1))) * 1))) - 0u, ~ (~ _GLF_IDENTITY(((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u), (false ? _GLF_FUZZED(workgroup_base) : ((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, 0u, 0u, (1u & 1u)), (uvec4((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, 0u, 0u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, 0u, 0u, (1u & 1u)), (uvec4((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, 0u, 0u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec4((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, 0u, 0u, (1u & 1u)), (uvec4((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u, 0u, 0u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((2), (true ? _GLF_IDENTITY((2), ((2)) << 0) : _GLF_FUZZED(-98466))), int(int((2)))), 1))) * 1))) - 0u, ~ (~ ((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u)))), clamp((_GLF_IDENTITY((uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((2), (true ? _GLF_IDENTITY((2), ((2)) << 0) : _GLF_FUZZED(-98466))), int(int((2)))), 1))) * 1))) - 0u, ~ (~ ((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((2), (true ? _GLF_IDENTITY((2), ((2)) << 0) : _GLF_FUZZED(-98466))), int(int((2)))), 1))) * 1))) - 0u, ~ (~ ((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u)))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((2), (true ? _GLF_IDENTITY((2), ((2)) << 0) : _GLF_FUZZED(-98466))), int(int((2)))), 1))) * 1))) - 0u, ~ (~ ((uint(_GLF_IDENTITY(2, (2) * 1))) - 0u)))))) / 1u)) >> 0u), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, max((2) * 1, (2) * 1))))) - 0u))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0 + (64), (0 + (64)) / 1)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), ~ _GLF_IDENTITY((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), ~ _GLF_IDENTITY((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), ~ _GLF_IDENTITY((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) >> 0u)) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), ~ (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.1, 7982.1336)) : injectionSwitch)).x)), bool(true)))))), ~ _GLF_IDENTITY((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u ^ (_GLF_IDENTITY((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)) - 0u)))))), (~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(1.0, 1.0))))).x)), bool(true)))))), ~ (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) ^ 0u), ~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), _GLF_IDENTITY(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(mat4(float(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))))), ~ (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), ~ (~ (uvec2(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED((-158.362 / -8.3))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))))))), ~ (~ (uint(uvec2(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uvec2(uint(2), 0u)), uint(uint(uint(uvec2(uint(2), 0u)))))), _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-29789) : 6))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-29789) : 6))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-29789) : 6))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), max(_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-29789) : 6))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (_GLF_IDENTITY(false ? _GLF_FUZZED(-29789) : 6, _GLF_IDENTITY((false ? _GLF_FUZZED(-29789) : 6) - 0, (0 | 0) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(-29789) : 6) - 0, ((false ? _GLF_FUZZED(-29789) : 6) - 0) * 1))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ (4)), _GLF_IDENTITY(64, int(ivec2(64, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(56381) : 4))), int(4)))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  return;
}
